{"version":3,"sources":["assets/image/backoffice02.jpg","Theme.js","module/SystemReducer.js","module/ServiceReducer.js","module/ResponseReducer.js","module/UserInfoReducer.js","module/MenuReducer.js","module/PaxListReducers.js","module/FeedbackReducer.js","module/AutoCompleteReducer.js","module/UserListReducers.js","module/ClientListReducer.js","module/GenericConfigurationReducer.js","module/RequestListReducer.js","module/CombineReducers.js","Store.js","actions/ServiceActions.js","actions/ResponseActions.js","actions/UserInfoActions.js","actions/MenuActions.js","actions/PaxListActions.js","actions/FeedbackActions.js","actions/SystemActions.js","actions/UserListActions.js","actions/GenericConfigurationActions.js","config/index.js","services/ServiceUrl.js","utils/Crypting.js","i18n/app.js","i18n/error.js","i18n/common.js","i18n/clinic.js","i18n/index.js","services/ServiceClient.js","utils/MenuStructure.js","utils/AppStructures.js","ServiceExecutor.js","actions/ClientListActions.js","actions/RequestListAction.js","components/snackBar/SnackBarError.js","screens/home/KlinikHomeScreen.js","screens/home/VoltrasHomeScreen.js","screens/home/HomeScreen.js","screens/home/index.js","components/dialog/GlobalDialog.js","utils/FormValidation.js","components/autocomplete/SimpleAutocomplete.js","screens/login/ForgotPasswordForm.js","screens/login/ChooseRoleCard.js","screens/login/InsertOTPCard.js","screens/login/GoogleLogin.js","screens/login/ChooseAppCard.js","screens/login/LoginCard.js","screens/login/LoginScreen.js","screens/login/index.js","screens/register/RegisterScreen.js","screens/register/index.js","utils/utils.js","screens/clinic/paxList/PaxListScreen.js","screens/clinic/paxList/index.js","screens/clinic/paxdetail/RescheduleDialog.js","screens/clinic/paxdetail/index.js","screens/clinic/qrscreen/QrScreen.js","screens/clinic/qrscreen/index.js","screens/voltrasadmin/createuser/CreateUserForm.js","screens/voltrasadmin/createuser/AddUserClient.js","screens/voltrasadmin/createuser/index.js","screens/voltrasadmin/userlist/UserRUDTable.js","screens/voltrasadmin/userlist/UpdateUserDialog.js","screens/voltrasadmin/userlist/AddClientDialog.js","screens/voltrasadmin/userlist/BasicUserInformation.js","screens/voltrasadmin/userlist/UpdateUserBasicInfoDialog.js","screens/voltrasadmin/userlist/UserDetail.js","screens/voltrasadmin/userlist/ConfirmationDIalog.js","screens/voltrasadmin/userlist/index.js","screens/clinic/clinicSetting/AddUserDialog.js","screens/clinic/clinicSetting/LogoPreviewDialog.js","screens/clinic/clinicSetting/index.js","screens/clinic/clinicList/FilterForm.js","screens/clinic/clinicList/index.js","screens/clinic/clinicRegistration/index.js","screens/voltrasadmin/clientlist/AddClientDialog.js","screens/voltrasadmin/clientlist/updateBasicInfo.js","screens/voltrasadmin/clientlist/AddUrlOriginDialog.js","components/table/TableCustomize.js","screens/voltrasadmin/clientlist/EditMessagingTemplate.js","screens/voltrasadmin/clientlist/ClientDetail.js","screens/voltrasadmin/clientlist/index.js","screens/voltrasadmin/createclient/AddClientRole.js","screens/voltrasadmin/createclient/CreateClientForm.js","screens/voltrasadmin/createclient/index.js","screens/voltrasadmin/requestlist/AddRequestSpesificationDialog.js","screens/voltrasadmin/requestlist/EditRequestSpesificationDialog.js","screens/voltrasadmin/requestlist/index.js","screens/clinic/clinicReport/index.js","screens/clinic/clinicReport/AllReport.js","screens/userprofile/EditDialog.js","screens/userprofile/index.js","screens/genericjson/GenericJson.js","screens/clinic/clinic_scope/ClinicScopeTree.js","screens/clinic/clinic_scope/ClinicScope.js","router/Routing.js","components/snackBar/SnackBar.js","components/dialog/OtpDialog.js","components/navBar/NavigationBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","error","initialstate","locale","serviceStart","openScreen","menuClickUrl","appConstant","roleAuth","root","admin","endUser","popChooseRole","googleParams","access_type","scope","response_type","prompt","client_id","otpID","system","state","action","type","snackbarMsg","val","file","request","secondRequest","thirdRequest","status","serviceCode","method","params","customHeaders","role","test","headersContent","service","response","info","sessionInfo","otpId","roleUsed","resetPasswordCode","verificationCode","userInfo","menuItems","menu","name","value","list","detail","product","filteredList","klinikList","clinicDetail","cityList","clinicUser","clinicRecapt","myClinic","clinic_parents","parentList","paxList","snackBar","open","severity","message","position","actionLabel","dialog","stepper","step","feedback","INITIAL_STATE","autocomplete","inputValue","klinikValue","klinikInputValue","UserList","messagingList","messagingEdit","ClientList","configurationList","configDetail","configDetailModal","genericConfiguration","data","RequestList","appReducers","combineReducers","clientList","userList","requestList","store","createStore","setServiceRequest","setServiceStatus","setServiceCode","setServiceMethod","setServiceParams","setServiceCustomHeaders","setServiceRole","setSecondRequest","setResponse","setUserInfo","setUserSessionInfo","setUserOtpId","setRoleUsed","setResetPasswordCode","setVerificationCode","setUserMenu","setMenuCollapseStatus","setPaxList","setPaxDetail","setPaxProduct","setKlinikList","setClinikDetail","setClinicRecapt","setCityList","setParentList","setSnackbar","setDialog","setOpenScreen","setAppConstant","setPopChooseRole","setLocale","setUserFilteredList","setConfigDetailModal","console","log","process","Config","production","appVersion","gatewaySecurity","gatewayBackOffice","serviceUrl","gatewayMsHealth","hash","algortm","stringData","crypto","createHash","update","digest","generateSignature","headers","body","key","orderedHeaders","Object","keys","sort","forEach","v","orderedBody","stringHeader","JSON","stringify","replace","stringBody","createHmac","hmac","appText","app_name","en","id","app_phone","app_email","app_new","app_paid","app_finish","app_password","app_password_confirmation","app_forgot_password","app_from","app_to","app_back","app_cancel","app_submit","app_welcome","app_sign_in","app_sign_up","app_register","app_choose","app_choose_role","app_choose_role_used","app_submit_otp","app_submit_otp_text","app_not_receive_otp","app_resend_otp","app_email_or_phone","app_no_account","app_have_account","app_export_xls","app_submit_filter","app_not_mandatory","app_regis_sucess_msg","app_email_success_msg","app_sms_success_msg","app_verification_succes","app_send_email_verify","app_send_phone_verify","app_delete_data_confirmation","app_date_to_show","app_show_report","app_report_summary","app_logout","app_confirm_logout","app_manage_acount","app_success_update_account","app_select_photo","app_account_profile","app_photo_personalize","app_save_to_change","errorText","err_submit","err_email_phone_empty","err_email_phone_format","err_not_six_char","err_phone_empty","err_phone_format","err_name_empty","err_clinic_name_empty","err_address_empty","err_email_empty","err_email_format","err_password_empty","err_passconfirm_mismatch","err_clientid_empty","err_clientid_format","err_clientname_empty","err_roleid_empty","err_roleid_format","err_initialrole_empty","err_initialrole_format","err_clienttype_not_choosen","err_profile_not_choosen","err_description_empty","err_atleast_one_name_chosen","err_redeemby_empty","err_otp_empty","err_otp_must_number","err_uri_empty","err_uri_format","err_email_masking_100","err_masking_name_format","err_masking_name_empty","err_path_empty","err_path_format","commonText","common_with","common_or","common_add","common_signin_with","common_signup_with","common_change_password","common_new_password","common_close","common_contact_person","common_birth_date","common_products","common_name","common_phone","common_email","common_address","common_photo","common_change","common_save","clinicText","clinic","clinic_name","clinic_city","clinic_address","clinic_order_list","clinic_test_request_date","clinic_order_report","clinic_test_date","clinic_order_date","clinic_birth_date","clinic_redeem_date","clinic_payment_date","clinic_redeem_by","clinic_redeem_on","clinic_payment_on","clinic_agent_price","clinic_price","clinic_redeem_success","clinic_redeem_confirmation","clinic_order_detail","clinic_active","clinic_user_list","clinic_add_user","clinic_regis_sucess","clinic_activation_success","clinic_add_user_success","clinic_delete_user_success","clinic_delete_sucess","clinic_logo","clinic_set_logo","clinic_change_logo","clinic_change_logo_success","clinic_inactive_confirmation","clinic_inactive","textInternationalize","FormatText","keyText","Store","getState","langUsed","includes","slice","keyedText","SendToService","urlParams","onSucceed","window","location","origin","dispatch","aud","stateAccessToken","accessToken","stateKey","clientId","email","phone","localStorage","getItem","roleToSend","hardcodeHeaders","snackFeed","redirect","duration","requestJSON","oReq","XMLHttpRequest","ServiceUrl","setRequestHeader","bodySignature","pairs","split","result","pair","decodeURIComponent","principalType","roleIds","bodyForSignature","send","addEventListener","toString","readyState","responseText","parse","respErr","messageError","errorDescription","setTimeout","clear","createResponseError","e","desc","onerror","ontimeout","sendImageToService","image","blobFile","Promise","resolve","reject","urlConnection","gatewayRepoFile","blob","Blob","openMenuStructure","label","url","children","urlImage","AppStructures","domain","title","welcome","backgroundLogin","backgroundApp","icon","style","width","height","openMenu","loggedMenu","requestHeader","className","fontSize","menuCreator","roleChoosen","userMenu","item","allMenu","arrMenu","map","filter","child","Executor","nextProps","this","props","setGenericConfigList","setConfigDetail","successSnackbar","requestAllClient","requestAllUser","getClinicUserRequest","healthKlinikRequest","_setResponse","history","push","_setUserOtpId","setItem","idToken","JwtDecoder","oldRole","newRole","length","_setUserInfo","_setUserSessionInfo","_setPopChooseRole","newMenu","obj","_setMenuCollapseStatus","_setRoleUsed","_setUserMenu","_logout","_setSnackbar","updatedUserInfo","_setResetPasswordCode","_setSystemOtpId","_setGoogleParams","Array","isArray","_setPaxDetail","a","b","x","_setPaxList","_setClinicRecapt","_setPaxProduct","_setCompleteRequest","_clearSecondRequest","_setKlinikList","_setUserDetail","_setUserList","items","_setUserFilteredList","creationDate","_setClientMessagingList","_setClientList","_setRequestList","updateMessageTemplate","messageTemplateId","messagingTemplateId","completeRequests","newArr","city","_setCityList","newCLinicArr","_setClinicUser","clinic_id","_setMyClinic","_setClinicParent","_setParentList","Component","connect","setGoogleParams","setUserList","setUserDetail","setClientList","_setDialog","setClinikUser","_clearThirdRequest","_setClinikDetail","serviceRole","setSystemOtpId","setMyClinic","setClinicsParents","setRequestList","setClientMessagingList","MySnackBar","handleClose","setState","autoHideDuration","Snackbar","onClose","elevation","variant","KlinikHome","_setSecondRequest","_setVerificationCode","useState","voucherId","voucherIdErrorMessage","submitErrorMessage","disabled","useEffect","scrollTo","screen","navigator","xr","innerWidth","innerHeight","orientation","lock","prevState","redirectURI","prop","Grid","container","direction","Hidden","xsDown","sm","justify","alignItems","marginTop","Typography","color","xs","Card","CardContent","marginBottom","FormControl","fullWidth","InputLabel","htmlFor","Input","autoFocus","onChange","event","target","onKeyPress","which","orderId","healthOrderRequest","isError","FormHelperText","Button","onClick","preventDefault","Link","component","useStyles","makeStyles","flexGrow","paper","padding","spacing","textAlign","text","VoltrasHome","classes","userEmail","setstate","backgroundImage","Background","backgroundRepeat","backgroundPositionX","Paper","HomeScreen","isQrShow","_setAppConstant","_setOpenScreen","app","document","Homes","Transition","forwardRef","ref","Slide","AlertDialogSlide","handleDialogClose","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","dialogTitle","DialogContent","DialogContentText","dialogContent","DialogActions","cancelTitle","handleDialogSubmit","fontWeight","submitTitle","regexEmail","regexPhoneId","regexLettersHypenUnderscore","regexUri","regexNumberOnly","regexStringOnly","regexPath","errorMessage","FormValidation","formType","ComboBox","options","optionItem","onPick","helperText","handleInputChange","setIndex","freeSolo","clearOnBlur","values","handleFocus","small","React","setValue","setInputValue","Autocomplete","size","onFocus","blurOnSelect","newValue","listIndex","onInputChange","getOptionLabel","option","renderInput","TextField","GlobalForm","showPassword","showConfirm","handleFormChange","valid","password","handleMouseDownPassword","margin","handleClient","formLabel","passwordErrorMessage","InputProps","endAdornment","InputAdornment","IconButton","aria-label","onMouseDown","confirmPasswordErrorMessage","textTransform","newPassword","confirmNewPassword","confirmPassword","submitChangePassword","ChooseRoleCard","onRadioChange","handleChooseRole","marginLeft","RadioGroup","i","FormControlLabel","control","Radio","otpErrorMessage","onLoginErrorMessage","InsertOTPCard","handleCancelOtp","handleResendOtp","handleSubmitOtp","handleChange","otp","LoginHooks","signIn","useGoogleLogin","onSuccess","res","requestLogin","code","handleGoogleLogin","onFailure","isSignedIn","accessType","responseType","redirectUri","startIcon","src","alt","buttonText","ChooseAppCard","LoginCard","handleEnter","handleClickShowPassword","handleSubmit","handleRegister","handleForgotOpen","setAud","showLogin","setShowLogin","onpopstate","display","flexWrap","GoogleLogin","emailErrorMessage","autoComplete","regexPhone","LoginScreen","provider","fullRequest","serviceMethod","_setRequest","_setServiceCode","_setServiceStatus","challenge","loginRequest","forgotOpen","clientIdErrorMessage","modifiedMenu","oldMenu","resetMenu","language","_setLocale","serviceParams","verificationCheckRequest","CircularProgress","visibility","thickness","ForgotPasswordForm","mdDown","alignSelf","justifySelf","Login","_setServiceMethod","_setServiceCustomHeaders","_dispatchLogout","serviceStatus","withStyles","bullet","transform","pos","withoutLabel","textField","RegisterScreen","registerRequest","nameErrorMessage","phoneErrorMessage","_setServiceRole","RupiahFormat","nominal","parseInt","toLocaleString","currency","minimumFractionDigits","convertDateyyyymmdd","date","newDate","Date","getFullYear","getMonth","Number","getDate","datetoanydaysafter","any","getTime","isDateBeforeNow","dateNow","yyyymmddWithParams","now","nextWeek","lastWeek","nextYear","resizeImage","fileLoader","FileReader","canvas","createElement","context","imageObj","Image","appendChild","getContext","match","readAsDataURL","onload","onabort","iw","ih","scale","Math","min","iwScaled","ihScaled","clearRect","drawImage","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","dataURItoBlob","toDataURL","blobUrl","createBlobFromBase64","fileType","URL","createObjectURL","ExcelFile","ReactExport","ExcelSheet","from","to","SimpleTable","order","fromdate","todate","Paid","New","finish","dataset","simpleTable","currentList","listLengthById","tableColumns","field","simpleList","payment","rowTable","testdate","products","date_of_birth","toUpperCase","klinikname","klinik","redeem_on","redeem","redeem_by","tableCreator","dataToProcess","dataArr","ySteps","columns","wch","datasetCreator","infos","handleClick","row","handleDateChange","handleSubmitFilter","payment_from","payment_to","test_from","test_to","redeem_from","redeem_to","paymentParam","testParam","redeemParam","statusParam","nameParam","isParams","orderList","listToMap","utils","DateFnsUtils","clearable","format","KeyboardButtonProps","FormGroup","Checkbox","checked","marginRight","filename","element","dataSet","onRowClick","rowData","ID","healthOrderDetailRequest","handleRowClick","smUp","j","align","lg","Divider","PaxList","_setFilteredList","setFilteredList","_setServiceParams","PaxListScreen","closeButton","right","top","grey","other","disableTypography","AddClientDialog","fromdateErrorMessage","originDate","minDate","maxValidDate","reason","reasonErrorMessage","order_id","item_id","input_date","holiday","extra_holiday","clinic_close_sunday","clinic_close_saturday","clinic_open_holiday","clinic_close_extraholiday","oldClinic","newClinic","n","getDay","product_name","valid_until","maxWidth","scroll","dividers","autoOk","maxDate","disablePast","placeholder","multiline","notShrink","cityRequest","focused","cityClinicRequest","rescheduleRequest","regexNumberLetter","_setServiceStart","_setServiceEnd","openRedeemDialog","fullName","redeemBy","member","memberStatus","clickedItem","fileSelected","clickedFile","rescheduleDialog","redeemArr","errorArr","showAutoId","itemToState","globalInfo","contact","handleKtpOpen","handleRedeemClose","oldArr","person_id_type","person_id_no","handleSelectPax","objRedeem","kinship","person_id_name","newMember","objErr","err_message","openReschedule","handlePick","id_type","index","as","selfName","person_name","id_no","handleInputParentChange","getParentRequest","oldErr","handlePickParent","pick","oldItems","handleParentFocus","handlePickType","RescheduleDialog","handleOpen","CardMedia","person_id_image","person_id_nameErrorMessage","memberToSubmit","itemError","arrToDefineErr","recurseRedeemSubmit","urlParam","submitRedeem","then","person_date_of_birth","undefined","QrScreen","handleQrShow","handleScan","next","basicInformation","_serviceEnd","handleError","err","_serviceStart","md","onError","onScan","resolution","facingMode","Qr","CreateUserForm","form","setFormFocus","formFocus","setShowPassword","setShowConfirmPassword","showConfirmPassword","userType","setUserType","types","createUserTypes","onBlur","InputLabelProps","shrink","select","MenuItem","AddUserClient","showAddUserClient","setShowAddUserClient","chooseClientList","handleResource","handleAddClientRole","fullmd","List","assignedUserRole","ListItemText","resourcesAllowedList","roleIdErrorMessage","resourcelist","FormLabel","roleId","CardActions","userDetail","userFiltered","resource","profile","submitNotError","setForm","newResourcelist","clientRoles","clientName","newResource","filteredResource","roleDescription","clientGroupId","emailVerified","phoneVerified","header_name","header_email","header_phone","MaterialTableCRUD","updatedata","deletedata","rowClicked","confirmdeletetext","handleDelete","oldData","localization","editRow","deleteText","actions","tooltip","editable","onRowDelete","actionsColumnIndex","search","rowStyle","UpdateUserDialog","roleList","setRoleList","available","setAvailable","newRoleList","setNewRoleList","clientDetail","dataToUpdate","client","newList","propRoleList","insertAvailable","handleAddItemRole","handleRemoveItemRole","handleRemoveRole","dense","ListItemIcon","edge","saveRoleList","concat","dataToSave","join","handleSave","handleAddClient","clientData","clientDataToFilter","userRole","userId","BasicUserInfomation","capture","setCapture","basicInfo","setBasicInfo","verified","gender","address","picture","paddingLeft","paddingBottom","paddingRight","Tooltip","handleOpenEdit","fontStyle","href","rel","Avatar","borderWidth","borderColor","borderStyle","styles","rootForm","rootUpload","asterisk","addButton","inputUpload","setData","images","noValidate","accept","fileReader","files","multiple","urlDestinationErrorMessage","completeRequest","saveDisabled","setSaveDisabled","setClientData","addClientOpen","openEditBasicInfo","saveRequest","setSaveRequest","updateUser","setUpdateUser","userIsId","handleOpenEditBasic","userRoleToUpdate","dataToPush","addClientRequest","sendUpdateRequest","emailVerifiedEdit","phoneVerifiedEdit","attributeToUpdate","emailEdit","phoneEdit","genderEdit","addressEdit","profileEdit","nameEdit","uuid","catch","backToTable","ConfirmationDialogRaw","userName","valueProp","handleChoose","header","content","radioGroupRef","useRef","disableBackdropClick","disableEscapeKeyDown","onEntering","current","focus","setOpen","requestDeleteUser","setRequestDeleteUser","setUserName","lookup","setValues","states","setStates","isverified","oldVal","originURIs","roleDetails","UserDetail","newData","indexOf","isForceDelete","handleAddUser","notComplete","addClinicUserRequest","LogoPreviewDialog","imgPreview","setImgPreview","setImageFile","handleSaveImage","validation","setValidation","ownPreview","setOwnPreview","changeDisabled","setChangeDisabled","errorSnackbar","paxlistStatus","setClinic","setClinicUser","imageFile","imageType","setImageType","popUpPreview","setPopUpPreview","userToDelete","setUserToDelete","clinicClickedId","clinicToSet","logo_url","users","newUsers","rolesStr","roles","handleOpenAddClient","handleOpenLogoPreview","AddUserDialog","clinicInfo","addClinicLogoRequest","userid","deleteRequest","creatorEmail","creation","paging","FilterHead","selectedValue","setSelectedValue","setFilteredData","_setClinicDetail","setColumns","dataUpdate","setDataUpdate","orderedData","FilterForm","filteredData","parentProps","getClinicRequest","regisClinicRequest","previousState","parent_id","parentClinic","clinicNameErrorMessage","addressErrorMessage","clinicName","showAdd","setShowAdd","addRoleList","roleDescriptionErrorMessage","objRole","UpdateBasicInfo","dataField","AddUrlOriginDialog","originUris","redirectUris","uri","redirectUrisErrorMessage","originUrisErrorMessage","disabledButton","maxHeight","table","minWidth","rootToolbar","TableCustomize","column","setDataSearch","setFilterValue","page","setPage","rowsPerPage","setRowsPerPage","dataSearch","filterValue","emptyRows","handleChangePage","newPage","handleChangeRowsPerPage","handleSearch","findDuplicateClientId","arrayOfObj","array","mapItem","Toolbar","filterClientId","Table","TableHead","TableRow","TableCell","TableBody","item1","index1","handleEditOpen","handleGetData","cursor","colSpan","pagination","TableFooter","TablePagination","rowsPerPageOptions","count","SelectProps","inputProps","native","onChangePage","onChangeRowsPerPage","ActionsComponent","TablePaginationActions","useStyles1","flexShrink","useTheme","ceil","max","MUIDialogTitle","dataToUpdt","messagingTemplateCode","messagingTemplateLang","subjectTemplate","rows","contentTemplate","_setClientMessagingEdit","setClientMessagingEdit","originUri","setOriginUri","setRedirectUri","basicInfoReq","setBasicInfoReq","messagingTemplate","setMessagingTemplate","messageToUpdate","openBasicInfo","openOriginOri","openRedirectOri","openTemplateMessage","disabledBtn","setDisabledBtn","arrayObjOrigin","arrayRedirectUri","basicData","redirectURIs","edit","clientSecret","initialUserRole","emailSender","emailSenderMaskingName","clientDomain","setUpdateMessage","messagingTemp","setMessagingTemp","handleOpenEditCLient","handleOpenAddOriginUrl","handleOpenAddRedirectUrl","handleOpenEditBasicInfo","handleOpenEditMessageTemplate","onRowUpdate","handleDeleteClientRole","splice","requestMessagetTemp","lineHeight","emailSenderErrorMessage","emailSenderMaskingNameErrorMessage","EditMessagingTemplate","prevVal","ClientDetail","AddCLientRole","setShowAddRoles","clientType","clientProfile","CreateClientForm","helpTextOrigin","setHelpTextOrigin","helpTextRedirect","setHelpTextRedirect","clientNameErrorMessage","initialRoleErrorMessage","initialRole","showAddRoles","setIsRoleAdded","submitError","setSubmitError","dataClient","dataRoles","required","pathErrorMessage","path","boolean","defaultRoleErrorMessage","isNeedLoginErrorMessage","isNeedLog","isNeedLogin","urlDestination","disableButton","defaultRole","setDataRoles","priorityValue","isPriortyValueUpdate","priorityValueErrorMessage","openDialogRequest","editDialogRequest","handleOpenDialogRequest","filterById","isPriorityValueUpdate","requestSpecificationId","requestUpdate","dateto","totalPax","agentPrice","price","submitFormRequest","tableColumn","newColumn","payment_on","nta","ntsa","agentprice","totalAgentPrice","reduce","doneTabel","font","bold","alignment","horizontal","newColumns","submitXlsForm","handleExport","submitForm","_setThirdRequest","setThirdRequest","clinicname","productname","paxprice","fixedTable","EditDialog","editItem","setName","setKey","img","setImg","setAction","handleEditClose","newObj","handleNewItem","basic","setBasic","editOpen","setEditOpen","setEditItem","handleEdit","xl","ListItem","divider","ListItemSecondaryAction","newBasic","itemBasic","configList","setCompleteRequest","editConfig","setEditConfig","modalConfigDetail","setModalConfigDetail","handleCloseModal","gutterBottom","year","month","converDateDDMMYY","on","by","handleDetailConfig","rowsMax","useSpring","opacity","in","div","Collapse","StyledTreeItem","iconContainer","group","borderLeft","fade","TreeItem","ClinicScopeTree","nodeId","MinusSquare","SvgIcon","d","PlusSquare","CloseSquare","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","Routing","exact","Home","Register","PaxDetail","QRScreen","VCreateUser","VUserList","KCreateAdmin","KAdminList","KSetting","KClinicList","KClinicRegistration","VClientList","VRequestList","VCreateClient","clinicReport","KOrderReportAll","UserProfile","GenericJson","ClinicScope","handleAction","lang","actionType","actionRequest","anchorOrigin","vertical","OtpDialog","maxLength","NavBarRightMenu","handleDrawerOpen","mainHidden","handleDrawerClose","handleDrawerClick","menuItem","windowscreen","_setMenuClickUrl","entries","_toggleCollapseMenu","openLogout","handleClickOpen","handleMainClick","handleLogout","dialogOpen","loginStyle","backgroundSize","backgroundAttachment","left","defaultStyle","CssBaseline","AppBar","clsx","appBar","appBarShift","menuButton","noWrap","hide","LinearProgress","contentShift","Drawer","drawer","anchor","drawerPaper","Chip","button","childItem","Navigation","setMenuClickUrl","toggleCollapseMenu","transition","transitions","create","easing","sharp","leavingScreen","easeOut","enteringScreen","drawerHeader","mixins","toolbar","justifyContent","breakpoints","up","App","locationHref","ServiceExecutor","SnackBarError","withRouter","Boolean","hostname","ReactDOM","render","ThemeProvider","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9eb8c5bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backoffice02.246215a8.jpg\";","\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nexport  const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#08ff00',\r\n      main: '#00f100',\r\n      dark: '#00cb00',\r\n      contrastText: '#000000',\r\n    },\r\n    secondary: {\r\n      light: '#637bfe',\r\n      main: '#3d5afe',\r\n      dark: '#2a3eb1',\r\n      contrastText: '#000000',\r\n    },\r\n    error: {\r\n      light: '#ef9a9a',\r\n      main: '#f06461',\r\n      dark: '#b71c1c',\r\n      contrastText: '#000000',\r\n    }\r\n  },\r\n});\r\n","\r\nconst initialstate = {\r\n  locale: '',\r\n  serviceStart: false,\r\n  openScreen: \"\",\r\n  menuClickUrl: '',\r\n  appConstant: null,\r\n  roleAuth: {\r\n    root: 'AUTHENTICATION_ROOT',\r\n    admin: 'AUTHENTICATION_ADMIN',\r\n    endUser: 'AUTHENTICATION_USER'\r\n  },\r\n  popChooseRole: false,\r\n  // googleParams: null,\r\n  googleParams: {\r\n    access_type: \"offline\",\r\n    scope: \"https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email\",\r\n    response_type: \"code\",\r\n    prompt: \"consent\",\r\n    client_id: \"321981158486-ac5nqdqbq0hjla14a299ln736s2kuj14.apps.googleusercontent.com\"\r\n  },\r\n  otpID: '',\r\n}\r\n\r\nconst system = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case 'SERVICE_START': return { ...state, serviceStart: true }\r\n    case 'SERVICE_END': return { ...state, serviceStart: false }\r\n    case 'SET_SNACKBAR_MESSAGE': return { ...state, snackbarMsg: action.val }\r\n    case 'SET_OPEN_SCREEN': return { ...state, openScreen: action.val }\r\n    case 'SET_MENU_CLICK_URL': return { ...state, menuClickUrl: action.val }\r\n    case 'SET_APP_CONSTANT': return { ...state, appConstant: action.val }\r\n    case 'SET_LOCALE': return { ...state, locale: action.val }\r\n    case 'POP_CHOOSE_ROLE': return { ...state, popChooseRole: action.val }\r\n    case 'SET_GOOGLE_PARAMS': return { ...state, googleParams: action.val }\r\n    case 'SET_SYSTEM_OTP_ID': return { ...state, otpID: action.val }\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        serviceStart: false,\r\n        menuClickUrl: '',\r\n        roleAuth: {\r\n          root: 'AUTHENTICATION_ROOT',\r\n          admin: 'AUTHENTICATION_ADMIN',\r\n          endUser: 'AUTHENTICATION_USER'\r\n        },\r\n        popChooseRole: false,\r\n        otpID: '',\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default system\r\n","\r\n// let domain = window.location.origin\r\n\r\nconst initialstate = {\r\n  file: null,\r\n  request: {},\r\n  secondRequest: false,\r\n  thirdRequest: false,\r\n  status: \"inactive\",\r\n  serviceCode: null,\r\n  method: \"POST\",\r\n  params: \"\",\r\n  customHeaders: null,\r\n  role: null,\r\n  test: false,\r\n  headersContent: {\r\n    // \"connection\": \"keep-alive\",\r\n    // \"gadget-id\": \"mygadgetId\",\r\n    // \"role\": \"end-user\",\r\n    // \"client-id\": \"voltras-health\",\r\n    // \"content-type\": \"application/json\",\r\n    // \"accept\": \"*/*\",\r\n    // \"origin\": `${domain}`,\r\n    // \"accept-encoding\": \"gzip, deflate\",\r\n  },\r\n}\r\n\r\nconst service = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case 'SET_FILE':\r\n      return { ...state, file: action.val }\r\n    case 'SET_SERVICE_CODE':\r\n      return { ...state, serviceCode: action.val }\r\n    case 'SET_SERVICE_STATUS':\r\n      return { ...state, status: action.val }\r\n    case 'SET_SERVICE_METHOD':\r\n      return { ...state, method: action.val }\r\n    case 'SET_SERVICE_REQUEST':\r\n      return { ...state, request: action.val }\r\n    case 'SET_SERVICE_PARAMS':\r\n      return { ...state, params: action.val }\r\n    case 'SET_SERVICE_CUSTOM_HEADERS':\r\n      return { ...state, customHeaders: action.val }\r\n    case 'SET_SERVICE_ROLE':\r\n      return { ...state, role: action.val }\r\n    case 'SET_HEADERS_CONTENT':\r\n      return { ...state, headersContent: { ...state.headersContent, ...action.val } }\r\n    case 'SET_SECOND_REQUEST':\r\n      return { ...state, secondRequest: action.val, }\r\n    case 'CLEAR_SECOND_REQUEST':\r\n      return { ...state, secondRequest: false }\r\n    case 'SET_THIRD_REQUEST':\r\n      return { ...state, thirdRequest: action.val, }\r\n    case 'CLEAR_THIRD_REQUEST':\r\n      return { ...state, thirdRequest: false }\r\n    case 'SET_TEST':\r\n      return { ...state, test: action.val, }\r\n    case 'RESET_SERVICE':\r\n      // reset service except second and third request\r\n      return {\r\n        ...state,\r\n        \"request\": {},\r\n        \"status\": \"inactive\",\r\n        \"serviceCode\": null,\r\n        \"method\": \"POST\",\r\n        \"params\": \"\",\r\n        'customHeaders': null,\r\n        'role': null,\r\n        \"test\": false,\r\n        'headersContent': {},\r\n      }\r\n    case 'LOGOUT':\r\n      return initialstate\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default service\r\n\r\n\r\n\r\n\r\n\r\n","\r\nconst initialstate = {\r\n  response:{},\r\n}\r\n\r\nconst response = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case 'SET_RESPONSE':\r\n      return {\r\n        ...state,\r\n        response: action.val\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default response\r\n","\r\nconst initialstate = {\r\n  info: {},\r\n  sessionInfo: {},\r\n  otpId: '',\r\n  roleUsed: '',\r\n  resetPasswordCode: '',\r\n  verificationCode: '',\r\n}\r\n\r\nconst userInfo = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case 'SET_USER_INFO': return { ...state, info: { ...state.info, ...action.val } }\r\n    case 'SET_USER_SESSION_INFO': return { ...state, sessionInfo: action.val }\r\n    case 'SET_USER_OTP_ID': return { ...state, otpId: action.val }\r\n    case 'SET_ROLE_USED': return { ...state, roleUsed: action.val }\r\n    case 'RESET_PASSWORD_CODE': return { ...state, resetPasswordCode: action.val }\r\n    case 'SET_VERIFICATION_CODE': return { ...state, verificationCode: action.val }\r\n    case 'LOGOUT': return initialstate\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default userInfo\r\n","\r\nconst initialstate = {\r\n  menuItems: [],\r\n}\r\n\r\nconst menu = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case 'SET_USER_MENU':\r\n      return {\r\n        ...state,\r\n        menuItems: action.val\r\n      }\r\n    case 'SET_MENU_COLLAPSE_STATUS':\r\n      return {\r\n        ...state,\r\n        ...action.val\r\n      }\r\n    case 'TOGGLE_COLLAPSE_MENU':\r\n      return {\r\n        ...state,\r\n        [action.val.name]: action.val.value\r\n      }\r\n    case 'LOGOUT':\r\n      return initialstate\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default menu\r\n","\r\nconst initialstate = {\r\n  list: [],\r\n  detail: {},\r\n  product: [],\r\n  filteredList: [],\r\n  klinikList: [],\r\n  clinicDetail: {},\r\n  cityList: [],\r\n  clinicUser: null,\r\n  clinicRecapt: [],\r\n  myClinic: null,\r\n  clinic_parents: [],\r\n  parentList: [],\r\n}\r\n\r\nconst paxList = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case 'SET_PAX_LIST':\r\n      return {\r\n        ...state,\r\n        list: action.val\r\n      }\r\n    case 'SET_PAX_DETAIL':\r\n      return {\r\n        ...state,\r\n        detail: action.val\r\n      }\r\n    case 'SET_PAX_PRODUCT':\r\n      return {\r\n        ...state,\r\n        product: action.val\r\n      }\r\n    case 'SET_KLINIK_LIST':\r\n      return {\r\n        ...state,\r\n        klinikList: action.val\r\n      }\r\n    case 'SET_CLINIC_DETAIL':\r\n      return {\r\n        ...state,\r\n        clinicDetail: action.val\r\n      }\r\n    case 'SET_CLINIC_USER':\r\n      return {\r\n        ...state,\r\n        clinicUser: action.val\r\n      }\r\n    case 'SET_CLINIC_RECAPT':\r\n      return {\r\n        ...state,\r\n        clinicRecapt: action.val\r\n      }\r\n    case 'SET_FILTERED_LIST':\r\n      return {\r\n        ...state,\r\n        filteredList: action.val\r\n      }\r\n    case 'SET_CITY_LIST':\r\n      return {\r\n        ...state,\r\n        cityList: action.val\r\n      }\r\n    case 'SET_MY_CLINIC':\r\n      return { ...state, myClinic: action.val }\r\n    case 'SET_CLINIC_PARENTS':\r\n      // console.log(\"OPO TOH>>>: \", action.val)\r\n      return { ...state, clinic_parents: action.val }\r\n    case 'SET_PARENT_LIST':\r\n      return { ...state, parentList: action.val }\r\n    case 'LOGOUT':\r\n      return initialstate\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default paxList\r\n","\r\nconst initialstate = {\r\n  snackBar: {\r\n    open: false,\r\n    severity: \"info\",\r\n    message: \"\",\r\n    position: 'bottom-center',\r\n    action: \"\",\r\n    actionLabel: '',\r\n  },\r\n  dialog: {\r\n    open: false,\r\n    message: \"\"\r\n  },\r\n  stepper: {\r\n    open: false,\r\n    step: 0,\r\n    message: \"\"\r\n  },\r\n}\r\n\r\nconst feedback = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case \"SET_SNACKBAR\":\r\n      return {\r\n        ...state,\r\n        snackBar: action.val\r\n      }\r\n    case \"SET_DIALOG\":\r\n      return {\r\n        ...state,\r\n        dialog: action.val\r\n      }\r\n    case 'LOGOUT':\r\n      return initialstate\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default feedback","\r\nconst INITIAL_STATE = {\r\n  autocomplete: null,\r\n  inputValue: \"\",\r\n  klinikList: [],\r\n  klinikValue: {},\r\n  klinikInputValue: \"\"\r\n};\r\n\r\nconst autocomplete = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'SET_AUTOCOMPLETE_VALUE':\r\n      return {\r\n        ...state,\r\n        autocomplete: action.val\r\n      }\r\n    case 'SET_INPUT_VALUE':\r\n      return {\r\n        ...state,\r\n        inputValue: action.val\r\n      }\r\n    case 'SET_KLINIK_LIST_RESPONSE':\r\n      return {\r\n        ...state,\r\n        klinikList: action.val\r\n      }\r\n    case 'SET_KLINIK_VALUE':\r\n      return {\r\n        ...state,\r\n        klinikValue: action.val\r\n      }\r\n    case 'SET_KLINIK_INPUT_VALUE':\r\n      return {\r\n        ...state,\r\n        klinikInputValue: action.val\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default autocomplete;\r\n\r\n","\r\nconst initialstate = {\r\n  list: [],\r\n  detail: {},\r\n  filteredList:[]\r\n}\r\n\r\nconst UserList = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case 'SET_USER_LIST':\r\n      return {\r\n        ...state,\r\n        list: action.val\r\n      }\r\n    case 'SET_USER_DETAIL':\r\n      return {\r\n        ...state,\r\n        detail: action.val\r\n      }\r\n    case 'SET_USER_FILTERED_LIST':\r\n      return {\r\n        ...state,\r\n        filteredList: action.val\r\n      }\r\n    case 'LOGOUT':\r\n      return initialstate\r\n      \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default UserList\r\n","\r\nconst initialstate = {\r\n  list: [],\r\n  detail: {},\r\n  filteredList: [],\r\n  messagingList: [],\r\n  messagingEdit: {}\r\n}\r\n\r\nconst ClientList = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case 'SET_CLIENT_LIST':\r\n      return {\r\n        ...state,\r\n        list: action.val\r\n      }\r\n    case 'SET_CLIENT_DETAIL':\r\n      return {\r\n        ...state,\r\n        detail: action.val\r\n      }\r\n    case 'SET_CLIENT_FILTERED_LIST':\r\n      return {\r\n        ...state,\r\n        filteredList: action.val\r\n      }\r\n    case 'SET_CLIENT_MESSAGE_LIST':\r\n      return {\r\n        ...state,\r\n        messagingList: action.val\r\n      }\r\n    case'SET_CLIENT_MESSAGE_EDIT':\r\n      return {\r\n        ...state,\r\n        messagingEdit:action.val\r\n      }\r\n    case 'LOGOUT':\r\n      return initialstate\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default ClientList\r\n","const INITIAL_STATE = {\r\n    configurationList: [],\r\n    configDetail: null,\r\n    configDetailModal: false\r\n}\r\n\r\nconst genericConfiguration = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'SET_GENERIC_CONFIG_LIST':\r\n            return {\r\n                ...state,\r\n                configurationList: action.data\r\n            }\r\n        case 'SET_CONFIG_DETAIL':\r\n            return {\r\n                ...state,\r\n                configDetail: action.data\r\n            }\r\n        case 'SET_CONFIG_DETAIL_MODAL':\r\n            return {\r\n                ...state,\r\n                configDetailModal: action.val\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default genericConfiguration;","const initialstate = {\r\n    list: [],\r\n    detail: {},\r\n    filteredList: []\r\n  }\r\n  \r\n  const RequestList = (state = initialstate, action) => {\r\n    switch (action.type) {\r\n      case 'SET_REQUEST_LIST':\r\n        return {\r\n          ...state,\r\n          list: action.val\r\n        }\r\n      case 'SET_REQUEST_DETAIL':\r\n        return {\r\n          ...state,\r\n          detail: action.val\r\n        }\r\n      case 'SET_CLIENT_FILTERED_LIST':\r\n        return {\r\n          ...state,\r\n          filteredList: action.val\r\n        }\r\n      case 'LOGOUT':\r\n        return initialstate\r\n  \r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default RequestList","\r\nimport { combineReducers } from 'redux'\r\nimport system from './SystemReducer'\r\nimport service from './ServiceReducer'\r\nimport response from './ResponseReducer'\r\nimport userInfo from './UserInfoReducer'\r\nimport menu from './MenuReducer';\r\nimport paxList from './PaxListReducers'\r\nimport feedback from './FeedbackReducer'\r\nimport autocomplete from './AutoCompleteReducer'\r\nimport userList from './UserListReducers'\r\nimport clientList from './ClientListReducer'\r\nimport genericConfiguration from './GenericConfigurationReducer';\r\nimport requestList from './RequestListReducer'\r\n\r\nconst appReducers = combineReducers({\r\n  autocomplete,\r\n  clientList,\r\n  feedback,\r\n  menu,\r\n  paxList,\r\n  response,\r\n  system,\r\n  service,\r\n  userInfo,\r\n  userList,\r\n  genericConfiguration,\r\n  requestList\r\n})\r\n\r\nexport default appReducers","\r\nimport { createStore } from 'redux';\r\nimport appReducers from './module/CombineReducers'\r\n\r\nconst store = createStore(appReducers)\r\n\r\nexport default store","\r\nexport const setServiceRequest = val => {\r\n  return {\r\n    type: 'SET_SERVICE_REQUEST',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setServiceStatus = val => {\r\n  return {\r\n    type: 'SET_SERVICE_STATUS',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setServiceCode = val => {\r\n  return {\r\n    type: 'SET_SERVICE_CODE',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setServiceMethod = val => {\r\n  return {\r\n    type: 'SET_SERVICE_METHOD',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setServiceParams = val => {\r\n  return {\r\n    type: 'SET_SERVICE_PARAMS',\r\n    val,\r\n  }\r\n}\r\n\r\nexport const setServiceCustomHeaders = val => {\r\n  return {\r\n    type: 'SET_SERVICE_CUSTOM_HEADERS',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setHeadersContent = val => {\r\n  return {\r\n    type: 'SET_HEADERS_CONTENT',\r\n    val\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const setServiceRole = val => {\r\n  return {\r\n    type: 'SET_SERVICE_ROLE',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setServiceTest = val => {\r\n  return {\r\n    type: 'SET_TEST',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setSecondRequest = val => ({ type: 'SET_SECOND_REQUEST', val })\r\nexport const clearSecondRequest = () => ({ type: 'CLEAR_SECOND_REQUEST' })\r\nexport const setThirdRequest = val => ({ type: 'SET_THIRD_REQUEST', val })\r\nexport const clearThirdRequest = () => ({ type: 'CLEAR_THIRD_REQUEST' })\r\n\r\nexport const resetService = () => {\r\n  return {\r\n    type: 'RESET_SERVICE',\r\n  }\r\n}","\r\nexport const setResponse = val => {\r\n  return {\r\n    type: 'SET_RESPONSE',\r\n    val\r\n  }\r\n}\r\n","\r\nexport const setUserInfo = val => { return { type: \"SET_USER_INFO\", val } }\r\nexport const setUserSessionInfo = val => { return { type: \"SET_USER_SESSION_INFO\", val } }\r\nexport const setUserOtpId = val => { return { type: 'SET_USER_OTP_ID', val } }\r\nexport const setRoleUsed = val => { return { type: 'SET_ROLE_USED', val } }\r\nexport const setResetPasswordCode = val => { return { type: 'RESET_PASSWORD_CODE', val } }\r\nexport const setVerificationCode = val => { return { type: 'SET_VERIFICATION_CODE', val } }\r\n","\r\nexport const setUserMenu = val => {\r\n  return {\r\n    type: \"SET_USER_MENU\",\r\n    val\r\n  }\r\n}\r\n\r\nexport const setMenuCollapseStatus = val => {\r\n  return {\r\n    type:\"SET_MENU_COLLAPSE_STATUS\",\r\n    val\r\n  }\r\n}\r\n\r\nexport const toggleCollapseMenu = val => {\r\n  return {\r\n    type:\"TOGGLE_COLLAPSE_MENU\",\r\n    val\r\n  }\r\n}\r\n","\r\nexport const setPaxList = val => {\r\n  return {\r\n    type: \"SET_PAX_LIST\",\r\n    val\r\n  }\r\n}\r\n\r\nexport const setPaxDetail = val => {\r\n  return {\r\n    type: \"SET_PAX_DETAIL\",\r\n    val\r\n  }\r\n}\r\n\r\nexport const setPaxProduct = val => {\r\n  return {\r\n    type: \"SET_PAX_PRODUCT\",\r\n    val\r\n  }\r\n}\r\n\r\nexport const setFilteredList = val => {\r\n  return {\r\n    type: 'SET_FILTERED_LIST',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setKlinikList = val => {\r\n  return {\r\n    type: 'SET_KLINIK_LIST',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setClinikDetail = val => {\r\n  return {\r\n    type: 'SET_CLINIC_DETAIL',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setClinicRecapt = val => {\r\n  return {\r\n    type: 'SET_CLINIC_RECAPT',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setClinikUser = val => {\r\n  return {\r\n    type: 'SET_CLINIC_USER',\r\n    val\r\n  }\r\n}\r\n\r\n\r\nexport const setCityList = val => {\r\n  return {\r\n    type: 'SET_CITY_LIST',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setMyClinic = val => { return { type: 'SET_MY_CLINIC', val } }\r\nexport const setClinicsParents = val => { return { type: 'SET_CLINIC_PARENTS', val } }\r\nexport const setParentList = val => { return { type: 'SET_PARENT_LIST', val } }\r\n","\r\nexport const setSnackbar = val => {\r\n  return {\r\n    type: \"SET_SNACKBAR\",\r\n    val\r\n  }\r\n}\r\n\r\nexport const setDialog = val => {\r\n  return {\r\n    type: \"SET_DIALOG\",\r\n    val\r\n  }\r\n}","\r\nexport const serviceStart = () => { return { type: 'SERVICE_START' } }\r\nexport const serviceEnd = () => { return { type: 'SERVICE_END' } }\r\nexport const setSnackbarMessage = val => { return { type: 'SET_SNACKBAR_MESSAGE', val } }\r\nexport const setOpenScreen = val => { return { type: \"SET_OPEN_SCREEN\", val } }\r\nexport const dispatchLogout = () => { return { type: \"LOGOUT\" } }\r\nexport const setMenuClickUrl = val => { return { type: 'SET_MENU_CLICK_URL', val } }\r\nexport const setAppConstant = val => { return { type: 'SET_APP_CONSTANT', val } }\r\nexport const setPopChooseRole = val => { return { type: 'POP_CHOOSE_ROLE', val } }\r\nexport const setLocale = val => { return { type: 'SET_LOCALE', val } }\r\nexport const setGoogleParams = val => { return { type: 'SET_GOOGLE_PARAMS', val } }\r\nexport const setSystemOtpId = val => { return { type: 'SET_SYSTEM_OTP_ID', val } }\r\n","\r\nexport const setUserList = val =>{\r\n  return {\r\n    type: 'SET_USER_LIST',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setUserDetail = val => {\r\n  return {\r\n    type: 'SET_USER_DETAIL',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setUserFilteredList = val => {\r\n  return {\r\n    type: 'SET_USER_FILTERED_LIST',\r\n    val\r\n  }\r\n}\r\n","export const setGenericConfigList = (data) => ({\r\n    type: 'SET_GENERIC_CONFIG_LIST',\r\n    data\r\n});\r\n\r\nexport const setConfigDetail = (data) => ({\r\n    type: 'SET_CONFIG_DETAIL',\r\n    data\r\n});\r\n\r\nexport const setConfigDetailModal = (val) => ({\r\n    type: 'SET_CONFIG_DETAIL_MODAL',\r\n    val\r\n});","\r\nimport development from './development.json'\r\nimport production from './production.json'\r\n\r\nconst appVersion = '1.0.2'\r\n\r\n// const environment = process.env.REACT_APP_ENVIRONTMENT\r\n// console.log(\"ENVIRONMENT: \", environment)\r\nconsole.log(\"ENVIRONMENT: \", process.env.NODE_ENV)\r\n\r\nlet Config = {}\r\nConfig = production\r\n// if (environment === 'DEVELOPMENT') Config = development\r\n// Config.appVersion = appVersion\r\n\r\nif (process.env.NODE_ENV === 'development') Config = development\r\nConfig.appVersion = appVersion\r\n\r\nexport default Config\r\n\r\n\r\n// if (process.env.NODE_ENV === 'development') {\r\n//   serviceUrl = \"https://health.travelagent.co.id/service\";\r\n//   staticFileManager = \"https://repo.voltras.net/static-file-manager/insert\";\r\n//   vanUrl = \"https://www.travelagent.co.id/\";\r\n//   goblinUrl = \"https://payment.travelagent.co.id\"\r\n// }\r\n// else {\r\n//   serviceUrl = \"https://health.travelagent.co.id/service\";\r\n//   staticFileManager = \"https://repo.voltras.net/static-file-manager/insert\";\r\n//   vanUrl = \"https://www.travelagent.co.id/\";\r\n//   goblinUrl = \"https://payment.travelagent.co.id\"\r\n// }","\r\nimport Config from \"../config\"\r\n\r\n// let environtment = 'LIVE'\r\n// let environtment = 'DEVELOPMENT'\r\n\r\n// console.log(Config)\r\n// export const urlImage = 'https://repo.voltras.net'   // 'http://203.196.90.105:8080' // 'https://repo.voltras.net\r\n\r\n// let newGatewayLive = 'https:/.voltras.net/security'\r\n// let gatewayBOLive = 'http://203.196.90.104:31996'\r\n\r\n// let urlNewGateway = environtment === 'DEVELOPMENT' ? \"http://172.16.10.51:30397\" : newGatewayLive\r\n// let urlGatewayBO = environtment === 'DEVELOPMENT' ? 'http://172.16.10.51:31996' : gatewayBOLive\r\n// let urlService = environtment === 'DEVELOPMENT' ? \"http://172.16.10.93:8001\" : newGatewayLive\r\n\r\nlet gatewaySecurity = Config.gatewaySecurity\r\nlet gatewayBackOffice = Config.gatewayBackOffice\r\nlet gatewayHealth = Config.gatewayMsHealth\r\n\r\nconst serviceUrl = serviceCode => {\r\n  switch (serviceCode) {\r\n    case \"login\":\r\n      return gatewaySecurity + \"/login\"  \r\n\r\n    case \"logout\":\r\n      return gatewaySecurity + \"/logout\"\r\n\r\n    case \"register\":\r\n      return gatewaySecurity + \"/register\"  \r\n\r\n    case 'UPDATE_USER_INFO':\r\n      return gatewaySecurity + '/users/me'\r\n\r\n    case 'OTP':\r\n      return gatewaySecurity + \"/validate-otp\"   //   POST /validate-otp\r\n\r\n    case 'RESET_PASSWORD_REQUEST':\r\n      return gatewaySecurity + \"/reset-password-request\" \r\n\r\n    case 'CHANGE_PASSWORD_REQUEST':\r\n      return gatewaySecurity + \"/reset-password-recovery\"  \r\n\r\n    case 'SEND_EMAIL_VERIFICATION':\r\n      return gatewaySecurity + \"/verification-code\"  \r\n\r\n    case 'SEND_PHONE_VERIFICATION':\r\n      return gatewaySecurity + \"/verification-code\"   \r\n\r\n    case 'VERIFICATION_CHECK':\r\n      return gatewaySecurity + \"/verification-code\"     \r\n\r\n    case 'REQ_AUTH_GOOGLE_PARAMS':\r\n      return gatewaySecurity + '/params/google-oauth'  \r\n\r\n    case \"SELECT_USER_ROLE\":\r\n      return gatewayBackOffice + \"/user/select/role\"\r\n\r\n    case \"SELECT_USER_FULL_INFO\":\r\n      return gatewayBackOffice + \"/user/select/full\"\r\n\r\n    case 'SELECT_USER_DETAIL_FULL_INFO':\r\n      return gatewayBackOffice + \"/user/select/full\"\r\n\r\n    case \"CREATE_BO_USER\":\r\n      return gatewayBackOffice + \"/users\"\r\n\r\n    case 'SELECT_ALL_USER':\r\n      return gatewayBackOffice + '/users'\r\n\r\n    case 'DELETE_USER':\r\n      return gatewayBackOffice\r\n\r\n    case \"UPDATE_USER_ROLE\":\r\n      return gatewayBackOffice   // 'http://172.16.10.51:31564'\r\n\r\n    case \"UPDATE_BASIC_USER\":\r\n      return gatewayBackOffice\r\n\r\n    case \"UPDATE_TEMPLATE_MESSAGE\":\r\n      return gatewayBackOffice\r\n\r\n    case \"SELECT_ALL_MESSAGE\":\r\n      return gatewayBackOffice\r\n\r\n    case 'SELECT_ALL_CLIENT':\r\n      return gatewayBackOffice + '/clients'\r\n\r\n    case 'CREATE_CLIENT':\r\n      return gatewayBackOffice + '/clients'\r\n\r\n    case 'SELECT_ALL_REQUEST':\r\n      return gatewayBackOffice +'/request-specifications'\r\n\r\n    case 'UPDATE_CLIENT_DETAIL':\r\n      return gatewayBackOffice\r\n      \r\n    case 'ADD_CLIENT_ROLE':\r\n      return gatewayBackOffice\r\n\r\n    case 'DELETE_CLIENT_ROLE':\r\n      return gatewayBackOffice\r\n\r\n    case 'DELETE_CLIENT':\r\n      return gatewayBackOffice\r\n      \r\n    case 'ADD_REQUEST_SPESIFICATIONS':\r\n      return gatewayBackOffice\r\n\r\n    case 'UPDATE_REQUEST_SPESIFICATIONS':\r\n      return gatewayBackOffice\r\n\r\n    case 'HEALTH_ORDER_DETAIL':\r\n      return gatewaySecurity + \"/admin/orders\"\r\n\r\n    case \"healthOrder\":\r\n      return gatewaySecurity + \"/admin/orders\"\r\n\r\n    case \"healthKlinik\":\r\n      return gatewaySecurity + \"/admin/clinics\"\r\n\r\n    case \"healthProduct\":\r\n      return gatewaySecurity + \"/products\"\r\n\r\n    case 'GET_CITY_LIST':\r\n      return gatewaySecurity + ''\r\n\r\n    case 'GET_CITY_CLINIC_LIST':\r\n      return gatewaySecurity + ''\r\n\r\n    case 'GET_ALL_ORDER':\r\n      return gatewaySecurity + \"/admin/orders\"\r\n\r\n    case 'RESCHEDULE_ORDER':\r\n      return gatewaySecurity + \"/admin/orders\"\r\n\r\n    case 'CLINIC_REGISTRATION':\r\n      return gatewaySecurity + \"/admin/clinics\"\r\n\r\n    case 'SEND_CLINIC_ACTIVATION':\r\n      return gatewaySecurity + \"/admin/clinics\"\r\n\r\n    case 'ADD_CLINIC_USER':\r\n      return gatewaySecurity + \"/admin/clinics\"\r\n\r\n    case 'DELETE_CLINIC_USER':\r\n      return gatewaySecurity + \"/admin/clinics\"\r\n\r\n    case 'DELETE_CLINIC':\r\n      return gatewaySecurity + \"/admin/clinics\"\r\n\r\n    case 'GET_CLINIC_USER':\r\n      return gatewaySecurity + \"/admin/clinics\"\r\n\r\n    case 'GET_MY_CLINIC':\r\n      return gatewaySecurity + \"/admin/users/me\"\r\n\r\n    case 'GET_CLINIC_REPORT':\r\n      return gatewaySecurity + \"/admin/report\"\r\n\r\n    case 'ADD_CLINIC_LOGO':\r\n      return gatewaySecurity + \"/admin/clinics\"\r\n      \r\n    case 'GENERIC_JSON_CONFIGURATION':\r\n      return gatewaySecurity+'/admin/configurations';\r\n\r\n    case 'GENERIC_JSON_CONFIGURATION_DETAIL':\r\n      return gatewaySecurity+'/admin/configurations';\r\n    case 'GENERIC_JSON_CONFIGURATION_UPDATE':\r\n      return gatewaySecurity+'/admin/configurations';\r\n\r\n    case 'GET_CLINIC_PARENTS': \r\n      return gatewaySecurity + \"/admin/clinics/parents\" \r\n    \r\n    case 'GET_PARENT_LIST':\r\n      return gatewaySecurity + \"/admin/persons\" \r\n\r\n    case 'PURCHASE_VOUCHER_NUMBER':\r\n      return gatewaySecurity + \"/admin\" \r\n\r\n    default:\r\n      return gatewaySecurity\r\n  }\r\n}\r\n\r\nexport default serviceUrl\r\n","\r\nimport crypto from 'crypto'\r\n\r\nexport const hash = (algortm, stringData) => {\r\n  return crypto.createHash(algortm).update(stringData).digest('hex')\r\n}\r\n\r\nexport const hmac = (algortm, key, stringData) => {\r\n  return crypto.createHmac(algortm, key).update(stringData).digest('hex')\r\n}\r\n\r\nexport const bodyForSignature = (request, method, serviceCode, urlParams) => {\r\n  let bodySignature = request\r\n  if (urlParams) {\r\n    if (method === 'GET' && urlParams.includes('?')) {\r\n      let pairs = urlParams.split('&').slice(1)\r\n      var result = {};\r\n      pairs.forEach(function (pair) {\r\n        pair = pair.split('=');\r\n        result[pair[0]] = decodeURIComponent(pair[1] || '');\r\n      })\r\n      bodySignature = { ...bodySignature, ...result }\r\n      if (serviceCode === 'SEND_EMAIL_VERIFICATION') bodySignature.principalType = 'email'\r\n      if (serviceCode === 'SEND_PHONE_VERIFICATION') bodySignature.principalType = 'phone'\r\n    }\r\n    else if (!urlParams.includes('?')) {\r\n      // console.log(\"PARAMS SPLIT: \", urlParams.split('/'))\r\n      if ((serviceCode === 'ADD_CLIENT_ROLE') || (serviceCode === 'DELETE_CLIENT')) bodySignature.clientId = urlParams.split('/')[2]\r\n      if (serviceCode === 'DELETE_CLIENT_ROLE') {\r\n        // console.log(\"BRUAHAHA: \", urlParams.split('/'))\r\n        bodySignature.clientId = urlParams.split('/')[2]\r\n        bodySignature.roleIds = urlParams.split('/')[4]\r\n      }\r\n      if (serviceCode === 'UPDATE_USER_ROLE') bodySignature.id = urlParams.split('/')[2]\r\n      if (serviceCode === 'DELETE_USER') bodySignature.id = urlParams.split('/')[2]\r\n      if (serviceCode === 'SELECT_ALL_CLIENT' && urlParams.split('/')[1]) bodySignature.clientId = urlParams.split('/')[1]\r\n\r\n    }\r\n  }\r\n  return bodySignature\r\n}\r\n\r\nexport const generateSignature = (headers, body, key) => {\r\n  let orderedHeaders = {}\r\n  Object.keys(headers).sort().forEach(v => {\r\n    orderedHeaders[v] = headers[v]\r\n  })\r\n\r\n  let orderedBody = {}\r\n  Object.keys(body).sort().forEach(v => {\r\n    orderedBody[v] = body[v]\r\n  })\r\n\r\n  let stringHeader = JSON.stringify(orderedHeaders).replace(/\\s/g, '');\r\n  let stringBody = JSON.stringify(orderedBody).replace(/\\s/g, '');\r\n  let stringMsg = hash('sha1', stringHeader) + hash('sha1', stringBody);\r\n  let signature = hmac('sha256', key, stringMsg)\r\n  // console.log('Header sebelum hash: ', stringHeader)\r\n  // console.log('Body sebelum hash: ', stringBody)\r\n  // console.log(\"STRING HEADER: \", hash('sha1', stringHeader))\r\n  // console.log(\"STRING BODY: \", hash('sha1', stringBody))\r\n  // console.log(\"STRING MESSAGE: \", stringMsg)\r\n\r\n  return signature\r\n}\r\n\r\nexport const generateRoleToSend = (aud, role) => {\r\n  let roleToSend = 'end-user'\r\n  if (aud === 'voltras-health') {\r\n    if (role.includes('voltras.admin')) roleToSend = 'voltras.admin'\r\n    else if (role.includes('biofarma.admin')) roleToSend = 'biofarma.admin'\r\n    else if (role.includes('clinic.admin')) roleToSend = 'clinic.admin'\r\n    else if (role.includes('health.admin')) roleToSend = 'health.admin'\r\n    else if (role.includes('clinic.operator')) roleToSend = 'clinic.operator'\r\n    else roleToSend = 'member'\r\n    // else roleToSend = 'end-user'\r\n  }\r\n  else {\r\n    if (role.includes('root')) roleToSend = 'root'\r\n    // else if (role.includes('AUTHENTICATION_ADMIN')) roleToSend = 'AUTHENTICATION_ADMIN'\r\n    else roleToSend = 'member'\r\n  }\r\n  // console.log(\"HUAYOOO: \", aud, role)\r\n  return roleToSend\r\n}","\r\nconst appText = {\r\n  app_name: { en: 'Name', id: 'Nama' },\r\n  app_phone: { en: 'Phone', id: 'Telepon' },\r\n  app_email: { en: 'Email', id: 'Email' },\r\n  app_new: { en: 'New', id: 'Baru' },\r\n  app_paid:{en:'Paid', id: 'Terbayar'},\r\n  app_finish: { en: 'Finish', id: 'Selesai' },\r\n  app_password: { en: 'Password', id: 'Kata sandi' },\r\n  app_password_confirmation: { en: 'Password Confirmation', id: 'Konfirmasi Kata Sandi' },\r\n  app_forgot_password: { en: 'Forgot password?', id: 'Lupa kata sandi?' },\r\n  app_from: { en: 'From', id: 'Dari' },\r\n  app_to: { en: 'To', id: 'Sampai' },\r\n  app_back: { en: 'Back', id: 'Kembali' },\r\n  app_cancel: { en: 'Cancel', id: 'Batal' },\r\n  app_submit: { en: 'Submit', id: 'Masukkan' },\r\n  app_welcome: { en: 'Welcome', id: 'Selamat Datang' },\r\n  app_sign_in: { en: 'Sign In', id: 'Masuk' },\r\n  app_sign_up: { en: 'Sign Up', id: 'Daftar' },\r\n  app_register: { en: 'Register', id: 'Daftar' },\r\n  app_choose: { en: 'Choose', id: 'Pilih' },\r\n  app_choose_role: { en: 'Choose Role', id: 'Pilih Role' },\r\n  app_choose_role_used: { en: 'Choose role to used', id: 'Pilih role untuk digunakan' },\r\n  app_submit_otp: { en: 'Submit OTP', id: 'Masukkan OTP' },\r\n  app_submit_otp_text: { en: 'Submit OTP sent to your number:', id: 'Masukkan OTP yang dikirimkan ke nomor:' },\r\n  app_not_receive_otp: { en: 'Did not receive the OTP?', id: 'Tidak menerima OTP?' },\r\n  app_resend_otp: { en: 'Resend OTP', id: 'Kirim ulang OTP' },\r\n  app_email_or_phone: { en: 'Email or Phone', id: 'Email atau Telepon' },\r\n  app_no_account: { en: 'Don\\'t have an account?', id: 'Tidak punya akun?' },\r\n  app_have_account: { en: 'Already have an account?', id: 'Sudah punya akun?' },\r\n  app_export_xls: { en: 'Export to Xls', id: 'Ekspor ke Xls' },\r\n  app_submit_filter: { en: 'Submit Filter', id: 'Masukkan Filter' },\r\n  app_not_mandatory: { en: 'Not mandatory', id: 'Tidak wajib' },\r\n  app_regis_sucess_msg: { en: 'Registration is successful, please Sign In.', id: 'Pendaftaran berhasil, silakan Masuk' },\r\n  app_email_success_msg: { en: 'Send email successful, check your email.', id: 'Pengiriman email berhasil, periksa email anda.' },\r\n  app_sms_success_msg: { en: 'Send message successful, check your email.', id: 'Pengiriman pesan berhasil, periksa sms anda.' },\r\n  app_verification_succes: { en: \"Verification successful.\", id: 'Verifikasi berhasil.' },\r\n  app_send_email_verify: { en: \"Send email verification\", id: \"Kirim verifikasi email\" },\r\n  app_send_phone_verify: { en: \"Send phone verification\", id: \"Kirim verifikasi telepon\" },\r\n  app_delete_data_confirmation: { en: 'Are you sure you want to delete this data?', id: 'Apakah Anda yakin ingin menghapus data ini?' },\r\n  app_date_to_show: { en: 'Date to show in Report', id: 'Tanggal untuk ditampilkan dalam Laporan' },\r\n  app_show_report: { en: 'Show Report', id: 'Tampilkan Laporan' },\r\n  app_report_summary: { en: 'Report Summary', id: 'Ringkasan Laporan' },\r\n  app_logout: { en: 'Logout', id: 'Keluar' },\r\n  app_confirm_logout: { en: 'Are you sure you want to logout', id: 'Anda yakin ingin keluar?' },\r\n  app_manage_acount: { en: 'Manage your account', id: 'Kelola akun anda' },\r\n  app_success_update_account: { en: 'Update account successful', id: 'Pembaruan akun berhasil' },\r\n  app_select_photo: { en: 'Select a photo from your computer', id: 'Pilih foto dari komputer anda' },\r\n  app_account_profile: { en: 'Account Profile', id: 'Profil Akun' },\r\n  app_photo_personalize: { en: 'A photo helps personalize your account', id: 'Sebuah foto membantu personalisasi akun Anda' },\r\n  app_save_to_change: { en: 'Press the \"SAVE\" button to save changes', id: 'Tekan tombol \"SIMPAN\" untuk menyimpan perubahan' },\r\n\r\n}\r\n\r\nexport default appText\r\n","\r\nconst errorText = {\r\n  err_submit: { en: 'Error in form', id: 'Kesalahan di dalam form' },\r\n  err_email_phone_empty: { en: 'Must be filled by email/phone.', id: 'Harus diisi dengan email/telepon' },\r\n  err_email_phone_format: { en: 'Wrong email/phone format.', id: 'Format email/telepon salah.' },\r\n  err_not_six_char: { en: 'At least 8 character.', id: 'Paling tidak 8 karakter.' },\r\n  err_phone_empty: { en: 'Phone must be filled.', id: 'Telepon harus diisi.' },\r\n  err_phone_format: { en: 'Wrong phone format. (0... or +62...)', id: 'Format telepon salah. (0... atau +62...)' },\r\n  err_name_empty: { en: 'Name must be filled.', id: 'Nama harus diisi.' },\r\n  err_clinic_name_empty: { en: 'Clinic name must be filled.', id: 'Nama klinik harus diisi.' },\r\n  err_address_empty: { en: 'Address must be filled.', id: 'Alamat harus diisi.' },\r\n  err_email_empty: { en: 'Email must be filled.', id: 'Email harus diisi.' },\r\n  err_email_format: { en: 'Wrong email format.', id: 'Format email salah.' },\r\n  err_password_empty: { en: 'Password must be filled.', id: 'Kata kunci harus diisi.' },\r\n  err_passconfirm_mismatch: { en: 'Confirmation not match', id: 'Konfirmasi tidak sesuai.' },\r\n  err_clientid_empty: { en: 'Client ID must be filled.', id: 'Client ID harus diisi.' },\r\n  err_clientid_format: { en: 'Wrong Client ID format.', id: 'Format Client ID salah.' },\r\n  err_clientname_empty: { en: 'Client name must be filled.', id: 'Nama client harus diisi.' },\r\n  err_roleid_empty: { en: 'Role ID must be filled.', id: 'Role ID harus diisi.' },\r\n  err_roleid_format: { en: 'Wrong Role ID format.', id: 'Format Role ID salah.' },\r\n  err_initialrole_empty: { en: 'Initial role must be filled.', id: 'Initial role harus diisi.' },\r\n  err_initialrole_format: { en: 'Wrong initial role format.', id: 'Format initial role salah.' },\r\n  err_clienttype_not_choosen: { en: 'Client Type must be chosen', id: 'Client Type harus dipilih' },\r\n  err_profile_not_choosen: { en: 'Profile must be chosen', id: 'Profil harus dipilih' },\r\n  err_description_empty: { en: 'Description must be filled.', id: 'Deskripsi harus diisi.' },\r\n  err_atleast_one_name_chosen: { en: 'At least one name must be chosen', id: 'Setidaknya satu nama harus dipilih' },\r\n  err_redeemby_empty: { en: 'Redeem By must be filled', id: 'Redeem Oleh harus diisi' },\r\n  err_otp_empty: { en: 'Empty OTP', id: 'OTP kosong' },\r\n  err_otp_must_number: { en: 'OTP must number', id: 'OTP harus angka' },\r\n  err_uri_empty: {en: \"Empty uri\",id:\"uri kosong\"},\r\n  err_uri_format:{en:\"Wrong uri format\",id:\"Format uri salah\"},\r\n  err_email_masking_100:{en:\"Email masking can't more than 100\",id:\"email masking tidak boleh lebih dari 100\"},\r\n  err_masking_name_format:{en:\"Wrong format email masking name\",id:\" format email masking name salah\"},\r\n  err_masking_name_empty:{en:\"empty email masking name\",id:\"email masking name kosong\"},\r\n  err_path_empty: {en: \"Empty path\",id:\"path kosong\"},\r\n  err_path_format:{en:\"Wrong path format\",id:\"Format path salah\"},\r\n}\r\n\r\nexport default errorText\r\n","\r\nconst commonText = {\r\n  common_with: { en: 'with', id: 'dengan' },\r\n  common_or: { en: 'or', id: 'atau' },\r\n  common_add: { en: 'Add', id: 'Tambah' },\r\n  common_signin_with: { en: 'Sign in with', id: 'Masuk dengan' },\r\n  common_signup_with: { en: 'Sign up with', id: 'Daftar dengan' },\r\n  common_change_password: { en: 'Change Password', id: 'Ganti Kata Kunci' },\r\n  common_new_password: { en: 'New Password', id: 'Kata Kunci Baru' },\r\n  common_close: { en: 'Close', id: 'Tutup' },\r\n  common_contact_person: { en: 'Contact Person', id: 'Narahubung' },\r\n  common_birth_date: { en: 'Birth Date', id: 'Tanggal Lahir' },\r\n  common_products: { en: 'Products', id: \"Produk\" },\r\n  common_name: { en: 'Name', id: 'Nama' },\r\n  common_phone: { en: 'Phone', id: 'Telepon' },\r\n  common_email: { en: 'Email', id: 'Email' },\r\n  common_address: { en: 'Address', id: 'Alamat' },\r\n  common_photo: { en: 'Photo', id: 'Foto' },\r\n  common_change: { en: 'Change', id: 'Ganti' },\r\n  common_save: { en: 'Save', id: 'Simpan' },\r\n\r\n}\r\n\r\nexport default commonText\r\n","\r\nconst clinicText = {\r\n  clinic: { en: 'Clinic', id: 'Klinik' },\r\n  clinic_name: { en: 'Clinic Name', id: 'Nama Klinik' },\r\n  clinic_city: { en: 'Clinic City', id: 'Kota Klinik' },\r\n  clinic_address: { en: 'Clinic Address', id: 'Alamat Klinik' },\r\n  clinic_order_list: { en: 'Order List', id: 'Daftar Order' },\r\n  clinic_test_request_date: { en: 'Test request date', id: 'Tanggal permintaan tes' },\r\n  clinic_order_report: { en: \"Order Report\", id: 'Laporan Order' },\r\n  clinic_test_date: { en: 'Test Date', id: 'Tanggal Test' },\r\n  clinic_order_date: { en: 'Order Date', id: 'Tanggal Order' },\r\n  clinic_birth_date: { en: 'Birth Date', id: 'Tanggal Lahir' },\r\n  clinic_redeem_date: { en: 'Redeem Date', id: 'Tanggal Redeem' },\r\n  clinic_payment_date: { en: 'Payment Date', id: 'Tanggal Pembayaran' },\r\n  clinic_redeem_by: { en: 'Redeem By', id: 'Redeem Oleh' },\r\n  clinic_redeem_on: { en: 'Redeem On', id: 'Tanggal Redeem' },\r\n  clinic_payment_on: { en: 'Payment On', id: 'Tanggal Pembayaran' },\r\n  clinic_agent_price: { en: 'Agent Price', id: 'Harga Agen' },\r\n  clinic_price: { en: 'Price', id: 'Harga' },\r\n  clinic_redeem_success: { en: 'Redeem successful', id: 'Redeem berhasil' },\r\n  clinic_redeem_confirmation: { en: 'Redeem Confirmation', id: 'Konfirmasi Redeem' },\r\n  clinic_order_detail: { en: 'Order Detail', id: 'Detail Order' },\r\n  clinic_active: { en: 'Clinic active.', id: 'Klinik aktif.' },\r\n  clinic_user_list: { en: 'User List', id: 'Daftar Pengguna' },\r\n  clinic_add_user: { en: \"Add User\", id: 'Tambah Penguna' },\r\n  clinic_regis_sucess: { en: \"Clinic Registration Successful\", id: 'Pendaftaran klinik berhasil' },\r\n  clinic_activation_success: { en: \"Clinic Activation Successful\", id: 'Aktivasi Klinik berhasil' },\r\n  clinic_add_user_success: { en: \"Add Clinic User Successful\", id: 'Tambah pengguna klinik berhasil' },\r\n  clinic_delete_user_success: { en: \"Delete Clinic User Successful\", id: 'Hapus pengguna klinik berhasil' },\r\n  clinic_delete_sucess: { en: 'Delete Clinic Successful', id: 'Hapus klinik berhasil' },\r\n  clinic_logo: { en: 'Clinic Logo', id: 'Logo Klinik' },\r\n  clinic_set_logo: { en: 'Set Clinic Logo', id: 'Set Logo Klinik' },\r\n  clinic_change_logo: { en: 'Change Clinic Logo', id: 'Ganti Logo Klinik' },\r\n  clinic_change_logo_success: { en: 'Change clinic logo successful', id: 'Ganti logo klinik berhasil' },\r\n  clinic_parents: { en: \"Parent Clinic\", id: \"Klinik Induk\" },\r\n  clinic_inactive_confirmation: { en: \"Would you like to make this clinic inactive?\", id: \"Apakah anda ingin membuat klinik ini tidak aktif?\" },\r\n  clinic_inactive: { en: 'Clinic inactive.', id: 'Klinik tidak aktif.' },\r\n}\r\n\r\nexport default clinicText\r\n","\r\nimport Store from '../Store'\r\nimport appText from './app'\r\nimport errorText from './error'\r\nimport commonText from './common'\r\nimport clinicText from './clinic'\r\n\r\n\r\n\r\nconst textInternationalize = {\r\n  ...appText,\r\n  ...errorText,\r\n  ...commonText,\r\n  ...clinicText,\r\n}\r\n\r\nconst FormatText = keyText => {\r\n  let langAvailable = ['en', 'id',]\r\n  let locale = Store.getState().system.locale\r\n  let langUsed = \"\"\r\n\r\n  if (langAvailable.includes(locale.slice(0, 2))) langUsed = locale.slice(0, 2)\r\n  else langUsed = 'en'\r\n  let keyedText = textInternationalize[keyText]\r\n\r\n  if (!keyedText) return keyText\r\n  else return keyedText[langUsed]\r\n}\r\n\r\nexport default FormatText\r\n","\r\nimport Store from '../Store'\r\nimport ServiceUrl from './ServiceUrl'\r\nimport { serviceStart, serviceEnd, dispatchLogout } from '../actions/SystemActions'\r\nimport { resetService } from '../actions/ServiceActions'\r\n// import { setResponse } from '../actions/ResponseActions'\r\nimport { setSnackbar } from '../actions/FeedbackActions'\r\nimport { generateSignature, bodyForSignature } from '../utils/Crypting'\r\nimport FormatText from '../i18n'\r\nimport Config from '../config';\r\n\r\nexport const SendToService = (request, method, serviceCode, urlParams, customHeaders, role, file, onSucceed) => {\r\n  let domain = window.location.origin\r\n  // console.log(\"DOMAIN: \", domain)\r\n  // console.log('CUSTOM HEADERS: ', customHeaders)\r\n  Store.dispatch(serviceStart())\r\n  let state = Store.getState()\r\n  let userInfo = state.userInfo.info\r\n  let aud = state.system.appConstant ? state.system.appConstant.aud : null\r\n  let roleUsed = state.userInfo.roleUsed\r\n  let locale = state.system.locale\r\n  let stateAccessToken = state.userInfo.sessionInfo.accessToken\r\n  let stateKey = state.userInfo.sessionInfo.key\r\n\r\n  let clientId = null\r\n  if (aud) clientId = aud\r\n  if (userInfo.aud) clientId = userInfo.aud\r\n  if (customHeaders) if (customHeaders.clientId) clientId = customHeaders.clientId\r\n\r\n  let name = userInfo.name ? userInfo.name : customHeaders ? customHeaders.name : null\r\n  let email = userInfo.email ? userInfo.email : customHeaders ? customHeaders.email : null\r\n  let phone = userInfo.phone ? userInfo.phone : customHeaders ? customHeaders.phone : null\r\n  let accessToken = stateAccessToken ? stateAccessToken : localStorage.getItem(\"accessToken\") ? localStorage.getItem(\"accessToken\") : null\r\n  let key = stateKey ? stateKey : localStorage.getItem(\"key\") ? localStorage.getItem(\"key\") : null\r\n  let roleToSend = role ? role : roleUsed ? roleUsed : null  // headersContent.role\r\n  let hardcodeHeaders = {\r\n    'access-token': accessToken,\r\n    'role': roleToSend,\r\n    \"gadget-id\": \"mygadgetId\",\r\n  }\r\n  const snackFeed = {\r\n    open: true, severity: \"success\", message: \"Successful\", redirect: '',\r\n    action: false, actionLabel: \"\", position: 'bottom-center', duration: 4000,\r\n  }\r\n  // console.log(\"HAYO CLIENT...: \", clientId)\r\n  // console.log(userInfo.aud)\r\n  if (clientId) hardcodeHeaders['client-id'] = clientId\r\n\r\n  let requestJSON = JSON.stringify(request)\r\n  let oReq = new XMLHttpRequest();\r\n\r\n  // console.log(\"REQUEST URL: \", method, ServiceUrl(serviceCode) + (urlParams ? urlParams : \"\"))\r\n  // console.log('REQUEST BODY: ', request)\r\n\r\n  oReq.open(method, ServiceUrl(serviceCode) + (urlParams ? urlParams : \"\"), true)\r\n\r\n  // oReq.setRequestHeader('Accept-Language', locale)\r\n  oReq.setRequestHeader('gadget-id', \"mygadgetId\")\r\n  if (roleToSend && (serviceCode !== 'login')) oReq.setRequestHeader(\"role\", roleToSend)\r\n  if (clientId) oReq.setRequestHeader('client-id', clientId)\r\n  if (name) oReq.setRequestHeader('name', name)\r\n  if (email) oReq.setRequestHeader('email', email)\r\n  if (phone) oReq.setRequestHeader('phone', phone)\r\n  oReq.setRequestHeader('Content-type', 'application/json')\r\n\r\n  let bodySignature = urlParams ? bodyForSignature(request, method, serviceCode, urlParams) : request\r\n  if ((serviceCode === 'SEND_CLINIC_ACTIVATION')\r\n    || (serviceCode === 'GET_CLINIC_USER')\r\n    || (serviceCode === 'ADD_CLINIC_USER')) bodySignature = request\r\n\r\n  if (key) {\r\n    oReq.setRequestHeader(\"access-token\", accessToken)\r\n    oReq.setRequestHeader('signature', generateSignature(hardcodeHeaders, bodySignature, key))\r\n  }\r\n\r\n  oReq.send(requestJSON)\r\n\r\n  oReq.addEventListener('load', () => {\r\n    let status = oReq.status.toString()\r\n    Store.dispatch(resetService())\r\n    if (oReq.readyState === 4 && status.slice(0, 1) === '2') {\r\n      Store.dispatch(serviceEnd())\r\n      // console.log(\"OPO TOH: \", typeof oReq.responseText)\r\n      let response = {\r\n        headers: {},\r\n        body: oReq.responseText && (oReq.responseText !== 'null') ? JSON.parse(oReq.responseText) : {}\r\n      }\r\n      onSucceed(response)\r\n    }\r\n    else {\r\n      Store.dispatch(serviceEnd())\r\n\r\n      if (serviceCode === 'logout') {\r\n        Store.dispatch(dispatchLogout())\r\n      }\r\n      if (status.slice(0, 1) === '4') {\r\n        const respErr = JSON.parse(oReq.responseText)\r\n        console.log(\"ERROR YA: \", respErr)\r\n        let messageError = respErr.errorDescription ? respErr.errorDescription[locale.slice(0, 2)] : respErr.message ? respErr.message : respErr\r\n        // const responseErr = {\r\n        //   headers: {},\r\n        //   body: {\r\n        //     error: true,\r\n        //     errorDescription: respErr.errorDescription\r\n        //       ? respErr.errorDescription[locale.slice(0, 2)]\r\n        //       : respErr.message ? respErr.message : oReq.responseText\r\n        //   }\r\n        // }\r\n\r\n        if (\r\n          (respErr.error === 'error.auth.securityValidation.tokenNotFound')\r\n          || (respErr.error === 'error.auth.securityValidation.invalidAccessToken')\r\n        ) {\r\n          snackFeed.message = messageError\r\n          snackFeed.severity = \"error\"\r\n          snackFeed.redirect = \"Login\"\r\n          Store.dispatch(setSnackbar(snackFeed))\r\n          setTimeout(() => {\r\n            localStorage.clear()\r\n            Store.dispatch(dispatchLogout())\r\n          }, 2000);\r\n        }\r\n        else if (respErr.error === \"error.auth.securityValidation.emailNotVerified\") {\r\n          // responseErr.body.error = respErr.error\r\n          // const snackFeedback = {\r\n          //   open: true,\r\n          //   message: messageError,\r\n          //   severity: \"warning\",\r\n          //   position: 'top-center',\r\n          //   action: \"SEND_EMAIL_VERIFICATION\",\r\n          //   actionLabel: FormatText('app_send_email_verify')\r\n          // }\r\n          // console.log(\"kesini?\")\r\n          snackFeed.message = messageError\r\n          snackFeed.severity = \"warning\"\r\n          snackFeed.position = 'top-center'\r\n          snackFeed.action = \"SEND_EMAIL_VERIFICATION\"\r\n          snackFeed.actionLabel = FormatText('app_send_email_verify')\r\n          snackFeed.duration = 14000\r\n          Store.dispatch(setSnackbar(snackFeed))\r\n        }\r\n        else if (respErr.error === \"error.auth.securityValidation.phoneNotVerified\") {\r\n          // responseErr.body.error = respErr.error\r\n          // const snackFeedback = {\r\n          //   open: true,\r\n          //   message: messageError,\r\n          //   severity: \"warning\",\r\n          //   position: 'top-center',\r\n          //   action: \"SEND_PHONE_VERIFICATION\",\r\n          //   actionLabel: FormatText('app_send_phone_verify')\r\n          // }\r\n          // console.log(\"kesini?\")\r\n          snackFeed.message = messageError\r\n          snackFeed.severity = \"warning\"\r\n          snackFeed.position = 'top-center'\r\n          snackFeed.action = \"SEND_PHONE_VERIFICATION\"\r\n          snackFeed.actionLabel = FormatText('app_send_phone_verify')\r\n          snackFeed.duration = 14000\r\n          Store.dispatch(setSnackbar(snackFeed))\r\n        }\r\n        else {\r\n          // Store.dispatch(setResponse(responseErr))\r\n          snackFeed.message = JSON.stringify(messageError)\r\n          snackFeed.severity = \"error\"\r\n          Store.dispatch(setSnackbar(snackFeed))\r\n        }\r\n      }\r\n      else {\r\n        // let responseErr = {\r\n        //   headers: {},\r\n        //   body: {\r\n        //     error: true,\r\n        //     errorDescription: oReq.responseText\r\n        //   }\r\n        // }\r\n        // Store.dispatch(setResponse(responseErr))\r\n        snackFeed.message = oReq.responseText\r\n        snackFeed.severity = \"error\"\r\n        Store.dispatch(setSnackbar(snackFeed))\r\n      }\r\n    }\r\n  })\r\n\r\n  const createResponseError = (e, desc) => {\r\n    console.log(\"ERRORKAH? \", desc, JSON.stringify(e))\r\n    // let response = {\r\n    //   headers: {\r\n    //     'statusCode': 400,\r\n    //     'userMessage': \"net::ERR_CONNECTION_TIMED_OUT\",\r\n    //   },\r\n    //   body: {\r\n    //     error: true,\r\n    //     errorDescription: \"net::ERR_CONNECTION_TIMED_OUT\",\r\n    //     ...e\r\n    //   }\r\n    // }\r\n    if (domain === 'http://localhost:3030' || domain === 'http://172.16.10.98:3032') {\r\n      // Store.dispatch(setResponse(response))\r\n      snackFeed.message = \"net::ERR_CONNECTION_TIMED_OUT\"\r\n      snackFeed.severity = \"error\"\r\n      Store.dispatch(setSnackbar(snackFeed))\r\n      Store.dispatch(serviceEnd())\r\n    }\r\n    else {\r\n      // Store.dispatch(setResponse(response))\r\n      snackFeed.message = \"net::ERR_CONNECTION_TIMED_OUT\"\r\n      snackFeed.severity = \"error\"\r\n      Store.dispatch(setSnackbar(snackFeed))\r\n      Store.dispatch(serviceEnd())\r\n      // setTimeout(() => {\r\n      //   // window.location.reload()\r\n      // }, 300)\r\n\r\n    }\r\n  }\r\n\r\n  oReq.onerror = e => createResponseError(e, 'onError')\r\n\r\n  oReq.ontimeout = e => createResponseError(e, 'onTimeout')\r\n}\r\n\r\nexport const sendImageToService = (image, type, blobFile) => {\r\n  const snackFeed = {\r\n    open: true, severity: \"success\", message: \"Successful\", redirect: '',\r\n    action: false, actionLabel: \"\", position: 'bottom-center', duration: 4000,\r\n  }\r\n  // let respErr = {\r\n  //   headers: {\r\n  //     'statusCode': 400,\r\n  //     'userMessage': \"net::ERR_CONNECTION_TIMED_OUT\",\r\n  //   },\r\n  //   body: {\r\n  //     error: true,\r\n  //     errorDescription: \"net::ERR_CONNECTION_TIMED_OUT\",\r\n  //   }\r\n  // }\r\n  return new Promise((resolve, reject) => {\r\n    Store.dispatch(serviceStart())\r\n    const urlConnection = Config.gatewayRepoFile + \"/static-file-manager/insert\";;\r\n    var oReq = new XMLHttpRequest();\r\n    oReq.open(\"POST\", urlConnection, true);\r\n    oReq.addEventListener('load', () => {\r\n      if (oReq.readyState === 4 && oReq.status === 200) {\r\n        const response = JSON.parse(oReq.responseText);\r\n        resolve(response);\r\n        Store.dispatch(serviceEnd())\r\n      }\r\n      else resolve({ type: \"error\", message: \"Something went wrong\", }); Store.dispatch(serviceEnd())\r\n    })\r\n    var blob = blobFile ? blobFile : new Blob([image], { type });\r\n    // console.log(\"BLOB: \", blob)\r\n    oReq.send(blob);\r\n\r\n    oReq.onerror = e => {\r\n      resolve({ type: \"error\", message: \"Something went wrong\", });\r\n      // Store.dispatch(setResponse(respErr))\r\n      // Store.dispatch(serviceEnd())\r\n      snackFeed.message = \"net::ERR_CONNECTION_TIMED_OUT\"\r\n      snackFeed.severity = \"error\"\r\n      Store.dispatch(setSnackbar(snackFeed))\r\n      Store.dispatch(serviceEnd())\r\n    }\r\n\r\n    oReq.ontimeout = e => {\r\n      resolve({ type: \"error\", message: \"Something went wrong\", });\r\n      // Store.dispatch(setResponse(respErr))\r\n      // Store.dispatch(serviceEnd())\r\n      snackFeed.message = \"net::ERR_CONNECTION_TIMED_OUT\"\r\n      snackFeed.severity = \"error\"\r\n      Store.dispatch(setSnackbar(snackFeed))\r\n      Store.dispatch(serviceEnd())\r\n    }\r\n\r\n  })\r\n}","\r\n// Menus with no logged condition\r\nexport const openMenuStructure = [\r\n  {\r\n    label: \"Login\",\r\n    url: \"Login\",\r\n    children: []\r\n  },\r\n  // {\r\n  //   label: \"Generic Input\",\r\n  //   url: \"GenericInput\",\r\n  //   children: []\r\n  // },\r\n  {\r\n    label: \"Register\",\r\n    url: \"Register\",\r\n    children: []\r\n  },\r\n]\r\n\r\n// Menus with logged condition\r\nexport const klinikMenuStructure = [\r\n  {\r\n    label: \"Home\",\r\n    url: \"Home\",\r\n    children: []\r\n  },\r\n  // {\r\n  //   label: \"Generic Input\",\r\n  //   url: \"GenericInput\",\r\n  //   children: []\r\n  // },\r\n  {\r\n    label: \"Order List\",\r\n    url: \"PaxList\",\r\n    children: []\r\n  },\r\n  // {\r\n  //   label: \"Voltras Admin\",\r\n  //   url: \"VoltrasAdmin\",\r\n  //   children: [\r\n  //     { label: \"Create User\", url: \"VCreateUser\", children: [] },\r\n  //     { label: \"User List\", url: \"VUserList\", children: [] },\r\n  //   ]\r\n  // },\r\n  {\r\n    label: \"Logout\",\r\n    url: \"Logout\",\r\n    children: []\r\n  },\r\n  // {\r\n  //   label: \"Home\",\r\n  //   url: \"Home\",\r\n  //   children: []\r\n  // },\r\n  // {\r\n  //   label: \"Product\",\r\n  //   url: \"Product\",\r\n  //   children: [\r\n  //     { label: \"Add New Product\", url: \"AddNewProduct\", children: [] },\r\n  //     { label: \"Manage Product\", url: \"ManageProduct\", children: [] }\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   label: \"Report\",\r\n  //   url: \"Report\",\r\n  //   children: [\r\n  //     { label: \"Booking Summary\", url: \"BookingSummary\", children: [] },\r\n  //     { label: \"Payment Summary\", url: \"PaymentSummary\", children: [] }\r\n  //   ]\r\n  // },\r\n]\r\n\r\nexport const VAMenuStructure = [\r\n  {\r\n    label: \"Home\",\r\n    url: \"Home\",\r\n    children: []\r\n  },\r\n  {\r\n    label: \"Voltras Admin\",\r\n    url: \"VoltrasAdmin\",\r\n    children: [\r\n      { label: \"Create User\", url: \"VCreateUser\", children: [] },\r\n      { label: \"User List\", url: \"VUserList\", children: [] },\r\n    ]\r\n  },\r\n  {\r\n    label: \"Logout\",\r\n    url: \"Logout\",\r\n    children: []\r\n  },\r\n  // {\r\n  //   label: \"Home\",\r\n  //   url: \"Home\",\r\n  //   children: []\r\n  // },\r\n  // {\r\n  //   label: \"Product\",\r\n  //   url: \"Product\",\r\n  //   children: [\r\n  //     { label: \"Add New Product\", url: \"AddNewProduct\", children: [] },\r\n  //     { label: \"Manage Product\", url: \"ManageProduct\", children: [] }\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   label: \"Report\",\r\n  //   url: \"Report\",\r\n  //   children: [\r\n  //     { label: \"Booking Summary\", url: \"BookingSummary\", children: [] },\r\n  //     { label: \"Payment Summary\", url: \"PaymentSummary\", children: [] }\r\n  //   ]\r\n  // },\r\n]\r\n\r\n\r\nexport const almanakMenuStructure = [\r\n  {\r\n    label: \"Home\",\r\n    url: \"Home\",\r\n    children: []\r\n  },\r\n  {\r\n    label: \"Logout\",\r\n    url: \"Logout\",\r\n    children: []\r\n  },\r\n]\r\n\r\nexport const UmrohMenuStructure = [\r\n  {\r\n    label: \"Home\",\r\n    url: \"Home\",\r\n    children: []\r\n  },\r\n  {\r\n    label: \"Product\",\r\n    url: \"Product\",\r\n    children: [\r\n      { label: \"Add New Product\", url: \"AddNewProduct\", children: [] },\r\n      { label: \"Manage Product\", url: \"ManageProduct\", children: [] }\r\n    ]\r\n  },\r\n  {\r\n    label: \"Report\",\r\n    url: \"Report\",\r\n    children: [\r\n      { label: \"Booking Summary\", url: \"BookingSummary\", children: [] },\r\n      { label: \"Payment Summary\", url: \"PaymentSummary\", children: [] }\r\n    ]\r\n  },\r\n  {\r\n    label: \"Logout\",\r\n    url: \"Logout\",\r\n    children: []\r\n  },\r\n]","\r\nimport React from 'react'\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport Config from \"../config\"\r\n\r\nlet urlImage = Config.gatewayRepoFile\r\n\r\nexport const AppStructures = [\r\n  {\r\n    aud: 'voltras-health',\r\n    name: 'Voltras Health',\r\n    domain: ['https://health.voltras.net'],\r\n    title: \"Voltras Health\",\r\n    welcome: \"Clinic Backoffice System\",\r\n    locale: 'id-Id',\r\n    backgroundLogin: urlImage + '/static-file-manager/retrieve?file=health_login_background',\r\n    backgroundApp: urlImage + '/static-file-manager/retrieve?file=health_app_background',\r\n    icon: <LocalHospitalIcon style={{ width: 50, height: 50, }} />,\r\n    openMenu: [\r\n      {\r\n        label: \"Login\",\r\n        url: \"Login\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Register\",\r\n        url: \"Register\",\r\n        children: []\r\n      },\r\n    ],\r\n    loggedMenu: [\r\n      {\r\n        label: \"Home\",\r\n        url: \"Home\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Order List\",\r\n        url: \"PaxList\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Order Report\",\r\n        url: \"KReport\",\r\n        children: [\r\n          {\r\n            label: \"All Order\",\r\n            url: \"KOrderReportAll\",\r\n            children: []\r\n          },\r\n          {\r\n            label: \"Redeemed Order\",\r\n            url: \"OrderReport\",\r\n            children: []\r\n          },]\r\n      },\r\n      {\r\n        label: \"Clinic Management\",\r\n        url: \"KClinicManager\",\r\n        children: [\r\n          {\r\n            label: \"Clinic List\",\r\n            url: \"KClinicList\",\r\n            children: []\r\n          },\r\n          {\r\n            label: \"Clinic Setting\",\r\n            url: \"KSetting\",\r\n            children: []\r\n          },\r\n          {\r\n            label: \"Clinic Registration\",\r\n            url: \"KClinicRegistration\",\r\n            children: []\r\n          },\r\n          // {\r\n          //   label: \"Clinic Scope\",\r\n          //   url: \"ClinicScope\",\r\n          //   children: []\r\n          // },\r\n        ]\r\n      },\r\n      {\r\n        label: \"Generic Configuration\",\r\n        url: \"GenericConfiguration\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Logout\",\r\n        url: \"Logout\",\r\n        children: []\r\n      },\r\n    ],\r\n    requestHeader: {\r\n      'client-id': 'voltras-health',\r\n    }\r\n  }, {\r\n    aud: 'authentication-backoffice',\r\n    name: 'Voltras Backoffice',\r\n    domain: ['http://localhost:3030', 'http://172.16.10.98:3030', 'http://172.16.10.98:3032'],\r\n    title: \"VoltrasBOS\",\r\n    welcome: \"Backoffice System\",\r\n    locale: 'id-Id',\r\n    backgroundLogin: urlImage + '/static-file-manager/retrieve?file=voltras_login_background',\r\n    backgroundApp: '',\r\n    icon: <BuildIcon style={{ width: 50, height: 50, }} />,\r\n    openMenu: [\r\n      {\r\n        label: \"Login\",\r\n        url: \"Login\",\r\n        children: []\r\n      },\r\n      // {\r\n      //   label: \"Generic Input\",\r\n      //   url: \"GenericInput\",\r\n      //   children: []\r\n      // },\r\n      {\r\n        label: \"Register\",\r\n        url: \"Register\",\r\n        children: []\r\n      },\r\n    ],\r\n    loggedMenu: [\r\n      {\r\n        label: \"Home\",\r\n        url: \"Home\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Client Management\",\r\n        url: \"VoltrasClientManagement\",\r\n        children: [\r\n          { label: \"Client List\", url: \"VClientList\", children: [] },\r\n          { label: \"Create Client\", url: \"VCreateClient\", children: [] },\r\n        ]\r\n      },\r\n      {\r\n        label: \"User Management\",\r\n        url: \"VoltrasUserManagement\",\r\n        children: [\r\n          { label: \"User List\", url: \"VUserList\", children: [] },\r\n          { label: \"Create User\", url: \"VCreateUser\", children: [] },\r\n        ]\r\n      },\r\n      {\r\n        label: \"Request Specification\",\r\n        url: \"VoltrasRequestSpesification\",\r\n        children: [\r\n          { label: \"Request List\", url: \"VRequestList\", children: [] }\r\n        ]\r\n      },\r\n      {\r\n        label: \"Logout\",\r\n        url: \"Logout\",\r\n        children: []\r\n      },\r\n    ],\r\n    requestHeader: {\r\n      'client-id': 'authentication-backoffice',\r\n    }\r\n  }, {\r\n    aud: 'dummy-aud',\r\n    name: 'Dummy App',\r\n    domain: ['http://localhost:3030', 'http://172.16.10.98:3032'],\r\n    title: \"DUMMY APP\",\r\n    welcome: \"Dummy App\",\r\n    locale: 'id-Id',\r\n    backgroundLogin: '',\r\n    backgroundApp: '',\r\n    icon: < i className=\"fas fa-mosque\" style={{ width: 50, height: 50, fontSize: 40, }}></i >,\r\n    openMenu: [\r\n      {\r\n        label: \"Login\",\r\n        url: \"Login\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Logout\",\r\n        url: \"Logout\",\r\n        children: []\r\n      },\r\n    ],\r\n    loggedMenu: [\r\n      {\r\n        label: \"Home\",\r\n        url: \"Home\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Product\",\r\n        url: \"Product\",\r\n        children: [\r\n          { label: \"Add New Product\", url: \"AddNewProduct\", children: [] },\r\n          { label: \"Manage Product\", url: \"ManageProduct\", children: [] }\r\n        ]\r\n      },\r\n      {\r\n        label: \"Report\",\r\n        url: \"Report\",\r\n        children: [\r\n          { label: \"Booking Summary\", url: \"BookingSummary\", children: [] },\r\n          { label: \"Payment Summary\", url: \"PaymentSummary\", children: [] }\r\n        ]\r\n      },\r\n      {\r\n        label: \"Logout\",\r\n        url: \"Logout\",\r\n        children: []\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\n\r\nexport const menuCreator = (domain, clientId, roleChoosen) => {\r\n  // console.log(\"MENU CREATOR INIT: \", domain, clientId, roleChoosen)\r\n  let userMenu = []\r\n  let Structures = [...AppStructures]\r\n  Structures.forEach(item => {\r\n    if (item.aud === clientId) {\r\n      let allMenu = item.loggedMenu\r\n\r\n      if (clientId === 'voltras-health') {\r\n        if (roleChoosen === 'member') {\r\n          let arrMenu = allMenu.map(item => {\r\n            if (item.label === 'Clinic Management' || item.label === 'Clinic') {\r\n              item.label = 'Clinic'\r\n              item = {\r\n                ...item,\r\n                children: (item.children.filter(child => child.label !== \"Clinic Setting\"))\r\n              }\r\n            }\r\n            return item\r\n          })\r\n          userMenu = arrMenu.filter(item => item.label !== 'Order List' && item.label !== 'Order Report' && item.label !== \"Generic Configuration\")\r\n        }\r\n        else if (roleChoosen === 'clinic.operator') {\r\n          userMenu = allMenu.filter(\r\n            item => item.label !== 'Order Report' && item.label !== 'Clinic Management' && item.label !== 'Clinic' && item.label !== \"Generic Configuration\"\r\n          )\r\n          // console.log(\"YANG BENER: \", userMenu)\r\n        }\r\n        else if (roleChoosen === 'clinic.admin') {\r\n          let arrMenu = allMenu.map(item => {\r\n            if (item.label === 'Clinic Management' || item.label === 'Clinic') {\r\n              item = {\r\n                ...item,\r\n                children: (item.children.filter(child => child.label === \"Clinic Setting\"))\r\n              }\r\n            }\r\n            return item\r\n          })\r\n          userMenu = arrMenu.filter(item => item.label !== 'Order Report' && item.label !== \"Generic Configuration\")\r\n        }\r\n        else if (roleChoosen === 'biofarma.admin') {\r\n          let arrMenu = allMenu.map(item => {\r\n            if (item.label === 'Clinic Management' || item.label === 'Clinic') {\r\n              item = {\r\n                ...item,\r\n                children: (item.children.filter(child => child.label !== \"Clinic Setting\"))\r\n              }\r\n            }\r\n            return item\r\n          })\r\n          userMenu = arrMenu.filter(item => item.label !== 'Order List' && item.label !== \"Generic Configuration\")\r\n        }\r\n        else {\r\n          let arrMenu = allMenu.map(item => {\r\n            if (item.label === 'Clinic Management' || item.label === 'Clinic') {\r\n              item = {\r\n                ...item,\r\n                children: (item.children.filter(child => child.label !== \"Clinic Setting\"))\r\n              }\r\n            }\r\n            return item\r\n          })\r\n          userMenu = arrMenu\r\n        }\r\n      }\r\n      else userMenu = allMenu\r\n      // console.log(userMenu)\r\n    }\r\n  })\r\n  return userMenu\r\n}\r\n\r\nexport const resetMenu = (modifiedMenu, clientId) => {\r\n  let oldMenu = []\r\n  if (clientId === 'voltras-health') {\r\n    let arrMenu = modifiedMenu.map(item => {\r\n      if (item.label === 'Clinic') item.label = 'Clinic Management'\r\n      return item\r\n    })\r\n    oldMenu = arrMenu\r\n  } else oldMenu = modifiedMenu\r\n  return oldMenu\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport JwtDecoder from 'jwt-decode';\r\n\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole, clearSecondRequest, clearThirdRequest,\r\n} from './actions/ServiceActions'\r\nimport { setResponse } from './actions/ResponseActions'\r\nimport { setUserInfo, setUserSessionInfo, setUserOtpId, setRoleUsed, setResetPasswordCode } from \"./actions/UserInfoActions\";\r\nimport { setUserMenu, setMenuCollapseStatus } from \"./actions/MenuActions\";\r\nimport {\r\n  setPaxList, setPaxDetail, setPaxProduct, setKlinikList, setCityList, setClinikUser,\r\n  setClinikDetail, setClinicRecapt, setMyClinic, setClinicsParents, setParentList\r\n} from \"./actions/PaxListActions\";\r\nimport { setSnackbar, setDialog } from './actions/FeedbackActions'\r\nimport { dispatchLogout, setPopChooseRole, setGoogleParams, setSystemOtpId } from './actions/SystemActions'\r\nimport { setUserList, setUserDetail, setUserFilteredList } from \"./actions/UserListActions\";\r\nimport { setClientList, setClientMessagingList } from \"./actions/ClientListActions\";\r\nimport { setRequestList } from './actions/RequestListAction'\r\nimport { setGenericConfigList, setConfigDetail, setConfigDetailModal } from './actions/GenericConfigurationActions';\r\n\r\nimport { SendToService } from './services/ServiceClient'\r\nimport { openMenuStructure } from \"./utils/MenuStructure\";\r\nimport { menuCreator } from './utils/AppStructures';\r\nimport FormatText from './i18n'\r\n\r\nconst mapStateToProps = state => ({ service: state.service, userInfo: state.userInfo.info, clientList: state.clientList })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  _logout: () => { dispatch(dispatchLogout()); dispatch(setUserMenu(openMenuStructure)) },\r\n  _setGoogleParams: val => dispatch(setGoogleParams(val)), _setResetPasswordCode: val => dispatch(setResetPasswordCode(val)),\r\n  _setClinicRecapt: val => dispatch(setClinicRecapt(val)), _setPopChooseRole: val => dispatch(setPopChooseRole(val)),\r\n  _setResponse: val => dispatch(setResponse(val)), _setUserMenu: val => dispatch(setUserMenu(val)),\r\n  _setMenuCollapseStatus: val => dispatch(setMenuCollapseStatus(val)), _setPaxList: val => dispatch(setPaxList(val)),\r\n  _setPaxDetail: val => dispatch(setPaxDetail(val)), _setPaxProduct: val => dispatch(setPaxProduct(val)),\r\n  _setKlinikList: val => dispatch(setKlinikList(val)), _setUserSessionInfo: val => dispatch(setUserSessionInfo(val)),\r\n  _setUserInfo: val => dispatch(setUserInfo(val)), _setUserOtpId: val => dispatch(setUserOtpId(val)),\r\n  _setUserList: val => dispatch(setUserList(val)), _setUserDetail: val => dispatch(setUserDetail(val)),\r\n  _setClientList: val => dispatch(setClientList(val)), _setSnackbar: val => dispatch(setSnackbar(val)),\r\n  _setDialog: val => dispatch(setDialog(val)), _setUserFilteredList: val => dispatch(setUserFilteredList(val)),\r\n  _setCityList: val => dispatch(setCityList(val)), _setClinicUser: val => dispatch(setClinikUser(val)),\r\n  _setRoleUsed: val => dispatch(setRoleUsed(val)), _clearSecondRequest: () => dispatch(clearSecondRequest()),\r\n  _clearThirdRequest: () => dispatch(clearThirdRequest()), _setClinikDetail: val => dispatch(setClinikDetail(val)),\r\n  _setCompleteRequest: (val) => {\r\n    dispatch(setServiceRequest(val.request)); dispatch(setServiceMethod(val.method)); dispatch(setServiceCode(val.serviceCode));\r\n    dispatch(setServiceParams(val.urlParams)); dispatch(setServiceCustomHeaders(val.customHeaders));\r\n    dispatch(setServiceRole(val.serviceRole)); dispatch(setServiceStatus(\"active\"));\r\n  },\r\n  _setSystemOtpId: val => dispatch(setSystemOtpId(val)), _setMyClinic: val => dispatch(setMyClinic(val)),\r\n  setGenericConfigList: (data) => dispatch(setGenericConfigList(data)),\r\n  setConfigDetail: (val) => dispatch(setConfigDetail(val)),\r\n  setConfigDetailModal: (val) => dispatch(setConfigDetailModal(val)),\r\n  _setClinicParent: val => dispatch(setClinicsParents(val)),\r\n  _setRequestList: val => dispatch(setRequestList(val)),\r\n  _setClientMessagingList: val => dispatch(setClientMessagingList(val)),\r\n  _setParentList: val => dispatch(setParentList(val)),\r\n})\r\n\r\nclass Executor extends Component {\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    const { setGenericConfigList, setConfigDetailModal, setConfigDetail } = this.props;\r\n    let domain = window.location.origin\r\n    let old = this.props.service.status\r\n    let next = nextProps.service.status\r\n    if (old !== next) {\r\n      const { request, method, params, serviceCode, status, customHeaders, role, file } = nextProps.service\r\n      let successSnackbar = { open: true, severity: \"success\", message: \"Successful\", action: false, actionLabel: \"\" }\r\n\r\n      if (serviceCode && (status === \"active\")) {\r\n        SendToService(request, method, serviceCode, params, customHeaders, role, file, response => {\r\n          let phone = this.props.userInfo.phone ? this.props.userInfo.phone : \"\"\r\n          let customHeaders = {\r\n            email: this.props.userInfo.email,\r\n            phone: this.props.userInfo.phone,\r\n            name: this.props.userInfo.name ? this.props.userInfo.name : \"\",\r\n          }\r\n          if (phone) customHeaders.phone = phone\r\n          let requestAllClient = {\r\n            request: {},\r\n            method: \"GET\",\r\n            serviceCode: \"SELECT_ALL_CLIENT\",\r\n            customHeaders,\r\n          }\r\n          let requestAllUser = {\r\n            request: {},\r\n            method: \"GET\",\r\n            serviceCode: \"SELECT_ALL_USER\",\r\n            customHeaders,\r\n          }\r\n          let getClinicUserRequest = {\r\n            request: {},\r\n            method: \"GET\",\r\n            serviceCode: \"GET_CLINIC_USER\",\r\n            customHeaders,\r\n          }\r\n          let healthKlinikRequest = {\r\n            request: {},\r\n            method: \"GET\",\r\n            serviceCode: \"healthKlinik\",\r\n            urlParams: \"\",\r\n            customHeaders,\r\n          }\r\n\r\n          let body = response.body\r\n          this.props._setResponse(response)\r\n          if (!body.error) {\r\n            switch (serviceCode) {\r\n              case \"login\":\r\n                if (body.otpID) {\r\n                  this.props._setUserOtpId(body.otpID)\r\n                }\r\n                else {\r\n                  // accessToken to localStorage\r\n                  localStorage.setItem(\"accessToken\", body.accessToken)\r\n                  localStorage.setItem(\"key\", body.key)\r\n                  localStorage.setItem(\"idToken\", body.idToken)\r\n                  let userInfo = JwtDecoder(body.idToken)\r\n                  let oldRole = userInfo.role\r\n                  let newRole = []\r\n                  if (oldRole.length > 1 && oldRole.includes('member')) newRole = oldRole.filter(item => item !== 'member')\r\n                  else newRole = oldRole\r\n                  userInfo.role = newRole\r\n                  this.props._setUserInfo(userInfo)\r\n                  this.props._setUserSessionInfo(body)\r\n                  let aud = userInfo.aud\r\n                  localStorage.setItem(\"aud\", aud)\r\n                  let role = newRole\r\n                  if (role.length > 1) {\r\n                    this.props._setPopChooseRole(true)\r\n                  }\r\n                  else {\r\n                    localStorage.setItem(\"roleUsed\", role[0])\r\n                    let newMenu = menuCreator(domain, aud, role[0])\r\n                    let obj = {}\r\n                    if (newMenu.length > 0) newMenu.map(item => {\r\n                      return obj = {\r\n                        ...obj,\r\n                        [item.url]: false,\r\n                      }\r\n                    })\r\n                    this.props._setMenuCollapseStatus(obj)\r\n                    this.props._setRoleUsed(role[0])\r\n                    this.props._setUserMenu(newMenu)\r\n                    this.props.history.push('/Home')\r\n                  }\r\n                }\r\n                break;\r\n\r\n              case 'OTP':\r\n                if (body.otpID) {\r\n                  this.props._setUserOtpId(body.otpID)\r\n                }\r\n                else {\r\n                  // accessToken to localStorage\r\n                  localStorage.setItem(\"accessToken\", body.accessToken)\r\n                  localStorage.setItem(\"key\", body.key)\r\n                  localStorage.setItem(\"idToken\", body.idToken)\r\n                  let userInfo = JwtDecoder(body.idToken)\r\n                  let oldRole = userInfo.role\r\n                  let newRole = []\r\n                  if (oldRole.length > 1 && oldRole.includes('member')) newRole = oldRole.filter(item => item !== 'member')\r\n                  else newRole = oldRole\r\n                  userInfo.role = newRole\r\n                  this.props._setUserInfo(userInfo)\r\n                  this.props._setUserSessionInfo(body)\r\n                  let aud = userInfo.aud\r\n                  localStorage.setItem(\"aud\", aud)\r\n                  let role = newRole\r\n                  if (role.length > 1) {\r\n                    this.props._setPopChooseRole(true)\r\n                  }\r\n                  else {\r\n                    localStorage.setItem(\"roleUsed\", role[0])\r\n                    let newMenu = menuCreator(domain, aud, role[0])\r\n                    let obj = {}\r\n                    if (newMenu.length > 0) newMenu.map(item => {\r\n                      return obj = {\r\n                        ...obj,\r\n                        [item.url]: false,\r\n                      }\r\n                    })\r\n                    this.props._setMenuCollapseStatus(obj)\r\n                    this.props._setRoleUsed(role[0])\r\n                    this.props._setUserMenu(newMenu)\r\n                    this.props.history.push('/Home')\r\n                  }\r\n                }\r\n                break;\r\n\r\n              case 'logout':\r\n                this.props._setUserMenu(openMenuStructure)\r\n                localStorage.clear()\r\n                this.props.history.push('/Login')\r\n                this.props._logout()\r\n                break;\r\n\r\n              case \"register\":\r\n                successSnackbar.message = FormatText('app_regis_sucess_msg')\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props.history.push('/Login')\r\n                break;\r\n\r\n              case 'UPDATE_USER_INFO':\r\n                localStorage.setItem(\"idToken\", body.idToken)\r\n                let updatedUserInfo = JwtDecoder(body.idToken)\r\n                this.props._setUserInfo(updatedUserInfo)\r\n                successSnackbar.message = FormatText('app_success_update_account')\r\n                this.props._setSnackbar(successSnackbar)\r\n                break\r\n\r\n              case 'RESET_PASSWORD_REQUEST':\r\n                successSnackbar.message = \"Send email successful\"\r\n                successSnackbar.severity = \"info\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                break;\r\n\r\n              case 'CHANGE_PASSWORD_REQUEST':\r\n                successSnackbar.message = \"Change password successful, proceed to sign in\"\r\n                successSnackbar.severity = \"info\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setResetPasswordCode(null)\r\n                break;\r\n\r\n              case 'SEND_EMAIL_VERIFICATION':\r\n                successSnackbar.message = FormatText('app_email_success_msg')\r\n                successSnackbar.severity = \"info\"\r\n                successSnackbar.position = 'bottom-center'\r\n                successSnackbar.action = false\r\n                this.props._setSnackbar(successSnackbar)\r\n                break;\r\n\r\n              case 'SEND_PHONE_VERIFICATION':\r\n                this.props._setSystemOtpId(body.otpID)\r\n                // successSnackbar.message = FormatText('app_sms_success_msg')\r\n                // successSnackbar.severity = \"info\"\r\n                // successSnackbar.position = 'bottom-center'\r\n                // successSnackbar.action = false\r\n                // this.props._setSnackbar(successSnackbar)\r\n                break;\r\n\r\n              case 'VERIFICATION_CHECK':\r\n                successSnackbar.message = FormatText('app_verification_succes')\r\n                successSnackbar.severity = \"success\"\r\n                successSnackbar.position = 'bottom-center'\r\n                successSnackbar.action = false\r\n                this.props._setSnackbar(successSnackbar)\r\n                break;\r\n\r\n              case 'REQ_AUTH_GOOGLE_PARAMS':\r\n                this.props._setGoogleParams(body)\r\n                break\r\n\r\n              case 'HEALTH_ORDER_DETAIL':\r\n                console.log('RESPONSE PURCHASE DETAIL: ', body)\r\n                if (Array.isArray(body) && body.length > 0) {\r\n                  this.props._setPaxDetail(body)\r\n                  this.props.history.push('/PaxDetail')\r\n                }\r\n                else {\r\n                  successSnackbar.message = \"Order not found\"\r\n                  successSnackbar.severity = 'error'\r\n                  this.props._setSnackbar(successSnackbar)\r\n                }\r\n                break\r\n\r\n              case \"healthOrder\":\r\n                if (Array.isArray(body) && body.length > 0) {\r\n                  body.sort((a, b) => {\r\n                    let x = a.id\r\n                    let y = b.id\r\n                    return y - x\r\n                  })\r\n                  this.props._setPaxList(body)\r\n                }\r\n                else {\r\n                  this.props._setPaxList([])\r\n                  successSnackbar.message = \"Order not found\"\r\n                  successSnackbar.severity = 'error'\r\n                  this.props._setSnackbar(successSnackbar)\r\n                  // this.props._setPaxList([])\r\n                }\r\n                break;\r\n\r\n              case 'PURCHASE_VOUCHER_NUMBER':\r\n                if (Array.isArray(body) && body.length > 0) {\r\n                  this.props._setPaxDetail(body)\r\n                  this.props.history.push('/PaxDetail')\r\n                }\r\n                else {\r\n                  this.props._setPaxList([])\r\n                  successSnackbar.message = \"Order not found\"\r\n                  successSnackbar.severity = 'error'\r\n                  this.props._setSnackbar(successSnackbar)\r\n                }\r\n              break\r\n\r\n              case 'GET_ALL_ORDER':\r\n                this.props._setClinicRecapt(body)\r\n                break\r\n\r\n              case 'RESCHEDULE_ORDER':\r\n                successSnackbar.message = \"Reschedule order successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props.history.push('/PaxList')\r\n                break\r\n\r\n              case \"healthProduct\":\r\n                this.props._setPaxProduct(body)\r\n                if (this.props.service.secondRequest) this.props._setCompleteRequest(this.props.service.secondRequest)\r\n                this.props._clearSecondRequest()\r\n                break;\r\n\r\n              case 'healthKlinik':\r\n                this.props._setKlinikList(body)\r\n                break;\r\n\r\n              case \"SELECT_USER_FULL_INFO\":\r\n                this.props._setUserInfo(body)\r\n                break;\r\n\r\n              case 'SELECT_USER_DETAIL_FULL_INFO':\r\n                this.props._setUserDetail(body)\r\n                this.props._setUserList([body])\r\n                break;\r\n\r\n              case 'SELECT_ALL_USER':\r\n                this.props._setUserList(body.items)\r\n                break;\r\n\r\n              case 'CREATE_BO_USER':\r\n                successSnackbar.message = \"Create User Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(requestAllUser)\r\n                this.props.history.push('/VUserList')\r\n                break;\r\n\r\n              case 'UPDATE_USER_ROLE':\r\n                successSnackbar.message = \"Update User Role Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(requestAllUser)\r\n                this.props._setUserFilteredList(body.items)\r\n                break;\r\n\r\n              case 'DELETE_USER':\r\n                successSnackbar.message = \"Delete User Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(requestAllUser)\r\n                break;\r\n\r\n              case 'UPDATE_BASIC_USER':\r\n                successSnackbar.message = \"Update Basic Info User Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(requestAllUser)\r\n                break;\r\n              case 'UPDATE_TEMPLATE_MESSAGE':\r\n                console.log('update sini template')\r\n                successSnackbar.message = \"Update Client Detail Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(requestAllClient)\r\n                break;\r\n\r\n              case 'SELECT_ALL_MESSAGE':\r\n                let messagingList = body.items\r\n                if (Array.isArray(messagingList) && messagingList.length > 0) {\r\n                  messagingList.sort((a, b) => {\r\n                    let x = a.creationDate\r\n                    let y = b.creationDate\r\n                    return y - x\r\n                  })\r\n                  this.props._setClientMessagingList(messagingList)\r\n                }\r\n                else this.props._setClientMessagingList([])\r\n                break;\r\n\r\n              case 'SELECT_ALL_CLIENT':\r\n                let clientList = body.items\r\n                if (Array.isArray(clientList) && clientList.length > 0) {\r\n                  clientList.sort((a, b) => {\r\n                    let x = a.creationDate\r\n                    let y = b.creationDate\r\n                    return y - x\r\n                  })\r\n                  this.props._setClientList(clientList)\r\n                }\r\n                else this.props._setClientList([])\r\n                break;\r\n              case 'SELECT_ALL_REQUEST':\r\n                let requestList = body.items\r\n                if (Array.isArray(requestList) && requestList.length > 0) {\r\n                  requestList.sort((a, b) => {\r\n                    let x = a.creationDate\r\n                    let y = b.creationDate\r\n                    return y - x\r\n                  })\r\n                  this.props._setRequestList(requestList)\r\n                }\r\n                else this.props._setRequestList([])\r\n                this.props._setCompleteRequest(requestAllClient)\r\n                break;\r\n              case 'CREATE_CLIENT':\r\n                successSnackbar.message = \"Create Client Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(requestAllClient)\r\n                this.props.history.push('/VClientList')\r\n                break;\r\n\r\n              case 'ADD_CLIENT_ROLE':\r\n                successSnackbar.message = \"Add Client Role Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(requestAllClient)\r\n                break;\r\n              case \"UPDATE_CLIENT_DETAIL\":\r\n                successSnackbar.message = \"Update Client Detail Successful\"\r\n                let messagingEdit = this.props.clientList.messagingEdit\r\n                console.log('masuk sini template', messagingEdit)\r\n                if (messagingEdit.updateMessageTemplate) {\r\n                  console.log('masuk sini template')\r\n                  let messageTemplateId = messagingEdit.messagingTemplateId\r\n                  let method = \"PATCH\"\r\n                  let serviceCode = \"UPDATE_TEMPLATE_MESSAGE\"\r\n                  let urlParams = `/clients/${messagingEdit.clientId}/messaging-templates/${messageTemplateId}`\r\n                  let request = {\r\n                    ...messagingEdit\r\n                  }\r\n                  // delete request.clientId\r\n                  delete request.updateMessageTemplate\r\n                  // console.log('request',request)\r\n                  let completeRequests = { request, method, serviceCode, urlParams }\r\n                  this.props._setCompleteRequest(completeRequests)\r\n                  break;\r\n                }\r\n                else {\r\n                  this.props._setSnackbar(successSnackbar)\r\n                  this.props._setCompleteRequest(requestAllClient)\r\n                  break;\r\n                }\r\n              case 'DELETE_CLIENT_ROLE':\r\n                successSnackbar.message = \"Delete Client Role Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(requestAllClient)\r\n                break;\r\n\r\n              case 'DELETE_CLIENT':\r\n                successSnackbar.message = \"Delete Client Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(requestAllClient)\r\n                break;\r\n              case 'ADD_REQUEST_SPESIFICATIONS':\r\n                successSnackbar.message = \"Add Request Spesifiactions Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest({\r\n                  ...requestAllClient,\r\n                  serviceCode: 'SELECT_ALL_REQUEST'\r\n                })\r\n                break;\r\n              case 'UPDATE_REQUEST_SPESIFICATIONS':\r\n                successSnackbar.message = \"Update Request Spesifiactions Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest({\r\n                  ...requestAllClient,\r\n                  serviceCode: 'SELECT_ALL_REQUEST'\r\n                })\r\n                break;\r\n\r\n              case 'GET_CITY_LIST':\r\n                let newArr = []\r\n                if (Array.isArray(body)) {\r\n                  if (body.length > 0) {\r\n                    body.forEach(item => {\r\n                      if (item.name) newArr.push(item)\r\n                      else newArr.push({ city: item })\r\n                    })\r\n                    this.props._setCityList(newArr)\r\n                  }\r\n                }\r\n                if (this.props.service.secondRequest) this.props._setCompleteRequest(this.props.service.secondRequest)\r\n                this.props._clearSecondRequest()\r\n                break;\r\n\r\n              case 'GET_CITY_CLINIC_LIST':\r\n                let newCLinicArr = []\r\n                if (Array.isArray(body)) {\r\n                  if (body.length > 0) {\r\n                    body.forEach(item => {\r\n                      if (item.name) newCLinicArr.push(item)\r\n                      else newCLinicArr.push({ city: item })\r\n                    })\r\n                    this.props._setKlinikList(newCLinicArr)\r\n                  }\r\n                  else this.props._setKlinikList(newCLinicArr)\r\n                }\r\n                break;\r\n\r\n\r\n              case 'CLINIC_REGISTRATION':\r\n                successSnackbar.message = FormatText('clinic_regis_sucess')\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(healthKlinikRequest)\r\n                if (this.props.userInfo.roleUsed !== 'member') this.props.history.push('/KClinicList')\r\n                else this.props.history.push('/Home')\r\n                break;\r\n\r\n              case 'SEND_CLINIC_ACTIVATION':\r\n                successSnackbar.message = FormatText('clinic_activation_success')\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(healthKlinikRequest)\r\n                break;\r\n\r\n              case 'ADD_CLINIC_USER':\r\n                successSnackbar.message = FormatText('clinic_add_user_success')\r\n                this.props._setSnackbar(successSnackbar)\r\n                if (this.props.service.secondRequest) this.props._setCompleteRequest(this.props.service.secondRequest)\r\n                this.props._clearSecondRequest()\r\n                break;\r\n\r\n              case 'DELETE_CLINIC_USER':\r\n                successSnackbar.message = FormatText('clinic_delete_user_success')\r\n                this.props._setSnackbar(successSnackbar)\r\n                if (this.props.service.secondRequest) this.props._setCompleteRequest(this.props.service.secondRequest)\r\n                this.props._clearSecondRequest()\r\n                break;\r\n\r\n              case 'DELETE_CLINIC':\r\n                successSnackbar.message = FormatText('clinic_delete_sucess')\r\n                this.props._setSnackbar(successSnackbar)\r\n                if (this.props.service.secondRequest) this.props._setCompleteRequest(this.props.service.secondRequest)\r\n                this.props._clearSecondRequest()\r\n                break;\r\n\r\n              case 'GET_CLINIC_USER':\r\n                this.props._setClinicUser(body)\r\n                if (!this.props.service.secondRequest) this.props.history.push('/KSetting')\r\n                this.props._clearSecondRequest()\r\n                break;\r\n\r\n              case 'GET_MY_CLINIC':\r\n                if (body[0]) {\r\n                  getClinicUserRequest.urlParams = `/${body[0].clinic_id}`\r\n                  this.props._setCompleteRequest(getClinicUserRequest)\r\n                  this.props._setMyClinic(body[0])\r\n                }\r\n                break;\r\n\r\n              case 'GET_CLINIC_REPORT':\r\n                this.props._setClinicRecapt(body)\r\n                break;\r\n\r\n              case 'ADD_CLINIC_LOGO':\r\n                successSnackbar.message = FormatText('clinic_change_logo_success')\r\n                this.props._setSnackbar(successSnackbar)\r\n                break\r\n\r\n              case 'GENERIC_JSON_CONFIGURATION':\r\n                setGenericConfigList(body);\r\n                break;\r\n              case 'GENERIC_JSON_CONFIGURATION_DETAIL':\r\n                setConfigDetail(body);\r\n                setConfigDetailModal(true);\r\n                break;\r\n              case 'GENERIC_JSON_CONFIGURATION_UPDATE':\r\n                setConfigDetailModal(false);\r\n                // setGenericConfigList(body);\r\n                successSnackbar.message = 'Update Configuration Success'\r\n                successSnackbar.severity = \"success\"\r\n                successSnackbar.position = 'bottom-center'\r\n                successSnackbar.action = false\r\n                this.props._setSnackbar(successSnackbar);\r\n\r\n                // console.log('SECOND REQUEST', this.props.service.secondRequest)\r\n                //Panggil request ulang\r\n                if (this.props.service.secondRequest) this.props._setCompleteRequest(this.props.service.secondRequest)\r\n                this.props._clearSecondRequest()\r\n                break;\r\n\r\n              case 'GET_CLINIC_PARENTS':\r\n                this.props._setClinicParent(body)\r\n                if (this.props.service.secondRequest) this.props._setCompleteRequest(this.props.service.secondRequest)\r\n                this.props._clearSecondRequest()\r\n                break\r\n\r\n              case 'GET_PARENT_LIST':\r\n                this.props._setParentList(body)\r\n\r\n\r\n              default:\r\n                break;\r\n\r\n            }\r\n          }\r\n          else if (serviceCode === 'logout') this.props.history.push('/Login')\r\n        })\r\n      }\r\n    }\r\n  }\r\n  render() { return <div > </div> }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Executor)\r\n","\r\nexport const setClientList = val => {\r\n  return {\r\n    type: 'SET_CLIENT_LIST',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setClientDetail = val => {\r\n  return {\r\n    type: 'SET_CLIENT_DETAIL',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setClientFilteredList = val => {\r\n  return {\r\n    type: 'SET_CLIENT_FILTERED_LIST',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setClientMessagingList = val =>{\r\n  return {\r\n    type:'SET_CLIENT_MESSAGE_LIST',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setClientMessagingEdit = val =>{\r\n  return {\r\n    type:'SET_CLIENT_MESSAGE_EDIT',\r\n    val\r\n  }\r\n}\r\n","export const setRequestList = val => {\r\n    return {\r\n      type: 'SET_REQUEST_LIST',\r\n      val\r\n    }\r\n  }\r\n  \r\n  export const setRequestDetail = val => {\r\n    return {\r\n      type: 'SET_REQUEST_DETAIL',\r\n      val\r\n    }\r\n  }\r\n  \r\n//   export const setClientFilteredList = val => {\r\n//     return {\r\n//       type: 'SET_CLIENT_FILTERED_LIST',\r\n//       val\r\n//     }\r\n//   }","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    response: state.response\r\n  }\r\n}\r\n\r\nclass MySnackBar extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      message: \"\",\r\n      autoHideDuration: 2000,\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    // console.log(\"STATIC PROPS: \", props, state)\r\n    let error = props.response.response\r\n      ? props.response.response.body\r\n        ? props.response.response.body.error\r\n        : false\r\n      : false\r\n    let message = props.response.response\r\n      ? props.response.response.body\r\n        ? props.response.response.body.errorDescription\r\n        : \"\"\r\n      : \"\"\r\n\r\n    if (error) {\r\n      if (error === 'error.auth.securityValidation.invalidAccessToken') {\r\n        localStorage.clear()\r\n        setTimeout(() => {\r\n          props.history.push('/Login')\r\n        }, 2000);\r\n        return { ...state, open: true, message }\r\n      }\r\n      else if (error === \"error.auth.securityValidation.emailNotVerified\") return { ...state, open: false, }\r\n      else if (error === \"error.auth.securityValidation.phoneNotVerified\") return { ...state, open: false, }\r\n      else return { ...state, open: true, message }\r\n    }\r\n\r\n    // Return null to indicate no change to state.\r\n    return null;\r\n  }\r\n\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   let error = nextProps.response.response.body.error\r\n  //   let message = nextProps.response.response.body.errorDescription ? nextProps.response.response.body.errorDescription : \"\"\r\n  //   if (error) {\r\n  //     if (error === 'error.auth.securityValidation.invalidAccessToken') {\r\n  //       this.setState({ ...this.state, open: true, message })\r\n  //       localStorage.clear()\r\n  //       setTimeout(() => {\r\n  //         this.props.history.push('/Login')\r\n  //       }, 2000);\r\n  //     }\r\n  //     else if (error === \"error.auth.securityValidation.emailNotVerified\") this.setState({ ...this.state, open: false, })\r\n  //     else if (error === \"error.auth.securityValidation.phoneNotVerified\") this.setState({ ...this.state, open: false, })\r\n  //     else this.setState({ ...this.state, open: true, message })\r\n  //   }\r\n  //   else {\r\n  //     this.setState({ ...this.state, open: false, })\r\n  //   }\r\n  // }\r\n\r\n  handleClose = () => {\r\n    this.setState({ ...this.state, open: false })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n        <Snackbar open={this.state.open} autoHideDuration={this.state.autoHideDuration} onClose={this.handleClose}>\r\n          <MuiAlert elevation={6} variant=\"filled\" onClose={this.handleClose} severity=\"error\">\r\n            {this.state.message}\r\n          </MuiAlert>\r\n        </Snackbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MySnackBar)\r\n","\r\nimport React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Hidden } from '@material-ui/core';\r\nimport FormatText from '../../i18n'\r\n\r\nconst KlinikHome = ({ ...props }) => {\r\n  const { _setCompleteRequest, _setSecondRequest, history, userInfo, _setVerificationCode, clinic } = props\r\n  const [state, setState] = useState({\r\n    voucherId: '',\r\n    voucherIdErrorMessage: '',\r\n    submitErrorMessage: '',\r\n    disabled: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n    function isMobile() {\r\n      return ((window.innerWidth <= 800) && (window.innerHeight <= 600));\r\n    }\r\n    const { screen } = window\r\n    if (!navigator.xr && isMobile() && screen.orientation && screen.orientation.lock) {\r\n      screen.orientation.lock('landscape');\r\n    }\r\n\r\n    let name = userInfo.info.name ? userInfo.info.name : ''\r\n    let email = userInfo.info.email ? userInfo.info.email : ''\r\n    let phone = userInfo.info.phone ? userInfo.info.phone : ''\r\n    let customHeaders = { email, name }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let roleUsed = userInfo.roleUsed\r\n    setState(prevState => ({ ...prevState, disabled: roleUsed === 'biofarma.admin' ? true : false }))\r\n\r\n    if ((roleUsed === 'clinic.admin') || (roleUsed === 'clinic.operator')) {\r\n      let myClinicRequest = {\r\n        request: {},\r\n        method: \"GET\",\r\n        serviceCode: \"GET_MY_CLINIC\",\r\n        customHeaders,\r\n      }\r\n      _setCompleteRequest(myClinicRequest)\r\n      _setSecondRequest(true)\r\n\r\n    }\r\n  }, [userInfo, _setCompleteRequest, _setSecondRequest])\r\n\r\n  useEffect(() => {\r\n    let name = userInfo.info.name ? userInfo.info.name : ''\r\n    let email = userInfo.info.email ? userInfo.info.email : ''\r\n    let phone = userInfo.info.phone ? userInfo.info.phone : ''\r\n    let verificationCode = userInfo.verificationCode ? userInfo.verificationCode : ''\r\n    let customHeaders = { email, name }\r\n    if (phone) customHeaders = phone\r\n    let request = { redirectURI: \"http://www.alamanak.co.id\", verificationCode }\r\n\r\n    let verificationCheckRequest = {\r\n      request,\r\n      method: \"POST\",\r\n      serviceCode: \"VERIFICATION_CHECK\",\r\n      params: `/email`,\r\n      customHeaders,\r\n    }\r\n    if (verificationCode) {\r\n      _setCompleteRequest(verificationCheckRequest)\r\n      _setVerificationCode(null)\r\n    }\r\n  }, [userInfo, _setCompleteRequest, _setVerificationCode])\r\n\r\n  const handleChange = prop => event => {\r\n    if (prop === 'voucherId') {\r\n      if (event.target.value.length === 0) {\r\n        setState({\r\n          ...state,\r\n          [prop]: event.target.value,\r\n          isError: true,\r\n          voucherIdErrorMessage: \"OrderId must be filled\"\r\n        })\r\n      }\r\n      else {\r\n        setState({\r\n          ...state,\r\n          [prop]: event.target.value,\r\n          isError: false,\r\n          voucherIdErrorMessage: \"\",\r\n          submitErrorMessage: \"\"\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleEnter = event => {\r\n    if (event.which === 13 && event.key === \"Enter\") {\r\n      let orderId = state.voucherId\r\n\r\n      let name = userInfo.info.name ? userInfo.info.name : ''\r\n      let email = userInfo.info.email ? userInfo.info.email : ''\r\n      let phone = userInfo.info.phone ? userInfo.info.phone : ''\r\n      let customHeaders = { email, name }\r\n      if (phone) customHeaders.phone = phone\r\n      if (orderId) {\r\n        let healthOrderRequest = {\r\n          request: {},\r\n          method: \"GET\",\r\n          serviceCode: \"HEALTH_ORDER_DETAIL\",\r\n          params: `/${orderId.toString()}`,\r\n          customHeaders\r\n        }\r\n        _setCompleteRequest(healthOrderRequest)\r\n\r\n      }\r\n      else {\r\n        setState({\r\n          ...state,\r\n          isError: true,\r\n          voucherIdErrorMessage: \"OrderId must be filled\"\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    let orderId = state.voucherId\r\n\r\n    let name = userInfo.info.name ? userInfo.info.name : ''\r\n    let email = userInfo.info.email ? userInfo.info.email : ''\r\n    let phone = userInfo.info.phone ? userInfo.info.phone : ''\r\n    let customHeaders = { email, name }\r\n    if (phone) customHeaders.phone = phone\r\n    if (orderId) {\r\n      let healthOrderRequest = {\r\n        request: {},\r\n        method: \"GET\",\r\n        serviceCode: \"HEALTH_ORDER_DETAIL\",\r\n        params: `/${orderId.toString()}`,\r\n        customHeaders\r\n      }\r\n      _setCompleteRequest(healthOrderRequest)\r\n\r\n    }\r\n    else {\r\n      setState({\r\n        ...state,\r\n        isError: true,\r\n        voucherIdErrorMessage: \"OrderId must be filled\"\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container direction=\"row\" >\r\n      <Hidden xsDown >\r\n        <Grid item sm={state.disabled ? 12 : 7}>\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems='flex-start' style={{ marginTop: 40 }} >\r\n            <Grid item sm={2}> </Grid>\r\n            <Grid item sm={5} style={{ marginTop: 40 }} >\r\n              <Grid >  <Typography variant='h6' color='primary' >{clinic ? clinic.name : \"Clinic Backoffice\"}</Typography>  </Grid>\r\n              <Grid >  <Typography variant='h5' >{FormatText('app_welcome')}</Typography> </Grid>\r\n              <Grid>  <Typography variant='subtitle2' >{userInfo.roleUsed ? userInfo.roleUsed : ''}</Typography> </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Hidden>\r\n      <Grid item xs={12} sm={5}>\r\n        {\r\n          state.disabled\r\n            ? null\r\n            : <Grid container direction=\"row\" justify='flex-start' alignItems='flex-start' style={{ marginTop: 15 }} >\r\n              <Card variant=\"elevation\" >\r\n                <center>\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\" ><b>Order Details</b> </Typography>\r\n                    <Typography variant=\"caption\" style={{ marginBottom: 15 }} >Search by </Typography>\r\n                    <div>\r\n                      <br />\r\n                      <FormControl disabled={state.disabled} fullWidth style={{ marginBottom: 5 }}  >\r\n                        <InputLabel error={state.voucherIdErrorMessage ? true : false} htmlFor=\"standard-voucherId\">Order ID</InputLabel>\r\n                        <Input\r\n                          autoFocus\r\n                          error={state.voucherIdErrorMessage ? true : false}\r\n                          id=\"standard-adornment-voucherId\"\r\n                          type=\"text\"\r\n                          value={state.voucherId}\r\n                          onChange={handleChange('voucherId')}\r\n                          onKeyPress={handleEnter}\r\n                        />\r\n                        {state.voucherIdErrorMessage\r\n                          ? <FormHelperText error id=\"email-helper-text\">{state.voucherIdErrorMessage}</FormHelperText>\r\n                          : null}\r\n                      </FormControl>\r\n                      <br />\r\n                      <br />\r\n\r\n                      <Button\r\n                        disabled={state.disabled}\r\n                        fullWidth\r\n                        style={{ marginBottom: 15 }}\r\n                        onClick={handleSubmit}\r\n                        variant=\"contained\" color=\"primary\"\r\n                      >\r\n                        Search\r\n                      </Button>\r\n\r\n                      {state.submitErrorMessage\r\n                        ? <FormHelperText error id=\"email-helper-text\">{state.submitErrorMessage}</FormHelperText>\r\n                        : null}\r\n\r\n                      <Typography variant=\"caption\">or</Typography>\r\n                      <div>\r\n                        <Link disabled={state.disabled} style={{ marginTop: 15 }} onClick={() => history.push('/QrScreen')}\r\n                          component=\"button\"\r\n                          variant=\"body2\">Use QR Code</Link>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </center>\r\n              </Card>\r\n            </Grid>\r\n        }\r\n\r\n      </Grid>\r\n      <Grid container>\r\n        <div style={{ height: window.screen.height - 350 }} />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default KlinikHome\r\n","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Card from '@material-ui/core/Card';\r\n// import CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid'\r\n// import Input from '@material-ui/core/Input';\r\n// import InputLabel from '@material-ui/core/InputLabel';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\n// import { CircularProgress } from '@material-ui/core';\r\nimport Background from '../../assets/image/backoffice02.jpg'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst VoltrasHome = ({ ...props }) => {\r\n  const classes = useStyles();\r\n  const [state, setstate] = useState({\r\n    userEmail: '',\r\n    roleUsed: '',\r\n  })\r\n\r\n  useEffect(() => {\r\n    setstate(prevState => ({\r\n      ...prevState,\r\n      userEmail: props.userInfo.info.email,\r\n      roleUsed: props.userInfo.roleUsed,\r\n    }))\r\n  }, [props.userInfo.info, props.userInfo.roleUsed])\r\n\r\n  return (\r\n    <div style={{\r\n      backgroundImage: `url(${Background})`,\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundPositionX: 'center',\r\n      height: 525,\r\n      width: 600\r\n    }} >\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Paper className={classes.paper} elevation={0} >\r\n          <Grid container direction='column' justify='flex-start' alignItems='center'  >\r\n            {/* <Grid item xs={12} >\r\n            Hello Voltras\r\n          </Grid>\r\n          <Grid item xs={12} >\r\n            WELCOME\r\n          </Grid> */}\r\n            <Grid item xs={12} >\r\n              <Typography variant='subtitle2' >\r\n                {state.roleUsed}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} >\r\n              {/* <CircularProgress/> */}\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VoltrasHome","\r\nimport React, { Component } from 'react'\r\nimport JwtDecoder from 'jwt-decode';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport KlinikHome from './KlinikHomeScreen'\r\nimport VoltrasHome from './VoltrasHomeScreen'\r\nimport { menuCreator, AppStructures } from \"../../utils/AppStructures\";\r\n\r\nclass HomeScreen extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      voucherId: \"\",\r\n      voucherIdErrorMessage: \"\",\r\n      isError: true,\r\n      submitErrorMessage: \"\",\r\n      isQrShow: false,\r\n      result: 'no result',\r\n      aud: '',\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    let domain = window.location.origin\r\n    const { _setUserMenu, _setMenuCollapseStatus, _setAppConstant, _setUserInfo, _setOpenScreen,\r\n      _setUserSessionInfo, _setRoleUsed, history } = this.props\r\n\r\n    // console.log(\"HOME INI WILL MOUNT...!\", this.props)\r\n    let accessToken = localStorage.getItem('accessToken')\r\n    let idToken = localStorage.getItem('idToken')\r\n    let key = localStorage.getItem('key')\r\n    let aud = localStorage.getItem('aud')\r\n    let roleUsed = localStorage.getItem('roleUsed')\r\n    if (accessToken && idToken && key && aud && roleUsed) {\r\n      this.setState({ ...this.state, aud })\r\n      let app = AppStructures.filter(item => item.aud === aud)\r\n      let newMenu = menuCreator(domain, aud, roleUsed)\r\n      let obj = {}\r\n      if (newMenu.length > 0) newMenu.map(item => {\r\n        return obj = {\r\n          ...obj,\r\n          [item.url]: false,\r\n        }\r\n      })\r\n      document.title = app[0].title\r\n      _setAppConstant(app[0])\r\n      _setMenuCollapseStatus(obj)\r\n      _setUserMenu(newMenu)\r\n      _setUserSessionInfo({ accessToken, key })\r\n      _setUserInfo(JwtDecoder(idToken))\r\n      _setRoleUsed(roleUsed)\r\n      _setOpenScreen(\"Home\")\r\n    }\r\n    else {\r\n      history.push('/Login')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n        {\r\n          this.state.aud\r\n            ? this.state.aud === 'voltras-health'\r\n              ? <KlinikHome { ...this.props } />\r\n              : <VoltrasHome { ...this.props } />\r\n            : null\r\n        }\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HomeScreen","\r\nimport { connect } from 'react-redux'\r\nimport Homes from './HomeScreen'\r\n\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole, setSecondRequest\r\n} from '../../actions/ServiceActions'\r\nimport { setOpenScreen, setAppConstant } from '../../actions/SystemActions'\r\nimport { setPaxList, setPaxDetail } from \"../../actions/PaxListActions\";\r\nimport { setUserSessionInfo, setUserInfo, setRoleUsed, setVerificationCode } from \"../../actions/UserInfoActions\";\r\nimport { setUserMenu, setMenuCollapseStatus } from '../../actions/MenuActions';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    clinic: state.paxList.clinicUser,\r\n    paxList: state.paxList.list,\r\n    detail: state.paxList.detail,\r\n    userInfo: state.userInfo,\r\n    system: state.system,\r\n    menu: state.menu.menuItems,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setUserSessionInfo: val => dispatch(setUserSessionInfo(val)), _setUserInfo: val => dispatch(setUserInfo(val)),\r\n    _setUserMenu: val => dispatch(setUserMenu(val)), _setMenuCollapseStatus: val => dispatch(setMenuCollapseStatus(val)),\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)), _setPaxList: val => dispatch(setPaxList(val)),\r\n    _setPaxDetail: val => dispatch(setPaxDetail(val)), _setRoleUsed: val => dispatch(setRoleUsed(val)),\r\n    _setAppConstant: val => dispatch(setAppConstant(val)), _setVerificationCode: val => dispatch(setVerificationCode(val)),\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.params))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n    _setSecondRequest: val => dispatch(setSecondRequest(val)),\r\n  }\r\n}\r\n\r\nconst HomeScreen = connect(mapStateToProps, mapDispatchToProps)(Homes)\r\n\r\nexport default HomeScreen\r\n","\r\nimport React, { forwardRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide({...props}) {\r\n  \r\n  const handleClose = () => {\r\n    props.handleDialogClose()\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    props.handleDialogSubmit()\r\n    setTimeout(() => {\r\n      props.handleDialogClose()\r\n    }, 50);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{props.dialogTitle}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            {props.dialogContent}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            {props.cancelTitle}\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\" style={{ fontWeight: 'bold', }} >\r\n            {props.submitTitle}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport FormatText from \"../i18n\"\r\n\r\nlet regexEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\nlet regexPhoneId = /^(^\\+62\\s?|^0)(\\d{3,4}-?){2}\\d{3,4}$/      // phone +62 or 08....\r\n// let regexPhoneCountryCode = /^(\\+)[\\d]{6,16}$/    // phone with contry code\r\n// let regexPhone = /^(\\+62)[\\d]{6,16}$/      // phone +62 \r\nlet regexLettersHypenUnderscore = /^([\\.A-Za-z0-9_-]+)$/\r\nlet regexUri = /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*[\\:\\.][a-z0-9]{2,5}(:[0-9]{1,5})?(\\/.*)?$/\r\n// let regexUriPort = /^https?:\\/\\/(?:w{1,3}\\.)?[^\\s.]+(?:\\.[a-z]+)*(?::\\d+)?(?:\\/\\w+(?:-\\w+)*)*(?![^<]*(?:<\\/\\w+>|\\/?>))/\r\nlet regexNumberOnly = /^[0-9]*$/\r\nlet regexStringOnly =/^[a-zA-Z ]*$/\r\nlet regexPath = /^(\\/)?[a-zA-Z]+(\\/.*)?$/\r\n\r\nlet result = {\r\n  error: false,\r\n  errorMessage: '',\r\n}\r\n\r\nexport const FormValidation = (formType, value) => {\r\n  switch (formType) {\r\n    case 'otp':\r\n\r\n      if (!regexNumberOnly.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_otp_must_number')\r\n      }\r\n      else if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_otp_empty')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case \"phone\":\r\n      // if (value.length === 0) {\r\n      //   result.error = true\r\n      //   result.errorMessage = FormatText('err_phone_empty')\r\n      // }\r\n      // else \r\n      if (!regexPhoneId.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_phone_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case \"name\":\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_name_empty')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case 'clinicName':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_clinic_name_empty')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case 'address':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_address_empty')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case \"email\":\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_email_empty')\r\n      }\r\n      else if (!regexEmail.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_email_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case 'password':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_password_empty')\r\n      }\r\n      else if (value.length < 8) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_not_six_char')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case 'confirmPassword':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = \"confirm password must be filled\"\r\n      }\r\n      else if (value.length < 8) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_not_six_char')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case 'clientId':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_clientid_empty')\r\n      }\r\n      else if (!regexLettersHypenUnderscore.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_clientid_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case \"clientName\":\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_clientname_empty')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case 'roleId':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_roleid_empty')\r\n      }\r\n      else if (!regexLettersHypenUnderscore.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_roleid_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case 'initialRole':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_initialrole_empty')\r\n      }\r\n      else if (!regexLettersHypenUnderscore.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_initialrole_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case \"clientType\":\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_clienttype_not_choosen')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case \"profile\":\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_profile_not_choosen')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case \"roleDescription\":\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_description_empty')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n    case \"originUris\":\r\n      if(value.length === 0){\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_uri_empty')\r\n      }\r\n      else if (!regexUri.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_uri_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage=\"\"\r\n      }\r\n      return result\r\n    case \"redirectUris\":\r\n      if(value.length === 0){\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_uri_empty')\r\n      }\r\n      else if (!regexUri.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_uri_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage=\"\"\r\n      }\r\n      return result\r\n    case \"emailSender\":\r\n      if (value.length === 0) {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      else if (!regexEmail.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_email_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n    case \"emailSenderMaskingName\":\r\n\r\n      if(value.length>100){\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_masking_name_100')\r\n      }\r\n      else if (!regexStringOnly.test(value)){\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_masking_name_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n    case \"path\":\r\n      if(value.length === 0){\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_path_empty')\r\n      }\r\n      else if (!regexPath.test(value)){\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_path_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n      case \"urlDestination\":\r\n        if(value.length === 0){\r\n          result.error = true\r\n          result.errorMessage = FormatText('err_uri_empty')\r\n        }\r\n        else if (!regexUri.test(value)) {\r\n          result.error = true\r\n          result.errorMessage = FormatText('err_uri_format')\r\n        }\r\n        else {\r\n          result.error = false\r\n          result.errorMessage=\"\"\r\n        }\r\n        return result\r\n        case \"clientDomain\":\r\n          if(value.length === 0){\r\n            result.error = true\r\n            result.errorMessage = FormatText('err_uri_empty')\r\n          }\r\n          else if (!regexUri.test(value)) {\r\n            result.error = true\r\n            result.errorMessage = FormatText('err_uri_format')\r\n          }\r\n          else {\r\n            result.error = false\r\n            result.errorMessage=\"\"\r\n          }\r\n          return result\r\n    default:\r\n      return result\r\n  }\r\n}\r\n","\r\n/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n\r\n// const customStyle = makeStyles({\r\n//   root: {\r\n//     \"& .MuiFormLabel-root\": {\r\n//       fontSize: \".9rem\"\r\n//     },\r\n//     \"& .MuiOutlinedInput-input\": {\r\n//       padding: \"14px 10px\"\r\n//     },\r\n//     \"& .MuiInputBase-input\": {\r\n//       fontSize: \"14px\"\r\n//     },\r\n\r\n//     \"& .MuiInputLabel-shrink\": {\r\n//       transform: \"translate(0, 1.5px) scale(0.75)\"\r\n//     }\r\n//   }\r\n// });\r\n\r\nexport default function ComboBox({ ...props }) {\r\n\r\n  const { options, optionItem, onPick, id, helperText, label, width, autoFocus, handleInputChange,\r\n    setIndex, freeSolo, clearOnBlur, values, handleFocus, small } = props\r\n\r\n  // const classes = customStyle();\r\n\r\n  const [value, setValue] = React.useState({});\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  // const [disabled, setDisabled] = React.useState(false);\r\n  // const [error, setError] = React.useState(false);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    // console.log(\"DI CLICK?\")\r\n    // if (newValue) {\r\n    let listIndex = setIndex\r\n    setValue(newValue)\r\n    onPick(newValue, listIndex)\r\n    // }\r\n    // else {\r\n    //   setValue({})\r\n    // }\r\n  }\r\n\r\n  const handleInputValueChange = (event, newValue) => {\r\n    // console.log(\"mulai\")\r\n    let listIndex = setIndex\r\n    setInputValue(newValue);\r\n    if (handleInputChange) handleInputChange(newValue, listIndex)\r\n  }\r\n\r\n  const onFocus = () => {\r\n    if (handleFocus) handleFocus()\r\n  }\r\n\r\n  return (\r\n    <Autocomplete\r\n      size={small ? \"small\" : \"medium\"}\r\n      onFocus={onFocus}\r\n      clearOnBlur={clearOnBlur}\r\n      freeSolo={freeSolo}\r\n      autoFocus={autoFocus}\r\n      blurOnSelect\r\n      value={values ? values : value}\r\n      onChange={handleChange}\r\n      inputValue={inputValue}\r\n      onInputChange={handleInputValueChange}\r\n      disabled={false}\r\n      id={id}\r\n      style={{ width: width ? width : '100%' }}\r\n      options={options}\r\n      getOptionLabel={(option) => optionItem ? option[optionItem] ? option[optionItem] : '' : ''}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          id={id}\r\n          autoFocus={autoFocus}\r\n          // className={classes.root}\r\n          error={false}\r\n          helperText={helperText}\r\n          {...params}\r\n          label={label}\r\n          variant='standard'\r\n        // InputLabelProps={{\r\n        //   shrink: notShrink ? false : true,\r\n        // }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","\r\nimport React, { useState, } from 'react';\r\nimport { Grid, Typography, Button, Card, FormControl, FormHelperText, TextField, } from '@material-ui/core';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { FormValidation } from '../../utils/FormValidation';\r\nimport FormatText from '../../i18n';\r\nimport SimpleAutocomplete from '../../components/autocomplete/SimpleAutocomplete';\r\n\r\n\r\nconst GlobalForm = props => {\r\n  const domain = window.location.origin\r\n  const [state, setState] = useState({\r\n    showPassword: false,\r\n    showConfirm: false,\r\n  })\r\n\r\n  const handleFormChange = prop => event => {\r\n    // console.log(prop)\r\n    let value = event.target.value\r\n    let valid = FormValidation(prop, value)\r\n    if (prop === 'confirmPassword') {\r\n      if (state.password !== event.target.value) {\r\n        setState({\r\n          ...state,\r\n          isError: true,\r\n          [prop]: event.target.value,\r\n          [prop + 'ErrorMessage']: FormatText('err_passconfirm_mismatch'),\r\n          submitErrorMessage: ''\r\n        });\r\n      }\r\n      else {\r\n        setState({\r\n          ...state,\r\n          isError: valid.error,\r\n          [prop]: event.target.value,\r\n          [prop + 'ErrorMessage']: valid.errorMessage,\r\n          submitErrorMessage: ''\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      setState({\r\n        ...state,\r\n        isError: valid.error,\r\n        [prop]: event.target.value,\r\n        [prop + 'ErrorMessage']: valid.errorMessage,\r\n        submitErrorMessage: ''\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    let newPassword = state.password\r\n    let confirmNewPassword = state.confirmPassword\r\n    if (newPassword && (newPassword === confirmNewPassword)) {\r\n      let request = { newPassword, confirmNewPassword }\r\n      props.submitChangePassword(request)\r\n    }\r\n    else {\r\n      setState({\r\n        ...state,\r\n        submitErrorMessage: FormatText('err_submit'),\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Card elevation={4} style={{ margin: 20, width: 285 }} >\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n\r\n          {\r\n            domain === 'http://health.voltras.net'\r\n              ? <div></div>\r\n              : domain === 'https://health.voltras.net'\r\n                ? <div></div>\r\n                : domain === 'https://localhost:3030'\r\n                  ? <div></div>\r\n                  : <FormControl style={{ width: '30ch', marginTop: 20 }} >\r\n                    <SimpleAutocomplete\r\n                      label={'App to Login'}\r\n                      options={[{ name: 'Klinik App' }, { name: 'Voltras Back Office' }, { name: 'Almanak' },]}\r\n                      onPick={v => props.handleClient(v)}\r\n                      // notShrink={this.state.clientId ? false : true}\r\n                      optionItem={'name'}\r\n                    />\r\n                  </FormControl>\r\n          }\r\n\r\n          <Typography color='primary' variant=\"h5\" style={{ marginTop: 20, fontWeight: 'bold' }} >{props.formLabel}</Typography>\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleFormChange('password')}\r\n            id=\"standard-pass\"\r\n            label={FormatText('common_new_password')}\r\n            type={state.showPassword ? 'text' : 'password'}\r\n            helperText={state.passwordErrorMessage ? state.passwordErrorMessage : \"\"}\r\n            error={state.passwordErrorMessage ? true : false}\r\n            // fullWidth\r\n            margin='dense'\r\n            // value={state.password}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() => setState({ ...state, showPassword: !state.showPassword })}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleFormChange('confirmPassword')}\r\n            id=\"standard-pass\"\r\n            label={FormatText('app_password_confirmation')}\r\n            type={state.showConfirm ? 'text' : 'password'}\r\n            helperText={state.confirmPasswordErrorMessage ? state.confirmPasswordErrorMessage : \"\"}\r\n            error={state.confirmPasswordErrorMessage ? true : false}\r\n            // fullWidth\r\n            margin='dense'\r\n            // value={state.confirmPassword}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() => setState({ ...state, showConfirm: !state.showConfirm })}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {state.showConfirm ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n\r\n          <br />\r\n          {\r\n            state.submitErrorMessage\r\n              ? <FormHelperText error id=\"email-helper-text\">{state.submitErrorMessage}</FormHelperText>\r\n              : null\r\n          }\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ textTransform: 'none', fontWeight: 'bold', width: 200, marginBottom: 20, marginTop: 10 }}\r\n            onClick={handleSubmit}\r\n          >\r\n            Send\r\n          </Button>\r\n        </Grid>\r\n      </Card>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default GlobalForm\r\n","\r\nimport React from 'react'\r\nimport { RadioGroup, FormControlLabel, Radio, Button, Typography, Card, Grid, FormHelperText, FormControl } from '@material-ui/core';\r\nimport FormatText from '../../i18n';\r\n\r\nconst ChooseRoleCard = props => {\r\n  // console.log('ROLE CARD PROPS: ', props)\r\n  const { classes, onRadioChange, userInfo, state, handleChooseRole, } = props\r\n\r\n  return (\r\n    <Card className={classes} elevation={4}>\r\n      <Grid style={{ marginTop: 30 }} container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n          <Typography variant=\"h5\" color='primary'>\r\n            <b>{FormatText('app_choose_role')}</b>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n          <Typography variant=\"caption\" color='textSecondary' >\r\n            {FormatText('app_choose_role_used')}\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n          <FormControl style={{ margin: 10, marginLeft: 25, }}  >\r\n            <RadioGroup onChange={onRadioChange} >\r\n              {\r\n                userInfo.info.role\r\n                  ? userInfo.info.role.map((item, i) => {\r\n                    return (\r\n                      <FormControlLabel value={item} control={<Radio />} label={item} key={i} />\r\n                    )\r\n                  })\r\n                  : null\r\n              }\r\n            </RadioGroup>\r\n            {\r\n              state.otpErrorMessage\r\n                ? <FormHelperText error id=\"email-helper-text\">{this.state.otpErrorMessage}</FormHelperText>\r\n                : null\r\n            }\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <FormControl>\r\n          <Grid>\r\n            <Button\r\n              onClick={handleChooseRole}\r\n              disabled={state.roleChoosen ? false : true}\r\n              style={{ margin: 10, width: 120 }}\r\n              variant=\"contained\" color=\"primary\">\r\n              {FormatText('app_choose')}\r\n            </Button>\r\n          </Grid>\r\n          {\r\n            state.onLoginErrorMessage\r\n              ? <FormHelperText error id=\"password-helper-text\">{state.onLoginErrorMessage}</FormHelperText>\r\n              : null\r\n          }\r\n        </FormControl>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ChooseRoleCard\r\n","\r\nimport React from 'react'\r\nimport { Button, Typography, Card, Input, Grid, FormHelperText, FormControl } from '@material-ui/core';\r\nimport FormatText from '../../i18n';\r\n\r\nconst InsertOTPCard = props => {\r\n  const { classes, handleCancelOtp, handleResendOtp, state, handleSubmitOtp, handleChange } = props\r\n\r\n  return (\r\n    <Card className={classes} style={{ width: 300 }} elevation={4}>\r\n      <Grid\r\n        style={{ margin: 30 }}\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h5\" color='primary'><b>{FormatText('app_submit_otp')}</b> </Typography>\r\n        <Typography variant=\"caption\" color='textSecondary' >{FormatText('app_submit_otp_text')}</Typography>\r\n        <Typography variant='subtitle2' color='primary' >{state.email}</Typography>\r\n\r\n        <FormControl style={{ margin: 10, width: '12ch', textAlign: 'center' }}  >\r\n          <Input\r\n            autoFocus\r\n            style={{ fontSize: 28, textAlign: 'center' }}\r\n            error={state.otpErrorMessage ? true : false}\r\n            id=\"standard-adornment-otp\"\r\n            type='text'\r\n            onChange={handleChange('otp')}\r\n            value={state.otp}\r\n          />\r\n          {\r\n            state.otpErrorMessage\r\n              ? <FormHelperText error id=\"email-helper-text\">{state.otpErrorMessage}</FormHelperText>\r\n              : null\r\n          }\r\n        </FormControl>\r\n\r\n        <FormControl>\r\n          <Grid>\r\n            <Button onClick={handleCancelOtp} variant=\"outlined\" color=\"primary\" style={{ margin: 10, }}>\r\n              {FormatText('app_cancel')}\r\n            </Button>\r\n            <Button\r\n              onClick={handleSubmitOtp}\r\n              disabled={state.otp ? false : true}\r\n              style={{ margin: 10, }}\r\n              variant=\"contained\"\r\n              color=\"primary\">\r\n              {FormatText('app_submit')}\r\n            </Button>\r\n          </Grid>\r\n          {\r\n            state.onLoginErrorMessage\r\n              ? <FormHelperText error id=\"password-helper-text\">{state.onLoginErrorMessage}</FormHelperText>\r\n              : null\r\n          }\r\n        </FormControl>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Typography variant=\"caption\" color='textSecondary' >{FormatText('app_not_receive_otp')}</Typography>\r\n          <Button\r\n            size='small'\r\n            onClick={handleResendOtp}\r\n            color=\"primary\"\r\n            style={{ textTransform: 'none', fontWeight: 'bold', fontSize: 12 }}\r\n          >\r\n            {FormatText('app_resend_otp')}\r\n          </Button>\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default InsertOTPCard\r\n","\r\nimport React from 'react'\r\nimport { Button } from '@material-ui/core';\r\nimport { useGoogleLogin } from 'react-google-login';\r\n// import FormatText from '../../i18n';\r\n// import { refreshTokenSetup } from '../../utils/GoogleRefreshToken';\r\n\r\nfunction LoginHooks(props) {\r\n  // console.log(\"GOOGLE PROPS: \", props)\r\n  const { client_id, access_type, prompt, response_type, } = props.params\r\n\r\n  const onSuccess = (res) => {\r\n    // console.log('Login Success: currentUser:', res);\r\n    // alert(\r\n    //   `Logged in successfully welcome ${res} 😍. \\n See console for full profile object.`\r\n    // );\r\n    // refreshTokenSetup(res);\r\n    const requestLogin = {\r\n      \"provider\": \"google\",\r\n      \"responseType\": \"token\",\r\n      \"code\": res.code,\r\n      \"redirectURI\": \"http://localhost:3000\",\r\n      \"nonce\": \"\"\r\n    }\r\n    if (res.code) props.handleGoogleLogin(requestLogin)\r\n\r\n  };\r\n\r\n  const onFailure = (res) => {\r\n    console.log('Login failed: res:', res);\r\n    // alert(\r\n    //   `Failed to login. 😢 Please ping this to repo owner twitter.com/sivanesh_fiz`\r\n    // );\r\n  };\r\n\r\n  const { signIn } = useGoogleLogin({\r\n    onSuccess,\r\n    onFailure,\r\n    clientId: client_id,\r\n    isSignedIn: false,\r\n    accessType: access_type,\r\n    responseType: response_type,\r\n    redirectUri: \"http://localhost:3000\",\r\n    prompt,\r\n  });\r\n\r\n  return (\r\n    <Button\r\n      fullWidth={props.fullWidth}\r\n      color='primary'\r\n      size='large'\r\n      onClick={signIn}\r\n      style={{\r\n        width: props.width || 240,\r\n        textTransform: 'none',\r\n        color: 'black'\r\n      }}\r\n      variant='outlined'\r\n      startIcon={<img style={{ width: 24, }} src=\"icons/google.svg\" alt=\"google login\" className=\"icon\" />}\r\n    >\r\n      {/* <img style={{ width: 24, marginRight: 15 }} src=\"icons/google.svg\" alt=\"google login\" className=\"icon\" /> */}\r\n      &nbsp;  {props.buttonText} Google\r\n    </Button>\r\n    // <button onClick={signIn} className=\"button\">\r\n    //   <img src=\"icons/google.svg\" alt=\"google login\" className=\"icon\"></img>\r\n\r\n    //   <span className=\"buttonText\">Sign in with Google</span>\r\n    // </button>\r\n    // <IconButton aria-label=\"google\" onClick={signIn} color='secondary' >\r\n    //   <i style={{ fontSize: 20 }} className={\"fab fa-google\"} />\r\n    // </IconButton>\r\n  )\r\n}\r\n\r\n// const logoutHooks = props => {\r\n\r\n//   const { signOut, loaded } = useGoogleLogout({\r\n//     jsSrc,\r\n//     onFailure,\r\n//     clientId,\r\n//     cookiePolicy,\r\n//     loginHint,\r\n//     hostedDomain,\r\n//     fetchBasicProfile,\r\n//     discoveryDocs,\r\n//     uxMode,\r\n//     redirectUri,\r\n//     scope,\r\n//     accessType,\r\n//     onLogoutSuccess\r\n//   })\r\n//   return (\r\n//     <IconButton aria-label=\"google\" onClick={signIn} color='secondary' >\r\n//       <i style={{ fontSize: 20 }} className={\"fab fa-google\"} />\r\n//     </IconButton>\r\n\r\n//   )\r\n// }\r\n\r\n\r\nexport default LoginHooks;","\r\nimport React from 'react'\r\nimport { IconButton, Grid, Paper, Typography } from '@material-ui/core'\r\nimport { AppStructures } from '../../utils/AppStructures';\r\n\r\nconst ChooseAppCard = ({ ...props }) => {\r\n\r\n  const handleClick = name => e => {\r\n    props.handleClient({ name })\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={1} style={{ width: 300 }} >\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n        <Grid item style={{ marginTop: 20, marginBottom: 10 }}><Typography variant='h6' >Choose Client</Typography> </Grid>\r\n      </Grid>\r\n\r\n      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n        {AppStructures.map((item, i) => {\r\n          return (\r\n            <Grid item style={{ margin: 12, width: 75 }} onClick={handleClick(item.name)} key={i} >\r\n              <IconButton aria-label=\"delete\" color=\"primary\">\r\n                {item.icon}\r\n              </IconButton>\r\n              <center><Typography variant='subtitle2' >{item.name}</Typography> </center>\r\n            </Grid>\r\n          )\r\n        })}\r\n      </Grid>\r\n\r\n      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" style={{ height: 100 }} > </Grid>\r\n\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default ChooseAppCard\r\n","\r\nimport React, { useState, useEffect } from 'react'\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport {\r\n  Button, Typography, Card, CardContent, Grid, IconButton, Input, InputLabel, InputAdornment,\r\n  FormHelperText, FormControl,\r\n} from '@material-ui/core';\r\nimport FormatText from '../../i18n';\r\nimport GoogleLogin from './GoogleLogin'\r\nimport ChooseAppCard from './ChooseAppCard'\r\n\r\nlet regexEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n// let regexPhone = /^(^\\+62\\s?|^0)(\\d{3,4}-?){2}\\d{3,4}$/\r\n\r\n\r\nconst LoginCard = ({ ...props }) => {\r\n  let domain = window.location.origin\r\n  const { handleChange, handleClient, handleGoogleLogin, handleEnter, handleClickShowPassword, handleMouseDownPassword,\r\n    handleSubmit, handleRegister, handleForgotOpen, state, system, history } = props\r\n  const [aud, setAud] = useState(\"\")\r\n  const [showLogin, setShowLogin] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (system.appConstant) {\r\n      setAud(system.appConstant.aud)\r\n    }\r\n  }, [system.appConstant])\r\n\r\n  useEffect(() => {\r\n    if (showLogin === false && state.clientId) setShowLogin(true)\r\n  }, [state.clientId, showLogin])\r\n\r\n  useEffect(() => {\r\n    // return () => {\r\n    // && history.location.pathname === \"any specific path\")\r\n    if (history.action === \"POP\") {\r\n      setShowLogin(false)\r\n      // history.replace(history.location.pathname, /* the new state */);\r\n    }\r\n    // };\r\n  }, [history.action])\r\n\r\n\r\n  useEffect(() => {\r\n    if (aud === 'voltras-health') setShowLogin(true)\r\n  }, [aud])\r\n\r\n  window.onpopstate = e => { }\r\n\r\n  return (\r\n    <div>\r\n      {showLogin ? null : <ChooseAppCard handleClient={handleClient} />}\r\n\r\n      <Card style={{\r\n        display: showLogin ? 'flex' : 'none',\r\n        flexWrap: 'wrap',\r\n        width: 285,\r\n      }} elevation={4}>\r\n        <center>\r\n          <CardContent >\r\n            <Typography color='primary' variant=\"h5\"><b>{FormatText('app_sign_in')}</b> </Typography>\r\n            <div>\r\n              {/* <FormControl style={{ width: '30ch', margin: 7, marginBottom: 20, display: aud === 'voltras-health' ? 'none' : '' }} >\r\n                <SimpleAutocomplete\r\n                  id=\"LoginChooseApp\"\r\n                  label={'App to Login'}\r\n                  options={[{ name: 'Klinik App' }, { name: 'Voltras Back Office' }, { name: 'Almanak' },]}\r\n                  onPick={v => handleClient(v)}\r\n                  notShrink={state.clientId ? false : true}\r\n                  optionItem={'name'}\r\n                />\r\n              </FormControl> */}\r\n              {\r\n                state.clientId === 'voltras-health' || domain === 'https://health.voltras.net'\r\n                  ? <div>\r\n                    {/* <Typography variant=\"caption\">{FormatText('common_with')}</Typography> */}\r\n                    <div style={{ marginBottom: 15, marginTop: 20 }}>\r\n                      <GoogleLogin\r\n                        params={system.googleParams}\r\n                        handleGoogleLogin={handleGoogleLogin}\r\n                        buttonText={FormatText('common_signin_with')}\r\n                      />\r\n                      {/* <IconButton aria-label=\"google\" onClick={handleGoogle}>\r\n                                      <i style={{ fontSize: 20 }} className={\"fab fa-google\"} />\r\n                                    </IconButton>\r\n                                    <IconButton disabled aria-label=\"facebook\">\r\n                                      <FacebookIcon />\r\n                                    </IconButton>\r\n                                    <IconButton disabled aria-label=\"facebook\">\r\n                                      <Twitter />\r\n                                    </IconButton> */}\r\n                    </div>\r\n                    <Typography variant='subtitle2' >{FormatText('common_or')}</Typography>\r\n                  </div>\r\n                  : null\r\n              }\r\n\r\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n                <FormControl style={{ width: '30ch', margin: 7, }} >\r\n                  <InputLabel error={state.emailErrorMessage ? true : false} htmlFor=\"standard-adornment-password\">\r\n                    {FormatText('app_email_or_phone')}\r\n                  </InputLabel>\r\n                  <Input\r\n                    autoFocus\r\n                    autoComplete='on'\r\n                    error={state.emailErrorMessage ? true : false}\r\n                    id=\"standard-adornment-email\"\r\n                    type='text'\r\n                    value={state.email}\r\n                    onChange={handleChange('email')}\r\n                    onKeyPress={handleEnter}\r\n                  />\r\n                  {\r\n                    state.emailErrorMessage\r\n                      ? <FormHelperText error id=\"email-helper-text\">{state.emailErrorMessage}</FormHelperText>\r\n                      : null\r\n                  }\r\n                </FormControl>\r\n              </Grid>\r\n              {\r\n                regexEmail.test(state.email)\r\n                  ? <FormControl style={{ width: '30ch', margin: 7, }} >\r\n                    <InputLabel error={state.passwordErrorMessage ? true : false} htmlFor=\"standard-adornment-password\">\r\n                      {FormatText('app_password')}\r\n                    </InputLabel>\r\n                    <Input\r\n                      error={state.passwordErrorMessage ? true : false}\r\n                      id=\"standard-adornment-password\"\r\n                      type={state.showPassword ? 'text' : 'password'}\r\n                      value={state.password}\r\n                      onChange={handleChange('password')}\r\n                      endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                          >\r\n                            {state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }\r\n                      onKeyPress={handleEnter}\r\n                    />\r\n                    {\r\n                      state.passwordErrorMessage\r\n                        ? <FormHelperText error id=\"password-helper-text\">{state.passwordErrorMessage}</FormHelperText>\r\n                        : null\r\n                    }\r\n                  </FormControl>\r\n                  : null\r\n              }\r\n\r\n            </div>\r\n            {\r\n              regexEmail.test(state.email)\r\n                ? <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-start\" >\r\n                  <Button\r\n                    size='small'\r\n                    color=\"primary\"\r\n                    style={{ textTransform: 'none', fontWeight: 'bold', marginTop: 10 }}\r\n                    onClick={handleForgotOpen}     //{() => setState({ ...state, forgotOpen: true })}\r\n                  >\r\n                    {FormatText('app_forgot_password')}\r\n                  </Button>\r\n                </Grid>\r\n                : null\r\n            }\r\n            <FormControl>\r\n              <Button\r\n                size='large'\r\n                onClick={handleSubmit}\r\n                style={{\r\n                  width: 240,\r\n                  textTransform: 'none',\r\n                  fontWeight: 'bold',\r\n                  marginTop: regexEmail.test(state.email) ? 1 : 25\r\n                }}\r\n                variant=\"contained\" color=\"primary\">\r\n                {FormatText('app_sign_in')}\r\n              </Button>\r\n              {\r\n                state.onLoginErrorMessage\r\n                  ? <FormHelperText error id=\"password-helper-text\">{state.onLoginErrorMessage}</FormHelperText>\r\n                  : null\r\n              }\r\n            </FormControl>\r\n          </CardContent>\r\n\r\n          <div style={{ marginBottom: 15 }}>\r\n            <Typography variant='caption' >{FormatText('app_no_account')}</Typography>\r\n            <Button onClick={handleRegister} color=\"primary\" style={{ textTransform: 'none', fontWeight: 'bold' }} >\r\n              {FormatText('app_sign_up')}\r\n            </Button>\r\n          </div>\r\n        </center>\r\n        <br />\r\n        <br />\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginCard\r\n","\r\nimport React, { Component } from 'react'\r\n// import Twitter from '@material-ui/icons/Twitter';\r\n// import FacebookIcon from '@material-ui/icons/Facebook'\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport { openMenuStructure } from \"../../utils/MenuStructure\";\r\nimport { menuCreator, resetMenu } from '../../utils/AppStructures';\r\nimport { Typography, Grid, Hidden, CircularProgress } from '@material-ui/core';\r\nimport FormatText from '../../i18n';\r\nimport ForgotPasswordDialog from '../../components/dialog/GlobalDialog'\r\nimport ForgotPasswordForm from './ForgotPasswordForm'\r\nimport ChooseRoleCard from './ChooseRoleCard'\r\nimport InsertOTPCard from './InsertOTPCard'\r\nimport LoginCard from './LoginCard'\r\nimport AppMenuConst from '../../utils/AppStructures.json'\r\nimport Config from '../../config'\r\n\r\nlet regexEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\nlet regexPhone = /^(^\\+62\\s?|^0)(\\d{3,4}-?){2}\\d{3,4}$/\r\n\r\nlet urlImage = Config.gatewayRepoFile\r\n\r\nconst AppStructures = [{\r\n  aud: 'authentication-backoffice',\r\n  name: 'Voltras Backoffice',\r\n  domain: ['http://localhost:3030', 'http://172.16.10.98:3030', 'http://172.16.10.98:3032'],\r\n  title: \"VoltrasBOS\",\r\n  welcome: \"Backoffice System\",\r\n  locale: 'id-Id',\r\n  backgroundLogin: urlImage + '/static-file-manager/retrieve?file=voltras_login_background',\r\n  backgroundApp: '',\r\n  icon: <BuildIcon style={{ width: 50, height: 50, }} />,\r\n  openMenu: [\r\n    {\r\n      label: \"Login\",\r\n      url: \"Login\",\r\n      children: []\r\n    },\r\n    // {\r\n    //   label: \"Generic Input\",\r\n    //   url: \"GenericInput\",\r\n    //   children: []\r\n    // },\r\n    {\r\n      label: \"Register\",\r\n      url: \"Register\",\r\n      children: []\r\n    },\r\n  ],\r\n  loggedMenu: [\r\n    {\r\n      label: \"Home\",\r\n      url: \"Home\",\r\n      children: []\r\n    },\r\n    {\r\n      label: \"Client Management\",\r\n      url: \"VoltrasClientManagement\",\r\n      children: [\r\n        { label: \"Client List\", url: \"VClientList\", children: [] },\r\n        { label: \"Create Client\", url: \"VCreateClient\", children: [] },\r\n      ]\r\n    },\r\n    {\r\n      label: \"User Management\",\r\n      url: \"VoltrasUserManagement\",\r\n      children: [\r\n        { label: \"User List\", url: \"VUserList\", children: [] },\r\n        { label: \"Create User\", url: \"VCreateUser\", children: [] },\r\n      ]\r\n    },\r\n    {\r\n      label: \"Request Specification\",\r\n      url: \"VoltrasRequestSpesification\",\r\n      children: [\r\n        { label: \"Request List\", url: \"VRequestList\", children: [] }\r\n      ]\r\n    },\r\n    {\r\n      label: \"Logout\",\r\n      url: \"Logout\",\r\n      children: []\r\n    },\r\n  ],\r\n  requestHeader: {\r\n    'client-id': 'authentication-backoffice',\r\n  }\r\n}, {\r\n  aud: 'voltras-health',\r\n  name: 'Voltras Health',\r\n  domain: ['https://health.voltras.net'],\r\n  title: \"Voltras Health\",\r\n  welcome: \"Clinic Backoffice System\",\r\n  locale: 'id-Id',\r\n  backgroundLogin: urlImage + '/static-file-manager/retrieve?file=health_login_background',\r\n  backgroundApp: urlImage + '/static-file-manager/retrieve?file=health_app_background',\r\n  icon: <LocalHospitalIcon style={{ width: 50, height: 50, }} />,\r\n  openMenu: [\r\n    {\r\n      label: \"Login\",\r\n      url: \"Login\",\r\n      children: []\r\n    },\r\n    {\r\n      label: \"Register\",\r\n      url: \"Register\",\r\n      children: []\r\n    },\r\n  ],\r\n  loggedMenu: [\r\n    {\r\n      label: \"Home\",\r\n      url: \"Home\",\r\n      children: []\r\n    },\r\n    {\r\n      label: \"Order List\",\r\n      url: \"PaxList\",\r\n      children: []\r\n    },\r\n    {\r\n      label: \"Order Report\",\r\n      url: \"KReport\",\r\n      children: [\r\n        {\r\n          label: \"All Order\",\r\n          url: \"KOrderReportAll\",\r\n          children: []\r\n        },\r\n        {\r\n          label: \"Redeemed Order\",\r\n          url: \"OrderReport\",\r\n          children: []\r\n        },]\r\n    },\r\n    {\r\n      label: \"Clinic Management\",\r\n      url: \"KClinicManager\",\r\n      children: [\r\n        {\r\n          label: \"Clinic List\",\r\n          url: \"KClinicList\",\r\n          children: []\r\n        },\r\n        {\r\n          label: \"Clinic Setting\",\r\n          url: \"KSetting\",\r\n          children: []\r\n        },\r\n        {\r\n          label: \"Clinic Registration\",\r\n          url: \"KClinicRegistration\",\r\n          children: []\r\n        },\r\n        // {\r\n        //   label: \"Clinic Scope\",\r\n        //   url: \"ClinicScope\",\r\n        //   children: []\r\n        // },\r\n      ]\r\n    },\r\n    {\r\n      label: \"Generic Configuration\",\r\n      url: \"GenericConfiguration\",\r\n      children: []\r\n    },\r\n    {\r\n      label: \"Logout\",\r\n      url: \"Logout\",\r\n      children: []\r\n    },\r\n  ],\r\n  requestHeader: {\r\n    'client-id': 'voltras-health',\r\n  }\r\n}, {\r\n  aud: 'dummy-aud',\r\n  name: 'Dummy App',\r\n  domain: ['http://localhost:3030', 'http://172.16.10.98:3032'],\r\n  title: \"DUMMY APP\",\r\n  welcome: \"Dummy App\",\r\n  locale: 'id-Id',\r\n  backgroundLogin: '',\r\n  backgroundApp: '',\r\n  icon: < i className=\"fas fa-mosque\" style={{ width: 50, height: 50, fontSize: 40, }}></i >,\r\n  openMenu: [\r\n    {\r\n      label: \"Login\",\r\n      url: \"Login\",\r\n      children: []\r\n    },\r\n    {\r\n      label: \"Logout\",\r\n      url: \"Logout\",\r\n      children: []\r\n    },\r\n  ],\r\n  loggedMenu: [\r\n    {\r\n      label: \"Home\",\r\n      url: \"Home\",\r\n      children: []\r\n    },\r\n    {\r\n      label: \"Product\",\r\n      url: \"Product\",\r\n      children: [\r\n        { label: \"Add New Product\", url: \"AddNewProduct\", children: [] },\r\n        { label: \"Manage Product\", url: \"ManageProduct\", children: [] }\r\n      ]\r\n    },\r\n    {\r\n      label: \"Report\",\r\n      url: \"Report\",\r\n      children: [\r\n        { label: \"Booking Summary\", url: \"BookingSummary\", children: [] },\r\n        { label: \"Payment Summary\", url: \"PaymentSummary\", children: [] }\r\n      ]\r\n    },\r\n    {\r\n      label: \"Logout\",\r\n      url: \"Logout\",\r\n      children: []\r\n    },\r\n  ],\r\n},\r\n]\r\n\r\nclass LoginScreen extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      otp: '',\r\n      otpErrorMessage: '',\r\n      email: '',\r\n      emailErrorMessage: '',\r\n      password: '',\r\n      passwordErrorMessage: '',\r\n      showPassword: false,\r\n      clientId: '',\r\n      clientIdErrorMessage: '',\r\n      onLoginErrorMessage: '',\r\n      isError: true,\r\n      roleChoosen: '',\r\n      forgotOpen: false,\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    let origin = window.location.origin\r\n    this.props._setOpenScreen(\"Login\")\r\n    this.props._setUserMenu(openMenuStructure)\r\n    //TODO: hardcoded app structure must be generic by window.location.origin\r\n    if (this.props.system.appConstant === null) {\r\n      let app = AppStructures.filter(item => item.domain.includes(origin))\r\n      this.props._setAppConstant(app[0] ? app[0] : AppStructures[0])\r\n      // document.title = app[0].title\r\n      resetMenu(app[0] ? app[0].loggedMenu : AppStructures[0].loggedMenu, app[0] ? app[0].aud : AppStructures[0].aud)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props._setOpenScreen(\"Login\")\r\n    let language = navigator.language\r\n    this.props._setLocale(language)\r\n    let clientId = this.props.system.appConstant ? this.props.system.appConstant.aud : null\r\n    let request = {}\r\n    let fullRequest = {\r\n      request,\r\n      serviceMethod: 'GET',\r\n      serviceCode: 'REQ_AUTH_GOOGLE_PARAMS',\r\n      serviceParams: '?redirectURI=http://www.alamanak.co.id',\r\n      customHeaders: { clientId },\r\n    }\r\n    if (clientId) this.props._setCompleteRequest(fullRequest)\r\n    let verificationCode = this.props.userInfo.verificationCode ? this.props.userInfo.verificationCode : ''\r\n    let requestVerify = { redirectURI: \"http://www.alamanak.co.id\", verificationCode }\r\n    // console.log(clientId, verificationCode)\r\n    let verificationCheckRequest = {\r\n      request: requestVerify,\r\n      serviceMethod: \"POST\",\r\n      serviceCode: \"VERIFICATION_CHECK\",\r\n      serviceParams: `/email`,\r\n    }\r\n    if (verificationCode) {\r\n      this.props._setCompleteRequest(verificationCheckRequest)\r\n      this.props._setVerificationCode(null)\r\n    }\r\n  }\r\n\r\n  handleResendOtp = e => {\r\n    let clientId = this.state.clientId\r\n    this.setState({\r\n      ...this.state,\r\n      onLoginErrorMessage: \"\", otp: \"\"\r\n    })\r\n    let request = {\r\n      redirectURI: \"http://www.alamanak.co.id\",\r\n      provider: \"internal\",\r\n      responseType: \"token\",\r\n    }\r\n    let email = this.state.email\r\n    let password = this.state.password\r\n    if (regexEmail.test(email)) {\r\n      request.email = email\r\n      request.password = password\r\n    }\r\n    else request.phone = email\r\n\r\n    localStorage.setItem('email', email)\r\n    this.props._setUserInfo({ email })\r\n    let fullRequest = { request, serviceMethod: 'POST', serviceCode: 'login', customHeaders: { clientId }, }\r\n    this.props._setCompleteRequest(fullRequest)\r\n  }\r\n\r\n  handleSubmitOtp = e => {\r\n    if (this.state.otp) {\r\n      let clientId = this.state.clientId\r\n      this.props._setRequest({})\r\n      this.props._setServiceCode(\"\")\r\n      this.props._setServiceStatus(\"\")\r\n      let challenge = this.state.otp\r\n      let otpID = this.props.userInfo.otpId\r\n      let request = {\r\n        challenge,\r\n        otpID,\r\n        redirectURI: \"http://www.alamanak.co.id\",\r\n      }\r\n      let fullRequest = { request, serviceMethod: 'POST', serviceCode: 'OTP', customHeaders: { clientId }, }\r\n      this.props._setCompleteRequest(fullRequest)\r\n    }\r\n  }\r\n\r\n  handleCancelOtp = () => {\r\n    this.props._setUserOtpId('')\r\n    this.setState({ ...this.state, email: '' })\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    let domain = window.location.origin\r\n    event.preventDefault()\r\n    let clientId = this.state.clientId\r\n    this.props._setRequest({})\r\n    this.props._setServiceCode(\"\")\r\n    this.props._setServiceStatus(\"\")\r\n    if (clientId) {\r\n      if (!this.state.isError) {\r\n        this.setState({\r\n          ...this.state,\r\n          onLoginErrorMessage: \"\"\r\n        })\r\n        let request = {\r\n          redirectURI: \"http://www.alamanak.co.id\",\r\n          provider: \"internal\",\r\n          responseType: \"token\",\r\n        }\r\n        let email = this.state.email\r\n        let password = this.state.password\r\n        if (regexEmail.test(email)) {\r\n          request.email = email\r\n          request.password = password\r\n          localStorage.setItem('email', email)\r\n          this.props._setUserInfo({ email })\r\n        }\r\n        else request.phone = email[0] === '0' ? '+62' + email.slice(1) : email\r\n        // console.log(request)\r\n        let fullRequest = { request, serviceMethod: 'POST', serviceCode: 'login', customHeaders: { clientId }, }\r\n        this.props._setCompleteRequest(fullRequest)\r\n      }\r\n    }\r\n    /**\r\n     * LOGIN WITH REAL DOMAIN\r\n     */\r\n    else if ((domain === 'https://health.voltras.net')) {\r\n      let domainClientId = 'voltras-health'\r\n      if (!this.state.isError) {\r\n        this.setState({\r\n          ...this.state,\r\n          onLoginErrorMessage: \"\"\r\n        })\r\n        let email = this.state.email\r\n        let password = this.state.password\r\n        let loginRequest = {\r\n          redirectURI: \"http://www.alamanak.co.id\",\r\n          provider: \"internal\",\r\n          responseType: \"token\",\r\n        }\r\n        if (regexEmail.test(email)) {\r\n          loginRequest.email = email\r\n          loginRequest.password = password\r\n          localStorage.setItem('email', email)\r\n          this.props._setUserInfo({ email })\r\n        }\r\n        else loginRequest.phone = email[0] === '0' ? '+62' + email.slice(1) : email\r\n\r\n        let fullRequest = { request: loginRequest, serviceMethod: 'POST', serviceCode: 'login', customHeaders: { clientId: domainClientId }, }\r\n        this.props._setCompleteRequest(fullRequest)\r\n      }\r\n    }\r\n    else {\r\n      this.setState({\r\n        ...this.state,\r\n        onLoginErrorMessage: \"App to Login must be chosen\"\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChange = prop => event => {\r\n    if (prop === 'password' && event.target.value.length === 0) {\r\n      this.setState({\r\n        ...this.state,\r\n        [prop]: event.target.value,\r\n        isError: true,\r\n        passwordErrorMessage: FormatText('err_password_empty')\r\n      })\r\n    }\r\n    else if (prop === 'password' && event.target.value.length < 8) {\r\n      this.setState({\r\n        ...this.state,\r\n        [prop]: event.target.value,\r\n        isError: true,\r\n        passwordErrorMessage: FormatText('err_not_six_char')\r\n      })\r\n    }\r\n    else if (prop === 'email') {\r\n      if (\r\n        (regexEmail.test(event.target.value) || regexPhone.test(event.target.value))\r\n        && event.target.value.length > 0\r\n      ) {\r\n        this.setState({\r\n          ...this.state,\r\n          [prop]: event.target.value,\r\n          isError: false,\r\n          emailErrorMessage: ''\r\n        })\r\n      } else if (event.target.value.length === 0) {\r\n        this.setState({\r\n          ...this.state,\r\n          [prop]: event.target.value,\r\n          isError: true,\r\n          emailErrorMessage: FormatText('err_email_phone_empty')\r\n        })\r\n      }\r\n      else {\r\n        this.setState({\r\n          ...this.state,\r\n          [prop]: event.target.value,\r\n          isError: true,\r\n          emailErrorMessage: FormatText('err_email_phone_format')\r\n        })\r\n      }\r\n    }\r\n    else {\r\n      this.setState({\r\n        ...this.state,\r\n        emailErrorMessage: \"\",\r\n        passwordErrorMessage: \"\",\r\n        isError: false,\r\n        [prop]: event.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  handleEnter = event => {\r\n    if (event.which === 13 && event.key === \"Enter\") {\r\n      this.handleSubmit(event)\r\n    }\r\n  }\r\n\r\n  handleClickShowPassword = (event) => {\r\n    this.setState({\r\n      ...this.state,\r\n      showPassword: !this.state.showPassword\r\n    })\r\n  }\r\n\r\n  handleRegister = (event) => {\r\n    event.preventDefault()\r\n    this.props.history.push('/Register')\r\n  }\r\n\r\n  handleClient = value => {\r\n    // console.log(value)\r\n    let client = [\r\n      {\r\n        label: 'Voltras Health',\r\n        clientId: 'voltras-health'\r\n      },\r\n      {\r\n        label: 'Voltras Backoffice',\r\n        clientId: 'authentication-backoffice'\r\n      },\r\n      {\r\n        label: 'Dummy App',\r\n        clientId: 'cerita nya Almanak'\r\n      },\r\n\r\n    ]\r\n    if (value) {\r\n      let clientId = client.filter(item => item.label === value.name)[0].clientId\r\n      // console.log(clientId)\r\n      this.setState({ ...this.state, clientId, onLoginErrorMessage: '' })\r\n    }\r\n  }\r\n\r\n  onRadioChange = e => {\r\n    e.preventDefault()\r\n    // console.log(e.target.value)\r\n    this.setState({\r\n      ...this.state,\r\n      roleChoosen: e.target.value\r\n    })\r\n  }\r\n\r\n  handleChooseRole = () => {\r\n    /**\r\n     * MAJOR CODE FOR ENTERING THE APP\r\n     * 1. Read domain and role choose by user.\r\n     * 2. Choose Homepage and Menu to show.\r\n     */\r\n\r\n    let domain = window.location.origin\r\n    let roleChoosen = this.state.roleChoosen\r\n    let userInfo = this.props.userInfo.info\r\n    let clientId = userInfo.aud\r\n    let newMenu = menuCreator(domain, clientId, roleChoosen)\r\n\r\n    let obj = {}\r\n    if (newMenu.length > 0) newMenu.map(item => {\r\n      return obj = {\r\n        ...obj,\r\n        [item.url]: false,\r\n      }\r\n    })\r\n    this.props._setMenuCollapseStatus(obj)\r\n    this.props._setUserMenu(newMenu)\r\n    this.props._setRoleUsed(roleChoosen)\r\n    localStorage.setItem(\"roleUsed\", roleChoosen)\r\n    this.props._setPopChooseRole(false)\r\n    this.props.history.push('/Home')\r\n  }\r\n\r\n  handleDialogClose = () => this.setState({ ...this.state, forgotOpen: false })\r\n\r\n  handleDialogSubmit = () => {\r\n    // console.log('dialog submit process')\r\n    let domain = window.location.origin\r\n    // event.preventDefault()\r\n    let clientId = this.state.clientId\r\n    this.props._setRequest({})\r\n    this.props._setServiceCode(\"\")\r\n    this.props._setServiceStatus(\"\")\r\n    if (clientId) {\r\n      if (!this.state.isError) {\r\n        this.setState({\r\n          ...this.state,\r\n          onLoginErrorMessage: \"\"\r\n        })\r\n        let request = {\r\n          redirectURI: \"http://www.alamanak.co.id\",\r\n          email: this.state.email\r\n        }\r\n        let fullRequest = { request, serviceMethod: 'POST', serviceCode: 'RESET_PASSWORD_REQUEST', customHeaders: { clientId }, }\r\n        this.props._setCompleteRequest(fullRequest)\r\n\r\n        this.setState({ ...this.state, email: \"\" })\r\n      }\r\n    }\r\n    /**\r\n     * LOGIN WITH REAL DOMAIN\r\n     */\r\n    else if ((domain === 'https://health.voltras.net')) {\r\n      let domainClientId = 'voltras-health'\r\n      if (!this.state.isError) {\r\n        this.setState({ ...this.state, onLoginErrorMessage: \"\" })\r\n        let email = this.state.email\r\n        let request = { email, redirectURI: \"http://www.alamanak.co.id\", }\r\n        let fullRequest = { request, serviceMethod: 'POST', serviceCode: 'RESET_PASSWORD_REQUEST', customHeaders: { clientId: domainClientId } }\r\n        this.props._setCompleteRequest(fullRequest)\r\n\r\n        this.setState({ ...this.state, email: \"\" })\r\n      }\r\n    }\r\n    else {\r\n      this.setState({\r\n        ...this.state,\r\n        onLoginErrorMessage: \"App to Login must be chosen\"\r\n      })\r\n    }\r\n  }\r\n\r\n  submitChangePassword = request => {\r\n    // console.log(\"kesinikah: \", request)\r\n    let domain = window.location.origin\r\n    let clientId = this.state.clientId\r\n    this.props._setRequest({})\r\n    this.props._setServiceCode(\"\")\r\n    this.props._setServiceStatus(\"\")\r\n    if (clientId) {\r\n      request.redirectURI = \"http://www.alamanak.co.id\"\r\n      request.resetPasswordCode = this.props.userInfo.resetPasswordCode\r\n      let fullRequest = { request, serviceMethod: 'POST', serviceCode: 'CHANGE_PASSWORD_REQUEST', customHeaders: { clientId }, }\r\n      this.props._setCompleteRequest(fullRequest)\r\n    }\r\n    /**\r\n     * LOGIN WITH REAL DOMAIN\r\n     */\r\n    else if ((domain === 'https://health.voltras.net')) {\r\n      let domainClientId = 'voltras-health'\r\n      request.redirectURI = \"http://www.alamanak.co.id\"\r\n      request.resetPasswordCode = this.props.userInfo.resetPasswordCode\r\n      let fullRequest = { request, serviceMethod: 'POST', serviceCode: 'CHANGE_PASSWORD_REQUEST', customHeaders: { clientId: domainClientId }, }\r\n      this.props._setCompleteRequest(fullRequest)\r\n    }\r\n    else {\r\n      this.setState({\r\n        ...this.state,\r\n        onLoginErrorMessage: \"App to Login must be chosen\"\r\n      })\r\n    }\r\n  }\r\n\r\n  handleGoogleLogin = request => {\r\n    /*\r\n      Sementara hanya voltras-health yg bisa login by google\r\n    */\r\n    let domainClientId = 'voltras-health'\r\n    let fullRequest = { request, serviceMethod: 'POST', serviceCode: 'login', customHeaders: { clientId: domainClientId }, }\r\n    this.props._setCompleteRequest(fullRequest)\r\n  }\r\n\r\n  handleForgotOpen = () => this.setState({ ...this.state, forgotOpen: true })\r\n\r\n  render() {\r\n    // let domain = window.location.origin\r\n    const { classes, system } = this.props;\r\n    return (\r\n      <div >\r\n        <center>\r\n          <CircularProgress\r\n            style={{ visibility: system.serviceStart && system.openScreen === 'Login' ? \"visible\" : \"hidden\" }}\r\n            color=\"secondary\"\r\n            size={30}\r\n            thickness={5}\r\n          />\r\n        </center>\r\n        <ForgotPasswordDialog\r\n          open={this.state.forgotOpen}\r\n          handleDialogClose={this.handleDialogClose}\r\n          dialogTitle=\"Change password request\"\r\n          dialogContent={`A confirmation email will be sent to: ${this.state.email}`}\r\n          cancelTitle='Cancel'\r\n          submitTitle='Send'\r\n          handleDialogSubmit={this.handleDialogSubmit}\r\n        />\r\n        {\r\n          this.props.userInfo.resetPasswordCode\r\n            ? <ForgotPasswordForm\r\n              formLabel={FormatText('common_change_password')}\r\n              submitChangePassword={this.submitChangePassword}\r\n              state={this.state}\r\n              handleClient={this.handleClient}\r\n            />\r\n            : <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" >\r\n              <Hidden mdDown>\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    width: 600\r\n                  }} >\r\n                  <br />\r\n\r\n                  <div style={{ marginTop: 100 }} >\r\n                    <Typography variant=\"subtitle2\" >\r\n                      {FormatText('app_welcome')}\r\n                    </Typography>\r\n                    <Typography variant=\"h4\" color='primary' >\r\n                      {system.appConstant ? system.appConstant.welcome : \"\"}\r\n                    </Typography>\r\n\r\n                  </div>\r\n                </div>\r\n              </Hidden>\r\n              <div style={{ alignSelf: \"center\", justifySelf: \"center\" }}  >\r\n                <br />\r\n                {this.props.system.popChooseRole\r\n                  ? <ChooseRoleCard\r\n                    onRadioChange={this.onRadioChange}\r\n                    userInfo={this.props.userInfo}\r\n                    state={this.state}\r\n                    handleChooseRole={this.handleChooseRole}\r\n                    classes={classes.root}\r\n                  />\r\n                  : this.props.userInfo.otpId\r\n                    ? <InsertOTPCard\r\n                      classes={classes.root}\r\n                      state={this.state}\r\n                      handleChange={this.handleChange}\r\n                      handleCancelOtp={this.handleCancelOtp}\r\n                      handleSubmitOtp={this.handleSubmitOtp}\r\n                      handleResendOtp={this.handleResendOtp}\r\n                    />\r\n                    : <LoginCard\r\n                      handleChange={this.handleChange}\r\n                      handleClient={this.handleClient}\r\n                      handleGoogleLogin={this.handleGoogleLogin}\r\n                      handleEnter={this.handleEnter}\r\n                      handleClickShowPassword={this.handleClickShowPassword}\r\n                      handleMouseDownPassword={this.handleMouseDownPassword}\r\n                      handleSubmit={this.handleSubmit}\r\n                      handleRegister={this.handleRegister}\r\n                      handleForgotOpen={this.handleForgotOpen}\r\n                      state={this.state}\r\n                      setState={this.setState}\r\n                      // system={this.props.system}\r\n                      {...this.props}\r\n                    />\r\n                }\r\n              </div>\r\n            </Grid>\r\n        }\r\n        <div style={{ height: window.screen.height - 500 }} >\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport const useLoginStyles = (theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: 285,\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    width: '30ch',\r\n  },\r\n});\r\n\r\nexport default LoginScreen","\r\nimport { connect } from 'react-redux'\r\nimport LoginScreen, { useLoginStyles } from './LoginScreen'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { setServiceRequest, setServiceCode, setServiceStatus, setServiceCustomHeaders, setServiceMethod, setServiceParams } from '../../actions/ServiceActions'\r\nimport { setOpenScreen, dispatchLogout, setAppConstant, setPopChooseRole, setLocale } from '../../actions/SystemActions'\r\nimport { setUserInfo, setUserOtpId, setRoleUsed, setVerificationCode } from \"../../actions/UserInfoActions\";\r\nimport { setUserMenu, setMenuCollapseStatus } from \"../../actions/MenuActions\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    system: state.system,\r\n    userInfo: state.userInfo,\r\n    menu: state.menu,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setLocale: val => dispatch(setLocale(val)),\r\n    _setVerificationCode: val => dispatch(setVerificationCode(val)),\r\n    _setServiceMethod: val => dispatch(setServiceMethod(val)),\r\n    _setRequest: val => dispatch(setServiceRequest(val)),\r\n    _setServiceCode: val => dispatch(setServiceCode(val)),\r\n    _setServiceStatus: val => dispatch(setServiceStatus(val)),\r\n    _setServiceCustomHeaders: val => dispatch(setServiceCustomHeaders(val)),\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)),\r\n    _setUserInfo: val => dispatch(setUserInfo(val)),\r\n    _setUserOtpId: val => dispatch(setUserOtpId(val)),\r\n    _setAppConstant: val => dispatch(setAppConstant(val)),\r\n    _setUserMenu: val => dispatch(setUserMenu(val)),\r\n    _setRoleUsed: val => dispatch(setRoleUsed(val)),\r\n    _setMenuCollapseStatus: val => dispatch(setMenuCollapseStatus(val)),\r\n    _dispatchLogout: () => dispatch(dispatchLogout()),\r\n    _setPopChooseRole: val => dispatch(setPopChooseRole(val)),\r\n    _setCompleteRequest: val => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.serviceMethod))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceParams(val.serviceParams))\r\n      dispatch(setServiceStatus(val.serviceStatus || 'active'))\r\n    }\r\n  }\r\n}\r\n\r\nconst Login = connect(mapStateToProps, mapDispatchToProps)(LoginScreen)\r\n\r\nexport default withStyles(useLoginStyles)(Login)","\r\nimport React, { Component } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { FormValidation } from \"../../utils/FormValidation\";\r\nimport FormatText from '../../i18n';\r\nimport GoogleLogin from '../login/GoogleLogin'\r\n\r\nclass RegisterScreen extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      name: null,\r\n      nameErrorMessage: '',\r\n      phone: null,\r\n      phoneErrorMessage: '',\r\n      email: '',\r\n      emailErrorMessage: '',\r\n      password: '',\r\n      passwordErrorMessage: '',\r\n      confirmPassword: \"\",\r\n      confirmPasswordErrorMessage: '',\r\n      showPassword: false,\r\n      showConfirm: false,\r\n      isError: true,\r\n      submitErrorMessage: \"\",\r\n    }\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault()\r\n    const { name, phone, email, password, confirmPassword, isError } = this.state\r\n\r\n    if (name && email && password && confirmPassword && !isError) {\r\n      let registerRequest = { name, email, password, redirectURI: \"http://www.alamanak.co.id\", }\r\n      if (phone) registerRequest.phone = phone[0] === '0' ? '+62' + phone.slice(1) : phone\r\n      this.props._setRequest(registerRequest)\r\n      this.props._setServiceCode(\"register\")\r\n      // set CLient for development only in Live will automatically choosen by domain\r\n      // coment out all on live\r\n      this.props._setServiceCustomHeaders({\r\n        // change clientID here in development\r\n        clientId: 'voltras-health'\r\n      })\r\n      this.props._setServiceStatus(\"active\")\r\n    }\r\n    else {\r\n      this.setState({\r\n        ...this.state,\r\n        isError: true,\r\n        submitErrorMessage: FormatText('err_submit')\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChange = prop => event => {\r\n    let valid = FormValidation(prop, event.target.value)\r\n    if (prop === 'confirmPassword') {\r\n      if (this.state.password !== event.target.value) {\r\n        this.setState({\r\n          ...this.state,\r\n          isError: true,\r\n          [prop]: event.target.value,\r\n          [prop + 'ErrorMessage']: FormatText('password confirmation not match'),\r\n        });\r\n      }\r\n      else {\r\n        this.setState({\r\n          ...this.state,\r\n          isError: false,\r\n          [prop]: event.target.value,\r\n          [prop + 'ErrorMessage']: '',\r\n          submitErrorMessage: \"\",\r\n        });\r\n      }\r\n    }\r\n    else if (prop === 'phone' && !event.target.value) {\r\n      this.setState({\r\n        ...this.state,\r\n        isError: false,\r\n        [prop]: event.target.value,\r\n        [prop + 'ErrorMessage']: '',\r\n        submitErrorMessage: \"\",\r\n      });\r\n    }\r\n    else {\r\n      this.setState({\r\n        ...this.state,\r\n        [prop]: event.target.value,\r\n        [prop + 'ErrorMessage']: valid.errorMessage,\r\n        isError: valid.error,\r\n        submitErrorMessage: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  handleMouseDownPassword(event) {\r\n    event.preventDefault()\r\n  }\r\n\r\n  handleGoogleLogin = request => {\r\n    /*\r\n      Sementara hanya voltras-health yg bisa login by google\r\n    */\r\n    let domainClientId = 'voltras-health'\r\n    let fullRequest = { request, serviceMethod: 'POST', serviceCode: 'login', customHeaders: { clientId: domainClientId }, }\r\n    this.props._setCompleteRequest(fullRequest)\r\n  }\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div >\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n          <Card className={classes.root} elevation={4}>\r\n            <CardContent style={{ width: 320, textAlign: 'center' }}>\r\n              <Typography color='primary' variant=\"h5\" style={{ marginBottom: 15 }} ><b>{FormatText('app_sign_up')}</b> </Typography>\r\n              <Grid container item direction=\"column\" justify=\"center\" alignItems=\"center\" >\r\n\r\n                <GoogleLogin\r\n                  params={this.props.system.googleParams}\r\n                  handleGoogleLogin={this.handleGoogleLogin}\r\n                  buttonText={FormatText('common_signup_with')}\r\n                  width={280}\r\n                />\r\n\r\n                <Typography variant='subtitle2' style={{ marginTop: 20 }} >{FormatText('common_or')}</Typography>\r\n                <FormControl fullWidth style={{ marginBottom: 5 }} >\r\n                  <InputLabel error={this.state.nameErrorMessage ? true : false} htmlFor=\"standard-adornment-password\">\r\n                    {FormatText('app_name')} <span style={{ color: 'red' }}>*</span>\r\n                  </InputLabel>\r\n                  <Input\r\n                    error={this.state.nameErrorMessage ? true : false}\r\n                    id=\"standard-adornment-name\"\r\n                    type='text'\r\n                    onChange={this.handleChange('name')}\r\n                  />\r\n                  {\r\n                    this.state.nameErrorMessage\r\n                      ? <FormHelperText error id=\"name-helper-text\">{this.state.nameErrorMessage}</FormHelperText>\r\n                      : null\r\n                  }\r\n                </FormControl>\r\n\r\n                <FormControl fullWidth style={{ marginBottom: 5 }} >\r\n                  <InputLabel error={this.state.emailErrorMessage ? true : false} htmlFor=\"standard-adornment-password\">\r\n                    {FormatText('app_email')} <span style={{ color: 'red' }}>*</span>\r\n                  </InputLabel>\r\n                  <Input\r\n                    error={this.state.emailErrorMessage ? true : false}\r\n                    id=\"standard-adornment-email\"\r\n                    type='text'\r\n                    onChange={this.handleChange('email')}\r\n                  />\r\n                  {\r\n                    this.state.emailErrorMessage\r\n                      ? <FormHelperText error id=\"email-helper-text\">{this.state.emailErrorMessage}</FormHelperText>\r\n                      : null\r\n                  }\r\n                </FormControl>\r\n\r\n                <FormControl fullWidth style={{ marginBottom: 5 }} >\r\n                  <InputLabel error={this.state.phoneErrorMessage ? true : false} htmlFor=\"standard-adornment-password\">\r\n                    {FormatText('app_phone')}\r\n                  </InputLabel>\r\n                  <Input\r\n                    error={this.state.phoneErrorMessage ? true : false}\r\n                    id=\"standard-adornment-phone\"\r\n                    type='text'\r\n                    onChange={this.handleChange('phone')}\r\n                  />\r\n                  {\r\n                    this.state.phoneErrorMessage\r\n                      ? <FormHelperText error id=\"phone-helper-text\">{this.state.phoneErrorMessage}</FormHelperText>\r\n                      : <FormHelperText id=\"phone-helper-text\">{FormatText('app_not_mandatory')}</FormHelperText>\r\n                  }\r\n                </FormControl>\r\n\r\n                <FormControl fullWidth style={{ marginBottom: 5 }}  >\r\n                  <InputLabel error={this.state.passwordErrorMessage ? true : false} htmlFor=\"standard-adornment-password\">\r\n                    {FormatText('app_password')} <span style={{ color: 'red' }}>*</span>\r\n                  </InputLabel>\r\n                  <Input\r\n                    error={this.state.passwordErrorMessage ? true : false}\r\n                    id=\"standard-adornment-password\"\r\n                    type={this.state.showPassword ? 'text' : 'password'}\r\n                    value={this.state.password}\r\n                    onChange={this.handleChange('password')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={() => this.setState({ ...this.state, showPassword: !this.state.showPassword })}\r\n                          onMouseDown={this.handleMouseDownPassword}\r\n                        >\r\n                          {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                  />\r\n                  {\r\n                    this.state.passwordErrorMessage\r\n                      ? <FormHelperText error id=\"email-helper-text\">{this.state.passwordErrorMessage}</FormHelperText>\r\n                      : null\r\n                  }\r\n                </FormControl>\r\n\r\n                <FormControl fullWidth style={{ marginBottom: 5 }}  >\r\n                  <InputLabel error={this.state.confirmPasswordErrorMessage ? true : false} htmlFor=\"standard-adornment-password\">\r\n                    {FormatText('app_password_confirmation')} <span style={{ color: 'red' }}>*</span>\r\n                  </InputLabel>\r\n                  <Input\r\n                    error={this.state.confirmPasswordErrorMessage ? true : false}\r\n                    id=\"standard-adornment-confirm\"\r\n                    type={this.state.showConfirm ? 'text' : 'password'}\r\n                    onChange={this.handleChange('confirmPassword')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle confirm visibility\"\r\n                          onClick={() => this.setState({ ...this.state, showConfirm: !this.state.showConfirm })}\r\n                          onMouseDown={this.handleMouseDownPassword}\r\n                        >\r\n                          {this.state.showConfirm ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                  />\r\n                  {\r\n                    this.state.confirmPasswordErrorMessage\r\n                      ? <FormHelperText error id=\"email-helper-text\">{this.state.confirmPasswordErrorMessage}</FormHelperText>\r\n                      : null\r\n                  }\r\n                </FormControl>\r\n\r\n                <Button\r\n                  fullWidth\r\n                  onClick={this.handleSubmit}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{ textTransform: 'none', fontWeight: 'bold', marginTop: 20 }}\r\n                >\r\n                  {FormatText('app_sign_up')}\r\n                </Button>\r\n                {\r\n                  this.state.submitErrorMessage\r\n                    ? <FormHelperText error id=\"email-helper-text\">{this.state.submitErrorMessage}</FormHelperText>\r\n                    : null\r\n                }\r\n\r\n              </Grid>\r\n              <Grid>\r\n\r\n                <div style={{ marginTop: 10 }}>\r\n                  <Typography variant='caption' >{FormatText('app_have_account')}</Typography>\r\n                  <Button onClick={() => this.props.history.push('/Login')} color=\"primary\" style={{ textTransform: 'none', fontWeight: 'bold' }} >\r\n                    {FormatText('app_sign_in')}\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport const useLoginStyles = (theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: 10,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    width: '25ch',\r\n  },\r\n});\r\n\r\nexport default RegisterScreen","\r\nimport { connect } from 'react-redux'\r\nimport RegisterScreen, { useLoginStyles } from './RegisterScreen'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceRole, setServiceCustomHeaders,\r\n  setServiceMethod, setServiceParams,\r\n} from '../../actions/ServiceActions'\r\nimport { setOpenScreen } from '../../actions/SystemActions'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    system: state.system,\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setRequest: val => {\r\n      dispatch(setServiceRequest(val))\r\n    },\r\n    _setServiceRole: val => {\r\n      dispatch(setServiceRole(val))\r\n    },\r\n    _setServiceCode: val => {\r\n      dispatch(setServiceCode(val))\r\n    },\r\n    _setServiceStatus: val => {\r\n      dispatch(setServiceStatus(val))\r\n    },\r\n    _setOpenScreen: val => {\r\n      dispatch(setOpenScreen(val))\r\n    },\r\n    _setServiceCustomHeaders: val => dispatch(setServiceCustomHeaders(val)),\r\n    _setCompleteRequest: val => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.serviceMethod))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceParams(val.serviceParams))\r\n      dispatch(setServiceStatus(val.serviceStatus || 'active'))\r\n    }\r\n  }\r\n}\r\n\r\nconst Login = connect(mapStateToProps, mapDispatchToProps)(RegisterScreen)\r\n\r\nexport default withStyles(useLoginStyles)(Login)","\r\n// export const dateNormalizationMilis = (dt) => {\r\n//     const date = new Date(dt);\r\n//     const dateNor = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0).getTime();\r\n//     return dateNor;\r\n// }\r\n\r\nexport const RupiahFormat = (nominal) => {\r\n    let rupiah = (parseInt(nominal).toLocaleString('id', { style: 'currency', currency: 'IDR', minimumFractionDigits: 0 }))\r\n    return rupiah;\r\n}\r\n\r\n\r\nexport const yearFromNowTo10Later = () => {\r\n    const range = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n    const year = new Date().getFullYear();\r\n    const yearRange = range.map((item) => item + year);\r\n    return yearRange;\r\n}\r\n\r\nexport const convertDateyyyymmdd = (date) => {\r\n    const newDate = new Date(date);\r\n    const year = newDate.getFullYear();\r\n    const month = newDate.getMonth() + 1 < 10 ? \"0\" + Number(newDate.getMonth() + 1) : Number(newDate.getMonth() + 1);\r\n    const datenew = newDate.getDate() < 10 ? \"0\" + Number(newDate.getDate()) : Number(newDate.getDate());\r\n    const yyyymmdd = year + \"-\" + month + \"-\" + datenew;\r\n\r\n    return yyyymmdd;\r\n}\r\n\r\nexport const datetoanydaysafter = (date, any) => {\r\n    const newDate = new Date(date);\r\n    const anydaysafter = newDate.getTime() + parseInt(any) * 24 * 60 * 60 * 1000\r\n    return anydaysafter\r\n}\r\n\r\nexport const isDateBeforeNow = date => {\r\n    const newDate = new Date(date)\r\n    const dateNow = new Date()\r\n    let now = new Date(dateNow.getTime())\r\n\r\n    if (newDate < now) return true\r\n    else return false\r\n}\r\n\r\nexport const converDateDDMMYY = (date) => {\r\n    const newDate = new Date(date);\r\n    const year = newDate.getFullYear();\r\n    const month = newDate.getMonth() + 1 < 10 ? \"0\" + Number(newDate.getMonth() + 1) : Number(newDate.getMonth() + 1);\r\n    const datenew = newDate.getDate() < 10 ? \"0\" + Number(newDate.getDate()) : Number(newDate.getDate());\r\n    const ddmmyy = datenew + \"-\" + month + \"-\" + year;\r\n\r\n    return ddmmyy;\r\n}\r\n\r\nexport const convertToMMYY = (date) => {\r\n    const newDate = new Date(date);\r\n    const year = String(newDate.getFullYear());\r\n    const month = newDate.getMonth() + 1 < 10 ? \"0\" + Number(newDate.getMonth() + 1) : Number(newDate.getMonth() + 1);\r\n\r\n    const mmyy = month + \"/\" + year.substr(2, 4);\r\n    return mmyy;\r\n}\r\n\r\nexport const dateTimeConverter = (data) => {\r\n    const date = new Date(data);\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1 < 10 ? \"0\" + Number(date.getMonth() + 1) : Number(date.getMonth() + 1);\r\n    const datenew = date.getDate() < 10 ? \"0\" + Number(date.getDate()) : Number(date.getDate());\r\n\r\n    const hour = date.getHours();\r\n    const minutes = date.getMinutes();\r\n\r\n    const dateTime = datenew + \"-\" + month + \"-\" + year + \", \" + hour + \":\" + minutes;\r\n\r\n    return dateTime;\r\n}\r\n\r\nexport const yyyymmddWithParams = params => {\r\n    let date\r\n    const dateNow = new Date()\r\n    let now = new Date(dateNow.getTime())\r\n    let nextWeek = new Date(dateNow.getTime() + 7 * 24 * 60 * 60 * 1000)\r\n    let lastWeek = new Date(dateNow.getTime() - 7 * 24 * 60 * 60 * 1000)\r\n    let nextYear = new Date(dateNow.getTime() + 366 * 24 * 60 * 60 * 1000)\r\n    switch (params) {\r\n        case 'now':\r\n            return date = convertDateyyyymmdd(now)\r\n        case 'nextWeek':\r\n            return date = convertDateyyyymmdd(nextWeek)\r\n        case 'lastWeek':\r\n            return date = convertDateyyyymmdd(lastWeek)\r\n        case 'nextYear':\r\n            return date = convertDateyyyymmdd(nextYear)\r\n        default:\r\n            return date = 'params not defined'\r\n    }\r\n}\r\n\r\nexport const createUserTypes = types => {\r\n    let result = [\r\n        { value: 'root', label: 'Root' },\r\n        { value: 'admin', label: 'Admin' },\r\n        { value: \"end-user\", label: 'End-User' },\r\n    ]\r\n    if (types === 'AUTHENTICATION_USER') {\r\n        result = [\r\n            { value: \"end-user\", label: 'End-User' },\r\n        ]\r\n    }\r\n    else if (types === 'AUTHENTICATION_ADMIN') {\r\n        result = [\r\n            { value: 'admin', label: 'Admin' },\r\n            { value: \"end-user\", label: 'End-User' },\r\n        ]\r\n    }\r\n    return result\r\n}\r\n\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n    // convert base64 to raw binary data held in a string\r\n    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\r\n    var byteString = atob(dataURI.split(',')[1]);\r\n\r\n    // separate out the mime component\r\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\r\n\r\n    // write the bytes of the string to an ArrayBuffer\r\n    var ab = new ArrayBuffer(byteString.length);\r\n\r\n    // create a view into the buffer\r\n    var ia = new Uint8Array(ab);\r\n\r\n    // set the bytes of the buffer to the correct values\r\n    for (var i = 0; i < byteString.length; i++) {\r\n        ia[i] = byteString.charCodeAt(i);\r\n    }\r\n\r\n    // write the ArrayBuffer to a blob, and you're done\r\n    var blob = new Blob([ab], { type: mimeString });\r\n    return blob;\r\n\r\n}\r\n\r\nexport const resizeImage = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n        var fileLoader = new FileReader(),\r\n            canvas = document.createElement('canvas'),\r\n            context = null,\r\n            imageObj = new Image(),\r\n            blob = null;\r\n\r\n        const max_width = 250;\r\n        const max_height = 200;\r\n\r\n        //create a hidden canvas object we can use to create the new resized image data\r\n        canvas.id = \"hiddenCanvas\";\r\n        canvas.style.visibility = \"hidden\";\r\n        document.body.appendChild(canvas);\r\n\r\n        //get the context to use \r\n        context = canvas.getContext('2d');\r\n\r\n        // check for an image then\r\n        //trigger the file loader to get the data from the image         \r\n        if (file.type.match('image.*')) {\r\n            fileLoader.readAsDataURL(file);\r\n        } else {\r\n            resolve({ message: 'File is not an image' })\r\n            // alert('File is not an image');\r\n        }\r\n\r\n        // setup the file loader onload function\r\n        // once the file loader has the data it passes it to the \r\n        // image object which, once the image has loaded, \r\n        // triggers the images onload function\r\n        fileLoader.onload = function () {\r\n            var data = this.result;\r\n            imageObj.src = data;\r\n        };\r\n\r\n        fileLoader.onabort = function () {\r\n            // alert(\"The upload was aborted.\");\r\n            resolve({ message: 'The upload was aborted.' })\r\n        };\r\n\r\n        fileLoader.onerror = function () {\r\n            // alert(\"An error occured while reading the file.\");\r\n            resolve({ message: 'An error occured while reading the file.' })\r\n        };\r\n\r\n\r\n        // set up the images onload function which clears the hidden canvas context, \r\n        // draws the new image then gets the blob data from it\r\n        imageObj.onload = function () {\r\n\r\n            // Check for empty images\r\n            if (this.width == 0 || this.height == 0) {\r\n                // alert('Image is empty');\r\n                resolve({ message: 'Image is empty.' })\r\n            } else {\r\n\r\n                var iw = this.width;\r\n                var ih = this.height;\r\n                var scale = Math.min((max_width / iw), (max_height / ih));\r\n                var iwScaled = iw * scale;\r\n                var ihScaled = ih * scale;\r\n                canvas.width = iwScaled;\r\n                canvas.height = ihScaled;\r\n                //         ctx.drawImage(img, 0, 0, iwScaled, ihScaled);\r\n\r\n                context.clearRect(0, 0, iwScaled, ihScaled);\r\n                context.drawImage(imageObj, 0, 0, this.width, this.height, 0, 0, iwScaled, ihScaled);\r\n\r\n                //dataURItoBlob function available here:\r\n                // http://stackoverflow.com/questions/12168909/blob-from-dataurl\r\n                // add ')' at the end of this function SO dont allow to update it without a 6 character edit\r\n                blob = dataURItoBlob(canvas.toDataURL(imageObj));\r\n\r\n                //pass this blob to your upload function\r\n                // upload(blob);\r\n                resolve({\r\n                    // binary: byteArr,\r\n                    // type: fileType,\r\n                    message: null,\r\n                    blobUrl: createBlobFromBase64(canvas.toDataURL(imageObj)),\r\n                    file: blob\r\n                });\r\n            }\r\n        };\r\n\r\n        imageObj.onabort = function () {\r\n            // alert(\"Image load was aborted.\");\r\n            resolve({ message: 'The upload was aborted.' })\r\n        };\r\n\r\n        imageObj.onerror = function () {\r\n            // alert(\"An error occured while loading image.\");\r\n            resolve({ message: 'An error occured while loading image.' })\r\n        };\r\n    })\r\n}\r\n\r\n\r\n// export const base64ToBinary = (base64) => {\r\n//     const data = base64.split(',')[1];\r\n//     // console.log(\"ISIS DARA\", data);\r\n//     var binArray = []\r\n//     let datEncode = \"\";\r\n\r\n//     for (let i = 0; i < data.length; i++) {\r\n//         binArray.push(data[i].charCodeAt(0).toString(2));\r\n//     }\r\n//     for (let j = 0; j < binArray.length; j++) {\r\n//         var pad = padding_left(binArray[j], '0', 8);\r\n//         datEncode += pad + ' ';\r\n//     }\r\n//     function padding_left(s, c, n) {\r\n//         if (!s || !c || s.length >= n) {\r\n//             return s;\r\n//         }\r\n//         var max = (n - s.length) / c.length;\r\n//         for (var i = 0; i < max; i++) {\r\n//             s = c + s;\r\n//         } return s;\r\n//     }\r\n//     // console.log(binArray);\r\n\r\n//     return binArray;\r\n// }\r\n\r\nexport const createBlobFromBase64 = (file) => {\r\n    var byteString = atob(file.split(',')[1]);\r\n    var ab = new ArrayBuffer(byteString.length);\r\n    var ia = new Uint8Array(ab);\r\n\r\n    for (var i = 0; i < byteString.length; i++) {\r\n        ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    const fileType = (file.split(',')[0]).split(';')[0].split(':')[1];\r\n    const data = new Blob([ab], { type: fileType });\r\n    var blobUrl = URL.createObjectURL(data);\r\n    return blobUrl;\r\n}\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport MaterialTable from 'material-table';\r\nimport ReactExport from 'react-data-export';\r\nimport { yyyymmddWithParams, convertDateyyyymmdd } from \"../../../utils/utils\";\r\nimport FormatText from '../../../i18n';\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n\r\nlet from = yyyymmddWithParams('lastWeek')\r\nlet to = yyyymmddWithParams('nextYear')\r\n\r\nconst dateNow = new Date()\r\nlet lastWeek = new Date(dateNow.getTime() - 7 * 24 * 60 * 60 * 1000)\r\nlet nextWeek = new Date(dateNow.getTime() + 7 * 24 * 60 * 60 * 1000)\r\n// let nextYear = new Date(dateNow.getTime() + 366 * 24 * 60 * 60 * 1000)\r\n\r\nconst datasetCreator = dataToProcess => {\r\n  let columns = [\r\n    { title: \"OrderID\", width: { wch: 7 } },\r\n    { title: \"Order Date\", width: { wch: 12 } },\r\n    { title: \"Name\", width: { wch: 20 } },\r\n    { title: \"Birth Date\", width: { wch: 12 } },\r\n    { title: \"Status\", width: { wch: 12 } },\r\n    { title: \"Clinic\", width: { wch: 40 } },\r\n    { title: \"Redeem Date\", width: { wch: 12 } },\r\n    { title: \"Redeem By\", width: { wch: 12 } },\r\n  ]\r\n\r\n  let data = []\r\n  dataToProcess.forEach(item => {\r\n    let dataArr = []\r\n    dataArr.push({ value: item.id })\r\n    dataArr.push({ value: item.testdate })\r\n    dataArr.push({ value: item.name })\r\n    dataArr.push({ value: item.date_of_birth })\r\n    dataArr.push({ value: item.status })\r\n    dataArr.push({ value: item.klinikname })\r\n    dataArr.push({ value: item.redeem_on })\r\n    dataArr.push({ value: item.redeem_by })\r\n\r\n    data.push(dataArr)\r\n  })\r\n  let dataset = [{ ySteps: 1, columns, data }]\r\n  return dataset\r\n}\r\n\r\nconst tableCreator = data => {\r\n  let simpleTable = []\r\n  data && data.forEach(order => order.items && order.items.forEach(item => {\r\n    let rowTable = {\r\n      id: order.id,\r\n      testdate: item.products[0].testdate,\r\n      name: item.name,\r\n      date_of_birth: item.date_of_birth,\r\n      status: item.status\r\n        ? item.status.toUpperCase() === \"FINISH\" ? \"REDEEMED\" : item.status.toUpperCase()\r\n        : \"\",\r\n      klinikname: item.products[0].klinik.name,\r\n      redeem_on: item.redeem ? convertDateyyyymmdd(item.redeem.redeem_on) : \"-\",\r\n      redeem_by: item.redeem ? item.redeem.redeem_by : \"-\"\r\n    }\r\n    simpleTable.push(rowTable)\r\n  }))\r\n  return simpleTable\r\n}\r\n\r\n\r\nconst SimpleTable = ({ ...props }) => {\r\n\r\n  const { paxList, history, _setPaxList, _setOpenScreen, userInfo, _setCompleteRequest } = props\r\n\r\n  const [state, setState] = useState({\r\n    order: -1,\r\n    \"Booking Datefromdate\": lastWeek,\r\n    \"Booking Datetodate\": nextWeek,\r\n    \"Test Datefromdate\": lastWeek,\r\n    \"Test Datetodate\": nextWeek,\r\n    \"Redeem Datefromdate\": lastWeek,\r\n    \"Redeem Datetodate\": nextWeek,\r\n    fromdate: lastWeek,\r\n    todate: nextWeek,\r\n    open: false,\r\n    name: \"\",\r\n    'Test Date': true,\r\n    'Booking Date': false,\r\n    'Redeem Date': false,\r\n    Paid: false,\r\n    New: false,\r\n    finish: false,\r\n    dataset: [],\r\n    simpleTable: [],\r\n    currentList: [],\r\n    listLengthById: 0,\r\n  })\r\n\r\n  const tableColumns = [\r\n    { title: \"ID\", field: 'id', },\r\n    { title: FormatText('clinic_test_date'), field: 'testdate', },\r\n    { title: FormatText('app_name'), field: 'name', },\r\n    { title: FormatText('clinic_birth_date'), field: 'date_of_birth', },\r\n    { title: 'Status', field: 'status', },\r\n    { title: FormatText('clinic'), field: 'klinikname', },\r\n    { title: FormatText('clinic_redeem_date'), field: 'redeem_on', },\r\n    { title: FormatText('clinic_redeem_by'), field: 'redeem_by', },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    // console.log(\"EFFECT 1: \", paxList.list)\r\n    let list = paxList.list\r\n    let accessToken = localStorage.getItem('accessToken')\r\n    if (accessToken) {\r\n      _setOpenScreen(FormatText('clinic_order_list'))\r\n      if (Array.isArray(list) && list.length > 0) {\r\n        let simpleList = list.filter(item => (item.status !== \"UNCONFIRMED\") && (item.payment))\r\n        let simpleTable = tableCreator(simpleList)\r\n        let dataset = datasetCreator(simpleTable)\r\n        setState(state => ({\r\n          ...state,\r\n          simpleTable,\r\n          dataset,\r\n          listLengthById: simpleList.length\r\n        }))\r\n      }\r\n      else setState(state => ({\r\n        ...state,\r\n        simpleTable: [],\r\n        dataset: [],\r\n        listLengthById: 0\r\n      }))\r\n    }\r\n    else {\r\n      history.push('/')\r\n    }\r\n  }, [paxList.list, history, _setOpenScreen])\r\n\r\n  useEffect(() => {\r\n    // console.log(\"EFFECT 2\")\r\n    const infos = userInfo\r\n    let name = infos.info.name\r\n    let email = infos.info.email\r\n    let phone = infos.info.phone\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let healthOrderRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"healthOrder\",\r\n      params: `/list?&testdate_from=${from}&testdate_to=${to}`,\r\n      customHeaders\r\n    }\r\n\r\n    // let list = paxList.list\r\n    // if (state.currentList !== list) \r\n    _setCompleteRequest(healthOrderRequest)\r\n\r\n  }, [_setPaxList, _setCompleteRequest, userInfo])\r\n\r\n  const handleRowClick = rowData => {\r\n    console.log(rowData)\r\n    const infos = userInfo\r\n    let name = infos.info.name\r\n    let email = infos.info.email\r\n    let phone = infos.info.phone\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let ID = rowData.id\r\n    let healthOrderDetailRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"HEALTH_ORDER_DETAIL\",\r\n      params: `/${ID}`,\r\n      customHeaders\r\n    }\r\n    _setCompleteRequest(healthOrderDetailRequest)\r\n\r\n    // let orderList = paxList.list\r\n    // let order = orderList.filter(item => item.id === rowData.id)\r\n    // props._setPaxDetail(order[0])\r\n    // console.log(order[0])\r\n    // history.push('/PaxDetail')\r\n  }\r\n\r\n  const handleClick = row => (event) => {\r\n    let orderList = paxList.list\r\n    let order = orderList.filter(item => item.id === row)\r\n    console.log(order)\r\n    props._setPaxDetail(order[0])\r\n    if (order.length > 0) history.push('/PaxDetail')\r\n  }\r\n\r\n  const handleDateChange = prop => (date) => {\r\n    setState({\r\n      ...state,\r\n      [prop]: date,\r\n    })\r\n  };\r\n\r\n  const handleFilterOpen = () => {\r\n    setState({\r\n      ...state,\r\n      order: 1,\r\n      fromdate: lastWeek,\r\n      todate: nextWeek,\r\n      open: true,\r\n      name: \"\",\r\n      New: false,\r\n      finish: false,\r\n    })\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setState({\r\n      ...state,\r\n      open: false,\r\n    })\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setState({\r\n      ...state,\r\n      order: 1,\r\n      fromdate: lastWeek,\r\n      todate: nextWeek,\r\n      open: false,\r\n      name: \"\",\r\n      New: false,\r\n      finish: false,\r\n      '4': false,\r\n      '5': false\r\n      // localList: paxList.list,\r\n    })\r\n  };\r\n\r\n  const handleChange = prop => event => {\r\n    if (prop === 'Paid') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else if (prop === 'New') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else if (prop === 'finish') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else if (prop === 'Booking Date') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else if (prop === 'Test Date') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else if (prop === 'Redeem Date') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else {\r\n      setState({\r\n        ...state,\r\n        [prop]: event.target.value,\r\n      })\r\n    }\r\n  }\r\n\r\n  // const handleKlinik = prop => event => {\r\n  //   setState({\r\n  //     ...state,\r\n  //     [prop]: !state[prop],\r\n  //   })\r\n  // }\r\n\r\n  const handleSubmitFilter = () => {\r\n    const infos = props.userInfo\r\n    // console.log(\"USER INFOOOOOO: \", infos)\r\n    let name = infos.info.name ? infos.info.name : ''\r\n    let email = infos.info.email ? infos.info.email : ''\r\n    let phone = infos.info.phone ? infos.info.phone : ''\r\n\r\n    // console.log(\"SUBMIT: \", state)\r\n    // console.log(convertDateyyyymmdd(state.fromdate))\r\n\r\n    // let from = convertDateyyyymmdd(state.fromdate)\r\n    // let todate = convertDateyyyymmdd(state.todate)\r\n\r\n    let payment_from = convertDateyyyymmdd(state['Booking Datefromdate'])\r\n    let payment_to = convertDateyyyymmdd(state['Booking Datetodate'])\r\n    let test_from = convertDateyyyymmdd(state['Test Datefromdate'])\r\n    let test_to = convertDateyyyymmdd(state['Test Datetodate'])\r\n    let redeem_from = convertDateyyyymmdd(state['Redeem Datefromdate'])\r\n    let redeem_to = convertDateyyyymmdd(state['Redeem Datetodate'])\r\n\r\n    let paymentParam = state['Booking Date'] ? `&paymentdate_from=${payment_from}&paymentdate_to=${payment_to}` : \"\"\r\n    let testParam = state['Test Date'] ? `&testdate_from=${test_from}&testdate_to=${test_to}` : \"\"\r\n    let redeemParam = state['Redeem Date'] ? `&redeemdate_from=${redeem_from}&redeemdate_to=${redeem_to}` : \"\"\r\n    let statusParam = (state.Paid && !state.finish)\r\n      ? '&status=PAID' //'&redeem_status=NEW'\r\n      : (!state.Paid && state.finish)\r\n        ? '&status=FINISH'   // '&redeem_status=REDEEMED'\r\n        : (state.Paid && state.finish)\r\n          ? \"\"\r\n          : \"\"\r\n    let nameParam = state.name ? `&name=${state.name}` : ''\r\n\r\n    let isParams = paymentParam || testParam || redeemParam || statusParam || nameParam\r\n\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    //  health/admin/orders?testdate_from=....&testdate_to=....redeem_status=NEW/REDEEMED\r\n    let healthOrderRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"healthOrder\",\r\n      params: isParams\r\n        ? `/list?`\r\n        + (paymentParam ? paymentParam : \"\")\r\n        + (testParam ? testParam : \"\")\r\n        + (redeemParam ? redeemParam : \"\")\r\n        + (statusParam ? statusParam : \"\")\r\n        + (nameParam ? nameParam : '')\r\n        : `/list?&paymentdate_from=${payment_from}&paymentdate_to=${payment_to}`,\r\n      customHeaders\r\n    }\r\n    props._setCompleteRequest(healthOrderRequest)\r\n    // console.log(healthOrderRequest)\r\n    setState({\r\n      ...state,\r\n      open: false,\r\n    })\r\n  }\r\n\r\n  const handleExport = () => {\r\n    // console.log(\"Export Clicked\")\r\n  }\r\n\r\n  // const onRadioChange = e => {\r\n  //   e.preventDefault()\r\n  //   // console.log(e.target)\r\n  //   setState({\r\n  //     ...state,\r\n  //     parent_id: parseInt(e.target.name)\r\n  //   })\r\n  // }\r\n\r\n\r\n  let orderList = paxList.list\r\n  let filteredList = paxList.filteredList\r\n  let listToMap = filteredList[0] ? filteredList : orderList\r\n\r\n  return (\r\n    <div>\r\n\r\n      {/* <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n          <Grid item>\r\n            <Typography color=\"primary\" variant=\"h6\"  >\r\n              <b>Total Order: {listToMap.length.toString()}</b>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"caption\" >Click list for detail</Typography>\r\n          </Grid>\r\n        </Grid> */}\r\n\r\n      <Dialog\r\n        // fullScreen={fullScreen}\r\n        open={state.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Filter by:\"}</DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"subtitle2\">{FormatText('clinic_test_request_date')}</Typography>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container >\r\n              <KeyboardDatePicker\r\n                size=\"small\"\r\n                clearable\r\n                format=\"yyyy/MM/dd\"\r\n                margin=\"normal\"\r\n                id=\"date-picker-from\"\r\n                label={FormatText('app_from')}\r\n                value={state.fromdate}\r\n                onChange={handleDateChange('fromdate')}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container >\r\n              <KeyboardDatePicker\r\n                clearable\r\n                size=\"small\"\r\n                format=\"yyyy/MM/dd\"\r\n                margin=\"normal\"\r\n                id=\"date-picker-to\"\r\n                label={FormatText('app_to')}\r\n                value={state.todate}\r\n                onChange={handleDateChange('todate')}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n          <FormControl fullWidth>\r\n            <FormGroup>\r\n              <InputLabel\r\n                error={state.emailErrorMessage ? true : false}\r\n                htmlFor=\"standard-adornment-password\">\r\n                {FormatText('app_name')}\r\n              </InputLabel>\r\n              <Input\r\n                error={state.emailErrorMessage ? true : false}\r\n                id=\"standard-adornment-email\"\r\n                type='text'\r\n                onChange={handleChange('name')}\r\n              />\r\n              {\r\n                state.emailErrorMessage\r\n                  ? <FormHelperText error id=\"email-helper-text\">{state.emailErrorMessage}</FormHelperText>\r\n                  : null\r\n              }\r\n            </FormGroup>\r\n            <Typography style={{ marginTop: 15 }} variant=\"subtitle2\">Status:</Typography>\r\n            <FormControl>\r\n              <FormControlLabel\r\n                control={<Checkbox checked={state.New} onChange={handleChange('New')} name=\"New\" />}\r\n                label={FormatText('app_new')}\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={state.finish} onChange={handleChange('finish')} name=\"finish\" />}\r\n                label=\"Redeemed\"    // {FormatText('app_finish')}\r\n              />\r\n            </FormControl>\r\n          </FormControl>\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleReset} color=\"primary\">\r\n            Reset\r\n          </Button>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            {FormatText('app_cancel')}\r\n          </Button>\r\n          <Button autoFocus onClick={handleSubmitFilter} color=\"primary\">\r\n            {FormatText('app_submit')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Hidden xsDown>\r\n        <Grid container style={{ marginTop: 5 }}>\r\n          {/* <Typography variant=\"subtitle1\"  ><b>Filters</b> </Typography> */}\r\n          <Grid container direction='row' justify='flex-start' alignItems='flex-start' style={{ marginBottom: 10, marginTop: 5 }} >\r\n            {/* <Grid item sm={4} >\r\n                <Grid item>\r\n                  <Typography variant=\"subtitle2\">Name:</Typography>\r\n                  <FormControl style={{ width: 300 }}  >\r\n                    <FormGroup >\r\n                      <Input\r\n                        error={state.emailErrorMessage ? true : false}\r\n                        id=\"standard-full-width\"\r\n                        type='text'\r\n                        placeholder='Name'\r\n                        onChange={handleChange('name')}\r\n                        endAdornment={\r\n                          <InputAdornment position=\"end\">\r\n                            <AccountBoxRounded />\r\n                          </InputAdornment>\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item> <br />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Typography style={{ marginBottom: 7 }} variant=\"subtitle2\">Klinik Name:</Typography>\r\n                  {\r\n                    paxList.klinikList.length === 1\r\n                      ? <TextField id=\"basic-klinik\" value={paxList.klinikList[0].name} style={{ width: 300 }} />\r\n                      : paxList.klinikList.length === 0\r\n                        ? <TextField id=\"basic-klinik\" disabled style={{ width: 300 }} />\r\n                        : <SimpleAutocomplete\r\n                          options={paxList.klinikList[0] ? paxList.klinikList : [{ name: '' }]}\r\n                          onPick={v => console.log(v)}\r\n                          width={300}\r\n                          optionItem={'name'}\r\n                        />\r\n                  }\r\n\r\n                </Grid>\r\n              </Grid> */}\r\n            <Grid item sm={state['Booking Date'] || state['Test Date'] || state['Redeem Date'] ? 6 : 3} >\r\n              <Grid container direction=\"row\" >\r\n                <Typography variant='subtitle1'  >\r\n                  Filter:\r\n                  </Typography>\r\n\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n                  <FormControl style={{ marginLeft: 25, marginTop: 2 }}  >\r\n                    <Typography variant=\"subtitle2\">Date:</Typography>\r\n                    {\r\n                      // ['Test Date', 'Booking Date', 'Redeem Date'].map((item, i) => {\r\n                      ['Test Date', 'Redeem Date'].map((item, i) => {\r\n                        return (\r\n                          <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" key={i} >\r\n                            <Grid item style={{ width: 150, marginRight: 15 }}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox size='small' checked={state[item]} onChange={handleChange(item)} name={item} />}   //{<Radio />} \r\n                                label={item}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item style={{ display: state[item] ? \"\" : 'none' }} >\r\n                              <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                                <Grid container >\r\n                                  <KeyboardDatePicker\r\n                                    style={{ width: 150, marginRight: 15 }}\r\n                                    size=\"small\"\r\n                                    clearable\r\n                                    format=\"yyyy/MM/dd\"\r\n                                    margin=\"dense\"\r\n                                    id={\"date-picker-from\" + item}\r\n                                    label={FormatText('app_from')}\r\n                                    value={state[item + 'fromdate']}\r\n                                    onChange={handleDateChange(item + 'fromdate')}\r\n                                    KeyboardButtonProps={{\r\n                                      'aria-label': 'change date',\r\n                                    }}\r\n                                  />\r\n                                </Grid>\r\n                              </MuiPickersUtilsProvider>\r\n                            </Grid>\r\n                            <Grid item style={{ display: state[item] ? \"\" : 'none' }}>\r\n                              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container >\r\n                                  <KeyboardDatePicker\r\n                                    style={{ width: 150, marginRight: 15 }}\r\n                                    clearable\r\n                                    size=\"small\"\r\n                                    format=\"yyyy/MM/dd\"\r\n                                    margin=\"dense\"\r\n                                    id={\"date-picker-to\" + item}\r\n                                    label={FormatText('app_to')}\r\n                                    value={state[item + 'todate']}\r\n                                    onChange={handleDateChange(item + 'todate')}\r\n                                    KeyboardButtonProps={{\r\n                                      'aria-label': 'change date',\r\n                                    }}\r\n                                  />\r\n                                </Grid>\r\n                              </MuiPickersUtilsProvider>\r\n                            </Grid>\r\n\r\n                          </Grid>\r\n                        )\r\n                      })\r\n                    }\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item sm={2} >\r\n              <FormControl style={{ marginLeft: 15, marginTop: 30 }} fullWidth>\r\n                <Typography variant=\"subtitle2\">Status:</Typography>\r\n                <FormControl>\r\n                  <FormControlLabel\r\n                    control={<Checkbox size='small' checked={state.Paid} onChange={handleChange('Paid')} name=\"Paid\" />}\r\n                    label={FormatText('app_paid')}\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox size='small' checked={state.finish} onChange={handleChange('finish')} name=\"finish\" />}\r\n                    label=\"Redeemed\"    //{FormatText('app_finish')}\r\n                  />\r\n                </FormControl>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item sm={2} >\r\n              <Grid\r\n                style={{ marginTop: 40 }}\r\n                container\r\n                direction=\"column\"\r\n                justify='center'\r\n                alignItems=\"center\">\r\n                <Grid item>\r\n                  <ExcelFile\r\n                    filename={`OrderReport`} //</Grid></Grid>{`OrderReport ${ convertDateyyyymmdd(state.fromdate) } to ${convertDateyyyymmdd(state.todate)} `}\r\n                    element={\r\n                      <Button size='small' variant=\"outlined\" color=\"primary\">\r\n                        {FormatText('app_export_xls')}\r\n                      </Button>}\r\n                  >\r\n                    <ExcelSheet dataSet={state.dataset} name=\"Order Report\" />\r\n                  </ExcelFile>\r\n                </Grid>\r\n                <Grid item><br /></Grid>\r\n                <Grid item>\r\n                  <Button size='small' variant=\"contained\" onClick={handleSubmitFilter} color=\"primary\">\r\n                    {FormatText('app_submit_filter')}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            {/* <Grid item sm={2} ></Grid> */}\r\n\r\n          </Grid>\r\n          <Grid item sm={12} container direction='row' justify='flex-start' alignItems='flex-start' style={{ marginBottom: 10, marginTop: 5 }} >\r\n\r\n            <MaterialTable\r\n              style={{ width: '100%' }}\r\n              title={`TOTAL ORDER BY ID: ${state.listLengthById.toString()} `}\r\n              columns={tableColumns}\r\n              data={state.simpleTable}\r\n              onRowClick={(e, rowData) => handleRowClick(rowData)}\r\n              options={{\r\n                padding: 'dense',\r\n                // tableLayout: 'fixed'\r\n                // showTitle: false,\r\n\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid container>\r\n            <div style={{ height: 20 }} />\r\n          </Grid>\r\n        </Grid>\r\n      </Hidden>\r\n\r\n      <Hidden smUp>\r\n        <div>\r\n          <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\" style={{ marginTop: 10 }} >\r\n            <Grid item>\r\n              <Link onClick={handleFilterOpen} component=\"button\" variant=\"subtitle1\"><b>Filter</b> </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link onClick={handleExport} component=\"button\" variant=\"subtitle1\"><b>Export</b> </Link>\r\n            </Grid>\r\n          </Grid>\r\n          {listToMap.map((row, i) => (\r\n            <div key={i}>\r\n              <Card onClick={handleClick(row)} style={{ marginBottom: 10 }} >\r\n                <CardContent>\r\n                  <Link component=\"button\" variant=\"subtitle1\" style={{ marginBottom: 10 }}><b>OrderId: {row.id} </b> </Link>\r\n                  {row.items ? row.items.map((item, j) => {\r\n                    return (\r\n                      <div key={j}>\r\n                        <Grid container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={5}>\r\n                            <Typography variant=\"caption\" >{FormatText('app_name')}</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={6}   >\r\n                            <Typography variant=\"caption\" >{item.name}</Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={5}>\r\n                            <Typography variant=\"caption\" >{FormatText('clinic_birth_date')}</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={6}   >\r\n                            <Typography variant=\"caption\" >{item.date_of_birth}</Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={5}>\r\n                            <Typography variant=\"caption\"   >Status</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={6}   >\r\n                            <Typography variant=\"caption\" >{item.status ? item.status.toUpperCase() : \"NEW\"}</Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={5}>\r\n                            <Typography variant=\"caption\" >{FormatText('clinic_order_date')}</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={6}   >\r\n                            <Typography variant=\"caption\" >{item.products[0].testdate}</Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={5}>\r\n                            <Typography variant=\"caption\" >{FormatText('clinic')}</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={6}   >\r\n                            <Typography variant=\"caption\" >{item.products[0].klinik.name ? item.products[0].klinik.name : \"KLINIK NAME\"}</Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Divider style={{ margin: 10 }} />\r\n                      </div>\r\n                    )\r\n\r\n                  }) : null}\r\n\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Hidden>\r\n\r\n      <div style={{ height: window.screen.height - 700 }} />\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default SimpleTable\r\n","\r\nimport { connect } from 'react-redux'\r\nimport PaxListScreen from './PaxListScreen'\r\nimport { setPaxList, setPaxDetail, setFilteredList } from \"../../../actions/PaxListActions\";\r\nimport { setOpenScreen } from '../../../actions/SystemActions'\r\nimport { setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod, setServiceParams, \r\n  setServiceCustomHeaders, setServiceRole } from '../../../actions/ServiceActions'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    paxList : state.paxList,\r\n    userInfo: state.userInfo\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setPaxList : val => {\r\n      dispatch(setPaxList(val))\r\n    },\r\n    _setFilteredList: val => {\r\n      dispatch(setFilteredList(val))\r\n    },\r\n    _setPaxDetail: val => {\r\n      dispatch(setPaxDetail(val))\r\n    },\r\n    _setOpenScreen: val => {\r\n      dispatch(setOpenScreen(val))\r\n    },\r\n    _setRequest: val => {\r\n      dispatch(setServiceRequest(val))\r\n    },\r\n    _setServiceCode: val => {\r\n      dispatch(setServiceCode(val))\r\n    },\r\n    _setServiceStatus: val => {\r\n      dispatch(setServiceStatus(val))\r\n    },\r\n    _setServiceMethod: val => {\r\n      dispatch(setServiceMethod(val))\r\n    },\r\n    _setServiceParams: val => {\r\n      dispatch(setServiceParams(val))\r\n    },\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.params))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.role))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    }\r\n  }\r\n}\r\n\r\nconst PaxList = connect(mapStateToProps, mapDispatchToProps)(PaxListScreen)\r\n\r\nexport default PaxList","\r\nimport React, { useEffect, useState, } from 'react';\r\nimport { Grid, Typography, Button, TextField } from '@material-ui/core';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, } from '@material-ui/pickers';\r\nimport FormatText from '../../../i18n'\r\nimport { yyyymmddWithParams, convertDateyyyymmdd, datetoanydaysafter, isDateBeforeNow } from '../../../utils/utils';\r\nimport SimpleAutocomplete from '../../../components/autocomplete/SimpleAutocomplete';\r\n\r\nlet now = yyyymmddWithParams('now')\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst AddClientDialog = ({ ...props }) => {\r\n  const { cityList, klinikList, _setCompleteRequest, _setSecondRequest, open, userInfo, item, roleUsed } = props\r\n\r\n  const [state, setState] = useState({\r\n    city: \"\",\r\n    product: {},\r\n    klinikList: [],\r\n    fromdate: now,\r\n    fromdateErrorMessage: \"\",\r\n    originDate: \"\",\r\n    minDate: \"\",\r\n    maxValidDate: \"\",\r\n    email: \"\",\r\n    emailErrorMessage: \"\",\r\n    reason: \"\",\r\n    reasonErrorMessage: \"\",\r\n    clinic_id: 0,\r\n    order_id: 0,\r\n    item_id: 0,\r\n    submitErrorMessage: \"\"\r\n  })\r\n\r\n  useEffect(() => {\r\n    let input_date = state.fromdate\r\n    let holiday = [\"2020-10-29\",]\r\n    let extra_holiday = [\"2020-10-28\", \"2020-10-30\", \"2020-10-31\"]\r\n    let clinic_close_sunday = [270, 272, 273, 274, 282, 300, 8, 5, 6]\r\n    let clinic_close_saturday = [274, 300, 5]\r\n    let clinic_open_holiday = [270, 271, 275, 6]\r\n    let clinic_close_extraholiday = [282, 8]\r\n    let oldClinic = parseInt(state.product.clinic_id)\r\n    let newClinic = parseInt(state.clinic_id)\r\n    let d = new Date(input_date);\r\n    let n = d.getDay();\r\n    console.log(n, oldClinic, newClinic)\r\n    if (newClinic) {\r\n      if ((n === 0) && (clinic_close_sunday.includes(newClinic))) {\r\n        setState({ ...state, submitErrorMessage: \"New clinic close on Sunday, please choose another date.\" })\r\n      }\r\n      else if ((n === 6) && (clinic_close_saturday.includes(newClinic))) {\r\n        setState({ ...state, submitErrorMessage: \"New Clinic close on Saturday, please choose another date.\" })\r\n      }\r\n      else if (holiday.includes(input_date) && (!clinic_open_holiday.includes(newClinic))) {\r\n        setState({ ...state, submitErrorMessage: \"New Clinic close on Holiday, please choose another date.\" })\r\n      }\r\n      else if (extra_holiday.includes(input_date) && (clinic_close_extraholiday.includes(newClinic))) {\r\n        setState({ ...state, submitErrorMessage: \"New Clinic close on Extra Holiday, please choose another date.\" })\r\n      }\r\n      else if ((newClinic === 282) && (state.product.product_name === \"PCR Covid - 19 Test\")) {\r\n        setState({ ...state, submitErrorMessage: \"Product not available, please choose another clinic.\" })\r\n      }\r\n      else setState({ ...state, submitErrorMessage: \"\" })\r\n    }\r\n    else if ((n === 0) && (clinic_close_sunday.includes(oldClinic))) {\r\n      setState({ ...state, submitErrorMessage: \"Clinic close on Sunday, please choose another date.\" })\r\n    }\r\n    else if ((n === 6) && (clinic_close_saturday.includes(oldClinic))) {\r\n      setState({ ...state, submitErrorMessage: \"Clinic close on Saturday, please choose another date.\" })\r\n    }\r\n    else if (holiday.includes(input_date) && (!clinic_open_holiday.includes(oldClinic))) {\r\n      setState({ ...state, submitErrorMessage: \"Clinic close on Holiday, please choose another date.\" })\r\n    }\r\n    else if (extra_holiday.includes(input_date) && (clinic_close_extraholiday.includes(oldClinic))) {\r\n      setState({ ...state, submitErrorMessage: \"Clinic close on Extra Holiday, please choose another date.\" })\r\n    }\r\n    else setState({ ...state, submitErrorMessage: \"\" })\r\n\r\n  }, [state.fromdate, state.clinic_id, state.product, state.city])\r\n\r\n  useEffect(() => {\r\n    let product = item\r\n    if (product) {\r\n      const { order_id, item_id, valid_until, payment, testdate } = product\r\n      let minDate = isDateBeforeNow(payment.date)\r\n        ? convertDateyyyymmdd(datetoanydaysafter(now, 1))\r\n        : convertDateyyyymmdd(datetoanydaysafter(payment.date, 1))\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        klinikList,\r\n        order_id,\r\n        item_id,\r\n        product,\r\n        minDate,\r\n        fromdate: minDate,  //   convertDateyyyymmdd(datetoanydaysafter(testdate, 1)),\r\n        originDate: testdate,\r\n        maxValidDate: valid_until\r\n      }))\r\n      console.log(\"BEFORE NOW? \", isDateBeforeNow(payment.date))\r\n    }\r\n  }, [item])\r\n\r\n  useEffect(() => {\r\n    if (klinikList.length === 1) setState(prevState => ({\r\n      ...prevState,\r\n      klinikList,\r\n      clinic_id: klinikList[0].id\r\n    }))\r\n  }, [klinikList])\r\n\r\n\r\n  const handleClose = () => {\r\n    props.handleClose()\r\n  };\r\n\r\n  const handleChange = prop => e => {\r\n    e.preventDefault()\r\n    let val = e.target.value\r\n    let valid = FormValidation(prop, val)\r\n    setState({\r\n      ...state,\r\n      [prop]: val,\r\n      [prop + 'ErrorMessage']: val ? valid.errorMessage : \"\",\r\n      notComplete: false\r\n    })\r\n  }\r\n\r\n  const handleCancel = e => {\r\n    e.preventDefault()\r\n    let customHeaders = { name: userInfo.name, email: userInfo.email, }\r\n    if (userInfo.phone) customHeaders.phone = userInfo.phone\r\n    const cityRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CITY_LIST\",\r\n      params: `/cities?&citykey=a`,\r\n      customHeaders\r\n    }\r\n    let cityClinicRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CITY_CLINIC_LIST\",\r\n      urlParams: `/cities/none/clinics`,\r\n      customHeaders\r\n    }\r\n    _setCompleteRequest(cityRequest)\r\n    _setSecondRequest(cityClinicRequest)\r\n\r\n    const { payment } = item\r\n    let minDate = isDateBeforeNow(payment.date)\r\n      ? convertDateyyyymmdd(datetoanydaysafter(now, 1))\r\n      : convertDateyyyymmdd(datetoanydaysafter(payment.date, 1))\r\n    setState({\r\n      ...state,\r\n      // klinikList: [],\r\n      // product: {},\r\n      clinic_id: 0,\r\n      city: \"\",\r\n      submitErrorMessage: \"\",\r\n      minDate,\r\n      fromdate: minDate,\r\n    })\r\n    props.handleClose()\r\n  }\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault()\r\n    let customHeaders = { name: userInfo.name, email: userInfo.email, }\r\n    if (userInfo.phone) customHeaders.phone = userInfo.phone\r\n\r\n    let requestReschedule = {\r\n      testdate: state.fromdate,\r\n      email: state.email ? state.email : null,\r\n      clinic: state.clinic_id ? parseInt(state.clinic_id) : null,\r\n      reason: state.reason ? state.reason : null,\r\n    }\r\n\r\n    let rescheduleRequest = {\r\n      request: requestReschedule,\r\n      method: \"PATCH\",\r\n      serviceCode: \"RESCHEDULE_ORDER\",\r\n      params: `/${state.order_id}/${state.item_id}`,\r\n      customHeaders\r\n    }\r\n\r\n    if (state.fromdate && state.order_id && state.item_id) {\r\n      _setCompleteRequest(rescheduleRequest)\r\n      props.handleClose()\r\n    }\r\n    else setState({ ...state, submitErrorMessage: \"Form error, please check your form\" })\r\n\r\n  }\r\n\r\n  const handleDateChange = prop => date => {\r\n    const newDate = new Date(date);\r\n    if (newDate > datetoanydaysafter(item.valid_until, 0)) {\r\n      setState({\r\n        ...state,\r\n        [prop + 'ErrorMessage']: \"Reschedule date not valid\",\r\n        [prop]: convertDateyyyymmdd(date),\r\n      })\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        [prop + 'ErrorMessage']: \"\",\r\n        [prop]: convertDateyyyymmdd(date),\r\n      })\r\n    }\r\n  }\r\n\r\n  const handlePick = city => {\r\n    let customHeaders = { name: userInfo.name, email: userInfo.email, }\r\n    if (userInfo.phone) customHeaders.phone = userInfo.phone\r\n\r\n    if (city && city.city) {\r\n      setState({\r\n        ...state,\r\n        city: city.city,\r\n        submitErrorMessage: '',\r\n      })\r\n      let cityRequest = {\r\n        request: {},\r\n        method: \"GET\",\r\n        serviceCode: \"GET_CITY_CLINIC_LIST\",\r\n        params: `/cities/${city.city}/clinics`,\r\n        customHeaders\r\n      }\r\n      _setCompleteRequest(cityRequest)\r\n    } else {\r\n      let cityRequest = {\r\n        request: {},\r\n        method: \"GET\",\r\n        serviceCode: \"GET_CITY_CLINIC_LIST\",\r\n        params: `/cities/none/clinics`,\r\n        customHeaders\r\n      }\r\n      _setCompleteRequest(cityRequest)\r\n      setState({\r\n        ...state,\r\n        city: \"\",\r\n        clinic_id: 0,\r\n        submitErrorMessage: '',\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleInputChange = val => {\r\n    let customHeaders = { name: userInfo.name, email: userInfo.email, }\r\n    if (userInfo.phone) customHeaders.phone = userInfo.phone\r\n\r\n    let cityRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CITY_LIST\",\r\n      params: `/cities?&citykey=${val}`,\r\n      customHeaders\r\n    }\r\n    if (val) _setCompleteRequest(cityRequest)\r\n  }\r\n\r\n  const handlePickClinic = city => {\r\n    if (city && city.id) {\r\n      setState({\r\n        ...state,\r\n        clinic_id: city.id,\r\n        submitErrorMessage: '',\r\n      })\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        clinic_id: 0,\r\n        submitErrorMessage: '',\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleInputChangeClinic = val => {\r\n  }\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth={'xs'} open={open} onClose={handleClose} scroll={'paper'} >\r\n      <DialogTitle id=\"max-width-dialog-title\" onClose={handleClose}>{props.label}</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems='flex-start' >\r\n          <Grid item sm={12}>\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n              <Grid item lg={5} sm={5} xs={5}>\r\n                <Typography >Clinic</Typography>\r\n              </Grid>\r\n              <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                <Typography >:</Typography>\r\n              </Grid>\r\n              <Grid item lg={6} sm={6} xs={6}>\r\n                <Typography ><b>{state.product.clinic ? state.product.clinic.name : \"\"}</b></Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n              <Grid item lg={5} sm={5} xs={5}>\r\n                <Typography >Product Name</Typography>\r\n              </Grid>\r\n              <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                <Typography >:</Typography>\r\n              </Grid>\r\n              <Grid item lg={6} sm={6} xs={6}>\r\n                <Typography ><b>{state.product.product_name}</b></Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n              <Grid item lg={5} sm={5} xs={5}>\r\n                <Typography >Test Date</Typography>\r\n              </Grid>\r\n              <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                <Typography >:</Typography>\r\n              </Grid>\r\n              <Grid item lg={6} sm={6} xs={6}>\r\n                <Typography ><b>{state.originDate}</b></Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n              <Grid item lg={5} sm={5} xs={5}>\r\n                <Typography >Reschedule valid until</Typography>\r\n              </Grid>\r\n              <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                <Typography >:</Typography>\r\n              </Grid>\r\n              <Grid item lg={6} sm={6} xs={6}>\r\n                <Typography ><b>{state.maxValidDate}</b></Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n              <Grid item lg={5} sm={5} xs={5}>\r\n                <Typography >Reschedule Date</Typography>\r\n              </Grid>\r\n              <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                <Typography >:</Typography>\r\n              </Grid>\r\n              <Grid item lg={6} sm={6} xs={6}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                  <Grid container >\r\n                    <KeyboardDatePicker\r\n                      autoOk\r\n                      // minDate={datetoanydaysafter(state.originDate, 1)}\r\n                      minDate={state.minDate}\r\n                      maxDate={state.maxValidDate}\r\n                      error={state.fromdateErrorMessage ? true : false}\r\n                      helperText={state.fromdateErrorMessage ? state.fromdateErrorMessage : \"\"}\r\n                      style={{ width: 150 }}\r\n                      size=\"small\"\r\n                      clearable\r\n                      format=\"yyyy/MM/dd\"\r\n                      margin=\"dense\"\r\n                      id=\"date-picker-from\"\r\n                      value={state.fromdate}\r\n                      onChange={handleDateChange('fromdate')}\r\n                      KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                      }}\r\n                      disablePast={true}\r\n                    />\r\n                  </Grid>\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n              <Grid item lg={5} sm={5} xs={5}>\r\n                <Typography >User Email</Typography>\r\n              </Grid>\r\n              <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                <Typography >:</Typography>\r\n              </Grid>\r\n              <Grid item lg={6} sm={6} xs={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  // size=\"small\"\r\n                  placeholder=\"Email\"\r\n                  onChange={handleChange('email')}\r\n                  value={state.email}\r\n                  error={state.emailErrorMessage ? true : false}\r\n                  helperText={state.emailErrorMessage ? state.emailErrorMessage : \"\"}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n              <Grid item lg={5} sm={5} xs={5}>\r\n                <Typography >Reschedule Reason</Typography>\r\n              </Grid>\r\n              <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                <Typography >:</Typography>\r\n              </Grid>\r\n              <Grid item lg={6} sm={6} xs={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  // size=\"small\"\r\n                  placeholder=\"Reschedule Reason\"\r\n                  multiline\r\n                  onChange={handleChange('reason')}\r\n                  value={state.reason}\r\n                  error={state.reasonErrorMessage ? true : false}\r\n                  helperText={state.reasonErrorMessage ? state.reasonErrorMessage : \"\"}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid style={{ visibility: roleUsed === 'voltras.admin' ? 'visible' : 'hidden' }}\r\n              container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n              <Grid item lg={5} sm={5} xs={5}>\r\n                <Typography >Change Clinic</Typography>\r\n              </Grid>\r\n              <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                <Typography >:</Typography>\r\n              </Grid>\r\n              <Grid item lg={6} sm={6} xs={6}>\r\n                {}\r\n                <SimpleAutocomplete\r\n                  id=\"changeClinicChooseCity\"\r\n                  options={cityList[0] ? cityList : []}\r\n                  optionItem={'city'}\r\n                  notShrink={true}\r\n                  handleInputChange={handleInputChange}\r\n                  onPick={handlePick}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid style={{ visibility: roleUsed === 'voltras.admin' ? 'visible' : 'hidden' }}\r\n              container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n              <Grid item lg={5} sm={5} xs={5}>\r\n              </Grid>\r\n              <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n              </Grid>\r\n              <Grid item lg={6} sm={6} xs={6}>\r\n                {\r\n                  (klinikList[0]) && (klinikList[0].name) && (klinikList.length > 1)\r\n                    ? <SimpleAutocomplete\r\n                      id=\"changeClinicChooseClinic\"\r\n                      options={klinikList}\r\n                      optionItem={'name'}\r\n                      notShrink={true}\r\n                      handleInputChange={handleInputChangeClinic}\r\n                      onPick={handlePickClinic}\r\n                    />\r\n                    : (klinikList[0]) && (klinikList[0].name) && (klinikList.length === 1)\r\n                      ? <TextField focused={false} value={klinikList[0].name} fullWidth />\r\n                      : null\r\n                }\r\n              </Grid>\r\n\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justify='center' alignItems='center' style={{ marginTop: 5, marginBottom: 5 }}>\r\n          <Typography color=\"error\" style={{ visibility: state.submitErrorMessage ? 'visible' : 'hidden' }} variant='subtitle2' >\r\n            {state.submitErrorMessage}\r\n          </Typography>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' >\r\n            <Button variant='outlined' color=\"primary\" onClick={handleCancel} style={{ marginRight: 5 }}>\r\n              {FormatText('app_cancel')}\r\n            </Button>\r\n            <Button\r\n              disabled={state.submitErrorMessage ? true : false}\r\n              variant='contained'\r\n              color=\"primary\"\r\n              onClick={handleSave}\r\n              style={{ marginLeft: 5 }}\r\n            >\r\n              Reschedule\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n      {console.log(\"STATE: \", state)}\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddClientDialog\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceCustomHeaders, setServiceMethod,\r\n  setServiceParams, setServiceRole, setSecondRequest\r\n} from '../../../actions/ServiceActions'\r\nimport { setOpenScreen, serviceStart, serviceEnd } from '../../../actions/SystemActions'\r\nimport { setDialog, setSnackbar } from '../../../actions/FeedbackActions'\r\nimport { setParentList, setPaxList } from \"../../../actions/PaxListActions\";\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { yyyymmddWithParams } from \"../../../utils/utils\";\r\nimport Config from '../../../config';\r\nimport FormatText from '../../../i18n'\r\nimport RescheduleDialog from './RescheduleDialog'\r\nimport SimpleAutocomplete from '../../../components/autocomplete/SimpleAutocomplete';\r\nimport { SendToService } from '../../../services/ServiceClient'\r\n\r\n\r\nlet urlImage = Config.gatewayRepoFile\r\nlet regexNumberLetter = /^[0-9a-zA-Z]*$/\r\n\r\nconst PaxDetailScreen = ({ ...props }) => {\r\n\r\n  const { _setOpenScreen, detail, userInfo, _setCompleteRequest, history, _setServiceStatus, parentList,\r\n    _setSnackbar, _setParentList } = props\r\n\r\n  const [state, setState] = useState({\r\n    submitErrorMessage: \"\",\r\n    open: false,\r\n    openRedeemDialog: false,\r\n    fullName: \"\",\r\n    redeemBy: \"\",\r\n    member: [],\r\n    memberStatus: [],\r\n    errorMessage: \"\",\r\n    clickedItem: 0,\r\n    fileSelected: [],\r\n    clickedFile: 0,\r\n    rescheduleDialog: false,\r\n    items: [],\r\n    item: null,\r\n    redeemArr: [],\r\n    errorArr: [],\r\n    onPick: false,\r\n    showAutoId: false\r\n  })\r\n\r\n  const initOne = () => {\r\n    window.scrollTo(0, 0)\r\n    _setOpenScreen(\"Details\")\r\n    let itemToState = detail ? detail : []\r\n    let globalInfo = detail ? detail[0] ? detail[0] : {} : {}\r\n    const { order_id, contact } = globalInfo\r\n    let member = []\r\n    let memberStatus = []\r\n    let fileSelected = []\r\n    if (itemToState.length > 0) {\r\n      itemToState.forEach(item => {\r\n        member.push(false)\r\n        memberStatus.push(item.status)\r\n        fileSelected.push(false)\r\n      })\r\n      setState({\r\n        ...state,\r\n        member,\r\n        memberStatus,\r\n        fileSelected,\r\n        order_id,\r\n        contact,\r\n        items: detail,\r\n      })\r\n    }\r\n\r\n    const { name, email, phone } = userInfo\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    const cityRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CITY_LIST\",\r\n      params: `/cities?&citykey=a`,\r\n      customHeaders\r\n    }\r\n    _setCompleteRequest(cityRequest)\r\n\r\n  }\r\n\r\n  useEffect(initOne, [])\r\n\r\n\r\n  const cancelSubmit = e => {\r\n    e.preventDefault()\r\n    history.push('/PaxList')\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    let memberToSubmit = []\r\n    state.member.filter((item, i) => item === true ? memberToSubmit.push(i) : null)\r\n\r\n    if (memberToSubmit.length === 0) setState({ ...state, errorMessage: FormatText('err_atleast_one_name_chosen') })\r\n    else setState({ ...state, openRedeemDialog: true, errorMessage: \"\", })\r\n  }\r\n\r\n  const handleInputRedeem = e => {\r\n    /**\r\n     *  member ; urutan person yang di redeem dalam suatu orderID\r\n     *  redeemArr ;  detail info person berdasar member\r\n     */\r\n    e.preventDefault()\r\n    console.log(state)\r\n    let from = yyyymmddWithParams('lastWeek')\r\n    let to = yyyymmddWithParams('nextYear')\r\n    const { name, email, phone } = userInfo\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let responseName = []\r\n    // let successRedeem = []\r\n    let errorArr = state.errorArr\r\n    let items = detail\r\n    let orderId = detail[0].order_id\r\n    let fullName = items ? items.map(item => item.person_name) : []\r\n    let redeemBy = state.redeemBy\r\n    let redeemArr = state.redeemArr\r\n    let memberToSubmit = []\r\n    state.member.filter((item, i) => item === true ? memberToSubmit.push(i) : null)\r\n\r\n    if (memberToSubmit.length === 0) setState({ ...state, errorMessage: FormatText('err_atleast_one_name_chosen'), })\r\n    else if (redeemBy.length === 0) setState({ ...state, errorMessage: FormatText('err_redeemby_empty'), })\r\n    else {\r\n\r\n      const submitRedeem = (request, urlParam, method, customHeaders) => new Promise((resolve, reject) => {\r\n        console.log(\"SATU_SATU: \", request, urlParam, method, customHeaders)\r\n        // resolve(\"OKEY\")\r\n        SendToService(request, method, \"healthOrder\", urlParam, customHeaders, null, null, response => resolve(response))\r\n      })\r\n      // const asyncSubmitRedeem = async (request, urlParam, method, customHeaders) =>\r\n      //   await submitRedeem(request, urlParam, method, customHeaders)\r\n      // const submitRedeemAll = async memberToSubmit => {\r\n      //   let request = memberToSubmit.map(item => {\r\n      //     return asyncSubmitRedeem({ ...redeemArr[item], \"redeem_by\": redeemBy }, `/${orderId.toString()}/${fullName[item]}`, \"POST\", customHeaders)\r\n      //   })\r\n      //   return Promise.all(request)\r\n      // }\r\n\r\n      let isError = []\r\n      let itemError = []\r\n\r\n      // redeemArr.forEach((item, i) => {\r\n      //   let index = memberToSubmit[i]\r\n      //   console.log(fullName[index])\r\n      //   let person_id_name = redeemArr[index] ? redeemArr[index].kinship !== 'SELF' ? fullName[index] : redeemArr[index].person_id_name : \"\"\r\n      //   if (item === false) isError.push(false)\r\n      //   else if (item && (!item.person_id_no || !item.person_id_type || !item.kinship || ((index === i) && !person_id_name))) {\r\n      //     isError.push(true)\r\n      //   }\r\n      //   else isError.push(false)\r\n      // })\r\n\r\n      let arrToDefineErr = redeemArr.map((item, i) => {\r\n        let index = memberToSubmit[i]\r\n        console.log(fullName[index])\r\n        let person_id_name = redeemArr[index] ? redeemArr[index].kinship !== 'SELF' ? fullName[index] : redeemArr[index].person_id_name : \"\"\r\n        if (item === false) item = false\r\n        else {\r\n          if (item.kinship === 'SELF') item.person_id_name = fullName[i]\r\n        }\r\n        return item\r\n      })\r\n\r\n      console.log(\"ARR TO DEFINE: \", arrToDefineErr)\r\n      arrToDefineErr.forEach((item, i) => {\r\n        // let index = memberToSubmit[i]\r\n        // console.log(fullName[index])\r\n        // let person_id_name = redeemArr[index] ? redeemArr[index].kinship !== 'SELF' ? fullName[index] : redeemArr[index].person_id_name : \"\"\r\n        if (item === false) isError.push(false)\r\n        else if (item && (!item.person_id_no || !item.person_id_type || !item.kinship || !item.person_id_name)) {\r\n          isError.push(true)\r\n        }\r\n        else isError.push(false)\r\n      })\r\n\r\n\r\n      errorArr.forEach((item, i) => {\r\n        if (item.err_message) itemError.push(true)\r\n        else itemError.push(false)\r\n      })\r\n\r\n      const recurseRedeemSubmit = (i) => {\r\n        if (i > memberToSubmit.length - 1) { //recurse terminator\r\n          setState({ ...state, openRedeemDialog: false, redeemBy: \"\", errorMessage: \"\", })\r\n          // Snackbar \r\n          let successSnackbar = { open: true, severity: \"success\", message: FormatText('clinic_redeem_success'), action: false, actionLabel: \"\" }\r\n          _setSnackbar(successSnackbar)\r\n          _setServiceStatus('stop')\r\n          return history.push('/PaxList')\r\n        }\r\n\r\n        if (i < 0) {    // onFail Generator\r\n          // return onFail(msg)\r\n          console.log(\"ONFAIL\")\r\n        }\r\n\r\n        // _setServiceStatus('active')\r\n        let item = memberToSubmit[i]\r\n        let person_id_name = redeemArr[item] ? redeemArr[item].kinship === 'SELF' ? fullName[item] : redeemArr[item].person_id_name : \"\"\r\n        let product_name = items[item].product_name\r\n        submitRedeem(\r\n          { ...redeemArr[item], \"redeem_by\": redeemBy, person_id_name, product_name },\r\n          `/${orderId.toString()}/${fullName[item]}`,\r\n          \"POST\",\r\n          customHeaders\r\n        ).then((resolve, reject) => {\r\n          if (resolve) {\r\n            let newMember = state.member\r\n            newMember[i] = false\r\n            setState({ ...state, member: newMember, })\r\n\r\n            recurseRedeemSubmit(i + 1)\r\n          }\r\n          else {\r\n            console.log(\"END\")\r\n          }\r\n        })\r\n      }\r\n\r\n      console.log(\"IS ERROR? \", isError, itemError, redeemArr, fullName)\r\n      if (isError.includes(true) || itemError.includes(true)) setState({ ...state, errorMessage: \"Error in form\" })\r\n      else {\r\n        _setServiceStatus('active')\r\n        recurseRedeemSubmit(0)\r\n        // _setServiceStatus('active')\r\n        // submitRedeemAll(memberToSubmit).then(result => {\r\n        //   result.forEach((singleResp, i) => {\r\n        //     if (singleResp.body[0].status === \"FINISH\") responseName.push(singleResp.body[0].person_name)\r\n        //     else responseName.push(fullName[i] + \" Failed\")\r\n        //   })\r\n\r\n        //   asyncSubmitRedeem({}, `/list?&testdate_from=${from}&testdate_to=${to}`, \"GET\", customHeaders).then(response => {\r\n        //     // reset local state\r\n        //     let member = []\r\n        //     result.map(item => member.push(false))\r\n        //     setState({ ...state, openRedeemDialog: false, member, redeemBy: \"\", errorMessage: \"\", })\r\n        //     // sorting and set response to state\r\n        //     if (Array.isArray(response.body) && response.body.length > 0) {\r\n        //       response.body.sort((a, b) => {\r\n        //         let x = a.id\r\n        //         let y = b.id\r\n        //         return y - x\r\n        //       })\r\n        //       _setPaxList(response.body)\r\n        //     }\r\n        //     else _setPaxList([])\r\n\r\n        //     // TO DO Show success dialog \r\n        //     // let successDialog = { open: true, severity: \"success\", message: [FormatText('clinic_redeem_success'), orderId, ...responseName], }\r\n        //     // _setDialog(successDialog)\r\n        //     // console.log(\"BUAT DIBIKIN DIALOG: \", successDialog)\r\n\r\n        //     // Snackbar sementara\r\n        //     let successSnackbar = { open: true, severity: \"success\", message: FormatText('clinic_redeem_success'), action: false, actionLabel: \"\" }\r\n        //     _setSnackbar(successSnackbar)\r\n        //     setTimeout(() => {\r\n        //       history.push('/PaxList')\r\n        //     }, 100);\r\n        //   })\r\n        // })\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleKtpOpen = i => event => setState({ ...state, open: true, clickedItem: i })\r\n\r\n  const handleClose = () => setState({ ...state, open: false, rescheduleDialog: false })\r\n\r\n  const handleRedeemClose = () => {\r\n    let itemToState = detail\r\n    let member = []\r\n    itemToState.map(item => member.push(false))\r\n    setState({ ...state, openRedeemDialog: false, member, redeemArr: [], redeemBy: \"\", errorMessage: \"\", })\r\n  }\r\n\r\n  const handleChange = (prop, i) => event => {\r\n    console.log(prop, i, event.target.value)\r\n    if (prop === \"redeemBy\") setState({ ...state, redeemBy: event.target.value, errorMessage: \"\", })\r\n    else if (prop === \"person_id_no\") {\r\n      console.log(\"MASUK SINI BOS?\")\r\n      let oldArr = [...state.redeemArr]\r\n      // oldArr[i] = { ...oldArr[i], [prop]: event.target.value }\r\n      // let redeemArr = oldArr\r\n      // setState({ ...state, redeemArr, errorMessage: \"\", showAutoId: true })\r\n      oldArr[i] = { ...oldArr[i], person_id_type: \"\", person_id_no: \"\", }\r\n      _setParentList([])\r\n      setState({ ...state, redeemArr: oldArr, errorMessage: \"\", onPick: false, showAutoId: true })\r\n    }\r\n    else {\r\n      let oldArr = [...state.redeemArr]\r\n      oldArr[i] = { ...oldArr[i], [prop]: event.target.value }\r\n      let redeemArr = oldArr\r\n      setState({ ...state, redeemArr, errorMessage: \"\", showAutoId: false })\r\n    }\r\n  }\r\n\r\n  const handleSelectPax = prop => event => {\r\n    let objRedeem = { person_id_type: \"\", person_id_no: 0, kinship: \"\", person_id_name: \"\" }\r\n    let newMember = state.member\r\n    newMember[prop] = !newMember[prop]\r\n    let redeemArr = newMember.map(item => {\r\n      if (item) return objRedeem\r\n      else return item\r\n    })\r\n    let objErr = { err_message: \"\" }\r\n    let errorArr = newMember.map(item => {\r\n      if (item) return objErr\r\n      else return item\r\n    })\r\n    setState({ ...state, member: newMember, errorMessage: \"\", redeemArr, errorArr })\r\n  }\r\n\r\n  // const handleClickUpload = i => e => {\r\n  //   setState({ ...state, clickedFile: i })\r\n  // }\r\n\r\n  // const fileSelected = e => {\r\n  //   let i = state.clickedFile\r\n  //   let newFile = fileSelected\r\n  //   newFile[i] = e.target.files[0]\r\n  //   setState({\r\n  //     ...state,\r\n  //     fileSelected: newFile,\r\n  //   })\r\n  // }\r\n\r\n  const openReschedule = item => prop => {\r\n    setState({ ...state, item, rescheduleDialog: !state.rescheduleDialog, })\r\n  }\r\n\r\n  const handlePick = (id_type, index) => {\r\n    let i = index\r\n    let oldArr = [...state.redeemArr]\r\n    if (id_type) {\r\n      let as = id_type.as\r\n      if (as === \"SELF\") {\r\n        const { name, email, phone } = userInfo\r\n        let customHeaders = { name, email }\r\n        if (phone) customHeaders.phone = phone\r\n        let selfName = state.items[i].person_name\r\n        let request = {}\r\n        let method = \"GET\"\r\n        let serviceCode = \"GET_PARENT_LIST\"\r\n        let params = `/list?&name=${selfName}`\r\n\r\n        SendToService(request, method, serviceCode, params, customHeaders, null, null, response => {\r\n          console.log(\"RESPONSE: \", response.body)\r\n          if (response.body.length > 0) {\r\n            const { id_type, id_no, name } = response.body[0]\r\n            oldArr[i] = { ...oldArr[i], kinship: as, person_id_name: name, person_id_no: id_no, person_id_type: id_type }\r\n            setState({ ...state, redeemArr: oldArr, errorMessage: \"\", onPick: true })\r\n            _setParentList(response.body)\r\n          }\r\n          else {\r\n            oldArr[i] = { ...oldArr[i], kinship: as, }\r\n            setState({ ...state, redeemArr: oldArr, errorMessage: \"\", onPick: true, showAutoId: true })\r\n          }\r\n        })\r\n      } else {\r\n        oldArr[i] = { ...oldArr[i], kinship: as }\r\n        setState({ ...state, redeemArr: oldArr, errorMessage: \"\" })\r\n      }\r\n\r\n\r\n    }\r\n    else {\r\n      oldArr[i] = { ...oldArr[i], kinship: \"\", person_id_type: \"\", person_id_no: \"\", person_id_name: \"\" }\r\n      setState({ ...state, redeemArr: oldArr, })\r\n    }\r\n  }\r\n\r\n  const handleInputChange = val => {\r\n    console.log(val)\r\n  }\r\n\r\n  const handleInputParentChange = (val, index) => {\r\n    console.log(\"PARENT CHANGE: \", val)\r\n    const { name, email, phone } = userInfo\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let i = index\r\n    let selfName = state.items[i].person_name\r\n    let params = state.redeemArr[i].kinship === \"SELF\" ? `/list?&name=${selfName}&id_no=${val}` : `/list?&id_no=${val}`\r\n    let getParentRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_PARENT_LIST\",\r\n      params,\r\n      customHeaders\r\n    }\r\n    let oldArr = [...state.redeemArr]\r\n    let oldErr = [...state.errorArr]\r\n    if (val) {\r\n      if (val.length > 200) {\r\n        oldErr[i] = { ...oldErr[i], err_message: \"Max length 200 character\" }\r\n        setState({ ...state, errorArr: oldErr, errorMessage: \"Error in form\" })\r\n      }\r\n      else if (!regexNumberLetter.test(val)) {\r\n        oldErr[i] = { ...oldErr[i], err_message: \"Only numbers and letters allowed\" }\r\n        setState({ ...state, errorArr: oldErr, errorMessage: \"Error in form\" })\r\n      }\r\n      else {\r\n        oldErr[i] = { ...oldErr[i], err_message: \"\" }\r\n        oldArr[i] = { ...oldArr[i], person_id_no: val }\r\n        _setCompleteRequest(getParentRequest)\r\n        setState({ ...state, redeemArr: oldArr, errorMessage: \"\", errorArr: oldErr })\r\n      }\r\n    }\r\n    else {\r\n      console.log(\"SATU CHANGE\")\r\n      oldErr[i] = { ...oldErr[i], err_message: \"\" }\r\n      oldArr[i] = { ...oldArr[i], person_id_type: \"\", person_id_no: \"\", person_id_name: \"\" }\r\n      _setParentList([])\r\n      setState({ ...state, redeemArr: oldArr, errorMessage: \"\", onPick: false, errorArr: oldErr })\r\n    }\r\n  }\r\n\r\n  const handlePickParent = (pick, index) => {\r\n    console.log(\"PICK PARENT: \", pick, \"Index: \", index)\r\n    let i = index\r\n    let oldErr = [...state.errorArr]\r\n    let oldArr = [...state.redeemArr]\r\n    let oldItems = [...state.items]\r\n    if (pick) {\r\n      const { id_type, id_no, name } = pick\r\n      oldErr[i] = { ...oldErr[i], err_message: \"\" }\r\n      oldArr[i] = { ...oldArr[i], person_id_type: id_type, person_id_no: id_no, person_id_name: name }\r\n      if (oldArr[i].kinship === \"SELF\") {\r\n        if (oldItems[i] && (oldItems[i].person_name === name)) {\r\n          setState({ ...state, redeemArr: oldArr, errorMessage: \"\", onPick: true, errorArr: oldErr })\r\n          _setParentList([])\r\n        }\r\n        else {\r\n          oldErr[i] = { ...oldErr[i], err_message: \"ID Number dan Nama tidak sesuai.\" }\r\n          setState({ ...state, errorMessage: \"ID Number dan Nama tidak sesuai.\", errorArr: oldErr })\r\n        }\r\n      }\r\n      else {\r\n        oldErr[i] = { ...oldErr[i], err_message: \"\" }\r\n        setState({ ...state, redeemArr: oldArr, errorMessage: \"\", onPick: true, errorArr: oldErr })\r\n        _setParentList([])\r\n      }\r\n    }\r\n    else {\r\n      oldErr[i] = { ...oldErr[i], err_message: \"\" }\r\n      oldArr[i] = { ...oldArr[i], person_id_type: \"\", person_id_no: \"\", person_id_name: \"\" }\r\n      setState({ ...state, redeemArr: oldArr, errorMessage: \"\", onPick: false, errorArr: oldErr })\r\n      _setParentList([])\r\n    }\r\n  }\r\n\r\n  const handleParentFocus = () => {\r\n    // if (parentList.length > 1) _setParentList([])\r\n  }\r\n\r\n  const handlePickType = (id_type, index) => {\r\n    let i = index\r\n    let oldArr = [...state.redeemArr]\r\n    if (id_type) {\r\n      let val = id_type.val ? id_type.val : null\r\n      oldArr[i] = { ...oldArr[i], person_id_type: val }\r\n      setState({ ...state, redeemArr: oldArr, errorMessage: \"\" })\r\n    }\r\n    else {\r\n      oldArr[i] = { ...oldArr[i], person_id_type: \"\" }\r\n      setState({ ...state, redeemArr: oldArr, errorMessage: \"Error Type ID must be filled\" })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div  >\r\n      <RescheduleDialog\r\n        {...props}\r\n        item={state.item}\r\n        open={state.rescheduleDialog}\r\n        handleOpen={openReschedule}\r\n        handleClose={handleClose}\r\n        label=\"Reschedule\"\r\n      />\r\n      <Dialog\r\n        // fullScreen={fullScreen}\r\n        open={state.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Kartu Tanda Penduduk\"}</DialogTitle>\r\n        <DialogContent>\r\n          <Card >\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt=\"KTP\"\r\n              height=\"auto\"\r\n              width=\"auto\"\r\n              image={state.items.length > 0\r\n                ? urlImage + `/static-file-manager/retrieve?file=${state.items[state.clickedItem].person_id_image}`\r\n                : null}\r\n              title=\"KTP\"\r\n            />\r\n          </Card>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth={'xs'}\r\n        open={state.openRedeemDialog}\r\n        onClose={handleRedeemClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{FormatText('clinic_redeem_confirmation')}</DialogTitle>\r\n        <DialogContent >\r\n\r\n          <Grid container direction=\"row\" justify=\"flex-start\" alignItems='flex-start' >\r\n            {state.member ? state.member.map((item, i) => (\r\n              item && <Grid item sm={12} key={i}>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ marginBottom: 10 }} >\r\n                  <Grid item lg={5} sm={5} xs={5}>\r\n                    <Typography >Name</Typography>\r\n                  </Grid>\r\n                  <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                    <Typography >:</Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} sm={6} xs={6}>\r\n                    <Typography ><b>{state.items[i].person_name}</b></Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ marginBottom: 10 }} >\r\n                  <Grid item lg={5} sm={5} xs={5}>\r\n                    <Typography >Redeem As</Typography>\r\n                  </Grid>\r\n                  <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                    <Typography >:</Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} sm={6} xs={6}>\r\n                    {}\r\n                    <SimpleAutocomplete\r\n                      id={\"redeemAs\" + i.toString()}\r\n                      // options={[{ as: \"SELF\", i }]}\r\n                      options={[{ as: \"CHILD\", i }, { as: \"SELF\", i }]}\r\n                      // width={300}\r\n                      optionItem={'as'}\r\n                      // label={FormatText('clinic_city')}\r\n                      notShrink={true}\r\n                      // onSelect={handleSelect}\r\n                      handleInputChange={handleInputChange}\r\n                      onPick={handlePick}\r\n                      setIndex={i}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n\r\n                {  // NEW LOGIC TO SHOW REDEEM\r\n                  state.redeemArr[i].kinship === \"CHILD\"\r\n                    ? <>\r\n                      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ marginBottom: 10 }} >\r\n                        <Grid item lg={5} sm={5} xs={5}>\r\n                          <Typography >Parent ID Number</Typography>\r\n                        </Grid>\r\n                        <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                          <Typography >:</Typography>\r\n                        </Grid>\r\n                        <Grid item lg={6} sm={6} xs={6}>\r\n                          <SimpleAutocomplete\r\n                            id={\"idParent\" + i.toString()}\r\n                            options={parentList}\r\n                            // width={300}\r\n                            optionItem={'id_no'}\r\n                            // label={FormatText('clinic_city')}\r\n                            notShrink={true}\r\n                            // onSelect={handleSelect}\r\n                            handleInputChange={handleInputParentChange}\r\n                            onPick={handlePickParent}\r\n                            setIndex={i}\r\n                            freeSolo\r\n                          />\r\n                          <Typography color=\"error\" variant=\"caption\" >{state.errorArr[i].err_message}</Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ marginBottom: 10 }} >\r\n                        <Grid item lg={5} sm={5} xs={5}>\r\n                          <Typography >Parent ID Type</Typography>\r\n                        </Grid>\r\n                        <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                          <Typography >:</Typography>\r\n                        </Grid>\r\n                        <Grid item lg={6} sm={6} xs={6}>\r\n                          {\r\n                            state.redeemArr[i].person_id_type && state.onPick\r\n                              ? <Typography >{state.redeemArr[i].person_id_type}</Typography>\r\n                              : <SimpleAutocomplete\r\n                                values={state.redeemArr[i].person_id_type === \"\" ? { val: \"\", i } : false}\r\n                                clearOnBlur={true}\r\n                                id={\"idType\" + i.toString()}\r\n                                options={[{ val: \"KTP\", i }, { val: \"PASSPORT\", i }, { val: \"NIK\", i }]}\r\n                                // width={300}\r\n                                optionItem={'val'}\r\n                                // label={FormatText('clinic_city')}\r\n                                notShrink={true}\r\n                                // onSelect={handleSelect}\r\n                                handleInputChange={handleInputChange}\r\n                                onPick={handlePickType}\r\n                                setIndex={i}\r\n                              />\r\n                          }\r\n\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ marginBottom: 10 }} >\r\n                        <Grid item lg={5} sm={5} xs={5}>\r\n                          <Typography >Parent Name</Typography>\r\n                        </Grid>\r\n                        <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                          <Typography >:</Typography>\r\n                        </Grid>\r\n                        <Grid item lg={6} sm={6} xs={6}>\r\n                          {\r\n                            state.redeemArr[i].person_id_name && state.onPick\r\n                              ? <Typography ><b>{state.redeemArr[i].person_id_name}</b></Typography>\r\n                              : <TextField\r\n                                fullWidth\r\n                                // size=\"small\"\r\n                                placeholder=\"Parent Name\"\r\n                                onChange={handleChange('person_id_name', i)}\r\n                                value={state.redeemArr[i].person_id_name}\r\n                              // error={state.person_id_nameErrorMessage ? true : false}\r\n                              // helperText={state.person_id_nameErrorMessage ? state.person_id_nameErrorMessage : \"\"}\r\n                              />\r\n                          }\r\n\r\n                        </Grid>\r\n                      </Grid>\r\n                    </>\r\n\r\n\r\n                    : state.redeemArr[i].kinship === \"SELF\"\r\n                      ? <>\r\n                        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ marginBottom: 10 }} >\r\n                          <Grid item lg={5} sm={5} xs={5}>\r\n                            <Typography >ID Number</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={6} sm={6} xs={6}>\r\n                            {\r\n                              state.showAutoId\r\n                                ? <SimpleAutocomplete\r\n                                  autoFocus={state.showAutoId ? true : false}\r\n                                  handleFocus={handleParentFocus}\r\n                                  id={\"idSelf\" + i.toString()}\r\n                                  options={parentList}\r\n                                  // width={300}\r\n                                  optionItem={'id_no'}\r\n                                  // label={FormatText('clinic_city')}\r\n                                  notShrink={true}\r\n                                  // onSelect={handleSelect}\r\n                                  handleInputChange={handleInputParentChange}\r\n                                  onPick={handlePickParent}\r\n                                  setIndex={i}\r\n                                  freeSolo\r\n                                />\r\n                                : <TextField\r\n                                  fullWidth\r\n                                  // size=\"small\"\r\n                                  placeholder=\"Person ID Number\"\r\n                                  onChange={handleChange('person_id_no', i)}\r\n                                  value={state.redeemArr[i].person_id_no}\r\n                                  // error={state.person_id_nameErrorMessage ? true : false}\r\n                                  helperText={\r\n                                    state.person_id_nameErrorMessage\r\n                                      ? state.person_id_nameErrorMessage\r\n                                      : \"Pastikan nomor identitas benar\"\r\n                                  }\r\n                                />\r\n                            }\r\n                            <Typography color=\"error\" variant=\"caption\" >{state.errorArr[i].err_message}</Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ marginBottom: 10 }} >\r\n                          <Grid item lg={5} sm={5} xs={5}>\r\n                            <Typography >ID Type</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={6} sm={6} xs={6}>\r\n                            {\r\n                              state.redeemArr[i].person_id_type && state.onPick\r\n                                ? <Typography >{state.redeemArr[i].person_id_type}</Typography>\r\n                                : <SimpleAutocomplete\r\n                                  values={state.redeemArr[i].person_id_type === \"\" ? { val: \"\", i } : false}\r\n                                  clearOnBlur={true}\r\n                                  id={\"idType\" + i.toString()}\r\n                                  options={[{ val: \"KTP\", i }, { val: \"PASSPORT\", i }, { val: \"NIK\", i }]}\r\n                                  // width={300}\r\n                                  optionItem={'val'}\r\n                                  // label={FormatText('clinic_city')}\r\n                                  notShrink={true}\r\n                                  // onSelect={handleSelect}\r\n                                  handleInputChange={handleInputChange}\r\n                                  onPick={handlePickType}\r\n                                  setIndex={i}\r\n                                />\r\n                            }\r\n                          </Grid>\r\n                        </Grid>\r\n\r\n                      </>\r\n                      : null\r\n                }\r\n\r\n                <Divider style={{ marginTop: 20, marginBottom: 10 }} />\r\n              </Grid>\r\n            ))\r\n              : null\r\n            }\r\n\r\n\r\n          </Grid>\r\n\r\n          <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ marginBottom: 10 }} >\r\n            <Grid item lg={5} sm={5} xs={5}>\r\n              <Typography ><b>Redeem By</b></Typography>\r\n            </Grid>\r\n            <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n              <Typography >:</Typography>\r\n            </Grid>\r\n            <Grid item lg={6} sm={6} xs={6}>\r\n              <TextField\r\n                fullWidth\r\n                // size=\"small\"\r\n                placeholder=\"Redeem By\"\r\n                onChange={handleChange('redeemBy')}\r\n                value={state.person_id_no}\r\n                error={state.emailErrorMessage ? true : false}\r\n                helperText={state.emailErrorMessage ? state.emailErrorMessage : \"\"}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <center>\r\n          <Typography color='error' style={{ display: state.errorMessage ? '' : 'none' }}>{state.errorMessage}</Typography>\r\n          <Button autoFocus onClick={handleRedeemClose} color=\"secondary\" variant='outlined' style={{ margin: 5, marginBottom: 15 }}>\r\n            {FormatText('app_cancel')}\r\n          </Button>\r\n          <Button\r\n            disabled={state.errorMessage ? true : false}\r\n            autoFocus\r\n            onClick={handleInputRedeem}\r\n            color=\"primary\"\r\n            variant='contained'\r\n            style={{ margin: 5, marginBottom: 15 }}\r\n          >\r\n            {FormatText('app_submit')}\r\n          </Button>\r\n        </center>\r\n      </Dialog>\r\n\r\n      <center>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n        // alignItems=\"center\"\r\n        >\r\n          <Grid item xs={10} sm={6} >\r\n            <Card variant=\"elevation\" >\r\n              <CardContent>\r\n                <Typography variant=\"h6\"><b>{FormatText('clinic_order_detail')}</b> </Typography>\r\n                <Typography variant=\"caption\" ><b>Order Id: {state.order_id ? state.order_id : \"\"}</b> </Typography>\r\n                <div style={{ marginTop: 15 }}>\r\n                  <Grid container align='left' style={{ marginLeft: 20 }} >\r\n                    <Grid item lg={3} sm={3} xs={3}>\r\n                      <b>{FormatText('common_contact_person')}</b>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container align='left' >\r\n                    <Grid item xs={1} component='div'  >\r\n                      <Typography ></Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      Email\r\n                      </Grid>\r\n                    <Grid item xs={5}   >\r\n                      <Typography variant=\"caption\">: <b>{state.contact && state.contact.email}</b></Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container align='left' >\r\n                    <Grid item xs={1} component='div'  >\r\n                      <Typography ></Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      {FormatText('app_phone')}\r\n                    </Grid>\r\n                    <Grid item xs={5}   >\r\n                      <Typography variant=\"caption\">: <b>{state.contact && state.contact.phone}</b></Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Divider style={{ margin: 15 }} />\r\n\r\n                  {state.items.length > 0 ? state.items.map((item, i) => {\r\n                    return <div key={i}>\r\n                      <div style={{ marginLeft: 20 }}>\r\n                        <Grid container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={4}>\r\n                            <Typography variant=\"body2\" >{FormatText('app_name')}</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={7}   >\r\n                            <Typography variant=\"caption\"><b>{item.person_name}</b></Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={4}>\r\n                            <Typography variant=\"body2\">{FormatText('common_birth_date')}</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={7}   >\r\n                            <Typography variant=\"caption\">{item.person_date_of_birth}</Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={4}>\r\n                            <Typography variant=\"body2\">Status</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={7}   >\r\n                            <Typography variant=\"caption\">\r\n                              <b>{item.status ? item.status === \"FINISH\" ? \"REDEEMED\" : item.status : \"NEW\"}</b>\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={4}>\r\n                            <Typography variant=\"body2\">{FormatText('common_products')}</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={7} variant=\"caption\"  >\r\n                            <Typography variant=\"caption\"><b>{item.product_name}</b></Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={4}>\r\n                            <Typography variant=\"body2\">{FormatText('clinic_test_date')}</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={7} variant=\"caption\"  >\r\n                            <Typography variant=\"caption\">{item.testdate} </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={4}>\r\n                            <Typography variant=\"body2\">{FormatText('clinic_name')}</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={7} variant=\"caption\"  >\r\n                            <Typography variant=\"caption\">{item.clinic ? item.clinic.name : \"Klinik Name\"}</Typography> <br />\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid onClick={item.person_id_image ? handleKtpOpen(i) : null} container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={4}>\r\n                            <Typography variant=\"body2\">KTP</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={7}   >\r\n                            {\r\n                              item.person_id_image\r\n                                ? <Card style={{ width: 140, marginTop: 10 }}>\r\n                                  <CardMedia\r\n                                    component=\"img\"\r\n                                    alt=\"KTP\"\r\n                                    height=\"auto\"\r\n                                    width=\"200\"\r\n                                    image={item.person_id_image ? urlImage + `/static-file-manager/retrieve?file=${item.person_id_image}` : null}\r\n                                    title=\"KTP\"\r\n                                  />\r\n                                </Card>\r\n                                : <Typography variant=\"caption\"> - </Typography>\r\n                            }\r\n                          </Grid>\r\n                        </Grid>\r\n                        {/* {\r\n                            state.memberStatus[i] === \"FINISH\"\r\n                              ? null\r\n                              : <Grid style={{ marginTop: 10 }} container align='left'>\r\n                                <Grid item lg={4} sm={4} xs={4}>\r\n                                  <Typography variant=\"body2\">Upload Document</Typography>\r\n                                </Grid>\r\n                                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                                  <Typography >:</Typography>\r\n                                </Grid>\r\n                                <Grid item lg={7} sm={7} xs={7}   >\r\n                                  {state.fileSelected[i]\r\n                                    ? <div>{state.fileSelected[i].name}</div>\r\n                                    : <div><input\r\n                                      // accept=\"image/*\"\r\n                                      onChange={fileSelected}\r\n                                      style={{ display: 'none' }}\r\n                                      id=\"raised-button-file\"\r\n                                      multiple\r\n                                      type=\"file\"\r\n                                    />\r\n                                      <label htmlFor=\"raised-button-file\">\r\n                                        <Button onClick={handleClickUpload(i)} variant='outlined' component=\"span\" size='small' color='primary' >\r\n                                          Upload\r\n                                    </Button>\r\n                                      </label></div>\r\n                                  }\r\n\r\n                                </Grid>\r\n                              </Grid>\r\n                          } */}\r\n                        <Grid container >\r\n                          <Grid item lg={4} sm={4} xs={1}>\r\n                          </Grid>\r\n                          <Grid item lg={4} sm={4} xs={10} component='div'  >\r\n                          </Grid>\r\n                          <Grid item lg={4} sm={4} xs={1} variant=\"caption\"  >\r\n                          </Grid>\r\n                        </Grid>\r\n                        <>\r\n                          {\r\n                            state.member[i]\r\n                              ? <Button size='small' style={{ marginTop: 15 }} onClick={handleSelectPax(i)}\r\n                                variant=\"outlined\" color=\"secondary\">\r\n                                {FormatText('app_cancel')} Redeem\r\n                                    </Button>\r\n                              : state.memberStatus[i] === \"FINISH\"\r\n                                ? null\r\n                                : <>\r\n                                  <Button\r\n                                    size='small'\r\n                                    style={{ marginTop: 15, marginRight: 5 }}\r\n                                    onClick={openReschedule(item)}\r\n                                    variant='contained' color=\"secondary\"\r\n                                  >\r\n                                    Reschedule\r\n                                    </Button>\r\n                                  <Button\r\n                                    size='small'\r\n                                    style={{ marginTop: 15, marginLeft: 5 }}\r\n                                    onClick={handleSelectPax(i)}\r\n                                    variant='contained' color=\"primary\"\r\n                                  >\r\n                                    Redeem\r\n                                  </Button>\r\n                                </>\r\n                          }\r\n\r\n                        </>\r\n                      </div>\r\n                      <Divider style={{ margin: 15 }} />\r\n                    </div>\r\n                  }) : null}\r\n\r\n                  {state.errorMessage\r\n                    ? <Grid container justify='center'>\r\n                      <FormHelperText error id=\"email-helper-text\">{state.errorMessage}</FormHelperText>\r\n                    </Grid>\r\n                    : null}\r\n                  {state.submitErrorMessage\r\n                    ? <Grid container justify='center'>\r\n                      <FormHelperText error id=\"email-helper-text\">{state.submitErrorMessage}</FormHelperText>\r\n                    </Grid>\r\n                    : null}\r\n\r\n                  <Button\r\n                    style={{ marginRight: 2 }}\r\n                    size='small'\r\n                    onClick={cancelSubmit}\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\">\r\n                    {FormatText('app_back')}\r\n                  </Button>\r\n                  {\r\n                    state.memberStatus.includes(undefined) || state.memberStatus.includes(\"PAID\")\r\n                      ? <Button\r\n                        style={{ marginLeft: 2 }}\r\n                        size='small'\r\n                        onClick={handleSubmit}\r\n                        variant={state.member.includes(true) ? \"contained\" : 'outlined'}\r\n                        color='secondary'\r\n                      >\r\n                        {FormatText('clinic_redeem_confirmation')}\r\n                      </Button>\r\n                      : null\r\n                  }\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n            <div style={{ height: 100 }} ></div>\r\n          </Grid>\r\n        </Grid>\r\n      </center>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    parentList: state.paxList.parentList,\r\n    cityList: state.paxList.cityList,\r\n    klinikList: state.paxList.klinikList,\r\n    detail: state.paxList.detail,\r\n    product: state.paxList.product,\r\n    userInfo: state.userInfo.info,\r\n    roleUsed: state.userInfo.roleUsed,\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setParentList: val => dispatch(setParentList(val)),\r\n    _setSnackbar: val => dispatch(setSnackbar(val)),\r\n    _setRequest: val => {\r\n      dispatch(setServiceRequest(val))\r\n    },\r\n    _setServiceCode: val => {\r\n      dispatch(setServiceCode(val))\r\n    },\r\n    _setServiceStatus: val => {\r\n      dispatch(setServiceStatus(val))\r\n    },\r\n    _setOpenScreen: val => {\r\n      dispatch(setOpenScreen(val))\r\n    },\r\n    _setServiceStart: () => {\r\n      dispatch(serviceStart())\r\n    },\r\n    _setServiceEnd: () => {\r\n      dispatch(serviceEnd())\r\n    },\r\n    _setDialog: val => {\r\n      dispatch(setDialog(val))\r\n    },\r\n    _setPaxList: val => {\r\n      dispatch(setPaxList(val))\r\n    },\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.params))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.role))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n    _setSecondRequest: val => dispatch(setSecondRequest(val))\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PaxDetailScreen)","import React, { Component } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import QrReader from 'react-qr-reader'\r\nimport QrReader from 'react-qr-scanner'\r\n\r\nclass QrScreen extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isQrShow: false,\r\n      result: 'no result',\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props._setOpenScreen(\"QR Scan\")\r\n    this.props._serviceStart()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props._serviceEnd()\r\n  }\r\n\r\n  handleQrShow = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      isQrShow: !this.state.isQrShow\r\n    })\r\n  }\r\n\r\n  handleScan = data => {\r\n    let next = this.props.userInfo.info\r\n    let name = next.basicInformation ? next.basicInformation.name : ''\r\n    let email = next.email ? next.email : ''\r\n    let phone = next.phone ? next.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n\r\n    if (typeof (data) === 'string' || typeof (data) === 'number') {\r\n      let cekData = data.toString().replace(/\\s/g, '').length\r\n      // console.log(\"QR CEK DATA: \", cekData)\r\n      if (cekData > 0) {\r\n        this.props._serviceEnd()\r\n        // console.log(\"QR RESULT DATA: \", data)\r\n        // request by id to service\r\n        let healthOrderRequest = {\r\n          request: {},\r\n          method: \"GET\",\r\n          // serviceCode: \"healthOrder\",\r\n          // params: `/${data.toString()}`,\r\n          serviceCode: \"PURCHASE_VOUCHER_NUMBER\",\r\n          params: `/purchases/${data.toString()}`,\r\n          customHeaders\r\n        }\r\n        this.props._setCompleteRequest(healthOrderRequest)\r\n\r\n        // // find id from paxlist\r\n        // let list = this.props.paxList\r\n        // let pax = list.filter(item => item.id.toString() === data.toString())\r\n        // if (pax[0]) {\r\n        //   this.props._setPaxDetail(pax[0])\r\n        //   this.props.history.push('/PaxDetail')\r\n        // }\r\n        // else {\r\n        //   this.props.history.push('/Home')\r\n        // }\r\n\r\n      }\r\n      else {\r\n        // sent error message to snackbar\r\n        // back home\r\n        let responseErr = {\r\n          headers: {},\r\n          body: {\r\n            error: true,\r\n            errorDescription: {\r\n              id: \"QR Code anda tidak teridentifikasi\",\r\n              en: \"Unidentified QR Code\"\r\n            }\r\n          }\r\n        }\r\n        this.props._setResponse(responseErr)\r\n        this.props._serviceEnd()\r\n        this.props.history.push('/Home')\r\n      }\r\n    }\r\n  }\r\n\r\n  handleError = err => {\r\n    console.error(err)\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Grid container >\r\n          <Grid md={4} item>\r\n\r\n          </Grid>\r\n          <Grid xs={12} sm={12} md={4} item>\r\n            <Card>\r\n              <CardContent >\r\n                <div>\r\n                  <QrReader\r\n                    // delay={500}\r\n                    onError={this.handleError}\r\n                    onScan={this.handleScan}\r\n                    style={{ width: '100%', }}\r\n                    resolution={1200}\r\n                    // legacyMode={true}\r\n                    facingMode=\"rear\"\r\n                  />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid md={4} item>\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default QrScreen\r\n","\r\nimport { connect } from 'react-redux'\r\nimport QrScreen from './QrScreen'\r\n\r\n\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole,\r\n} from '../../../actions/ServiceActions'\r\nimport { setOpenScreen, serviceStart, serviceEnd } from '../../../actions/SystemActions'\r\nimport { setPaxDetail } from \"../../../actions/PaxListActions\";\r\nimport { setResponse } from '../../../actions/ResponseActions'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    paxList: state.paxList.list,\r\n    detail: state.paxList.detail,\r\n    system: state.system,\r\n    userInfo: state.userInfo,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setRequest: val => {\r\n      dispatch(setServiceRequest(val))\r\n    },\r\n    _setServiceCode: val => {\r\n      dispatch(setServiceCode(val))\r\n    },\r\n    _setServiceStatus: val => {\r\n      dispatch(setServiceStatus(val))\r\n    },\r\n    _setOpenScreen: val => {\r\n      dispatch(setOpenScreen(val))\r\n    },\r\n    _setPaxDetail: val => {\r\n      dispatch(setPaxDetail(val))\r\n    },\r\n    _serviceStart: () => {\r\n      dispatch(serviceStart())\r\n    },\r\n    _serviceEnd: () => {\r\n      dispatch(serviceEnd())\r\n    },\r\n    _setResponse: val => {\r\n      dispatch(setResponse(val))\r\n    },\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.params))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n\r\n  }\r\n}\r\n\r\nconst Qr = connect(mapStateToProps, mapDispatchToProps)(QrScreen)\r\n\r\nexport default Qr","\r\nimport React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Grid, MenuItem, InputAdornment, IconButton, } from '@material-ui/core';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { createUserTypes } from '../../../utils/utils';\r\n\r\nconst CreateUserForm = ({ ...props }) => {\r\n  const { handleChange, form, setFormFocus, formFocus, setShowPassword, showPassword,\r\n    setShowConfirmPassword, showConfirmPassword, serviceRole, } = props\r\n  const [userType, setUserType] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (serviceRole) setUserType(createUserTypes(serviceRole))\r\n  }, [serviceRole])\r\n\r\n  return (\r\n    <Grid item xs={12} md={6}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} md={8} style={{ marginLeft: 10, marginRight: 10 }} >\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('name')}\r\n            id=\"standard-name\"\r\n            label=\"Full Name\"\r\n            placeholder=\"Full Name\"\r\n            helperText={form.nameErrorMessage ? form.nameErrorMessage : \"\"}\r\n            error={form.nameErrorMessage ? true : false}\r\n            fullWidth\r\n            margin='dense'\r\n            value={form.name}\r\n            onFocus={() => setFormFocus({ ...formFocus, name: true })}\r\n            onBlur={() => form.name ? setFormFocus({ ...formFocus, name: true }) : setFormFocus({ ...formFocus, name: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.name ? true : false\r\n            }}\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('phone')}\r\n            id=\"standard-phone\"\r\n            label=\"Phone\"\r\n            placeholder=\"+6281234567890\"\r\n            helperText={form.phoneErrorMessage ? form.phoneErrorMessage : \"\"}\r\n            error={form.phoneErrorMessage ? true : false}\r\n            fullWidth\r\n            margin=\"dense\"\r\n            value={form.phone}\r\n            onFocus={() => setFormFocus({ ...formFocus, phone: true })}\r\n            onBlur={() => form.phone ? setFormFocus({ ...formFocus, phone: true }) : setFormFocus({ ...formFocus, phone: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.phone ? true : false\r\n            }}\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('email')}\r\n            id=\"standard-email\"\r\n            label=\"Email\"\r\n            placeholder=\"Email\"\r\n            helperText={form.emailErrorMessage ? form.emailErrorMessage : \"\"}\r\n            error={form.emailErrorMessage ? true : false}\r\n            fullWidth\r\n            margin=\"dense\"\r\n            value={form.email}\r\n            onFocus={() => setFormFocus({ ...formFocus, email: true })}\r\n            onBlur={() => form.email ? setFormFocus({ ...formFocus, email: true }) : setFormFocus({ ...formFocus, email: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.email ? true : false\r\n            }}\r\n          />\r\n          <TextField\r\n            type={showPassword ? 'text' : 'password'}\r\n            size=\"small\"\r\n            onChange={handleChange('password')}\r\n            id=\"standard-password\"\r\n            label=\"Password\"\r\n            // placeholder=\"Placeholder\"\r\n            helperText={form.passwordErrorMessage ? form.passwordErrorMessage : \"\"}\r\n            error={form.passwordErrorMessage ? true : false}\r\n            fullWidth\r\n            margin=\"dense\"\r\n            value={form.password}\r\n            onFocus={() => setFormFocus({ ...formFocus, password: true })}\r\n            onBlur={() => form.password ? setFormFocus({ ...formFocus, password: true }) : setFormFocus({ ...formFocus, password: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.password ? true : false\r\n            }}\r\n            InputProps={{\r\n              endAdornment: <InputAdornment position='end' >\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onMouseDown={e => e.preventDefault()}\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }}\r\n          />\r\n          <TextField\r\n            type={showConfirmPassword ? 'text' : 'password'}\r\n            size=\"small\"\r\n            onChange={handleChange('confirmPassword')}\r\n            id=\"standard-confirmPassword\"\r\n            label=\"Confirm Password\"\r\n            // placeholder=\"Placeholder\"\r\n            helperText={form.confirmPasswordErrorMessage ? form.confirmPasswordErrorMessage : \"\"}\r\n            error={form.confirmPasswordErrorMessage ? true : false}\r\n            fullWidth\r\n            margin=\"dense\"\r\n            value={form.confirmPassword}\r\n            onFocus={() => setFormFocus({ ...formFocus, confirmPassword: true })}\r\n            onBlur={() => form.confirmPassword ? setFormFocus({ ...formFocus, confirmPassword: true }) : setFormFocus({ ...formFocus, confirmPassword: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.confirmPassword ? true : false\r\n            }}\r\n            InputProps={{\r\n              endAdornment: <InputAdornment position='end' >\r\n                <IconButton\r\n                  aria-label=\"toggle confirmPassword visibility\"\r\n                  onMouseDown={e => e.preventDefault()}\r\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                >\r\n                  {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }}\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('userType')}\r\n            id=\"standard-userType\"\r\n            label=\"User Type\"\r\n            select\r\n            value={form.userType}\r\n            // placeholder=\"Placeholder\"\r\n            // helperText=\"Full width!\"\r\n            fullWidth\r\n            margin=\"dense\"\r\n          >\r\n            {userType.map((option, i) => (\r\n              <MenuItem value={option.value} key={i + 33}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CreateUserForm\r\n","\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {\r\n  Grid, Typography, Button, MenuItem, Card, CardContent,\r\n  CardActions, List, ListItemText, FormHelperText\r\n} from '@material-ui/core';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst AddUserClient = ({ ...props }) => {\r\n  const { form, showAddUserClient, setShowAddUserClient, handleChange,\r\n    chooseClientList, handleResource, handleAddClientRole, fullmd } = props\r\n\r\n  return (\r\n    <Grid item xs={12} md={fullmd ? 12 : 6} style={{ marginTop: 10 }}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" >\r\n        <Typography color='primary' variant='subtitle2' >User Client</Typography>\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" style={{ marginTop: 10 }} >\r\n          <Grid item xs={6}>\r\n            <Grid container direction=\"column\" justify='flex-start' alignItems='center' >\r\n              <Grid item>\r\n                Client Id\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container direction=\"row\" justify='flex-start' alignItems='flex-start' >\r\n              <Grid item>\r\n                <List>\r\n                  {form.assignedUserRole[0]\r\n                    ? form.assignedUserRole.map((item, i) => (<ListItemText key={i} secondary={'- ' + item.clientId} />))\r\n                    : <ListItemText secondary={'- none'} />}\r\n                </List>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Grid container direction=\"column\" justify='flex-start' alignItems='center' >\r\n              <Grid item>\r\n                Resources Allowed\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container direction=\"row\" justify='flex-start' alignItems='flex-start' >\r\n              <Grid item>\r\n                <List>\r\n                  {form.assignedUserRole[0]\r\n                    ? form.assignedUserRole[0].resourcesAllowedList.map((item, i) => (\r\n                      <ListItemText key={i} secondary={'- ' + item} />\r\n                    ))\r\n                    : <ListItemText secondary={'- none'} />\r\n                  }\r\n                </List>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container direction=\"column\" justify='flex-start' alignItems='flex-start' style={{ margin: 20 }}>\r\n            {\r\n              !showAddUserClient\r\n                ? <div>\r\n                  {form.assignedUserRole[0]\r\n                    ? null\r\n                    : <div>\r\n                      <Button\r\n                        // disabled={form.assignedUserRole[0] ? true : false}\r\n                        size='small'\r\n                        variant='outlined'\r\n                        color='secondary'\r\n                        onClick={() => setShowAddUserClient(true)}\r\n                      >\r\n                        Choose Client for User\r\n                      </Button>\r\n                      <FormHelperText>Only one client allowed on Create User.</FormHelperText>\r\n                      <FormHelperText>Update the User on User List to add more client.</FormHelperText>\r\n                    </div>\r\n                  }\r\n                </div>\r\n                : <Card >\r\n                  <CardContent>\r\n                    <Grid>\r\n                      <Typography variant='subtitle2'> Add Client and Resources </Typography>\r\n                    </Grid>\r\n                    <Grid>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        onChange={handleChange('clientId')}\r\n                        id=\"standard-clientId\"\r\n                        label=\"ClientId\"\r\n                        placeholder=\"ClientId\"\r\n                        select\r\n                        fullWidth\r\n                        error={form.roleIdErrorMessage ? true : false}\r\n                        value={form.clientId}\r\n                      >\r\n                        {chooseClientList.map((option, i) => (\r\n                          <MenuItem  value={option.value} key={i+21}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    </Grid>\r\n                    <Grid >\r\n                      {form.resourcelist[0]\r\n                        ? <FormControl component=\"fieldset\" style={{ marginTop: 10 }} >\r\n                          <FormLabel component=\"legend\">Resources</FormLabel>\r\n                          <FormGroup>\r\n                            {form.resourcelist.map((item, i) => (\r\n                              <FormControlLabel\r\n                                control={\r\n                                  <Checkbox\r\n                                    onChange={handleResource}\r\n                                    id={item.roleId}\r\n                                    name={item.roleId}\r\n                                  />\r\n                                }\r\n                                label={item.roleId}\r\n                                key={i}\r\n                              />\r\n                            ))}\r\n                          </FormGroup>\r\n                        </FormControl>\r\n                        : null\r\n                      }\r\n                    </Grid>\r\n                  </CardContent>\r\n\r\n                  <CardActions>\r\n                    <Button size=\"small\" color=\"primary\" onClick={() => setShowAddUserClient(false)} >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"secondary\" onClick={handleAddClientRole} >\r\n                      Add\r\n                    </Button>\r\n                  </CardActions>\r\n\r\n                </Card>\r\n            }\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default AddUserClient\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Grid, Paper, Typography, Button, Divider, FormHelperText } from '@material-ui/core';\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus,\r\n  setServiceMethod, setServiceParams, setServiceCustomHeaders, setServiceRole,\r\n} from '../../../actions/ServiceActions'\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\nimport CreateUserForm from './CreateUserForm'\r\nimport AddUserClient from './AddUserClient'\r\n\r\nconst CreateUser = ({ ...props }) => {\r\n\r\n  const { _setOpenScreen, _setCompleteRequest, userInfo, roleAuth, clientList, } = props\r\n  // const [serviceRole, setServiceRole] = useState('')\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\r\n  const [showAddUserClient, setShowAddUserClient] = useState(false)\r\n  const [formFocus, setFormFocus] = useState({\r\n    name: false,\r\n    phone: false,\r\n    email: false,\r\n    password: false,\r\n    confirmPassword: false,\r\n\r\n  })\r\n  const [form, setForm] = useState({\r\n    resource: [],\r\n    assignedUserRole: [],\r\n    resourcelist: [],\r\n    userType: '',\r\n    profile: '',\r\n    submitNotError: true\r\n  })\r\n\r\n  useEffect(() => {\r\n    _setOpenScreen(\"Create User\")\r\n    // let aud = ''\r\n    // if (userInfo.aud) aud = userInfo.aud\r\n    // else if (localStorage.getItem('aud')) aud = localStorage.getItem('aud')\r\n    // if (aud === 'authentication-backoffice') aud = ''\r\n\r\n    // let role = ''\r\n    // if (userInfo.role && userInfo.role.includes(roleAuth.endUser)) role = roleAuth.endUser\r\n    // if (userInfo.role && userInfo.role.includes(roleAuth.admin)) role = roleAuth.admin\r\n    // if (userInfo.role && userInfo.role.includes(roleAuth.root)) role = roleAuth.root\r\n    // console.log(\"GOMBAL...\")\r\n    let name = userInfo.name\r\n    let email = userInfo.email\r\n    let phone = userInfo.phone\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let requestAllClient = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"SELECT_ALL_CLIENT\",\r\n      // params: '/clients' + (aud ? '/' + aud : ''),\r\n      customHeaders\r\n    }\r\n    // setServiceRole(role)\r\n    if (clientList.length < 1 && userInfo.roleUsed) _setCompleteRequest(requestAllClient)\r\n    // if (clientList[0]) clientList.map(item => item.clientRoles = item.roleDetails)\r\n  }, [_setOpenScreen, _setCompleteRequest, clientList, userInfo.email, userInfo.name, userInfo.phone, userInfo.roleUsed])\r\n\r\n  // useEffect(() => {\r\n  //   if (clientList[0]) clientList.map(item => item.clientRoles = item.roleDetails)\r\n  // }, [clientList])\r\n\r\n  const handleChange = prop => e => {\r\n    e.preventDefault()\r\n    let valid = FormValidation(prop, e.target.value)\r\n\r\n    if (prop === 'confirmPassword') {\r\n      if (form.password !== e.target.value) {\r\n        setForm({\r\n          ...form,\r\n          [prop]: e.target.value,\r\n          [prop + 'ErrorMessage']: 'password confirmation not match',\r\n          submitNotError: true,\r\n        });\r\n      }\r\n      else {\r\n        setForm({\r\n          ...form,\r\n          [prop]: e.target.value,\r\n          [prop + 'ErrorMessage']: '',\r\n          submitNotError: true,\r\n        });\r\n      }\r\n    }\r\n    else if (prop === 'clientId') {\r\n      let newResourcelist = []\r\n      clientList.forEach(item => {\r\n        if (item.clientId === e.target.value) {\r\n          return newResourcelist = Array.isArray(item.clientRoles)\r\n            ? item.clientRoles\r\n            : item.clientRoles\r\n              ? item.clientRoles.split(', ').map(item => ({ roleId: item }))\r\n              : [{ roleId: 'client jadul jgn dipake' }]\r\n        }\r\n      })\r\n      setForm({\r\n        ...form,\r\n        resourcelist: newResourcelist,\r\n        [prop]: e.target.value,\r\n        [prop + 'ErrorMessage']: valid.errorMessage,\r\n        submitNotError: true,\r\n      })\r\n    }\r\n    else if (prop === 'userType') {\r\n      let val = e.target.value\r\n      let role = ''\r\n      if (val === \"end-user\") role = roleAuth.endUser\r\n      if (val === \"admin\") role = roleAuth.admin\r\n      if (val === \"root\") role = roleAuth.root\r\n      setForm({\r\n        ...form,\r\n        [prop]: e.target.value,\r\n        [prop + 'ErrorMessage']: valid.errorMessage,\r\n        resource: [...form.resource, role],\r\n        submitNotError: true,\r\n      })\r\n\r\n    }\r\n    else {\r\n      setForm({\r\n        ...form,\r\n        [prop]: e.target.value,\r\n        [prop + 'ErrorMessage']: valid.errorMessage,\r\n        submitNotError: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    setForm({ ...form, submitNotError: true })\r\n    const { name, phone, email, password, confirmPassword,\r\n      userType, assignedUserRole, submitNotError } = form\r\n\r\n    let request = {\r\n      assignedUserRole, confirmPassword, email, emailVerified: false, name, password,\r\n      phone: phone[0] === '0' ? '+62' + phone.slice(1) : phone, phoneVerified: false, userType\r\n    }\r\n    let header_name = userInfo.name\r\n    let header_email = userInfo.email\r\n    let header_phone = userInfo.phone\r\n    let customHeaders = { name: header_name, email: header_email }\r\n    if (header_phone) customHeaders.phone = header_phone\r\n\r\n    if (assignedUserRole && name && phone && email && password && confirmPassword && userType && submitNotError) {\r\n      let submitRequest = {\r\n        request,\r\n        method: \"POST\",\r\n        serviceCode: \"CREATE_BO_USER\",\r\n        customHeaders\r\n        // customHeaders: {\r\n        //   email: userInfo.email,\r\n        //   phone: userInfo.phone,\r\n        //   name: userInfo.name ? userInfo.name : \"\",\r\n        //   serviceRole,\r\n        // },\r\n      }\r\n      // console.log(submitRequest)\r\n      _setCompleteRequest(submitRequest)\r\n    }\r\n    else {\r\n      setForm({ ...form, submitNotError: false })\r\n    }\r\n  }\r\n\r\n  const handleAddClientRole = e => {\r\n    e.preventDefault()\r\n    setForm({\r\n      ...form,\r\n      roleId: '',\r\n      roleDescription: '',\r\n      assignedUserRole: [...form.assignedUserRole, { clientId: form.clientId, resourcesAllowedList: form.resource }]\r\n    })\r\n    setShowAddUserClient(false)\r\n  }\r\n\r\n  const handleCancel = e => {\r\n    e.preventDefault()\r\n    setFormFocus({\r\n      name: false,\r\n      phone: false,\r\n      email: false,\r\n      confirmPassword: false,\r\n      password: false,\r\n    })\r\n    setForm({\r\n      resource: [],\r\n      name: '',\r\n      phone: '',\r\n      email: '',\r\n      confirmPassword: '',\r\n      password: '',\r\n      assignedUserRole: [],\r\n      resourcelist: [],\r\n      clientRoles: [],\r\n      userType: '',\r\n      clientGroupId: \"7ff9bf27-23bd-4253-a015-b2ffbe067f04\",\r\n      submitNotError: true,\r\n    })\r\n  }\r\n\r\n  let chooseClientList = clientList.map(item => {\r\n    return {\r\n      value: item.clientId,\r\n      label: item.clientName\r\n    }\r\n  })\r\n\r\n  const handleResource = e => {\r\n    let newResource = form.resource\r\n    if (e.target.name && e.target.checked) {\r\n      newResource.push(e.target.name)\r\n      setForm({\r\n        ...form,\r\n        resource: newResource\r\n      })\r\n    }\r\n    else if (e.target.name && !e.target.checked) {\r\n      let filteredResource = []\r\n      filteredResource = newResource.filter(item => item !== e.target.name)\r\n      setForm({\r\n        ...form,\r\n        resource: filteredResource\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid item xs={12} md={9}>\r\n        <Paper>\r\n          <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n            <Typography variant='h6' color='primary' style={{ marginTop: 20 }} >Create User</Typography>\r\n          </Grid>\r\n\r\n          <Grid container direction=\"row\"  >\r\n            <CreateUserForm\r\n              handleChange={handleChange}\r\n              form={form}\r\n              setFormFocus={setFormFocus}\r\n              formFocus={formFocus}\r\n              setShowPassword={setShowPassword}\r\n              showPassword={showPassword}\r\n              setShowConfirmPassword={setShowConfirmPassword}\r\n              showConfirmPassword={showConfirmPassword}\r\n              // serviceRole={serviceRole}\r\n              roleAuth={roleAuth}\r\n            />\r\n\r\n            <AddUserClient\r\n              form={form}\r\n              showAddUserClient={showAddUserClient}\r\n              setShowAddUserClient={setShowAddUserClient}\r\n              handleChange={handleChange}\r\n              chooseClientList={chooseClientList}\r\n              handleResource={handleResource}\r\n              handleAddClientRole={handleAddClientRole}\r\n            />\r\n\r\n          </Grid>\r\n\r\n          <Divider style={{ margin: 20 }} />\r\n\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ margin: 10 }} >\r\n            {\r\n              form.submitNotError\r\n                ? null\r\n                : <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n                  <FormHelperText error >Form not complete</FormHelperText>\r\n                </Grid>\r\n            }\r\n\r\n            <Grid item>\r\n              <Button onClick={handleCancel} variant=\"outlined\" color=\"primary\">Reset</Button>\r\n            </Grid>\r\n            <Grid style={{ margin: 10 }} item>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">Create</Button>\r\n            </Grid>\r\n          </Grid> <br />\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    userList: store.userList.list,\r\n    userDetail: store.userList.detail,\r\n    userFiltered: store.userList.filteredList,\r\n    userInfo: store.userInfo.info,\r\n    clientList: store.clientList.list,\r\n    roleAuth: store.system.roleAuth,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)),\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.params))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateUser)","\r\nimport React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nexport default function MaterialTableCRUD({ ...props }) {\r\n  // console.log(\"TABLE PROPS: \", props)\r\n  const { columns, data, updatedata, deletedata, rowClicked, confirmdeletetext, title, action, update, roleUsed } = props\r\n\r\n  // const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = useState({\r\n    columns: [],\r\n    data: [],\r\n    rowData: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      columns: columns,\r\n      data: data\r\n    }))\r\n  }, [columns, data])\r\n\r\n  const handleUpdate = (oldData) => updatedata(oldData)\r\n\r\n  const handleDelete = async oldData => await deletedata(oldData)\r\n\r\n  // const handleClickOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  // const handleClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n\r\n  const handleRowClick = rowData => {\r\n    setState({ ...state, rowData })\r\n    // console.log(rowData)\r\n    rowClicked(rowData)\r\n  }\r\n\r\n  return (\r\n    <Grid container item xs={12} >\r\n      <MaterialTable\r\n        localization={{\r\n          body: {\r\n            editRow: {\r\n              deleteText: confirmdeletetext\r\n            }\r\n          }\r\n        }}\r\n        style={{ width: '100%' }}\r\n        title={title}\r\n        columns={state.columns}\r\n        data={state.data}\r\n        actions={[update && roleUsed !== 'member' ? {\r\n          icon: 'check',\r\n          tooltip: 'Activate Clinic',\r\n          onClick: (event, rowData) => handleUpdate(rowData)\r\n        } : null\r\n        ]}\r\n        editable={action ? {\r\n          // onRowAdd: (newData) =>\r\n          //   new Promise((resolve) => {\r\n          //     setTimeout(() => {\r\n          //       resolve();\r\n          //       setState((prevState) => {\r\n          //         const data = [...prevState.data];\r\n          //         data.push(newData);\r\n          //         return { ...prevState, data };\r\n          //       });\r\n          //     }, 600);\r\n          //   }),\r\n          // onRowUpdate: (newData, oldData) =>\r\n          //   new Promise((resolve) => {\r\n          //     handleUpdate(newData, oldData).then(result => resolve())\r\n          //   }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve) => {\r\n              handleDelete(oldData).then(result => resolve())\r\n            }),\r\n        } : null}\r\n        onRowClick={(e, rowData) => handleRowClick(rowData)}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          search: roleUsed === 'member' ? false : true,\r\n          rowStyle: rowData => ({\r\n            color: (rowData.status === \"inactive\") ? 'grey' : (rowData.status === \"register\") ? '#00f100' : 'black',\r\n          })\r\n        }}\r\n      />\r\n    </Grid >\r\n  );\r\n}\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst UpdateUserDialog = ({ ...props }) => {\r\n  const [roleList, setRoleList] = useState([])\r\n  const [available, setAvailable] = useState([])\r\n  const [newRoleList, setNewRoleList] = useState([])\r\n\r\n  const handleClose = () => {\r\n    props.handleOpen(false)\r\n  };\r\n\r\n  let clientDetail = props.clientList && props.dataToUpdate ? props.clientList.filter(item => item.client === props.dataToUpdate.client) : []\r\n  let clientName = clientDetail[0] ? clientDetail[0].client : ''\r\n\r\n  const callbackUseEffect = () => {\r\n    setRoleList([])\r\n    setAvailable([])\r\n    setNewRoleList([])\r\n    let newList = []\r\n\r\n    let propRoleList = props.dataToUpdate ? props.dataToUpdate.resourcesAllowedList ? props.dataToUpdate.resourcesAllowedList : ['none'] : ['none']\r\n    if (!Array.isArray(propRoleList)) propRoleList = [propRoleList]\r\n    setRoleList(propRoleList)\r\n    if (props.dataToUpdate && !props.dataToUpdate.roleList) {\r\n      let insertAvailable = props.clientList.filter(item => item.client === props.dataToUpdate.client)\r\n      newList = insertAvailable[0].roleList\r\n    }\r\n    if (propRoleList[0] && clientDetail[0]) {\r\n      clientDetail[0].roleList.map(item => {\r\n        if (!propRoleList.includes(item)) newList.push(item)\r\n        return null\r\n      })\r\n    }\r\n    setAvailable(newList)\r\n  }\r\n  useEffect(callbackUseEffect, [props.dataToUpdate])\r\n \r\n  const handleAddItemRole = item => value => {\r\n    setNewRoleList([...newRoleList, item])\r\n    let newList = available.filter(items => items !== item)\r\n    setAvailable(newList)\r\n  }\r\n\r\n  const handleRemoveItemRole = item => value => {\r\n    setAvailable([...available, item])\r\n    let newList = newRoleList.filter(items => items !== item)\r\n    setNewRoleList(newList)\r\n  }\r\n\r\n  const handleRemoveRole = item => value => {\r\n    setAvailable([...available, item])\r\n    let newList = roleList.filter(items => items !== item)\r\n    setRoleList(newList)\r\n  }\r\n\r\n  const handleSave = () => {\r\n    let saveRoleList = roleList.concat(newRoleList)\r\n    let dataToSave = props.dataToUpdate\r\n    dataToSave.roleList = saveRoleList.join(', ')\r\n    dataToSave.resourcesAllowedList = saveRoleList\r\n    props.handleSave(dataToSave)\r\n    props.handleOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth={'sm'} open={props.open} onClose={handleClose} scroll={'paper'} >\r\n      <DialogTitle id=\"max-width-dialog-title\" onClose={handleClose}>Client: {clientName}</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems='flex-start' >\r\n          <Grid item md={6}>\r\n            <Typography variant='subtitle2'>Role Name</Typography>\r\n            <Typography variant='caption' color='textSecondary'>Click to remove role</Typography>\r\n            <List dense >\r\n              {\r\n                roleList.map((item, i) => {\r\n                  if (item === 'none') {\r\n                    return <ListItemText primary={'- none'} key={i} />\r\n                  }\r\n                  else {\r\n                    return <Grid container direction=\"row\" justify=\"flex-start\" alignItems='center' key={i} >\r\n                      <ListItemIcon>\r\n                        <Checkbox\r\n                          edge=\"start\"\r\n                          id={item}\r\n                          value={item}\r\n                          checked\r\n                          onChange={handleRemoveRole(item)}\r\n                        />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={item} />\r\n                    </Grid >\r\n                  }\r\n                })\r\n              }\r\n              {\r\n                newRoleList[0] ? newRoleList.map((item, i) => (\r\n                  <Grid container direction=\"row\" justify=\"flex-start\" alignItems='center' key={i} >\r\n                    <ListItemIcon>\r\n                      <Checkbox\r\n                        edge=\"start\"\r\n                        id={item}\r\n                        value={item}\r\n                        checked\r\n                        onChange={handleRemoveItemRole(item)}\r\n                      />\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary={item} />\r\n                  </Grid >\r\n                ))\r\n                  : roleList[0]\r\n                    ? <div></div>\r\n                    : <ListItemText primary={'- none'} />\r\n              }\r\n            </List>\r\n          </Grid>\r\n\r\n          <Grid item md={6}>\r\n            <Typography variant='subtitle2' >Available Role</Typography>\r\n            <Typography variant='caption' color='textSecondary'>Click to add role</Typography>\r\n            <List dense >\r\n              {available[0] ? available.map((item, i) => (\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems='center' key={i} >\r\n                  <ListItemIcon>\r\n                    <Checkbox\r\n                      edge=\"start\"\r\n                      onChange={handleAddItemRole(item)}\r\n                      checked={false}\r\n                    />\r\n                  </ListItemIcon>\r\n                  <ListItemText secondary={item} />\r\n                </Grid >\r\n              )) : <ListItemText primary={'- none'} />}\r\n            </List>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button onClick={handleClose} variant='outlined' color=\"primary\">\r\n              Cancel\r\n          </Button>\r\n          </Grid>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button onClick={handleSave} variant='contained' color=\"primary\">\r\n              Save\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default UpdateUserDialog\r\n","\r\nimport React, { useState } from 'react';\r\nimport { Grid, Typography, Button, } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\n// import AddUserClient from '../createuser/AddUserClient'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {\r\n  MenuItem,\r\n  \r\n} from '@material-ui/core';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import FormGroup from '@material-ui/core/FormGroup';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst AddClientDialog = ({ ...props }) => {\r\n  const { handleAddClient, handleOpen, clientData, open, clientList, } = props\r\n  // const [showAddUserClient, setShowAddUserClient] = useState(false)\r\n  const [form, setForm] = useState({\r\n    resource: ['member'],\r\n    assignedUserRole: [],\r\n    resourcelist: [],\r\n  })\r\n\r\n  const handleClose = () => {\r\n    handleOpen(false)\r\n    setForm({\r\n      resource: [],\r\n      assignedUserRole: [],\r\n      resourcelist: [],\r\n      clientRoles: [],\r\n    })\r\n  };\r\n\r\n  const handleChange = prop => e => {\r\n    e.preventDefault()\r\n    let valid = FormValidation(prop, e.target.value)\r\n    if (prop === 'clientId') {\r\n      let newResourcelist = []\r\n      clientList.map(item => {\r\n        if (item.clientId === e.target.value) {\r\n          return newResourcelist = Array.isArray(item.clientRoles)\r\n            ? item.clientRoles\r\n            : item.clientRoles\r\n              ? item.clientRoles.split(', ').map(item => ({ roleId: item }))\r\n              : [{ roleId: 'client jadul jgn dipake' }]\r\n        }\r\n        return null\r\n      })\r\n      setForm({\r\n        ...form,\r\n        resourcelist: newResourcelist,\r\n        [prop]: e.target.value,\r\n        [prop + 'ErrorMessage']: valid.errorMessage,\r\n        submitNotError: true,\r\n      })\r\n    }\r\n    else {\r\n      setForm({\r\n        ...form,\r\n        [prop]: e.target.value,\r\n        [prop + 'ErrorMessage']: valid.errorMessage,\r\n        submitNotError: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  // const handleAddClientRole = e => {\r\n  //   e.preventDefault()\r\n  //   setForm({\r\n  //     ...form,\r\n  //     roleId: '',\r\n  //     roleDescription: '',\r\n  //     assignedUserRole: [...form.assignedUserRole, { clientId: form.clientId, resourcesAllowedList: form.resource }]\r\n  //   })\r\n  //   setShowAddUserClient(false)\r\n  // }\r\n\r\n  const handleCancel = e => {\r\n    handleOpen(false)\r\n    e.preventDefault()\r\n    setForm({\r\n      resource: [],\r\n      assignedUserRole: [],\r\n      resourcelist: [],\r\n      clientRoles: [],\r\n    })\r\n  }\r\n\r\n  let clientDataToFilter = clientData ? clientData.userRole ? clientData.userRole.map(item => item.client) : [] : []\r\n\r\n  let chooseClientList = clientList\r\n    ? clientList.filter(({ clientId }) => (!clientDataToFilter.includes(clientId))).map(item => {\r\n      return {\r\n        value: item.clientId,\r\n        label: item.clientName\r\n      }\r\n    })\r\n    : [{ value: '', label: '' }]\r\n\r\n  // const handleResource = e => {\r\n  //   let newResource = form.resource\r\n  //   if (e.target.name && e.target.checked) {\r\n  //     newResource.push(e.target.name)\r\n  //     setForm({\r\n  //       ...form,\r\n  //       resource: newResource\r\n  //     })\r\n  //   }\r\n  //   else if (e.target.name && !e.target.checked) {\r\n  //     let filteredResource = []\r\n  //     filteredResource = newResource.filter(item => item !== e.target.name)\r\n  //     setForm({\r\n  //       ...form,\r\n  //       resource: filteredResource\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault()\r\n    let clientId = form.clientId\r\n    let resourcesAllowedList = form.resource\r\n    let request = { \"userRoleToUpdate\": [{ clientId, resourcesAllowedList }] }\r\n    let method = 'PATCH'\r\n    let serviceCode = 'UPDATE_USER_ROLE'\r\n    let urlParams = `/users/${clientData.userId}/roles`\r\n\r\n    let completeRequest = { request, method, serviceCode, urlParams }\r\n    handleAddClient(completeRequest)\r\n    handleOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth={'xs'} open={open} onClose={handleClose} scroll={'paper'} >\r\n      <DialogTitle id=\"max-width-dialog-title\" onClose={handleClose}>Add Client</DialogTitle>\r\n      <DialogContent dividers>\r\n        <center>\r\n          <Grid container >\r\n            <Grid item sm={12}>\r\n              <TextField\r\n                style={{width: 300}}\r\n                onChange={handleChange('clientId')}\r\n                id=\"standard-clientId\"\r\n                label=\"ClientId\"\r\n                placeholder=\"ClientId\"\r\n                select\r\n                // fullWidth\r\n                error={form.roleIdErrorMessage ? true : false}\r\n                // value={form.clientId}\r\n              >\r\n                {chooseClientList\r\n                  ? chooseClientList.map((option, i) => (\r\n                    <MenuItem value={option.value} key={i+66}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))\r\n                  : <MenuItem >\r\n                    None\r\n                  </MenuItem>\r\n                }\r\n              </TextField>\r\n\r\n              {/* <AddUserClient\r\n                form={form}\r\n                showAddUserClient={showAddUserClient}\r\n                setShowAddUserClient={setShowAddUserClient}\r\n                handleChange={handleChange}\r\n                chooseClientList={chooseClientList}\r\n                handleResource={handleResource}\r\n                handleAddClientRole={handleAddClientRole}\r\n                fullmd\r\n              /> */}\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </center>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button variant='outlined' color=\"primary\" onClick={handleCancel}>\r\n              Cancel\r\n          </Button>\r\n          </Grid>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button variant='contained' color=\"primary\" onClick={handleSave}>\r\n              Add\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddClientDialog\r\n","import React, { useState, useEffect } from 'react'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar'\r\n\r\n\r\n\r\nconst BasicUserInfomation = ({ ...props }) => {\r\n    const [capture, setCapture] = useState({\r\n        data: \"\"\r\n    })\r\n    const [basicInfo, setBasicInfo] = useState([])\r\n    useEffect(() => {\r\n        let data = props.clientData\r\n        setBasicInfo([\r\n            {\r\n                title: 'Email',\r\n                field: data.email,\r\n                verified: data.emailVerified && data.email ? 'Verified' : 'Not Verified'\r\n            },\r\n            {\r\n                title: 'Phone',\r\n                field: data.phone,\r\n                verified: data.phoneVerified && data.phone ? 'Verified' : 'Not Verified'\r\n            },\r\n            {\r\n                title: 'Name',\r\n                field: data.basicInformation ? data.basicInformation.name : \"\"\r\n            },\r\n            {\r\n                title: 'Profile URL',\r\n                field: data.basicInformation ? data.basicInformation.profile : \"\"\r\n            },\r\n            {\r\n                title: 'Gender',\r\n                field: data.basicInformation ? data.basicInformation.gender : \"\"\r\n            },\r\n            {\r\n                title: 'Address',\r\n                field: data.basicInformation ? data.basicInformation.address : \"\"\r\n            }\r\n        ])\r\n        setCapture({\r\n            data: data.basicInformation ? data.basicInformation.picture : \"\"\r\n        })\r\n    }, [props.clientData])\r\n    const handleOpenEdit = () => {\r\n        props.handleOpenEdit(true)\r\n    }\r\n    return (\r\n        <Grid style={{ marginTop: 20 }} container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n            <Grid item xs={8} style={{ marginTop: 10, marginBottom: 10 }}>\r\n                <Paper style={{ paddingLeft: 20 }}>\r\n                    <Grid container>\r\n                        <Grid item xs={10}>\r\n                            <Typography variant='h6' style={{ paddingBottom: 20 }}>\r\n                                Basic Information\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid container item xs={2} justify='flex-end' style={{ paddingRight: 15 }}>\r\n                            <Tooltip title='Edit'>\r\n                                <EditIcon onClick={handleOpenEdit} />\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {\r\n                        basicInfo.map(item =>\r\n                            (\r\n                                <div>\r\n                                    <Grid container style={{ marginBottom: 8 }}>\r\n                                        <Grid item xs={2}>\r\n                                            <Typography style={{fontSize:13,fontWeight:'bold',fontStyle:'Times New Roman'}}>\r\n                                                {item.title}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={8}>\r\n                                            {item.title === 'Profile URL' ? <a href={item.field}  target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                {item.field}\r\n                                            </a> : <Typography style={{ fontSize: 14 }}>\r\n                                                    {item.field}\r\n                                                </Typography>}\r\n\r\n                                        </Grid>\r\n                                        <Grid>\r\n                                            <Typography style={{\r\n                                                color: item.verified === 'Verified' ? '#79d70f' : '#d32626',\r\n                                                fontSize: 14\r\n                                            }}>\r\n                                                {(item.title === 'phone' || item.title === 'email') && !item.field ? \"\" : item.verified}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Divider />\r\n                                </div>\r\n                            ))\r\n                    }\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={4} align='center' style={{ padding: 50 }}>\r\n                <Avatar style={{ width: 160, height: 160, borderWidth: '4px', borderColor: 'black', borderStyle: 'solid' }} src={capture.data} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default BasicUserInfomation","import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport { FormValidation } from '../../../utils/FormValidation'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Dialog, DialogActions, DialogContent } from '@material-ui/core'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\n\r\nconst styles = (theme) => ({\r\n    rootForm: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            // width: '25ch',\r\n        },\r\n    },\r\n    rootUpload: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    asterisk: {\r\n        color: 'red'\r\n    },\r\n    addButton: {\r\n        color: 'white'\r\n    },\r\n    inputUpload: {\r\n        display: 'none',\r\n    },\r\n});\r\n\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n    const { children, onClose, classes, ...other } = props\r\n\r\n\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n})\r\n\r\n\r\nconst UpdateUserBasicInfoDialog = ({ ...props }) => {\r\n    const { classes } = props\r\n    console.log('rolesUsed',props.userInfo)\r\n    const [data, setData] = useState({\r\n        basicInformation: {}\r\n    })\r\n    const [capture, setCapture] = useState({\r\n        images: [],\r\n        data: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (props.clientData) {\r\n            setData({\r\n                // ...data,\r\n                ...props.clientData,\r\n                emailVerified: props.clientData.emailVerified ? \"Verified\" : \"Not Verified\",\r\n                phoneVerified: props.clientData.phoneVerified ? 'Verified' : \"Not Verified\"\r\n            })\r\n        }\r\n    }, [props.clientData])\r\n\r\n    const handleClose = () => {\r\n        setCapture({\r\n            ...capture,\r\n            images: []\r\n        })\r\n        setData({\r\n            ...data,\r\n            basicInformation: {}\r\n        })\r\n        props.handleClose(false)\r\n    }\r\n\r\n    const handleChange = id => (event) => {\r\n        const value = event.target.value\r\n        let valid = FormValidation(id === 'profile' ? 'urlDestination' : id, event.target.value)\r\n        // console.log('ID', id)\r\n        // console.log('value',value)\r\n        if (id === 'address' || id === 'gender' || id === 'profile' || id === 'name') {\r\n            setData({\r\n                ...data,\r\n                basicInformation: {\r\n                    ...data.basicInformation,\r\n                    [id]: value,\r\n                    [id + 'Edit']: value,\r\n                    // [id + 'ErrorMessage']: valid.errorMessage,\r\n                },\r\n                [id]: value,\r\n                [id + 'Edit']: value,\r\n                [id === 'profile' ? 'urlDestinationErrorMessage' : id + 'ErrorMessage']: valid.errorMessage,\r\n            })\r\n        }\r\n        else {\r\n            setData({\r\n                ...data,\r\n                basicInformation: {\r\n                    ...data.basicInformation,\r\n                    [id]: value,\r\n                    [id + 'Edit']: value,\r\n                },\r\n                [id]: value,\r\n                [id + 'Edit']: value,\r\n                [id + 'ErrorMessage']: valid.errorMessage,\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleCapture = ({ target }) => {\r\n        const fileReader = new FileReader();\r\n        // console.log('targets',target.files)\r\n        fileReader.readAsDataURL(target.files[0]);\r\n        fileReader.onload = (e) => {\r\n            // console.log('target',e.target)\r\n            setCapture({\r\n                ...capture,\r\n                data: e.target.result,\r\n                images: target.files\r\n            })\r\n        };\r\n    }\r\n    const handleEditRequest = () => {\r\n        props.handleClose(false)\r\n        props.completeRequest(data, capture)\r\n    }\r\n    console.log('dataaaa', data)\r\n    return (\r\n        <Dialog fullWidth maxWidth={'sm'} open={props.open} onClose={handleClose} scroll='paper'>\r\n            <DialogTitle id=\"max-width-dialog-title\"\r\n                onClose={handleClose}>\r\n                {props.title}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <form className={classes.rootForm} noValidate autoComplete=\"off\">\r\n                    {/* <TextField\r\n                        fullWidth\r\n                        label='Photo'\r\n                        placeholder='Update Your Photo Here'\r\n                        id='photo'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                    /> */}\r\n                    <div className={classes.rootUpload}>\r\n                        <Grid container>\r\n                            <Grid item sm={8}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    value={capture.images[0] ? capture.images[0].name : \"\"}\r\n                                    variant='outlined'\r\n                                    disabled={true}\r\n                                    label='Photo'\r\n                                    id='photo'\r\n                                    InputLabelProps={{\r\n                                        shrink: true\r\n                                    }} />\r\n                            </Grid>\r\n                            <Grid item sm={4} align='center'>\r\n                                <input\r\n                                    accept=\"image/*\"\r\n                                    className={classes.inputUpload}\r\n                                    id=\"contained-button-file\"\r\n                                    onChange={handleCapture}\r\n                                    multiple\r\n                                    type=\"file\"\r\n                                />\r\n                                <label htmlFor=\"contained-button-file\">\r\n                                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                        Upload\r\n                                    </Button>\r\n                                </label>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </div>\r\n                    <TextField\r\n                        fullWidth\r\n                        label='Email'\r\n                        // placeholder='Update Your Photo Here'\r\n                        value={data.email}\r\n                        onChange={handleChange('email')}\r\n                        id='email'\r\n                        error={data.emailErrorMessage ? true : false}\r\n                        helperText={data.emailErrorMessage ? data.emailErrorMessage : \"\"}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        select\r\n                        disabled={props.userInfo ? props.userInfo.roleUsed === 'root' ? false : true : true}\r\n                        label='Email Status'\r\n                        value={data.emailVerified}\r\n                        onChange={handleChange('emailVerified')}\r\n                        // onChange={handleChange}\r\n                        // placeholder='Update Your Photo Here'\r\n                        id='emailStatus'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                    >\r\n                        <MenuItem value='Verified'>\r\n                            Verified\r\n                        </MenuItem>\r\n                        <MenuItem value='Not Verified'>\r\n                            Not Verified\r\n                        </MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        fullWidth\r\n                        label='Phone'\r\n                        id='phone'\r\n                        onChange={handleChange('phone')}\r\n                        value={data.phone}\r\n                        error={data.phoneErrorMessage ? true : false}\r\n                        helperText={data.phoneErrorMessage ? data.phoneErrorMessage : \"\"}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        select\r\n                        disabled={props.userInfo ? props.userInfo.roleUsed === 'root' ? false : true : true}\r\n                        label='Phone Status'\r\n                        value={data.phoneVerified}\r\n                        onChange={handleChange('phoneVerified')}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                    >\r\n                        <MenuItem value='Verified'>\r\n                            Verified\r\n                        </MenuItem>\r\n                        <MenuItem value='Not Verified'>\r\n                            Not Verified\r\n                        </MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        fullWidth\r\n                        label='Name'\r\n                        id='name'\r\n                        onChange={handleChange('name')}\r\n                        value={data.basicInformation ? data.basicInformation.name : \"\"}\r\n                        // error={data.nameErrorMessage?true:false}\r\n                        // helperText={data.nameErrorMessage?data.nameErrorMessage:\"\"}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        label='Profile URL'\r\n                        id='profile'\r\n                        onChange={handleChange('profile')}\r\n                        value={data.basicInformation ? data.basicInformation.profile : \"\"}\r\n                        error={data.urlDestinationErrorMessage ? true : false}\r\n                        helperText={data.urlDestinationErrorMessage ? data.urlDestinationErrorMessage : \"\"}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        select\r\n                        label='Gender'\r\n                        onChange={handleChange('gender')}\r\n                        id='gender'\r\n                        value={data.basicInformation ? data.basicInformation.gender : \"\"}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                    >\r\n                        <MenuItem key={'male'} value={'male'}>\r\n                            Male\r\n                        </MenuItem>\r\n                        <MenuItem key={'female'} value={'female'}>\r\n                            Female\r\n                        </MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        fullWidth\r\n                        label='Address'\r\n                        id='address'\r\n                        onChange={handleChange('address')}\r\n                        value={data.basicInformation ? data.basicInformation.address : \"\"}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n                    <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                        <Button color='primary' variant='contained' onClick={handleEditRequest}\r\n                            className={classes.addButton}>\r\n                            Edit\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                        <Button onClick={handleClose} color='secondary' variant='contained' className={classes.addButton}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UpdateUserBasicInfoDialog)","\r\nimport React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { connect } from 'react-redux'\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport BackIcon from '@material-ui/icons/ArrowBack';\r\nimport Button from '@material-ui/core/Button';\r\nimport UpdateUserDialog from './UpdateUserDialog'\r\nimport AddClientDialog from './AddClientDialog'\r\nimport BasicUserInfomation from './BasicUserInformation';\r\nimport UpdateUserBasicInfoDialog from './UpdateUserBasicInfoDialog';\r\nimport { sendImageToService } from '../../../services/ServiceClient'\r\n// import { ca } from 'date-fns/locale';\r\nimport Config from '../../../config'\r\n\r\n\r\nconst FormDialog = ({ ...props }) => {\r\n\r\n  const { userList ,userInfo} = props\r\n  const [saveDisabled, setSaveDisabled] = useState(true)\r\n  const [data, setData] = useState([])\r\n  const [clientData, setClientData] = useState({})\r\n  const [state, setState] = useState({ clientList: [], dataToUpdate: null, open: false, addClientOpen: false, openEditBasicInfo: false })\r\n  const [saveRequest, setSaveRequest] = useState(null)\r\n  const [updateUser, setUpdateUser] = useState(false)\r\n\r\n  // console.log('userList', userList)\r\n\r\n  useEffect(() => {\r\n    if (updateUser) {\r\n      // console.log('update user is click')\r\n      let userIsId = userList.filter(item => item.userId === clientData.userId)\r\n      setClientData(userIsId[0])\r\n    }\r\n  }, [clientData, updateUser, userList])\r\n\r\n  const callbackUseEffect = () =>{\r\n    let oldData = props.data ? props.data.userRole : []\r\n    let data = []\r\n    let newList = []\r\n    if (oldData.length !== 0) {\r\n      oldData.forEach(item => {\r\n        let roleList = item.resourcesAllowedList\r\n          ? Array.isArray(item.resourcesAllowedList)\r\n            ? item.resourcesAllowedList.join(', ')\r\n            : item.resourcesAllowedList\r\n          : '-'\r\n        item.roleList = roleList\r\n        data.push(item)\r\n      })\r\n      setData(data)\r\n      setClientData(props.data)\r\n    }\r\n\r\n    props.clientList && props.clientList.forEach(item => {\r\n      let obj = {}\r\n      let newRoleList = Array.isArray(item.clientRoles)\r\n        ? item.clientRoles.map(child => child.roleId)\r\n        : item.clientRoles ? item.clientRoles\r\n          : ['client jadul jgn dipake']\r\n      obj.client = item.clientId\r\n      obj.roleList = newRoleList\r\n      newList.push(obj)\r\n    })\r\n    setState({\r\n      ...state,\r\n      clientList: newList,\r\n    })\r\n  }\r\n\r\n  useEffect(callbackUseEffect, [])\r\n\r\n  useEffect(() => {\r\n    if (props.updateUser && props.updateUser.length === 1) {\r\n      let oldData = props.updateUser[0].userRole\r\n      let data = []\r\n\r\n      oldData.forEach(item => {\r\n        let roleList = item.resourcesAllowedList\r\n          ? Array.isArray(item.resourcesAllowedList)\r\n            ? item.resourcesAllowedList.join(', ')\r\n            : item.resourcesAllowedList\r\n          : '-'\r\n        item.roleList = roleList\r\n        data.push(item)\r\n      })\r\n      setData(data)\r\n      setClientData(props.updateUser[0])\r\n\r\n\r\n      ////\r\n      // setData(props.updateUser[0].userRole)\r\n      // setClientData(props.updateUser[0])\r\n    }\r\n  }, [props.updateUser])\r\n\r\n  const handleClose = () => {\r\n    setData([])\r\n    setClientData({})\r\n    props._setUserFilteredList([])\r\n    props.handleClose()\r\n  };\r\n\r\n  const handleUpdate = dataToUpdate => {\r\n    setState({\r\n      ...state,\r\n      dataToUpdate,\r\n      open: true,\r\n    })\r\n  }\r\n\r\n  const handleDeleteClient = oldData => new Promise((resolve, reject) => {\r\n    // console.log(\"Data to Delete: \", oldData)\r\n    // console.log(\"Data to Delete: \", data)\r\n    resolve()\r\n  })\r\n\r\n  const handleOpenEditCLient = val => {\r\n    setState({\r\n      ...state,\r\n      open: val\r\n    })\r\n  }\r\n\r\n  const handleSaveRole = val => {\r\n    setSaveDisabled(false)\r\n    let userRoleToUpdate = []\r\n    data.forEach(item => {\r\n      let dataToPush = {\r\n        clientId: item.client,\r\n        resourcesAllowedList: item.resourcesAllowedList\r\n      }\r\n      userRoleToUpdate.push(dataToPush)\r\n    })\r\n\r\n    let request = { userRoleToUpdate, }\r\n    let method = 'PATCH'\r\n    let serviceCode = 'UPDATE_USER_ROLE'\r\n    let urlParams = `/users/${clientData.userId}/roles`\r\n\r\n    let completeRequest = { request, method, serviceCode, urlParams }\r\n    setSaveRequest(completeRequest)\r\n  }\r\n\r\n  const sendUpdateRoleRequest = () => {\r\n    props.sendUpdateRequest(saveRequest)\r\n    setSaveDisabled(true)\r\n    // props.handleClose()\r\n  }\r\n\r\n  const handleAddClient = (addClientRequest) => {\r\n    props.sendUpdateRequest(addClientRequest)\r\n    // props.handleClose()\r\n  }\r\n\r\n\r\n  const handleOpenAddClient = val => {\r\n    setState({\r\n      ...state,\r\n      addClientOpen: val\r\n    })\r\n  }\r\n\r\n  const handleOpenEditBasic = val => {\r\n    setState({\r\n      ...state,\r\n      openEditBasicInfo: val\r\n    })\r\n  }\r\n  const backToTable = () => {\r\n    props.handleClose(false)\r\n  }\r\n  const handleEditBasicRequest = (state, capture) => {\r\n    let id = state.userId\r\n    let emailVerified = state.basicInformation.emailVerifiedEdit ?\r\n      state.basicInformation.emailVerifiedEdit === 'Verified' ? true : false : null\r\n    let phoneVerified = state.basicInformation.phoneVerifiedEdit ?\r\n      state.basicInformation.phoneVerifiedEdit === 'Verified' ? true : false : null\r\n    let request = {\r\n      attributeToUpdate: {\r\n        email: state.emailEdit,\r\n        phone: state.phoneEdit,\r\n        gender: state.basicInformation.genderEdit,\r\n        address: state.basicInformation.addressEdit,\r\n        profile: state.basicInformation.profileEdit,\r\n        name: state.basicInformation.nameEdit,\r\n        picture: capture.data,\r\n        emailVerified: emailVerified,\r\n        phoneVerified: phoneVerified\r\n      },\r\n      id: state.userId\r\n    }\r\n    Object.keys(request.attributeToUpdate).forEach(item => {\r\n      if (request.attributeToUpdate[item] === null || request.attributeToUpdate[item] === undefined || request.attributeToUpdate[item] === '') {\r\n        delete request.attributeToUpdate[item]\r\n      }\r\n    })\r\n    // console.log('useerId',id)\r\n    let requestAllUser = {\r\n      request,\r\n      method: \"PATCH\",\r\n      serviceCode: \"UPDATE_BASIC_USER\",\r\n      urlParams: `/users/${id}`\r\n    }\r\n    console.log('Request', request)\r\n    if (capture.data) {\r\n      const promise1 = () => new Promise((resolve, reject) => {\r\n\r\n        resolve('next-promise')\r\n      })\r\n      sendImageToService(capture.images[0], capture.images[0].type)\r\n        .then(result => {\r\n          console.log('body', result)\r\n          if (result.type === 'error') {\r\n            return Promise.reject()\r\n          }\r\n          else {\r\n            let body = result\r\n            let uuid = body.ID\r\n            requestAllUser.request.attributeToUpdate.picture = `${Config.gatewayRepoFile}/static-file-manager/retrieve?file=${uuid}`\r\n            props.sendUpdateRequest(requestAllUser)\r\n            return promise1()\r\n          }\r\n        }).then(res => {\r\n          setUpdateUser(true)\r\n        })\r\n        .catch(e => {\r\n          console.log(e)\r\n        })\r\n    }\r\n    else {\r\n      const promise = () => new Promise((resolve, reject) => {\r\n        props.sendUpdateRequest(requestAllUser)\r\n        resolve('next-promise')\r\n      })\r\n      promise()\r\n        .then(res => {\r\n          setUpdateUser(true)\r\n        })\r\n    }\r\n    handleOpenEditBasic(false)\r\n  }\r\n  return (\r\n    <Card style={{ display: 'flex', flexWrap: 'wrap', }}>\r\n\r\n      <UpdateUserDialog\r\n        handleSave={handleSaveRole}\r\n        dataToUpdate={state.dataToUpdate}\r\n        data={clientData}\r\n        clientList={state.clientList}\r\n        open={state.open}\r\n        handleOpen={handleOpenEditCLient}\r\n\r\n      />\r\n\r\n      <AddClientDialog\r\n        open={state.addClientOpen}\r\n        handleOpen={handleOpenAddClient}\r\n        clientList={props.clientList}\r\n        clientData={clientData}\r\n        handleAddClient={handleAddClient}\r\n      />\r\n      <UpdateUserBasicInfoDialog\r\n        open={state.openEditBasicInfo}\r\n        handleClose={handleOpenEditBasic}\r\n        clientData={clientData}\r\n        userInfo ={userInfo}\r\n        title={'Edit Basic Information'}\r\n        completeRequest={handleEditBasicRequest}\r\n        backToTable={backToTable}\r\n      />\r\n\r\n      <Grid style={{ margin: 35, marginTop: 15 }} container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n          <Button onClick={handleClose} color=\"secondary\" startIcon={<BackIcon />} size='large' variant='outlined' >\r\n            Back\r\n          </Button>\r\n        </Grid>\r\n        <BasicUserInfomation\r\n          clientData={clientData}\r\n          handleOpenEdit={handleOpenEditBasic}\r\n        // handleClose ={handleClose}\r\n        />\r\n        {/* <Grid style={{ marginTop: 15 }} container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={2} >\r\n          <Grid item xs={2}><Typography >Name</Typography></Grid>\r\n          <Grid item xs={10}><Typography >: {clientData ? clientData.name : \"\"}</Typography></Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={2} >\r\n          <Grid item xs={2}><Typography >Email</Typography></Grid>\r\n          <Grid item xs={10} > <Typography >: {clientData ? clientData.email : \"\"}</Typography></Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={2} >\r\n          <Grid item xs={2}><Typography >Phone</Typography></Grid>\r\n          <Grid item xs={10} > <Typography >: {clientData ? clientData.phone : \"\"}</Typography></Grid>\r\n        </Grid> */}\r\n        <Grid style={{ marginTop: 20 }} container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n          <Grid item xs={12} >\r\n            <MaterialTable\r\n              style={{ width: '100%' }}\r\n              title=\"User Role List\"\r\n              columns={[\r\n                { title: 'Client', field: 'client', width: 300 },\r\n                { title: 'Role', field: 'roleList' },\r\n              ]}\r\n              data={data}\r\n              editable={{\r\n                // onRowAdd: (newData) =>\r\n                //   new Promise((resolve) => {\r\n                //     setTimeout(() => {\r\n                //       resolve();\r\n                //       setState((prevState) => {\r\n                //         const data = [...prevState.data];\r\n                //         data.push(newData);\r\n                //         return { ...prevState, data };\r\n                //       });\r\n                //     }, 600);\r\n                //   }),\r\n                // onRowUpdate: (newData, oldData) =>\r\n                //   new Promise((resolve) => {\r\n                //     handleUpdate(newData, oldData).then(result => resolve())\r\n                //   }),\r\n                onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                    handleDeleteClient(oldData).then(result => resolve())\r\n                  }),\r\n              }}\r\n              actions={[\r\n                {\r\n                  icon: 'edit',\r\n                  tooltip: 'Update Role',\r\n                  onClick: (event, rowData) => handleUpdate(rowData)\r\n                },\r\n                // {\r\n                //   icon: 'delete',\r\n                //   tooltip: 'Delete Client',\r\n                //   onClick: (event, rowData) => handleDeleteClient(rowData)\r\n                // }\r\n              ]}\r\n              options={{\r\n                actionsColumnIndex: -1,\r\n                padding: 'dense'\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid style={{ marginTop: 20 }} container direction=\"row\" justify='space-evenly' alignItems=\"flex-start\" >\r\n          {\r\n            state.clientList.length > 1\r\n              ? <Button onClick={() => setState({ ...state, addClientOpen: true })} variant='contained' color=\"primary\"\r\n                startIcon={<AddIcon />}\r\n              >\r\n                Add Client to User\r\n              </Button>\r\n              : null\r\n          }\r\n\r\n          <Button onClick={sendUpdateRoleRequest} variant='contained' color=\"primary\" disabled={saveDisabled}\r\n            startIcon={<EditIcon />}\r\n          >\r\n            Save Role\r\n        </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  userList: store.userList.list,\r\n  userInfo: store.userInfo\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog)\r\n","\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst options = [\r\n  'Soft Delete',\r\n  'Force Delete',\r\n];\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n  const { userName, onClose, value: valueProp, open, handleChoose, header, content, ...other } = props;\r\n  const [value, setValue] = React.useState(valueProp);\r\n  const radioGroupRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setValue(valueProp);\r\n    }\r\n  }, [valueProp, open]);\r\n\r\n  const handleEntering = () => {\r\n    if (radioGroupRef.current != null) {\r\n      radioGroupRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    onClose();\r\n  };\r\n\r\n  const handleOk = () => {\r\n    handleChoose(value)\r\n    onClose(value);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      maxWidth=\"sm\"\r\n      onEntering={handleEntering}\r\n      aria-labelledby=\"confirmation-dialog-title\"\r\n      open={open}\r\n      {...other}\r\n    >\r\n      {\r\n        header\r\n          ? <DialogTitle id=\"confirmation-dialog-title\">{header}</DialogTitle>\r\n          : <DialogTitle id=\"confirmation-dialog-title\">Deleting: {userName}</DialogTitle>\r\n      }\r\n\r\n      <DialogContent dividers>\r\n        {\r\n          content\r\n            ? <Typography variant=\"subtitle2\">{content}</Typography>\r\n            : <RadioGroup\r\n              ref={radioGroupRef}\r\n              aria-label=\"ringtone\"\r\n              name=\"ringtone\"\r\n              value={value}\r\n              onChange={handleChange}\r\n            >\r\n              {options.map((option, i) => (\r\n                <FormControlLabel value={option}  control={<Radio />} label={option} key={i + 3} />\r\n              ))}\r\n            </RadioGroup>\r\n        }\r\n\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button autoFocus onClick={handleCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleOk} color=\"primary\">\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default ConfirmationDialogRaw","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Grid } from '@material-ui/core';\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole,\r\n} from '../../../actions/ServiceActions'\r\n\r\nimport UserRUDTable from './UserRUDTable'\r\nimport UserDetail from './UserDetail'\r\nimport ConfirmationDialogRaw from './ConfirmationDIalog'\r\nimport { setUserFilteredList } from '../../../actions/UserListActions';\r\n\r\nconst UserList = ({ ...props }) => {\r\n  const { _setOpenScreen, _setCompleteRequest, _setUserFilteredList, clientList,\r\n    userInfo, userList, updateUser } = props\r\n  const [open, setOpen] = useState(false);\r\n  const value = 'Soft Delete'\r\n  const [requestDeleteUser, setRequestDeleteUser] = useState({})\r\n  const [userName, setUserName] = useState('')\r\n\r\n  useEffect(() => {\r\n    // console.log(\"KOK DUA KALI: \", userList)\r\n    const { name, email, phone } = userInfo\r\n    // let name = userInfo.name\r\n    // let email = userInfo.email\r\n    // let phone = userInfo.phone\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    _setOpenScreen(\"User List\")\r\n    let requestAllUser = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"SELECT_ALL_USER\",\r\n      customHeaders\r\n    }\r\n    if (userList.length < 1) _setCompleteRequest(requestAllUser)\r\n  }, [_setOpenScreen, userList.length, _setCompleteRequest, userInfo])\r\n\r\n  const [values, setValues] = useState({\r\n    columns: [\r\n      { title: 'Name', field: 'name', },\r\n      { title: 'Email', field: 'email', },\r\n      { title: 'Phone', field: 'phone', },\r\n      { title: 'isVerified', field: 'isverified', lookup: { '01': 'False', '02': 'True' } },\r\n    ],\r\n    data: [],\r\n    dataToProcess: null,\r\n  });\r\n\r\n  const [states, setStates] = useState({\r\n    open: false,\r\n\r\n  })\r\n\r\n  useEffect(() => {\r\n    // let aud = ''\r\n    // if (userInfo.aud) aud = userInfo.aud\r\n    // else if (localStorage.getItem('aud')) aud = localStorage.getItem('aud')\r\n    // if (aud === 'authentication-backoffice') aud = ''\r\n\r\n    // let role = ''\r\n    // if (userInfo.role && userInfo.role.includes(roleAuth.endUser)) role = roleAuth.endUser\r\n    // if (userInfo.role && userInfo.role.includes(roleAuth.admin)) role = roleAuth.admin\r\n    // if (userInfo.role && userInfo.role.includes(roleAuth.root)) role = roleAuth.root\r\n    // console.log(\"DISINIKAH\")\r\n    const {name, email, phone} = userInfo\r\n    // let name = userInfo.name\r\n    // let email = userInfo.email\r\n    // let phone = userInfo.phone\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let requestAllClient = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"SELECT_ALL_CLIENT\",\r\n      // urlParams: '/clients' + (aud ? '/' + aud : ''),\r\n      customHeaders\r\n    }\r\n    if (clientList.length < 1 && userInfo.email) {\r\n      setTimeout(() => {\r\n        _setCompleteRequest(requestAllClient)\r\n      }, 100);\r\n    }\r\n    let newList = [...userList]\r\n    newList.forEach(item => {\r\n      item.name = item.basicInformation.name\r\n      item.isverified = (item.phoneVerified || item.emailVerified) ? '02' : '01'\r\n    })\r\n    setValues(oldVal => ({\r\n      ...oldVal,\r\n      data: newList\r\n    }))\r\n  }, [userList, userInfo, _setCompleteRequest, clientList.length])\r\n\r\n  useEffect(() => {\r\n    if (clientList[0]) {\r\n      clientList.forEach(item => {\r\n        item.originURIs = Array.isArray(item.originURIs) ? item.originURIs.join(', ') : item.originURIs\r\n        item.roleDetails = item.roleDetails ? item.roleDetails : Array.isArray(item.clientRoles) ? item.clientRoles : \"\"\r\n        item.clientRoles = item.roleDetails\r\n      })\r\n    }\r\n  }, [clientList])\r\n\r\n  useEffect(() => {\r\n    let newList = [...userList]\r\n    newList.forEach(item => {\r\n      item.name = item.basicInformation.name\r\n      item.isverified = (item.phoneVerified || item.emailVerified) ? '02' : '01'\r\n    })\r\n    setValues(oldVal => ({\r\n      ...oldVal,\r\n      data: newList\r\n    }))\r\n\r\n  }, [updateUser, userList])\r\n\r\n  const handleUpdate = (newData, oldData) => new Promise((resolve, reject) => {\r\n    if (oldData) {\r\n      setValues((prevState) => {\r\n        const data = [...prevState.data];\r\n        data[data.indexOf(oldData)] = newData;\r\n        return { ...prevState, data };\r\n      })\r\n      resolve()\r\n    }\r\n  })\r\n\r\n  const handleDelete = oldData => new Promise((resolve, reject) => {\r\n    let userId = oldData.userId\r\n    let request = {}\r\n    let method = 'DELETE'\r\n    let serviceCode = 'DELETE_USER'\r\n    let urlParams = `/users/${userId}`\r\n\r\n    let completeRequest = { request, method, serviceCode, urlParams }\r\n    setRequestDeleteUser(completeRequest)\r\n    setUserName(oldData.name)\r\n    setOpen(true)\r\n    resolve()\r\n  })\r\n\r\n  const handleChoose = (val) => {\r\n    if (val === 'Soft Delete') {\r\n      props._setCompleteRequest(requestDeleteUser)\r\n    }\r\n    else {\r\n      requestDeleteUser.request.isForceDelete = true\r\n      props._setCompleteRequest(requestDeleteUser)\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleRowClicked = rowData => {\r\n    setValues({ ...values, dataToProcess: rowData })\r\n    setStates({ ...states, open: true })\r\n  }\r\n\r\n  const sendUpdateRequest = completeRequest => {\r\n    _setCompleteRequest(completeRequest)\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      {states.open\r\n        ? <UserDetail\r\n          clientList={clientList}\r\n          open={states.open}\r\n          handleClose={() => setStates({ ...states, open: false })}\r\n          data={values.dataToProcess}\r\n          sendUpdateRequest={sendUpdateRequest}\r\n          updateUser={updateUser}\r\n          _setUserFilteredList={_setUserFilteredList}\r\n        />\r\n        : <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" >\r\n          <UserRUDTable\r\n            confirmdeletetext=\"Apakah anda yakin menghapus data ini?\"\r\n            title=\"Backoffice User List\"\r\n            columns={values.columns}\r\n            data={values.data}\r\n            updatedata={handleUpdate}\r\n            deletedata={handleDelete}\r\n            rowClicked={handleRowClicked}\r\n            action\r\n          />\r\n\r\n          < ConfirmationDialogRaw\r\n            id=\"ringtone-menu\"\r\n            keepMounted\r\n            open={open}\r\n            onClose={handleClose}\r\n            value={value}\r\n            handleChoose={handleChoose}\r\n            userName={userName}\r\n          />\r\n        </Grid>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  userList: store.userList.list,\r\n  userDetail: store.userList.detail,\r\n  userFiltered: store.userList.filteredList,\r\n  userInfo: store.userInfo.info,\r\n  clientList: store.clientList.list,\r\n  roleAuth: store.system.roleAuth,\r\n  updateUser: store.userList.filteredList\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  _setOpenScreen: val => dispatch(setOpenScreen(val)),\r\n  _setUserFilteredList: val => dispatch(setUserFilteredList(val)),\r\n  _setCompleteRequest: (val) => {\r\n    dispatch(setServiceRequest(val.request))\r\n    dispatch(setServiceMethod(val.method))\r\n    dispatch(setServiceCode(val.serviceCode))\r\n    dispatch(setServiceParams(val.urlParams))\r\n    dispatch(setServiceCustomHeaders(val.customHeaders))\r\n    dispatch(setServiceRole(val.serviceRole))\r\n    dispatch(setServiceStatus(\"active\"))\r\n  },\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList)\r\n","\r\nimport React, { useState, } from 'react';\r\nimport { Grid, Typography, Button, } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { FormHelperText } from '@material-ui/core';\r\nimport FormatText from '../../../i18n'\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst AddClientDialog = ({ ...props }) => {\r\n  const { handleAddUser, handleOpen, open, userInfo, paxList } = props\r\n  const [form, setForm] = useState({\r\n    // resource: [],\r\n    // assignedUserRole: [],\r\n    // resourcelist: [],\r\n    nameErrorMessage: false,\r\n    emailErrorMessage: false,\r\n    phoneErrorMessage: false,\r\n    notComplete: false\r\n  })\r\n\r\n  const handleClose = () => {\r\n    handleOpen(false)\r\n    setForm({\r\n      // resource: [],\r\n      // assignedUserRole: [],\r\n      // resourcelist: [],\r\n      clientRoles: [],\r\n      nameErrorMessage: false,\r\n      emailErrorMessage: false,\r\n      phoneErrorMessage: false,\r\n      notComplete: false\r\n    })\r\n  };\r\n\r\n  const handleChange = prop => e => {\r\n    e.preventDefault()\r\n    let val = e.target.value\r\n    let valid = FormValidation(prop, val)\r\n    // console.log(val)\r\n\r\n    if (val[0] === \"0\") console.log(\"+62\" + val.slice(1))\r\n\r\n    setForm({\r\n      ...form,\r\n      [prop]: val,\r\n      [prop + 'ErrorMessage']: valid.errorMessage,\r\n      notComplete: false\r\n    })\r\n  }\r\n\r\n  const handleCancel = e => {\r\n    handleOpen(false)\r\n    e.preventDefault()\r\n    setForm({\r\n      // resource: [],\r\n      // assignedUserRole: [],\r\n      // resourcelist: [],\r\n      clientRoles: [],\r\n    })\r\n  }\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault()\r\n    const { emailErrorMessage, nameErrorMessage, phoneErrorMessage } = form\r\n    if (!emailErrorMessage && !nameErrorMessage && !phoneErrorMessage) {\r\n      const id = paxList.clinicDetail.id ? paxList.clinicDetail.id : paxList.clinicUser.id ? paxList.clinicUser.id : 0\r\n      const { email, } = form\r\n      let customHeaders = { name: userInfo.name, email: userInfo.email, }\r\n      if (userInfo.phone) customHeaders.phone = userInfo.phone\r\n\r\n      let objReq = { email }\r\n      // if (phone) objReq.phone = phone\r\n\r\n      let addClinicUserRequest = {\r\n        request: [objReq],\r\n        method: \"POST\",\r\n        serviceCode: \"ADD_CLINIC_USER\",\r\n        urlParams: `/${id}/users`,\r\n        customHeaders,\r\n      }\r\n\r\n      let getClinicUserRequest = {\r\n        request: {},\r\n        method: \"GET\",\r\n        serviceCode: \"GET_CLINIC_USER\",\r\n        urlParams: `/${id}`,\r\n        customHeaders,\r\n      }\r\n      // console.log(\"HALAH: \", addClinicUserRequest, getClinicUserRequest)\r\n      handleAddUser(addClinicUserRequest, getClinicUserRequest)\r\n    }\r\n    else {\r\n      setForm({\r\n        ...form,\r\n        notComplete: true\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth={'xs'} open={open} onClose={handleClose} scroll={'paper'} >\r\n      <DialogTitle id=\"max-width-dialog-title\" onClose={handleClose}>{props.label}</DialogTitle>\r\n      <DialogContent dividers>\r\n        <center>\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems='center' >\r\n            <Grid item sm={12}>\r\n              {/* <TextField\r\n                size=\"small\"\r\n                onChange={handleChange('name')}\r\n                id=\"standard-name\"\r\n                label={FormatText('app_name')}\r\n                placeholder=\"Full Name\"\r\n                helperText={form.nameErrorMessage ? form.nameErrorMessage : \"\"}\r\n                error={form.nameErrorMessage ? true : false}\r\n                fullWidth\r\n                margin='dense'\r\n                value={form.name}\r\n              /> */}\r\n              <TextField\r\n                size=\"small\"\r\n                onChange={handleChange('email')}\r\n                id=\"standard-email\"\r\n                label={FormatText('app_email')}\r\n                placeholder=\"Email\"\r\n                helperText={form.emailErrorMessage ? form.emailErrorMessage : \"\"}\r\n                error={form.emailErrorMessage ? true : false}\r\n                fullWidth\r\n                margin='dense'\r\n                value={form.email}\r\n              />\r\n              {/* <TextField\r\n                size=\"small\"\r\n                onChange={handleChange('phone')}\r\n                id=\"standard-phone\"\r\n                label={FormatText('app_phone')}\r\n                placeholder=\"081234567890\"\r\n                helperText={form.phoneErrorMessage ? form.phoneErrorMessage : \"\"}\r\n                error={form.phoneErrorMessage ? true : false}\r\n                fullWidth\r\n                margin='dense'\r\n                value={form.phone}\r\n              /> */}\r\n\r\n            </Grid>\r\n          </Grid>\r\n          {form.notComplete\r\n            ? <Grid container direction=\"row\" justify=\"center\" alignItems='center' >\r\n              <FormHelperText error >{FormatText('err_submit')}</FormHelperText>\r\n            </Grid>\r\n            : null\r\n          }\r\n        </center>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button variant='outlined' color=\"primary\" onClick={handleCancel}>\r\n              {FormatText('app_cancel')}\r\n            </Button>\r\n          </Grid>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button variant='contained' color=\"primary\" onClick={handleSave}>\r\n              {FormatText('common_add')}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddClientDialog\r\n","\r\nimport React, { useState, useEffect, } from 'react';\r\nimport { Grid, Typography, Button, Avatar, } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// import { FormValidation } from '../../../utils/FormValidation';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import { FormHelperText } from '@material-ui/core';\r\nimport FormatText from '../../../i18n'\r\nimport { resizeImage } from \"../../../utils/utils\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst LogoPreviewDialog = ({ ...props }) => {\r\n  const { handleOpen, imgPreview, setImgPreview, open, setImageFile, handleSaveImage, _setSnackbar } = props\r\n  const [validation, setValidation] = useState({ error: false, errorMessage: \"\" })\r\n  const [ownPreview, setOwnPreview] = useState(null)\r\n  const [changeDisabled, setChangeDisabled] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (open && !ownPreview) setOwnPreview(imgPreview)\r\n  }, [open, ownPreview, imgPreview])\r\n\r\n  const handleClose = () => {\r\n    handleOpen(false)\r\n  };\r\n\r\n  const handleCancel = e => {\r\n    setOwnPreview(imgPreview)\r\n    handleOpen(false)\r\n    e.preventDefault()\r\n  }\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault()\r\n    setImgPreview(ownPreview)\r\n    setOwnPreview(null)\r\n    handleOpen(false)\r\n    handleSaveImage()\r\n  }\r\n\r\n  const fileSelected = async e => {\r\n    setValidation({ error: false, errorMessage: '', })\r\n\r\n    let errorSnackbar = { open: true, severity: \"warning\", }\r\n\r\n    let file = e.target.files[0]\r\n    if (file) {\r\n      if (!file.type.includes('image')) setValidation({ error: true, errorMessage: 'Must be image file', })\r\n      else if (file.size > 2000000) setValidation({ error: true, errorMessage: 'Image is bigger than 2 MB', })\r\n      else {\r\n        const data = await resizeImage(file);\r\n        if (data.message) {\r\n          errorSnackbar.message = data.message\r\n          _setSnackbar(errorSnackbar)\r\n        }\r\n        setOwnPreview(data.blobUrl)\r\n        setImageFile(data.file)\r\n        // setImageType(data.type)\r\n        setChangeDisabled(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth={'xs'} open={open} onClose={handleClose} scroll={'paper'} >\r\n      <DialogTitle id=\"max-width-dialog-title\" onClose={handleClose}>{props.label}</DialogTitle>\r\n      <DialogContent dividers>\r\n        <center>\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems='center' >\r\n            <Grid item sm={12}>\r\n\r\n              <Avatar\r\n                src={ownPreview}\r\n                variant='rounded'\r\n                style={{ width: 150, height: 150 }}\r\n              />\r\n\r\n              <div>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  onChange={fileSelected}\r\n                  style={{ display: 'none' }}\r\n                  id=\"raised-button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                />\r\n                <div style={{ marginTop: 10 }} >\r\n                  <label htmlFor=\"raised-button-file\">\r\n                    <Typography color='error' variant='caption' >{validation.errorMessage}</Typography>\r\n                    <Button variant='outlined' component=\"span\" size='small' color='primary' >\r\n                      {FormatText('app_select_photo')}\r\n                    </Button>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </center>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button variant='outlined' color=\"primary\" onClick={handleCancel}>\r\n              {FormatText('app_cancel')}\r\n            </Button>\r\n          </Grid>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button disabled={changeDisabled} variant='contained' color=\"primary\" onClick={handleSave}>\r\n              {FormatText('common_change')}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default LogoPreviewDialog\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Grid, Card, Typography, Button, Tooltip, Paper, IconButton } from '@material-ui/core'\r\nimport MaterialTable from 'material-table'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack'\r\n\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole, setSecondRequest,\r\n} from '../../../actions/ServiceActions'\r\n\r\nimport { setUserFilteredList } from '../../../actions/UserListActions';\r\nimport AddUserDialog from './AddUserDialog'\r\nimport ConfirmationDialogRaw from '../../voltrasadmin/userlist/ConfirmationDIalog';\r\nimport FormatText from '../../../i18n'\r\nimport LogoPreviewDialog from './LogoPreviewDialog';\r\nimport { sendImageToService } from '../../../services/ServiceClient';\r\nimport Config from '../../../config';\r\nimport { setSnackbar } from '../../../actions/FeedbackActions';\r\n\r\nconst ClinicSetting = ({ ...props }) => {\r\n  const { _setOpenScreen, _setCompleteRequest, _setSecondRequest, userInfo, roleUsed, paxList, _setSnackbar, history } = props\r\n  const [clinic, setClinic] = useState({})\r\n  const [clinicUser, setClinicUser] = useState([])\r\n  const [state, setState] = useState({ clientList: [], dataToUpdate: null, open: false, addClientOpen: false })\r\n  // const [image, setImage] = useState(null)\r\n  const [imgPreview, setImgPreview] = useState(null)\r\n  const [imageFile, setImageFile] = useState(null)\r\n  const [imageType, setImageType] = useState(null)\r\n  const [popUpPreview, setPopUpPreview] = useState(false)\r\n  const [open, setOpen] = useState(false);\r\n  const [userToDelete, setUserToDelete] = useState(null)\r\n\r\n  useEffect(() => {\r\n    // console.log(\"satu\", userInfo)\r\n    const { name, email, phone } = userInfo\r\n    // let name = userInfo.name ? userInfo.name : ''\r\n    // let email = userInfo.email ? userInfo.email : ''\r\n    // let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    if ((roleUsed === 'biofarma.admin') || (roleUsed === 'voltras.admin')) {\r\n      let clinicClickedId = paxList.clinicDetail.id\r\n      let getClinicUserRequest = {\r\n        request: {},\r\n        method: \"GET\",\r\n        serviceCode: \"GET_CLINIC_USER\",\r\n        urlParams: `/${clinicClickedId}`,\r\n        customHeaders,\r\n      }\r\n      _setCompleteRequest(getClinicUserRequest)\r\n    }\r\n    else if ((roleUsed === 'clinic.admin') || (roleUsed === 'clinic.operator')) {\r\n      let myClinicRequest = {\r\n        request: {},\r\n        method: \"GET\",\r\n        serviceCode: \"GET_MY_CLINIC\",\r\n        customHeaders,\r\n      }\r\n      _setCompleteRequest(myClinicRequest)\r\n      _setSecondRequest(true)\r\n\r\n    }\r\n    else {\r\n      console.log(\"NO ROLE\", userInfo)\r\n    }\r\n    _setOpenScreen(\"Clinic Setting\")\r\n    // console.log(\"dua\")\r\n    // setClinic(paxList.clinicDetail || paxList.clinicUser)\r\n    // if (paxList.clinicUser && paxList.clinicUser.logo_url) setImgPreview(paxList.clinicUser.logo_url)\r\n  }, [userInfo, roleUsed, _setOpenScreen, paxList.clinicDetail, _setCompleteRequest, _setSecondRequest,])\r\n\r\n\r\n  useEffect(() => { }, [])\r\n\r\n  useEffect(() => {\r\n    // console.log(\"clinicDetail\", paxList.clinicDetail)\r\n    let clinicToSet = {}\r\n    if (paxList) {\r\n      if (paxList.clinicDetail && paxList.clinicDetail.id) clinicToSet = paxList.clinicDetail\r\n      else if (paxList.clinicUser && paxList.clinicUser.id) clinicToSet = paxList.clinicUser\r\n      else clinicToSet = {}\r\n    }\r\n    else clinicToSet = {}\r\n    setClinic(clinicToSet)\r\n    if (clinicToSet.logo_url) setImgPreview(clinicToSet.logo_url)\r\n    if (paxList.clinicUser && paxList.clinicUser.users.length > 0) {\r\n      // console.log(paxList.clinicUser.users)\r\n      let oldUsers = paxList.clinicUser.users\r\n      let newUsers = oldUsers.map(item => {\r\n        let rolesStr = Array.isArray(item.roles) ? item.roles.join(', ').replace('member, ', '') : \"\"\r\n        item.roles = rolesStr\r\n        return item\r\n      })\r\n      setClinicUser(newUsers)\r\n    }\r\n\r\n  }, [paxList])\r\n\r\n  const handleOpenAddClient = val => {\r\n    setState({\r\n      ...state,\r\n      addClientOpen: val\r\n    })\r\n  }\r\n\r\n  const handleAddUser = (request, secondRequest) => {\r\n    _setCompleteRequest(request)\r\n    _setSecondRequest(secondRequest)\r\n    handleOpenAddClient(false)\r\n  }\r\n\r\n  const handleDeleteUser = oldData => new Promise((resolve, reject) => {\r\n    // console.log(oldData)\r\n    // console.log(paxList.clinicDetail)\r\n    let creatorEmail = paxList.clinicDetail.creation\r\n      ? paxList.clinicDetail.creation.email\r\n      : paxList.clinicUser.creation\r\n        ? paxList.clinicUser.creation.email\r\n        : null\r\n    let errorSnackbar = { open: true, severity: \"warning\", message: \"Cannot delete clinic creator\", }\r\n\r\n    if (creatorEmail && (creatorEmail !== oldData.email)) {\r\n      setUserToDelete(oldData)\r\n      setOpen(true)\r\n    }\r\n    else _setSnackbar(errorSnackbar)\r\n    resolve()\r\n  })\r\n\r\n  const handleOpenLogoPreview = val => {\r\n    setPopUpPreview(val)\r\n  }\r\n\r\n  const handleSaveImage = () => {\r\n    let clinic_id = paxList.clinicUser.id || paxList.myClinic.clinic_id\r\n    let name = userInfo.name ? userInfo.name : ''\r\n    let email = userInfo.email ? userInfo.email : ''\r\n    let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    sendImageToService(imageFile, imageType, imageFile).then(response => {\r\n      if (response.ID) {\r\n        let imgUrl = Config.gatewayRepoFile + `/static-file-manager/retrieve?file=${response.ID}`\r\n        // console.log(imgUrl)\r\n\r\n        // POST /health/admin/clinic/{id}/logo_url\r\n        let addClinicLogoRequest = {\r\n          request: { url: imgUrl },\r\n          method: \"POST\",\r\n          serviceCode: \"ADD_CLINIC_LOGO\",\r\n          urlParams: `/${clinic_id}/logo_url`,\r\n          customHeaders,\r\n        }\r\n        _setCompleteRequest(addClinicLogoRequest)\r\n\r\n\r\n      }\r\n      else {\r\n        // setImgPreview(image)\r\n        console.log('wrong response')\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChoose = () => {\r\n    // DELETE /health/admin/clinics/{id}/users/{userid}\r\n    let oldData = userToDelete\r\n    let id = oldData.clinic_id\r\n    let userid = oldData.id\r\n    let customHeaders = { name: userInfo.name, email: userInfo.email }\r\n    if (userInfo.phone) customHeaders.phone = userInfo.phone\r\n    let deleteRequest = {\r\n      request: {},\r\n      method: \"DELETE\",\r\n      serviceCode: \"DELETE_CLINIC_USER\",\r\n      urlParams: `/${id}/users/${userid}`,\r\n      customHeaders,\r\n    }\r\n    let getClinicUserRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CLINIC_USER\",\r\n      urlParams: `/${id}`,\r\n      customHeaders,\r\n    }\r\n    // console.log(deleteRequest, getClinicUserRequest)\r\n    _setCompleteRequest(deleteRequest)\r\n    _setSecondRequest(getClinicUserRequest)\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AddUserDialog\r\n        label={FormatText('clinic_add_user')}\r\n        handleOpen={handleOpenAddClient}\r\n        open={state.addClientOpen}\r\n        clinicInfo={clinic}\r\n        userInfo={userInfo}\r\n        handleAddUser={handleAddUser}\r\n        paxList={paxList}\r\n      />\r\n      <LogoPreviewDialog\r\n        label={FormatText('clinic_logo')}\r\n        handleOpen={handleOpenLogoPreview}\r\n        open={popUpPreview}\r\n        imgPreview={imgPreview}\r\n        setImgPreview={setImgPreview}\r\n        setImageFile={setImageFile}\r\n        setImageType={setImageType}\r\n        handleSaveImage={handleSaveImage}\r\n        _setSnackbar={_setSnackbar}\r\n      />\r\n      <ConfirmationDialogRaw\r\n        id=\"delete-client\"\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        header=\"Delete User\"\r\n        content={userToDelete ? userToDelete.email : ''}\r\n        handleChoose={handleChoose}\r\n      />\r\n\r\n      <Card style={{ display: 'flex', flexWrap: 'wrap', }}>\r\n        <Grid style={{ margin: 40, marginTop: 1 }} container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n          <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={2} style={{ marginTop: 5 }} >\r\n            <Grid item xs={2}><Typography >{FormatText('clinic_logo')}</Typography></Grid>\r\n            <Grid item container xs={1} justify=\"flex-end\" alignItems=\"flex-end\" ><Typography >:</Typography></Grid>\r\n            <Grid item xs={4}>\r\n              {\r\n                imgPreview\r\n                  ? <Tooltip title={roleUsed === \"clinic.admin\" ? \"Click to change logo\" : \"Clinic Logo\"}>\r\n                    <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n                      <Grid item >\r\n                        <Paper elevation={1} onClick={() => roleUsed === \"clinic.admin\" ? handleOpenLogoPreview(true) : null}>\r\n                          <img\r\n                            src={imgPreview}\r\n                            style={{ height: 85 }}\r\n                            alt=\"Logo\"\r\n                          />\r\n                        </Paper>\r\n                      </Grid>\r\n                      <Grid item style={{ marginLeft: 10, visibility: roleUsed === \"clinic.admin\" ? 'visible' : 'hidden' }} >\r\n                        <IconButton color='inherit' onClick={() => roleUsed === \"clinic.admin\" ? handleOpenLogoPreview(true) : null} >\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </Grid>\r\n\r\n                    </Grid>\r\n                  </Tooltip>\r\n                  : roleUsed === \"clinic.admin\"\r\n                    ? <Button color='primary' variant='outlined' size='small' onClick={() => handleOpenLogoPreview(true)}>\r\n                      {FormatText('clinic_set_logo')}\r\n                    </Button>\r\n                    : null\r\n              }\r\n\r\n            </Grid>\r\n          </Grid>\r\n          <Grid style={{ marginTop: 15 }} container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={2}  >\r\n            <Grid item xs={2}><Typography >{FormatText('clinic')} ID</Typography></Grid>\r\n            <Grid item container xs={1} justify=\"flex-end\" alignItems=\"flex-end\" ><Typography >:</Typography></Grid>\r\n            <Grid item xs={8}><Typography >{clinic.id}</Typography></Grid>\r\n          </Grid>\r\n          <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={2}  >\r\n            <Grid item xs={2}><Typography >{FormatText('clinic_name')}</Typography></Grid>\r\n            <Grid item container xs={1} justify=\"flex-end\" alignItems=\"flex-end\" ><Typography >:</Typography></Grid>\r\n            <Grid item xs={8}><Typography >{clinic.name}</Typography></Grid>\r\n          </Grid>\r\n          <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={2} >\r\n            <Grid item xs={2}><Typography >{FormatText('common_address')}</Typography></Grid>\r\n            <Grid item container xs={1} justify=\"flex-end\" alignItems=\"flex-end\" ><Typography >:</Typography></Grid>\r\n            <Grid item xs={7}><Typography >{clinic.address}</Typography></Grid>\r\n          </Grid>\r\n          {/* {console.log(\"DATA TABEL\", clinic)} */}\r\n          <Grid style={{ marginTop: 20 }} container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n            <Grid item xs={12} >\r\n              <MaterialTable\r\n                style={{ width: '100%' }}\r\n                title={FormatText('clinic_user_list')}\r\n                columns={[\r\n                  { title: FormatText('app_name'), field: 'name' },\r\n                  { title: FormatText('app_email'), field: 'email' },\r\n                  { title: \"Role\", field: 'roles' },\r\n                  { title: FormatText('app_phone'), field: 'phone' },\r\n                  // { title: 'Role', field: 'role' },\r\n                ]}\r\n                data={clinicUser}\r\n                actions={[\r\n                  {\r\n                    icon: 'delete',\r\n                    tooltip: 'Delete User',\r\n                    onClick: (event, rowData) => handleDeleteUser(rowData),\r\n                  }\r\n                ]}\r\n                options={{\r\n                  actionsColumnIndex: -1,\r\n                  padding: 'dense',\r\n                  paging: false,\r\n\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid style={{ marginTop: 25 }} container direction=\"row\" justify='center' alignItems=\"center\" >\r\n            <Button style={{ width: 150, marginRight: 10, display: roleUsed === \"clinic.admin\" || roleUsed === \"clinic.operator\" ? \"none\" : \"\" }} variant='outlined' color=\"secondary\"\r\n              onClick={() => history.push('/KClinicList')}\r\n              startIcon={<ArrowBack />}\r\n            >\r\n              {FormatText('app_back')}\r\n            </Button>\r\n            <Button style={{ width: 150, marginLeft: 10 }} variant='contained' color=\"primary\"\r\n              onClick={() => handleOpenAddClient(true)}\r\n              startIcon={<AddIcon />}\r\n            >\r\n              {FormatText('clinic_add_user')}\r\n            </Button>\r\n\r\n            {/* <Button variant='contained' color=\"primary\"\r\n            startIcon={<EditIcon />}\r\n          >\r\n            Save Role\r\n        </Button> */}\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n      <div style={{ height: 100 }} />\r\n      <canvas id=\"canvas\" style={{ width: \"300\", display: 'none' }}></canvas>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  userList: store.userList.list,\r\n  userDetail: store.userList.detail,\r\n  userFiltered: store.userList.filteredList,\r\n  userInfo: store.userInfo.info,\r\n  clientList: store.clientList.list,\r\n  roleAuth: store.system.roleAuth,\r\n  updateUser: store.userList.filteredList,\r\n  paxlistStatus: store.menu.paxList,\r\n  paxList: store.paxList,\r\n  roleUsed: store.userInfo.roleUsed,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  _setOpenScreen: val => dispatch(setOpenScreen(val)), _setUserFilteredList: val => dispatch(setUserFilteredList(val)),\r\n  _setSecondRequest: val => dispatch(setSecondRequest(val)), _setSnackbar: val => dispatch(setSnackbar(val)),\r\n  _setCompleteRequest: (val) => {\r\n    dispatch(setServiceRequest(val.request))\r\n    dispatch(setServiceMethod(val.method))\r\n    dispatch(setServiceCode(val.serviceCode))\r\n    dispatch(setServiceParams(val.urlParams))\r\n    dispatch(setServiceCustomHeaders(val.customHeaders))\r\n    dispatch(setServiceRole(val.serviceRole))\r\n    dispatch(setServiceStatus(\"active\"))\r\n  },\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClinicSetting)\r\n","\r\nimport React from 'react'\r\n// import { connect } from 'react-redux'\r\n\r\nimport { Grid, Typography, Hidden, FormControlLabel, Radio, } from '@material-ui/core'\r\nimport 'date-fns';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\n// import {\r\n//   MuiPickersUtilsProvider,\r\n//   KeyboardDatePicker,\r\n// } from '@material-ui/pickers';\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import FormGroup from '@material-ui/core/FormGroup';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n// import AccountBoxRounded from '@material-ui/icons/AccountBoxRounded';\r\n\r\n// import { setOpenScreen } from \"../../../actions/SystemActions\";\r\n// import {\r\n//   setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n//   setServiceParams, setServiceCustomHeaders, setServiceRole,\r\n// } from '../../../actions/ServiceActions'\r\n\r\n// import SimpleAutocomplete from '../../../components/autocomplete/SimpleAutocomplete';\r\n// import ClinicRUDTable from '../../voltrasadmin/userlist/UserRUDTable'\r\n\r\n\r\nconst FilterHead = props => {\r\n  const [selectedValue, setSelectedValue] = React.useState('all')\r\n  // console.log(\"FORM PROPS: \", props)\r\n\r\n  const handleChange = (event) => {\r\n    let value = event.target.value\r\n    let userInfo = props.props.userInfo\r\n    let name = userInfo.name ? userInfo.name : ''\r\n    let email = userInfo.email ? userInfo.email : ''\r\n    let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email, }\r\n    if (phone) customHeaders.phone = phone\r\n    setSelectedValue(value)\r\n    let urlParams = `?&status=${value}`\r\n    let filterRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"healthKlinik\",\r\n      customHeaders,\r\n    }\r\n    if (value !== 'all') filterRequest.urlParams = urlParams\r\n    // props.props._setCompleteRequest(filterRequest)\r\n    props.setFilteredData(value)\r\n  }\r\n\r\n  return (\r\n\r\n    <Hidden xsDown>\r\n      {\r\n        props.props.roleUsed !== 'member'\r\n          ? <Grid container style={{ marginTop: 5, }}>\r\n\r\n            <Grid container direction='row' justify='flex-start' alignItems='center' style={{ marginLeft: 20, marginTop: 5 }} >\r\n              {/* <Grid item sm={6} > */}\r\n              <Grid item>\r\n                <Typography variant=\"subtitle1\"  ><b>Status:</b> </Typography>\r\n              </Grid>\r\n              <Grid item style={{ marginLeft: 10, }}>\r\n                <FormControlLabel value=\"all\" control={\r\n                  <Radio size='small' checked={selectedValue === 'all'} onChange={handleChange} />\r\n                } label=\"All\" />\r\n                <FormControlLabel value=\"active\" control={\r\n                  <Radio size='small' checked={selectedValue === 'active'} onChange={handleChange} />\r\n                } label=\"Active\" />\r\n                <FormControlLabel value=\"register\" control={\r\n                  <Radio size='small' checked={selectedValue === 'register'} onChange={handleChange} />\r\n                } label=\"Register\" />\r\n              </Grid>\r\n              <Grid item> <br />\r\n              </Grid>\r\n\r\n              {/* <Grid item>\r\n              <Typography style={{ marginBottom: 7 }} variant=\"subtitle2\">Klinik Name:</Typography>\r\n              {\r\n                  this.props.paxList.klinikList.length === 1\r\n                    ? <TextField id=\"basic-klinik\" value={this.props.paxList.klinikList[0].name} style={{ width: 300 }} />\r\n                    : this.props.paxList.klinikList.length === 0\r\n                      ? <TextField id=\"basic-klinik\" disabled style={{ width: 300 }} />\r\n                      : <SimpleAutocomplete\r\n                        options={this.props.paxList.klinikList[0] ? this.props.paxList.klinikList : [{ name: '' }]}\r\n                        onPick={v => console.log(v)}\r\n                        width={300}\r\n                        optionItem={'name'}\r\n                      />\r\n                }\r\n\r\n            </Grid> */}\r\n              {/* </Grid> */}\r\n              {/* <Grid item sm={3} >\r\n            <Typography variant=\"subtitle2\">Request Test Date:</Typography>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n              <Grid container >\r\n                <KeyboardDatePicker\r\n                  size=\"small\"\r\n                  clearable\r\n                  format=\"yyyy/MM/dd\"\r\n                  margin=\"dense\"\r\n                  id=\"date-picker-from\"\r\n                  label=\"From\"\r\n                  // value={this.state.fromdate}\r\n                  // onChange={this.handleDateChange('fromdate')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container >\r\n                <KeyboardDatePicker\r\n                  clearable\r\n                  size=\"small\"\r\n                  format=\"yyyy/MM/dd\"\r\n                  margin=\"dense\"\r\n                  id=\"date-picker-to\"\r\n                  label=\"To\"\r\n                  // value={this.state.todate}\r\n                  // onChange={this.handleDateChange('todate')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item sm={2} >\r\n            <FormControl style={{ marginLeft: 15 }} fullWidth>\r\n              <Typography variant=\"subtitle2\">Status:</Typography>\r\n              <FormControl>\r\n                  <FormControlLabel\r\n                    control={<Checkbox checked={this.state.New} onChange={this.handleChange('New')} name=\"New\" />}\r\n                    label=\"NEW\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox checked={this.state.finish} onChange={this.handleChange('finish')} name=\"finish\" />}\r\n                    label=\"FINISH\"\r\n                  />\r\n                </FormControl>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item sm={2} >\r\n            <Grid item><br /></Grid>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify='center'\r\n              alignItems=\"center\">\r\n              <Grid item>\r\n                <Button size='small' variant=\"outlined\" color=\"primary\">\r\n                  Export to Xls\r\n                    </Button>\r\n              </Grid>\r\n              <Grid item><br /></Grid>\r\n              <Grid item>\r\n                <Button size='small' variant=\"contained\" color=\"primary\">\r\n                  Submit Filter\r\n                    </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Typography style={{ marginLeft: 20 }} variant=\"subtitle2\">Export to xls:</Typography>\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\">\r\n                  <Grid item><br /><br /></Grid>\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" onClick={this.handleExport} color=\"primary\">\r\n                      Export\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item ><br /> <br /></Grid>\r\n                </Grid> \r\n          </Grid> */}\r\n            </Grid>\r\n\r\n          </Grid>\r\n          : null\r\n      }\r\n\r\n    </Hidden>\r\n  )\r\n\r\n}\r\n\r\nexport default FilterHead\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Grid } from '@material-ui/core'\r\nimport 'date-fns';\r\n\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole, setSecondRequest,\r\n} from '../../../actions/ServiceActions'\r\nimport { setClinikDetail } from \"../../../actions/PaxListActions\";\r\nimport { setSnackbar } from '../../../actions/FeedbackActions';\r\n\r\nimport ClinicRUDTable from '../../voltrasadmin/userlist/UserRUDTable'\r\nimport ConfirmationDialogRaw from '../../voltrasadmin/userlist/ConfirmationDIalog';\r\nimport FormatText from '../../../i18n'\r\nimport FilterForm from './FilterForm'\r\n\r\nconst ClinicList = ({ ...props }) => {\r\n  const { _setOpenScreen, _setCompleteRequest, userInfo, _setSecondRequest, _setSnackbar,\r\n    paxList, _setClinicDetail, history, roleUsed } = props\r\n  const [columns, setColumns] = useState([])\r\n  const [data, setData] = useState([])\r\n  const [open, setOpen] = useState(false);\r\n  const [dataUpdate, setDataUpdate] = useState(null)\r\n\r\n  useEffect(() => {\r\n    _setOpenScreen(\"Clinic List\")\r\n    window.scrollTo(0, 0)\r\n    let columns = [\r\n      { title: \"ID\", field: 'id', width: 100 },\r\n      { title: FormatText('clinic_name'), field: 'name', width: 300 },\r\n      { title: FormatText('common_address'), field: 'address' },\r\n      { title: 'Status', field: 'status' },\r\n    ]\r\n    setColumns(columns)\r\n    const { name, email, phone } = userInfo\r\n    // let name = userInfo.name ? userInfo.name : ''\r\n    // let email = userInfo.email ? userInfo.email : ''\r\n    // let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email, }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    const healthKlinikREquest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"healthKlinik\",\r\n      urlParams: \"\",\r\n      customHeaders,\r\n      // serviceRole: 'health.admin',\r\n    }\r\n\r\n    // if (!paxList || (paxList && paxList.klinikList.length === 0)) {\r\n    _setCompleteRequest(healthKlinikREquest)\r\n    // }\r\n\r\n  }, [_setOpenScreen, _setCompleteRequest, userInfo])\r\n\r\n  useEffect(() => {\r\n    let orderedData = paxList.klinikList ? paxList.klinikList : []\r\n    if (Array.isArray(orderedData) && orderedData.length > 0) {\r\n      orderedData.sort((a, b) => {\r\n        let x = a.id\r\n        let y = b.id\r\n        return x - y\r\n      })\r\n      setData(orderedData)\r\n    }\r\n    else setData([])\r\n  }, [paxList])\r\n\r\n  const handleUpdate = data => {\r\n    // console.log(data)\r\n    if (data.status === 'active') {\r\n      let successSnackbar = { open: true, severity: \"success\", message: FormatText('clinic_active'), }\r\n      _setSnackbar(successSnackbar)\r\n    }\r\n    else {\r\n      setDataUpdate(data)\r\n      setOpen(true)\r\n    }\r\n  }\r\n\r\n  const handleDelete = data => {\r\n    console.log(data.status)\r\n    // DELETE /health/admin/clinics/{id}/users/{userid}\r\n    let id = data.id\r\n    let name = userInfo.name ? userInfo.name : ''\r\n    let email = userInfo.email ? userInfo.email : ''\r\n    let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    let deleteRequest = {\r\n      request: {},\r\n      method: \"DELETE\",\r\n      serviceCode: \"DELETE_CLINIC\",\r\n      urlParams: `/${id}`,\r\n      customHeaders,\r\n    }\r\n\r\n    let getClinicRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"healthKlinik\",\r\n      urlParams: \"\",\r\n      customHeaders,\r\n    }\r\n\r\n    if (data.status === 'inactive') {\r\n      let successSnackbar = { open: true, severity: \"success\", message: FormatText('clinic_inactive'), }\r\n      _setSnackbar(successSnackbar)\r\n    } else {\r\n      _setCompleteRequest(deleteRequest)\r\n      _setSecondRequest(getClinicRequest)\r\n    }\r\n\r\n  }\r\n\r\n  const handleRowClicked = data => {\r\n    _setClinicDetail(data)\r\n    // history.push('/KSetting')\r\n    // console.log(\"DATA: \", data)\r\n    const id = data.id\r\n    const { name, email, phone } = userInfo\r\n\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    let getClinicUserRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CLINIC_USER\",\r\n      urlParams: `/${id}`,\r\n      customHeaders,\r\n    }\r\n    if (roleUsed === 'member') history.push('/KSetting')\r\n    else _setCompleteRequest(getClinicUserRequest)\r\n  }\r\n\r\n  const handleChoose = val => {\r\n    const { name, email, phone } = userInfo\r\n    const customHeaders = { name, email, }\r\n    if (phone) customHeaders.phone = phone\r\n    let regisClinicRequest = {\r\n      request: {},\r\n      method: \"POST\",\r\n      serviceCode: \"SEND_CLINIC_ACTIVATION\",\r\n      urlParams: `/${dataUpdate.id}/activation`,\r\n      customHeaders,\r\n    }\r\n    _setCompleteRequest(regisClinicRequest)\r\n\r\n    // let addClinicUserRequest = {\r\n    //   request: [\r\n    //     { \r\n    //     name: dataUpdate.created_by.name, \r\n    //     email: dataUpdate.created_by.email, \r\n    //     phone: dataUpdate.created_by.name.phone, \r\n    //     role: \"clinic.admin\" }\r\n    //   ],\r\n    //   method: \"POST\",\r\n    //   serviceCode: \"ADD_CLINIC_USER\",\r\n    //   urlParams: `/${dataUpdate.id}/users`,\r\n    //   customHeaders,\r\n    // }\r\n    // _setSecondRequest(addClinicUserRequest)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const setFilteredData = filter => {\r\n    // console.log(filter)\r\n    let orderedData = paxList.klinikList ? paxList.klinikList : []\r\n    let filteredData = []\r\n    if (filter === 'active') {\r\n      // console.log(orderedData)\r\n      filteredData = orderedData.filter(item => item.status === 'active')\r\n    }\r\n    else if (filter === 'register') {\r\n      // console.log(orderedData)\r\n      filteredData = orderedData.filter(item => item.status === 'register')\r\n    }\r\n    else filteredData = orderedData\r\n\r\n\r\n    setData(filteredData)\r\n  }\r\n\r\n  return (\r\n    <Grid>\r\n      <FilterForm props={props} setFilteredData={setFilteredData} />\r\n      <ClinicRUDTable\r\n        title={'Clinic List'}\r\n        columns={columns}\r\n        data={data}\r\n        parentProps={props}\r\n        updatedata={handleUpdate}\r\n        deletedata={handleDelete}\r\n        rowClicked={handleRowClicked}\r\n        confirmdeletetext={FormatText('clinic_inactive_confirmation')}\r\n        update\r\n        action={roleUsed === 'member' ? false : true}\r\n        roleUsed={roleUsed}\r\n      />\r\n      <ConfirmationDialogRaw\r\n        id=\"ringtone-menu\"\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        header=\"Activate\"\r\n        content={dataUpdate && dataUpdate.name}\r\n        handleChoose={handleChoose}\r\n      />\r\n      <Grid container>\r\n        <div style={{ height: window.screen.height - 700 }} />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  clientList: store.clientList.list,\r\n  userDetail: store.clientList.detail,\r\n  userFiltered: store.clientList.filteredList,\r\n  userInfo: store.userInfo.info,\r\n  paxlistStatus: store.menu.paxList,\r\n  paxList: store.paxList,\r\n  roleUsed: store.userInfo.roleUsed,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)), _setSnackbar: val => dispatch(setSnackbar(val)),\r\n    _setSecondRequest: val => dispatch(setSecondRequest(val)),\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.urlParams))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n    _setClinicDetail: val => dispatch(setClinikDetail(val)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClinicList)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole, setSecondRequest\r\n} from '../../../actions/ServiceActions'\r\nimport { setClinikDetail, setCityList } from \"../../../actions/PaxListActions\";\r\n\r\nimport { Button, Typography, Card, Grid, FormHelperText, FormControl } from '@material-ui/core';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\nimport SimpleAutocomplete from '../../../components/autocomplete/SimpleAutocomplete';\r\nimport FormatText from '../../../i18n'\r\nimport Config from '../../../config'\r\n\r\nconst ClinicRegistration = props => {\r\n  const { paxList, _setCompleteRequest, userInfo, _setCityList, _setOpenScreen, } = props\r\n\r\n  const [state, setState] = useState({ city: '', submitErrorMessage: '', clinic_parents: [] })\r\n\r\n  useEffect(() => {\r\n    _setOpenScreen(\"Clinic Registration\")\r\n\r\n  }, [_setOpenScreen])\r\n\r\n  useEffect(() => {\r\n    // console.log(\"HMM\")\r\n    const { name, email, phone } = userInfo\r\n    // let name = userInfo.name ? userInfo.name : ''\r\n    // let email = userInfo.email ? userInfo.email : ''\r\n    // let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let cityRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CITY_LIST\",\r\n      urlParams: \"/cities?&citykey=a\",\r\n      customHeaders\r\n    }\r\n\r\n    // let clinic_parent_request = {\r\n    //   request: {},\r\n    //   method: \"GET\",\r\n    //   serviceCode: \"GET_CLINIC_PARENTS\",\r\n    //   // urlParams: \"/cities?&citykey=a\",\r\n    //   customHeaders\r\n    // }\r\n\r\n    _setCompleteRequest(cityRequest)\r\n    // _setCompleteRequest(clinic_parent_request)\r\n    // _setSecondRequest(cityRequest)\r\n  }, [_setCompleteRequest, userInfo])\r\n\r\n  useEffect(() => {\r\n    // console.log(\"DIPANGGIL BERAPA KALI???\")\r\n    // if (paxList.clinic_parents.length === 1) setState({ ...state, parent_id: parseInt(paxList.clinic_parents[0].id) })\r\n    setState(previousState => ({\r\n      ...previousState,\r\n      clinic_parents: paxList.clinic_parents,\r\n      parent_id: paxList.clinic_parents.length === 1 ? parseInt(paxList.clinic_parents[0].id) : 0\r\n    }))\r\n  }, [paxList.clinic_parents])\r\n\r\n  const handleChange = prop => event => {\r\n    let valid = FormValidation(prop, event.target.value)\r\n    setState({\r\n      ...state,\r\n      [prop]: event.target.value,\r\n      [prop + 'ErrorMessage']: valid.errorMessage,\r\n      isError: valid.error,\r\n      submitErrorMessage: ''\r\n    })\r\n  }\r\n\r\n  const handleInputChange = val => {\r\n    let name = userInfo.name ? userInfo.name : ''\r\n    let email = userInfo.email ? userInfo.email : ''\r\n    let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let cityRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CITY_LIST\",\r\n      urlParams: `/cities?&citykey=${val}`,\r\n      customHeaders\r\n    }\r\n\r\n    if (paxList.cityList && val) {\r\n      _setCompleteRequest(cityRequest)\r\n    }\r\n    else {\r\n      _setCityList([{ name: '' }])\r\n    }\r\n  }\r\n\r\n  const handlePick = city => {\r\n    // console.log(\"ONPICK: \", city)\r\n    setState({\r\n      ...state,\r\n      city: city ? city.city : '',\r\n      submitErrorMessage: '',\r\n    })\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    let name = userInfo.name ? userInfo.name : ''\r\n    let email = userInfo.email ? userInfo.email : ''\r\n    let phone = userInfo.phone ? userInfo.phone : ''\r\n    const { city, clinicName, address, } = state    // parent_id } = state\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    if (city && clinicName && address) {\r\n      // HARDCODED PARENT_ID\r\n      let regisClinicRequest = {\r\n        request: {\r\n          city,\r\n          name: clinicName,\r\n          address,\r\n          parent_id: Config.parentClinic,\r\n          // vendor_close: { day: [], date: [] },\r\n          // products: []\r\n        },\r\n        method: \"POST\",\r\n        serviceCode: \"CLINIC_REGISTRATION\",\r\n        customHeaders\r\n      }\r\n      _setCompleteRequest(regisClinicRequest)\r\n      // console.log(regisClinicRequest)\r\n\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        submitErrorMessage: FormatText('err_submit'),\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  // const onRadioChange = e => {\r\n  //   e.preventDefault()\r\n  //   // console.log(e.target)\r\n  //   setState({\r\n  //     ...state,\r\n  //     parent_id: parseInt(e.target.name)\r\n  //   })\r\n  // }\r\n\r\n  // const handleChooseRole = () => {\r\n  //   /**\r\n  //    * MAJOR CODE FOR ENTERING THE APP\r\n  //    * 1. Read domain and role choose by user.\r\n  //    * 2. Choose Homepage and Menu to show.\r\n  //    */\r\n\r\n  //   let domain = window.location.origin\r\n  //   let roleChoosen = state.roleChoosen\r\n  //   let userInfo = props.userInfo.info\r\n  //   let clientId = userInfo.aud\r\n  //   let newMenu // = menuCreator(domain, clientId, roleChoosen)\r\n\r\n  //   let obj = {}\r\n  //   if (newMenu.length > 0) newMenu.map(item => {\r\n  //     return obj = {\r\n  //       ...obj,\r\n  //       [item.url]: false,\r\n  //     }\r\n  //   })\r\n  //   props._setMenuCollapseStatus(obj)\r\n  //   props._setUserMenu(newMenu)\r\n  //   props._setRoleUsed(roleChoosen)\r\n  //   localStorage.setItem(\"roleUsed\", roleChoosen)\r\n  //   props._setPopChooseRole(false)\r\n  //   props.history.push('/Home')\r\n  // }\r\n\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n      {console.log(\"PARENT CLINIC: \", Config.parentClinic)}\r\n      <Card variant=\"elevation\" style={{ marginTop: 20 }} >\r\n        <CardContent style={{ width: 320, textAlign: 'center' }}>\r\n          <Typography variant=\"h5\" style={{ marginBottom: 15 }} ><b>{FormatText('app_register')}</b> </Typography>\r\n          <Grid container item direction=\"column\" >\r\n            {/* {\r\n              state.clinic_parents && state.clinic_parents.length === 1\r\n                ? <FormControl fullWidth style={{ marginBottom: 15 }} >\r\n                  <InputLabel htmlFor=\"nameClinic\">{FormatText('clinic_parents')}</InputLabel>\r\n                  <Input\r\n                    disabled\r\n                    error={state.clinicNameErrorMessage ? true : false}\r\n                    id=\"clinic parent\"\r\n                    type='text'\r\n                    value={state.clinic_parents[0].name}\r\n                    style={{ color: 'black' }}\r\n                  />\r\n                </FormControl>\r\n                : state.clinic_parents && state.clinic_parents.length > 1\r\n                  ? <Grid container direction=\"row\" >\r\n                    <Typography variant='subtitle1'  >\r\n                      Parent Clinic\r\n                    </Typography>\r\n\r\n                    <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n                      <FormControl style={{ marginLeft: 25, }}  >\r\n                        <RadioGroup onChange={onRadioChange} >\r\n                          {\r\n                            state.clinic_parents.map((item, i) => {\r\n                              return (\r\n                                <FormControlLabel name={item.id} value={item.name} control={<Radio />} label={item.name} key={i} />\r\n                              )\r\n                            })\r\n\r\n                          }\r\n                        </RadioGroup>\r\n                        {\r\n                          state.otpErrorMessage\r\n                            ? <FormHelperText error id=\"email-helper-text\">{state.otpErrorMessage}</FormHelperText>\r\n                            : null\r\n                        }\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n                  : null\r\n\r\n            } */}\r\n\r\n            <FormControl fullWidth style={{ marginBottom: 15 }} >\r\n              <InputLabel error={state.clinicNameErrorMessage ? true : false} htmlFor=\"nameClinic\">{FormatText('clinic_name')}</InputLabel>\r\n              <Input\r\n                error={state.clinicNameErrorMessage ? true : false}\r\n                id=\"standard-adornment-name\"\r\n                type='text'\r\n                onChange={handleChange('clinicName')}\r\n              />\r\n              {state.clinicNameErrorMessage ? <FormHelperText error id=\"name-helper\">{state.clinicNameErrorMessage}</FormHelperText> : null}\r\n            </FormControl>\r\n\r\n            <FormControl fullWidth style={{ marginBottom: 15, marginRight: 5 }} >\r\n              <SimpleAutocomplete\r\n                id=\"registerClinicChooseCity\"\r\n                options={props.paxList.cityList[0] ? props.paxList.cityList : []}\r\n                // width={300}\r\n                optionItem={'city'}\r\n                label={FormatText('clinic_city')}\r\n                notShrink={true}\r\n                // onSelect={handleSelect}\r\n                handleInputChange={handleInputChange}\r\n                onPick={handlePick}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl fullWidth style={{ marginBottom: 15 }} >\r\n              <InputLabel error={state.phoneErrorMessage ? true : false} htmlFor=\"standard-address\">{FormatText('clinic_address')}</InputLabel>\r\n              <Input\r\n                error={state.addressErrorMessage ? true : false}\r\n                id=\"standard-adornment-address\"\r\n                type='text'\r\n                onChange={handleChange('address')}\r\n              />\r\n              {state.addressErrorMessage ? <FormHelperText error id=\"address-helper-text\">{state.addressErrorMessage}</FormHelperText> : null}\r\n            </FormControl>\r\n            <br />\r\n            <br />\r\n\r\n\r\n            <Button onClick={handleSubmit} fullWidth variant=\"contained\" color=\"primary\">{FormatText('app_register')}</Button>\r\n            {state.submitErrorMessage ? <FormHelperText error id=\"email-helper-text\">{state.submitErrorMessage}</FormHelperText> : null}\r\n\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n      <Grid container>\r\n        <div style={{ height: window.screen.height - 550 }}></div>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  clientList: store.clientList.list,\r\n  userDetail: store.clientList.detail,\r\n  userFiltered: store.clientList.filteredList,\r\n  userInfo: store.userInfo.info,\r\n  paxlistStatus: store.menu.paxList,\r\n  paxList: store.paxList\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)),\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.urlParams))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n    _setClinicDetail: val => dispatch(setClinikDetail(val)),\r\n    _setCityList: val => dispatch(setCityList(val)),\r\n    _setSecondRequest: val => dispatch(setSecondRequest(val)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClinicRegistration)","\r\nimport React, { useState } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Grid, Typography, Button, Card, CardContent, CardActions } from '@material-ui/core'\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst UpdateUserDialog = ({ ...props }) => {\r\n  // const [roleList, setRoleList] = useState([])\r\n  // const [available, setAvailable] = useState([])\r\n  // const [newRoleList, setNewRoleList] = useState([])\r\n  const [showAdd, setShowAdd] = useState(true)\r\n  const [state, setState] = useState({\r\n    addRoleList: [],\r\n  })\r\n\r\n  const handleClose = () => {\r\n    setState({ addRoleList: [], })\r\n    props.handleOpen(false)\r\n    setShowAdd(true)\r\n  };\r\n\r\n  const handleChange = props => e => {\r\n    let valid = FormValidation(props, e.target.value)\r\n    setState({\r\n      ...state,\r\n      [props]: e.target.value,\r\n      [props + 'ErrorMessage']: valid.errorMessage,\r\n    })\r\n  }\r\n\r\n  const handleAddClientRole = () => {\r\n    let objRole = {}\r\n    if (state.roleId && state.roleDescription) {\r\n      objRole.roleId = state.roleId\r\n      objRole.roleDescription = state.roleDescription\r\n      setState({\r\n        ...state,\r\n        addRoleList: [...state.addRoleList, objRole],\r\n        roleId: '',\r\n        roleDescription: '',\r\n      })\r\n      setShowAdd(false)\r\n      objRole = {}\r\n    }\r\n  }\r\n\r\n  const handleSave = () => {\r\n    props.handleSave(state.addRoleList)\r\n    props.handleOpen(false)\r\n    setShowAdd(true)\r\n    setState({ ...state, addRoleList: [], })\r\n  }\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth={'sm'} open={props.open} onClose={handleClose} scroll={'paper'} >\r\n      <DialogTitle\r\n        id=\"max-width-dialog-title\"\r\n        onClose={handleClose}\r\n      >\r\n        Client: {props.data ? props.data.clientName : ''}\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems='flex-start' >\r\n          <Grid item md={6}>\r\n            <Typography variant='subtitle2'>Role Id</Typography>\r\n            <List dense >\r\n              {\r\n                state.addRoleList[0]\r\n                  ? state.addRoleList.map((item, i) => (\r\n                    <Grid container direction=\"row\" justify=\"flex-start\" alignItems='center' key={i} >\r\n                      <ListItemText primary={'- ' + item.roleId} />\r\n                    </Grid >\r\n                  ))\r\n                  : <ListItemText secondary={'- none'} />\r\n              }\r\n            </List>\r\n          </Grid>\r\n\r\n          <Grid item md={6}>\r\n            <Typography variant='subtitle2' >Description</Typography>\r\n            <List dense >\r\n              {\r\n                state.addRoleList[0]\r\n                  ? state.addRoleList.map((item, i) => (\r\n                    <Grid container direction=\"row\" justify=\"flex-start\" alignItems='center' key={i} >\r\n                      <ListItemText primary={'- ' + item.roleDescription} />\r\n                    </Grid >\r\n                  ))\r\n                  : <ListItemText secondary={'- none'} />\r\n              }\r\n            </List>\r\n          </Grid>\r\n          {\r\n            showAdd\r\n              ? <Card style={{ marginTop: 20 }} >\r\n                <CardContent>\r\n                  <Grid>\r\n                    <Typography variant='subtitle2'>\r\n                      Add RoleId and Description\r\n                </Typography>\r\n                  </Grid>\r\n                  <Grid>\r\n                    <TextField\r\n                      autoFocus\r\n                      margin=\"dense\"\r\n                      size=\"small\"\r\n                      onChange={handleChange('roleId')}\r\n                      id=\"standard-roleId\"\r\n                      label=\"RoleId\"\r\n                      placeholder=\"RoleId\"\r\n                      value={state.roleId}\r\n                      helperText={state.roleIdErrorMessage ? state.roleIdErrorMessage : ''}\r\n                      error={state.roleIdErrorMessage ? true : false}\r\n                    />\r\n                  </Grid>\r\n                  <Grid >\r\n                    <TextField\r\n                      size=\"small\"\r\n                      onChange={handleChange('roleDescription')}\r\n                      id=\"standard-roleDesc\"\r\n                      label=\"Description\"\r\n                      placeholder=\"Role description\"\r\n                      value={state.roleDescription}\r\n                      helperText={state.roleDescriptionErrorMessage ? state.roleDescriptionErrorMessage : ''}\r\n                      error={state.roleDescriptionErrorMessage ? true : false}\r\n                    />\r\n                  </Grid>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button\r\n                    disabled={state.roleId && state.roleDescription ? false : true}\r\n                    variant='outlined'\r\n                    size=\"small\"\r\n                    color=\"secondary\"\r\n                    onClick={handleAddClientRole}\r\n                  >\r\n                    Add\r\n              </Button>\r\n                </CardActions>\r\n              </Card>\r\n              : null\r\n          }\r\n\r\n        </Grid>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button onClick={handleClose} variant='outlined' color=\"primary\">\r\n              Cancel\r\n          </Button>\r\n          </Grid>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button onClick={handleSave} variant='contained' color=\"primary\">\r\n              Save\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default UpdateUserDialog\r\n","\r\nimport React, { useState ,useEffect} from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Grid, Typography, Button} from '@material-ui/core'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst UpdateBasicInfo = ({ ...props }) => {\r\n    // const [roleList, setRoleList] = useState([])\r\n    // const [available, setAvailable] = useState([])\r\n    // const [newRoleList, setNewRoleList] = useState([])\r\n    // console.log('data',{ [props.dataField.id]:props.dataField.field})\r\n    // const [showAdd, setShowAdd] = useState(true)\r\n    const [state, setState] = useState({\r\n        basicInfo:{},\r\n        [props.dataField.id]:props.dataField.field\r\n    })\r\n    const profile = [\r\n      \"Web Application\",\r\n      \"Android\",\r\n      \"IOS\"\r\n    ]\r\n    useEffect(() => {\r\n        setState({\r\n            [props.dataField.id]:props.dataField.field\r\n        })\r\n    },[props.dataField])\r\n    \r\n    const handleClose = () => {\r\n        setState({ addRoleList: [], })\r\n        props.handleOpen({open:false})\r\n        // setShowAdd(true)\r\n    };\r\n\r\n    const handleChange = val => e => {\r\n        let valid = FormValidation(val, e.target.value)\r\n        setState({\r\n            ...state,\r\n            basicInfo:{\r\n                ...state.basicInfo,\r\n                [props.dataField.id]: e.target.value,\r\n            },\r\n            [props.dataField.id]: e.target.value,\r\n            [val + 'ErrorMessage']: valid.errorMessage,\r\n        })\r\n    }\r\n\r\n    const handleSave = () => {\r\n        props.handleSave(state.basicInfo)\r\n        props.handleOpen(false)\r\n        // setShowAdd(true)\r\n        setState({ ...state, addRoleList: [], })\r\n    }\r\n\r\n    const disableButton = ()=>{\r\n        if (props.dataField.id==='emailSender'){\r\n            if(state[`${props.dataField.id}ErrorMessage`]){\r\n                return true\r\n            }\r\n            // else if (state[props.dataField.id]==\"\"){\r\n            //     return true\r\n            // }\r\n            else {\r\n               return false\r\n            }\r\n        }\r\n        else if (props.dataField.id==='emailSenderMaskingName'){\r\n            if(state[`${props.dataField.id}ErrorMessage`]){\r\n                return true\r\n            }\r\n            // else if (state[props.dataField.id]==\"\"){\r\n            //     return true\r\n            // }\r\n            else {\r\n                return false\r\n            }\r\n        }\r\n        else if (!state[props.dataField.id]){\r\n            return true\r\n        }\r\n        else if (state[`${props.dataField.id}ErrorMessage`]){\r\n            return true\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog fullWidth maxWidth={'sm'} open={props.open} onClose={handleClose} scroll={'paper'} >\r\n            <DialogTitle\r\n                id=\"max-width-dialog-title\"\r\n                onClose={handleClose}\r\n            >\r\n                Client: {props.data ? props.data.clientName : ''}\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n              {props.dataField.id==='initialUserRole' || props.dataField.id==='profile'?\r\n                <TextField\r\n                autoFocus\r\n                fullWidth\r\n                select\r\n                margin=\"dense\"\r\n                size=\"small\"\r\n                onChange={handleChange(props.dataField.id)}\r\n                id=\"standard-roleId\"\r\n                label={props.dataField.title}\r\n                placeholder={props.dataField.title}\r\n                value={state[props.dataField.id]}\r\n                \r\n            >\r\n              { props.dataField.id==='profile'? profile.map(item=>(\r\n                 <MenuItem key={item} value={item}>\r\n                 {item}\r\n                </MenuItem>\r\n              )):props.data.roleDetails.map(item=>\r\n                (\r\n                  <MenuItem key={item.roleId} value={item.roleId}>\r\n                      {item.roleId}\r\n                  </MenuItem>\r\n                )\r\n              )}\r\n            </TextField>:\r\n            <TextField\r\n                    autoFocus\r\n                    fullWidth\r\n                    margin=\"dense\"\r\n                    size=\"small\"\r\n                    onChange={handleChange(props.dataField.id)}\r\n                    id=\"standard-roleId\"\r\n                    label={props.dataField.title}\r\n                    placeholder={props.dataField.title}\r\n                    value={state[props.dataField.id]}\r\n                    helperText={state[`${props.dataField.id}ErrorMessage`] ? state[`${props.dataField.id}ErrorMessage`] : ''}\r\n                    error={state[`${props.dataField.id}ErrorMessage`] ? true : false}\r\n                />  \r\n            \r\n            }\r\n                {/* <TextField\r\n                    autoFocus\r\n                    fullWidth\r\n                    margin=\"dense\"\r\n                    size=\"small\"\r\n                    onChange={handleChange(props.dataField.id)}\r\n                    id=\"standard-roleId\"\r\n                    label={props.dataField.title}\r\n                    placeholder={props.dataField.title}\r\n                    value={state[props.dataField.id]}\r\n                    // helperText={state.roleIdErrorMessage ? state.roleIdErrorMessage : ''}\r\n                    // error={state.roleIdErrorMessage ? true : false}\r\n                /> */}\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n                    <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                        <Button onClick={handleClose} variant='outlined' color=\"primary\">\r\n                            Cancel\r\n          </Button>\r\n                    </Grid>\r\n                    <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                        <Button onClick={handleSave} variant='contained' color=\"primary\" disabled={disableButton()}>\r\n                            Edit\r\n          </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default UpdateBasicInfo\r\n","\r\nimport React, { useState } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Grid, Typography, Button } from '@material-ui/core'\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst AddUrlOriginDialog = ({ ...props }) => {\r\n  // const [roleList, setRoleList] = useState([])\r\n  // const [available, setAvailable] = useState([])\r\n  // const [newRoleList, setNewRoleList] = useState([])\r\n  // const [showAdd, setShowAdd] = useState(true)\r\n  const [state, setState] = useState({\r\n    originUris: [],\r\n    redirectUris: []\r\n  })\r\n  // console.log('redirect', props.redirect)\r\n  const handleClose = () => {\r\n    setState({ addRoleList: [], })\r\n    props.handleOpen(false)\r\n    // setShowAdd(true)\r\n  };\r\n\r\n  const handleChange = props => e => {\r\n    let valid = FormValidation(props, e.target.value)\r\n    setState({\r\n      ...state,\r\n      [props]: { uri: e.target.value },\r\n      [props + 'ErrorMessage']: valid.errorMessage,\r\n    })\r\n  }\r\n\r\n  const handleSave = () => {\r\n    if (!props.redirect) {\r\n      props.handleSave(state.originUris)\r\n    }\r\n    else {\r\n      props.handleSave(state.redirectUris)\r\n    }\r\n    props.handleOpen(false)\r\n    // setShowAdd(true)\r\n    setState({ ...state, addRoleList: [], })\r\n  }\r\n  const disabledButton = () => {\r\n    let origin = state.originUris ? state.originUris.uri : \"\"\r\n    let redirect = state.redirectUris ? state.redirectUris.uri : \"\"\r\n    if (state.originUrisErrorMessage) return true\r\n    else if (state.redirectUrisErrorMessage) return true\r\n    else if (origin) return false\r\n    else if (redirect) return false\r\n    else return true\r\n  }\r\n  return (\r\n    <Dialog fullWidth maxWidth={'sm'} open={props.open} onClose={handleClose} scroll={'paper'} >\r\n      <DialogTitle\r\n        id=\"max-width-dialog-title\"\r\n        onClose={handleClose}\r\n      >\r\n        Client: {props.data ? props.data.clientName : ''}\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        {!props.redirect ?\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            size=\"small\"\r\n            onChange={handleChange('originUris')}\r\n            id=\"standard-roleId\"\r\n            label=\"Origin URI\"\r\n            placeholder=\"Origin URI\"\r\n            value={state.originUris ? state.originUris.uri : \"\"}\r\n            helperText={state.originUrisErrorMessage ? state.originUrisErrorMessage : ''}\r\n            error={state.originUrisErrorMessage ? true : false}\r\n          /> :\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            size=\"small\"\r\n            onChange={handleChange('redirectUris')}\r\n            id=\"standard-roleId\"\r\n            label=\"Redirect URI\"\r\n            placeholder=\"Redirect URI\"\r\n            value={state.redirectUris ? state.redirectUris.uri : \"\"}\r\n            helperText={state.redirectUrisErrorMessage ? state.redirectUrisErrorMessage : ''}\r\n            error={state.redirectUrisErrorMessage ? true : false}\r\n          />\r\n        }\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button onClick={handleClose} variant='outlined' color=\"primary\">\r\n              Cancel\r\n          </Button>\r\n          </Grid>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button onClick={handleSave} variant='contained' color=\"primary\" disabled={disabledButton()}>\r\n              Save\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddUrlOriginDialog\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n// import TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // overflowX: 'auto',\r\n        // marginRight: 'auto',\r\n        // marginLeft: 'auto',\r\n        // marginTop: '50px',\r\n        // padding: '10px',\r\n        // margin: '10px',\r\n        width: '100%'\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n    },\r\n    table: {\r\n        minWidth: 500,\r\n        // whiteSpace:\"noWrap\"\r\n    },\r\n    rootToolbar: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst TableCustomize = ({ ...props }) => {\r\n    const column = props.column\r\n    let data = props.data\r\n    data.map(item => {\r\n        column.map(items => {\r\n            if (typeof item[items.field] === 'boolean') {\r\n                if (item[items.field]) item[items.field] = 'True'\r\n                else item[items.field] = 'False'\r\n            }\r\n            return null\r\n        })\r\n        return null\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        // let indexClient = 0\r\n        // data.map((item, index) => {\r\n        //     if (item.client) {\r\n        //         indexClient = index\r\n        //     }\r\n        //     return null\r\n        // })\r\n        // console.log('index',indexClient)\r\n        // data.splice(0, indexClient + 1)\r\n        setDataSearch(data)\r\n        return () => {\r\n            setFilterValue('')\r\n        }\r\n    }, [data])\r\n    const classes = useStyles();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    // const [search, setSearch] = useState()\r\n    const [dataSearch, setDataSearch] = useState([])\r\n    const [filterValue, setFilterValue] = useState('')\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, dataSearch.length - page * rowsPerPage);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleGetData = (item) => {\r\n        props.handleEditOpen(true, true, item)\r\n    }\r\n\r\n    const handleSearch = (e) => {\r\n        if (e.target.value) {\r\n            setDataSearch(\r\n                data.filter(item => item.clientId === e.target.value)\r\n            )\r\n            setFilterValue(e.target.value)\r\n            setPage(0);\r\n        }\r\n        else {\r\n            setDataSearch(\r\n                data\r\n            )\r\n            setFilterValue(e.target.value)\r\n        }\r\n    }\r\n    const findDuplicateClientId = (arrayOfObj, key) => {\r\n        return arrayOfObj.filter((item, index, array) => {\r\n            return array.map((mapItem) => mapItem[key]).indexOf(item[key]) === index\r\n        })\r\n    }\r\n    // data.filter(item=>item.clientId===search)\r\n    // console.log('datawkwkw',data)\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Toolbar>\r\n                <Grid container >\r\n                    <Grid item sm={10}>\r\n                        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                            {props.title}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={2}>\r\n                        {props.options ? props.options.filterClientId ?\r\n                            <form className={classes.rootForm} noValidate autoComplete=\"off\">\r\n\r\n                                <TextField\r\n                                    label='filter By Client Id'\r\n                                    fullWidth\r\n                                    placeholder='ClientId'\r\n                                    onChange={handleSearch}\r\n                                    value={filterValue}\r\n                                    select\r\n                                    InputLabelProps={{\r\n                                        shrink: true\r\n                                    }}\r\n                                >\r\n                                    <MenuItem key={null} value={null}>\r\n                                        All\r\n                                    </MenuItem>\r\n                                    {findDuplicateClientId(data, 'clientId').map(item =>\r\n                                        <MenuItem key={item.clientId} value={item.clientId}>\r\n                                            {item.clientId}\r\n                                        </MenuItem>\r\n                                    )}\r\n                                </TextField>\r\n                            </form> : '' : <form className={classes.rootForm} noValidate autoComplete=\"off\">\r\n\r\n                                <TextField\r\n                                    label='filter By Client Id'\r\n                                    fullWidth\r\n                                    placeholder='ClientId'\r\n                                    onChange={handleSearch}\r\n                                    value={filterValue}\r\n                                    select\r\n                                    InputLabelProps={{\r\n                                        shrink: true\r\n                                    }}\r\n                                >\r\n                                    <MenuItem key={null} value={null}>\r\n                                        All\r\n                                    </MenuItem>\r\n                                    {findDuplicateClientId(data, 'clientId').map(item =>\r\n                                        <MenuItem key={item.clientId} value={item.clientId}>\r\n                                            {item.clientId}\r\n                                        </MenuItem>\r\n                                    )}\r\n                                </TextField>\r\n                            </form>\r\n                        }\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Toolbar>\r\n            {/* <TableContainer component='paper'> */}\r\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        {column.map((item, index) =>\r\n                            (\r\n                                <TableCell key={index} align='left'>\r\n                                    {item.title}\r\n                                </TableCell>\r\n                            )\r\n                        )}\r\n                        <TableCell align='right'>\r\n                            Actions\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {(rowsPerPage > 0\r\n                        ? dataSearch.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        : dataSearch).map((item, index) =>\r\n                            (<TableRow key={index}>\r\n                                {column.map((item1, index1) =>\r\n                                    (<TableCell key={index1} align='left'>\r\n                                        {item[item1.field]}\r\n                                    </TableCell>)\r\n                                )}\r\n                                <TableCell align='right'>\r\n                                    <Tooltip title='Edit'>\r\n                                        <EditIcon onClick={() => handleGetData(item)} style={{cursor:'pointer'}}/>\r\n                                    </Tooltip>\r\n                                </TableCell>\r\n                            </TableRow>)\r\n                        )}\r\n                    {emptyRows > 0 && (\r\n                        <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                        </TableRow>\r\n                    )}\r\n                </TableBody>\r\n                {props.options ? props.options.pagination ? <TableFooter>\r\n                    <TableRow>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                            colSpan={6}\r\n                            count={dataSearch.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            SelectProps={{\r\n                                inputProps: { 'aria-label': 'rows per page' },\r\n                                native: true,\r\n                            }}\r\n                            onChangePage={handleChangePage}\r\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                            ActionsComponent={TablePaginationActions}\r\n                        />\r\n                    </TableRow>\r\n                </TableFooter> : \"\" : <TableFooter>\r\n                        <TableRow>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                colSpan={6}\r\n                                count={dataSearch.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                SelectProps={{\r\n                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                    native: true,\r\n                                }}\r\n                                onChangePage={handleChangePage}\r\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                ActionsComponent={TablePaginationActions}\r\n                            />\r\n                        </TableRow>\r\n                    </TableFooter>}\r\n\r\n            </Table>\r\n            {/* </TableContainer> */}\r\n        </Paper>\r\n\r\n    )\r\n}\r\n\r\nexport default TableCustomize\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    root: {\r\n        flexShrink: 0,\r\n        marginLeft: theme.spacing(2.5),\r\n    },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n    const handleFirstPageButtonClick = (event) => {\r\n        onChangePage(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event) => {\r\n        onChangePage(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event) => {\r\n        onChangePage(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event) => {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n            </IconButton>\r\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n};","import React, { useState, useEffect } from 'react'\r\nimport { Dialog, DialogTitle, DialogActions, DialogContent } from '@material-ui/core'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button, MenuItem, TextField } from '@material-ui/core'\r\n\r\nconst styles = (theme) => ({\r\n    rootForm: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            // width: '25ch',\r\n        },\r\n    },\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    asterisk: {\r\n        color: 'red'\r\n    },\r\n    addButton: {\r\n        color: 'white'\r\n    }\r\n});\r\n\r\nconst MUIDialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (<DialogTitle disableTypography className={classes.root} {...other}>\r\n        <Typography variant=\"h6\">{children}</Typography>\r\n        {onClose ? (\r\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                <CloseIcon />\r\n            </IconButton>\r\n        ) : null}\r\n    </DialogTitle>)\r\n})\r\n\r\nconst EditMessagingTemplateDialog = ({ ...props }) => {\r\n    const { classes } = props\r\n    const dataToUpdt = props.dataToUpdate\r\n    // console.log('datadddd',props.data)\r\n    const [state, setState] = useState({\r\n        dataToUpdate: {}\r\n    })\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (dataToUpdt) {\r\n            setState({\r\n                dataToUpdate: dataToUpdt\r\n            })\r\n            setData(props.data ? props.data : [])\r\n        }\r\n    }, [dataToUpdt,props.data])\r\n    const handleClose = () => {\r\n        // setState({})\r\n        props.handleClose(false, true)\r\n    }\r\n\r\n    const handleChange = id => e => {\r\n        setState({\r\n            ...state,\r\n            dataToUpdate: {\r\n                ...state.dataToUpdate,\r\n                [id]: e.target.value,\r\n                [id + 'Edit']: e.target.value\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const handleEditRequest = () => {\r\n        console.log('datatataa', data)\r\n        delete state.dataToUpdate['messagingTemplateCodeEdit']\r\n        delete state.dataToUpdate['messagingTemplateLangEdit']\r\n        delete state.dataToUpdate['subjectTemplateEdit']\r\n        delete state.dataToUpdate['contentTemplateEdit']\r\n        props.handleClose(false)\r\n        props.handleSave(state.dataToUpdate)\r\n    }\r\n   \r\n    return <Dialog fullWidth maxWidth={'xs'} open={props.open} onClose={handleClose} scroll={'paper'}>\r\n        <MUIDialogTitle\r\n            id=\"max-width-dialog-title\"\r\n            onClose={handleClose}\r\n        >\r\n            Edit Messaging Template\r\n        </MUIDialogTitle>\r\n        <DialogContent>\r\n            <form className={classes.rootForm} noValidate autoComplete=\"off\">\r\n                <TextField\r\n                    fullWidth\r\n                    id='messagingTemplateCode'\r\n                    onChange={handleChange('messagingTemplateCode')}\r\n                    value={state.dataToUpdate ? state.dataToUpdate.messagingTemplateCode : ''}\r\n                    label='Code'\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n                <TextField\r\n                    fullWidth\r\n                    select\r\n                    onChange={handleChange('messagingTemplateLang')}\r\n                    id='messagingTemplateLang'\r\n                    value={state.dataToUpdate ? state.dataToUpdate.messagingTemplateLang : ''}\r\n                    label='Languange'\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                >\r\n                    <MenuItem value={'en'}>\r\n                        EN\r\n                    </MenuItem>\r\n                    <MenuItem value='id'>\r\n                        ID\r\n                    </MenuItem>\r\n                </TextField>\r\n                <TextField\r\n                    fullWidth\r\n                    label='Subject'\r\n                    id='subjectTemplate'\r\n                    onChange={handleChange('subjectTemplate')}\r\n                    value={state.dataToUpdate ? state.dataToUpdate.subjectTemplate : ''}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n                <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    rows={5}\r\n                    onChange={handleChange('contentTemplate')}\r\n                    id='contentTemplate'\r\n                    label='Content'\r\n                    value={state.dataToUpdate ? state.dataToUpdate.contentTemplate : ''}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n            </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n                <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                    <Button color='primary' variant='contained'\r\n                        className={classes.addButton} onClick={handleEditRequest}>\r\n                        Edit\r\n                        </Button>\r\n                </Grid>\r\n                <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                    <Button onClick={handleClose} color='secondary' variant='contained' className={classes.addButton}>\r\n                        Cancel\r\n                        </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </DialogActions>\r\n    </Dialog>\r\n}\r\n\r\nexport default withStyles(styles)(EditMessagingTemplateDialog)","\r\nimport React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport BackIcon from '@material-ui/icons/ArrowBack';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddClientDialog from './AddClientDialog'\r\nimport UpdateBasicInfo from './updateBasicInfo'\r\nimport AddUrlOriginDialog from './AddUrlOriginDialog'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { Divider } from '@material-ui/core';\r\nimport TableCustomize from '../../../components/table/TableCustomize'\r\nimport EditMessagingTemplateDialog from './EditMessagingTemplate'\r\nimport { connect } from 'react-redux'\r\nimport {setClientMessagingEdit} from '../../../actions/ClientListActions'\r\n\r\nconst mapStateToProps = store => ({\r\n  messagingList: store.clientList.messagingList,\r\n  userInfo: store.userInfo.info,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setClientMessagingEdit: val =>{\r\n      dispatch(setClientMessagingEdit(val))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function FormDialog({ ...props }) {\r\n\r\n  const { userInfo, messagingList, _setClientMessagingEdit, completeRequest, } = props\r\n  const [data, setData] = useState([])\r\n  const [originUri, setOriginUri] = useState([])\r\n  const [redirectUri, setRedirectUri] = useState([])\r\n  const [clientData, setClientData] = useState({})\r\n  const [basicInfoReq, setBasicInfoReq] = useState({})\r\n\r\n  const [basicInfo, setBasicInfo] = useState([])\r\n  const [messagingTemplate, setMessagingTemplate] = useState([])\r\n\r\n  const [state, setState] = useState({\r\n    clientList: [],\r\n    dataField: {},\r\n    dataToUpdate: null,\r\n    messageToUpdate: null,\r\n    open: false,\r\n    openBasicInfo: false,\r\n    openOriginOri: false,\r\n    openRedirectOri: false,\r\n    openTemplateMessage: false\r\n  })\r\n  const [disabledBtn, setDisabledBtn] = useState(true)\r\n  // console.log('client', props.data)\r\n\r\n  useEffect(() => {\r\n    const {name, email, phone} = userInfo\r\n    // let name = userInfo.name\r\n    // let email = userInfo.email\r\n    // let phone = userInfo.phone\r\n    let customHeaders = { name, email }\r\n    let clientId = props.data.clientId\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let requestAllClient = {\r\n      request: {\r\n        clientId\r\n      },\r\n      method: \"GET\",\r\n      serviceCode: \"SELECT_ALL_MESSAGE\",\r\n      // customHeaders,\r\n      urlParams: `/clients/${clientId}/messaging-templates/`\r\n    }\r\n\r\n    completeRequest(requestAllClient)\r\n\r\n  }, [userInfo, completeRequest, props.data.clientId])\r\n\r\n  useEffect(() => {\r\n    // let arrayOriginUri = []\r\n    let arrayObjOrigin = []\r\n    let arrayRedirectUri = []\r\n    const basicData = { ...props.data }\r\n    if (Array.isArray(props.data.originURIs)) {\r\n      props.data.originURIs.map((item, index) => {\r\n        arrayObjOrigin.push({ uri: item, id: index })\r\n        return null\r\n      })\r\n    }\r\n    if (Array.isArray(props.data.redirectURIs)) {\r\n      props.data.redirectURIs.map((item, index) => {\r\n        arrayRedirectUri.push({ uri: item, id: index })\r\n        return null\r\n      })\r\n    }\r\n    setOriginUri(arrayObjOrigin)\r\n    setRedirectUri(arrayRedirectUri)\r\n    setClientData(props.data)\r\n    setBasicInfo([\r\n      {\r\n        title: \"Client ID\",\r\n        id: \"clientId\",\r\n        field: basicData.clientId,\r\n        edit: false\r\n      },\r\n      {\r\n        title: \"Client Secret\",\r\n        field: basicData.clientSecret,\r\n        id: \"clientSecret\",\r\n        edit: false\r\n      },\r\n      {\r\n        title: \"Client Name\",\r\n        field: basicData.clientName,\r\n        id: \"clientName\",\r\n        edit: true\r\n      },\r\n      {\r\n        title: \"Initial Role\",\r\n        id: \"initialUserRole\",\r\n        field: basicData.initialUserRole,\r\n        edit: true\r\n      },\r\n      {\r\n        title: \"Profile\",\r\n        id: \"profile\",\r\n        field: basicData.profile,\r\n        edit: true\r\n      },\r\n      {\r\n        title: \"Email Sender\",\r\n        id: \"emailSender\",\r\n        field: basicData.emailSender,\r\n        edit: true\r\n      },\r\n      {\r\n        title: \"Email Masking Name\",\r\n        id: \"emailSenderMaskingName\",\r\n        field: basicData.emailSenderMaskingName,\r\n        edit: true\r\n      },\r\n      {\r\n        title: 'Client Domain',\r\n        id: 'clientDomain',\r\n        field: basicData.clientDomain,\r\n        edit: true\r\n      }\r\n    ])\r\n    setData(props.data.roleDetails ? props.data.roleDetails : [{ roleId: 'jadul', roleDescription: 'save to delete' }])\r\n    setMessagingTemplate(messagingList.length !== 0 ? messagingList : [{ messagingTemplateCode: '', messagingTemplateLang: '' }])\r\n  }, [props.data, messagingList])\r\n\r\n  const [updateMessageTemplate, setUpdateMessage] = useState(false)\r\n  const [messagingTemp, setMessagingTemp] = useState({})\r\n\r\n  const handleClose = () => {\r\n    props.handleClose()\r\n  }\r\n\r\n  const handleDeleteClientRole = oldData => new Promise((resolve, reject) => {\r\n    // let clientId = props.data.clientId\r\n    // let roleId = oldData.roleId\r\n    // let request = {}\r\n    // let method = 'DELETE'\r\n    // let serviceCode = 'DELETE_CLIENT_ROLE'\r\n    // let urlParams = `/clients/${clientId}/roles/${roleId}`\r\n\r\n    // let completeRequest = { request, method, serviceCode, urlParams }\r\n    // props.completeRequest(completeRequest)\r\n\r\n    let newData = data.filter(item => item.roleId !== oldData.roleId)\r\n    setData(newData)\r\n    setDisabledBtn(false)\r\n    // props.handleClose()\r\n    resolve()\r\n  })\r\n\r\n  const handleOpenEditCLient = val => {\r\n    setState({\r\n      ...state,\r\n      open: val\r\n    })\r\n  }\r\n  const handleOpenAddOriginUrl = val => {\r\n    setState({\r\n      ...state,\r\n      openOriginOri: val\r\n    })\r\n  }\r\n  const handleOpenAddRedirectUrl = val => {\r\n    setState({\r\n      ...state,\r\n      openRedirectOri: val\r\n    })\r\n  }\r\n  const handleOpenEditBasicInfo = val => {\r\n    setState({\r\n      ...state,\r\n      openBasicInfo: val.open,\r\n      dataField: val\r\n    })\r\n  }\r\n\r\n  const handleOpenEditMessageTemplate = (open, edit, data) => {\r\n    setState({\r\n      ...state,\r\n      openTemplateMessage: open,\r\n      messageToUpdate: data\r\n    })\r\n  }\r\n  const handleSaveBasicInfo = (val) => {\r\n    // basicData[state.dataField.id]=val[state.dataField.id]\r\n    basicInfo.map(item => {\r\n      if (item.id === state.dataField.id) {\r\n        item.field = val[state.dataField.id]\r\n      }\r\n      return null\r\n    })\r\n    delete val.emailSenderErrorMessage\r\n    delete val.emailSenderMaskingNameErrorMessage\r\n    if (state.dataField.id === 'emailSender') {\r\n      val[state.dataField.id] = null\r\n    }\r\n\r\n    if (state.dataField.id === 'emailSenderMaskingName') {\r\n      val[state.dataField.id] = null\r\n    }\r\n    setBasicInfo(basicInfo)\r\n    setBasicInfoReq(val)\r\n    setDisabledBtn(false)\r\n  }\r\n  const handleSaveRole = val => {\r\n    setData([...data, ...val])\r\n    setDisabledBtn(false)\r\n  }\r\n  const handleSaveOriginUris = val => {\r\n    setOriginUri([...originUri, val])\r\n    setDisabledBtn(false)\r\n  }\r\n  const handleSaveRedirectUris = val => {\r\n    setRedirectUri([...redirectUri, val])\r\n    setDisabledBtn(false)\r\n  }\r\n\r\n  const handleSaveMessageTemplate = (val) => {\r\n    // let tempMess = []\r\n\r\n    messagingList.forEach((item, index) => {\r\n      if (item.messagingTemplateId === val['messagingTemplateId']) {\r\n        messagingList[index] = val\r\n      }\r\n    })\r\n    // console.log('tempMess', tempMess)\r\n    setMessagingTemplate(messagingList)\r\n    setMessagingTemp(val)\r\n    setUpdateMessage(true)\r\n    setDisabledBtn(false)\r\n    // setState({\r\n    //   ...state,\r\n    //   openTemplateMessage: false\r\n    // })\r\n  }\r\n  // const sendUpdateRoleRequest = () => {\r\n  //   let clientId = props.data.clientId\r\n  //   let roleId = data.slice(data.length - 1)[0].roleId\r\n  //   let roleDescription = data.slice(data.length - 1)[0].roleDescription\r\n  //   let request = {\r\n  //     roleId,\r\n  //     roleDescription,\r\n  //   }\r\n  //   let method = 'POST'\r\n  //   let serviceCode = 'ADD_CLIENT_ROLE'\r\n  //   let urlParams = `/clients/${clientId}/roles`\r\n\r\n  //   let completeRequest = { request, method, serviceCode, urlParams }\r\n  //   props.completeRequest(completeRequest)\r\n  //   setDisabledBtn(!disabledBtn)\r\n  // }\r\n\r\n  const sendUpdateClientDetail = () => {\r\n    let clientRoles = data\r\n    let originURIs = []\r\n    let redirectURIs = []\r\n    // console.log('wkwkwkw',originUri)\r\n    originUri.map(item => {\r\n      originURIs.push(item.uri)\r\n      return null\r\n    })\r\n    redirectUri.map(item => {\r\n      redirectURIs.push(item.uri)\r\n      return null\r\n    })\r\n    let clientId = props.data.clientId\r\n\r\n    let method = \"PATCH\"\r\n    let serviceCode = \"UPDATE_CLIENT_DETAIL\"\r\n    let urlParams = `/clients/${clientId}/`\r\n    let request = {\r\n      ...basicInfoReq,\r\n      clientRoles,\r\n      originURIs,\r\n      redirectURIs,\r\n      clientId\r\n    }\r\n    let completeRequest = { request, method, serviceCode, urlParams }\r\n    let requestMessagetTemp = {\r\n      ...messagingTemp,\r\n      updateMessageTemplate,\r\n      clientId\r\n    }\r\n    // console.log('request',requestMessagetTemp)\r\n    _setClientMessagingEdit(requestMessagetTemp)\r\n    props.completeRequest(completeRequest)\r\n    props.handleClose()\r\n  }\r\n\r\n  return (\r\n    <Card style={{ display: 'flex', flexWrap: 'wrap', }}>\r\n      <Grid style={{ margin: 35, marginTop: 15 }} container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n          <Button size='large' onClick={handleClose} color=\"secondary\" startIcon={<BackIcon />} variant='outlined' >\r\n            Back\r\n          </Button>\r\n        </Grid>\r\n        {/* <Grid style={{ marginTop: 15 }} container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={2} >\r\n          <Grid item xs={2}><Typography >Client ID</Typography></Grid>\r\n          <Grid item xs={10}><Typography >: {clientData ? clientData.clientId : \"\"}</Typography></Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={2} >\r\n          <Grid item xs={2}><Typography >Client Name</Typography></Grid>\r\n          <Grid item xs={10} > <Typography >: {clientData ? clientData.clientName : \"\"}</Typography></Grid>\r\n        </Grid> */}\r\n        <Grid style={{ marginTop: 20 }} container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n          <Grid item xs={12} style={{ marginTop: 10, marginBottom: 10 }}>\r\n            <Paper style={{ paddingLeft: 20 }}>\r\n              <Typography variant='h6' style={{ paddingBottom: 20 }}>\r\n                Basic Information\r\n              </Typography>\r\n              <Grid container style={{ marginBottom: 15 }}>\r\n                <Grid item xs={6}>\r\n                  <Typography>\r\n                    Information\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography style={{ textAlign: \"right\", paddingRight: 5 }}>\r\n                    Actions\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              {\r\n                basicInfo.map(item => {\r\n                  return (\r\n                    <div>\r\n                      <Grid container style={{ marginBottom: 8 }}>\r\n                        <Grid item xs={2}>\r\n                          <Typography>\r\n                            {item.title}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                          <Typography style={{ fontSize: 14 }}>\r\n                            {item.field}\r\n                          </Typography>\r\n                        </Grid>\r\n                        {item.edit ? <Grid container item xs={2} justify='flex-end' style={{ paddingRight: 15 }}>\r\n                          <EditIcon onClick={() => handleOpenEditBasicInfo({ ...item, open: true })} />\r\n                        </Grid> : \"\"}\r\n                      </Grid>\r\n                      <Divider />\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} style={{ marginTop: 15 }} >\r\n            {/* <MaterialTable\r\n              title='Messaging Template'\r\n              columns={[\r\n                { title: 'Code', field: 'messagingTemplateCode' },\r\n                { title: 'Languange', field: 'messagingTemplateLang' },\r\n                { title: 'Subject', field: 'subjectTemplate' }\r\n              ]}\r\n              data={messagingTemplate}\r\n              options={{\r\n                actionsColumnIndex: -1,\r\n                padding: 'dense',\r\n                search: false,\r\n                paging: false\r\n                // pageSize: 10,\r\n              }}\r\n              editable={{\r\n                onRowUpdate:(newData, oldData)=>\r\n                  new Promise((resolve)=>{\r\n\r\n                  })\r\n              }}\r\n            /> */}\r\n            <TableCustomize\r\n              title='Messaging Template'\r\n              column={[\r\n                { title: 'Code', field: 'messagingTemplateCode' },\r\n                { title: 'Languange', field: 'messagingTemplateLang' },\r\n                { title: 'Subject', field: 'subjectTemplate' }\r\n              ]}\r\n              handleEditOpen={handleOpenEditMessageTemplate}\r\n              data={messagingList.length !== 0 ? messagingList : [{ messagingTemplateCode: '', messagingTemplateLang: '' }]}\r\n              options={{\r\n                pagination: true,\r\n                filterClientId: false\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} style={{ marginTop: 25 }} >\r\n            <MaterialTable\r\n              style={{ width: '100%' }}\r\n              title=\"Available Role\"\r\n              columns={[\r\n                { title: 'Role ID', field: 'roleId', width: 300 },\r\n                { title: 'Description', field: 'roleDescription' },\r\n              ]}\r\n              data={data}\r\n              editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                  new Promise((resolve) => {\r\n                    const dataUpdate = [...data]\r\n                    // const roleId = oldData.id\r\n                    dataUpdate.map(item => {\r\n                      if (item.roleId === oldData.roleId) {\r\n                        item.roleId = newData.roleId\r\n                        item.roleDescription = newData.roleDescription\r\n                      }\r\n                      return null\r\n                    })\r\n                    setData([...dataUpdate])\r\n                    setDisabledBtn(false)\r\n                    resolve()\r\n                  }),\r\n                onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                    handleDeleteClientRole(oldData).then(result => resolve())\r\n                  }),\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  editRow: {\r\n                    deleteText: 'Apakah anda yakin menghapus data ini?'\r\n                  }\r\n                }\r\n              }}\r\n              options={{\r\n                actionsColumnIndex: -1,\r\n                padding: 'dense',\r\n                search: false,\r\n                paging: false\r\n                // pageSize: 10,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid style={{ marginTop: 20 }} container direction=\"row\" alignItems=\"flex-start\" >\r\n          <Button style={{ fontSize: 12, fontWeight: 'bold' }} onClick={() => handleOpenEditCLient(true)} variant='outlined' color=\"secondary\"\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add New Role\r\n        </Button>\r\n          {/* <Button onClick={sendUpdateRoleRequest} variant='contained' color=\"primary\" disabled={!disabledBtn}\r\n            startIcon={<EditIcon />}\r\n          >\r\n            Save Role\r\n        </Button> */}\r\n          <Grid item xs={12} style={{ marginTop: 15 }} >\r\n            <MaterialTable\r\n              style={{ width: '100%' }}\r\n              title=\"Origin URI\"\r\n              columns={[\r\n                { title: 'URI', field: 'uri' },\r\n                // \r\n              ]}\r\n              data={originUri}\r\n              editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                  new Promise((resolve) => {\r\n                    const dataUpdate = [...originUri]\r\n                    const index = oldData.id\r\n                    dataUpdate[index].uri = newData.uri\r\n                    setOriginUri([...dataUpdate])\r\n                    setDisabledBtn(false)\r\n                    resolve()\r\n                  }),\r\n                onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                    const dataUpdate = [...originUri]\r\n                    const index = oldData.id\r\n                    dataUpdate.splice(index, 1)\r\n                    setOriginUri([...dataUpdate])\r\n                    setDisabledBtn(false)\r\n                    resolve()\r\n                  }),\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  editRow: {\r\n                    deleteText: 'Apakah anda yakin menghapus data ini?'\r\n                  }\r\n                }\r\n              }}\r\n              options={{\r\n                actionsColumnIndex: -1,\r\n                padding: 'dense',\r\n                search: false,\r\n                paging: false\r\n                // pageSize: 10,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid style={{ marginTop: 20 }} container direction=\"row\" alignItems=\"flex-start\" >\r\n            <Button style={{ fontSize: 12, fontWeight: 'bold' }} onClick={() => handleOpenAddOriginUrl(true)} variant='outlined' color=\"secondary\"\r\n              startIcon={<AddIcon />}\r\n            >\r\n              Add Origin URI\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} style={{ marginTop: 15 }} >\r\n            <MaterialTable\r\n              style={{ width: '100%' }}\r\n              title=\"Redirect URI\"\r\n              columns={[\r\n                { title: 'URI', field: 'uri' },\r\n                // \r\n              ]}\r\n              data={redirectUri}\r\n              editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                  new Promise((resolve) => {\r\n                    const dataUpdate = [...redirectUri]\r\n                    const index = oldData.id\r\n                    dataUpdate[index].uri = newData.uri\r\n                    setOriginUri([...dataUpdate])\r\n                    setDisabledBtn(false)\r\n                    resolve()\r\n                  }),\r\n                onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                    const dataUpdate = [...redirectUri]\r\n                    const index = oldData.id\r\n                    dataUpdate.splice(index, 1)\r\n                    setRedirectUri([...dataUpdate])\r\n                    setDisabledBtn(false)\r\n                    resolve()\r\n                  }),\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  editRow: {\r\n                    deleteText: 'Apakah anda yakin menghapus data ini?'\r\n                  }\r\n                }\r\n              }}\r\n              options={{\r\n                actionsColumnIndex: -1,\r\n                padding: 'dense',\r\n                // pageSize: 10,\r\n                search: false,\r\n                paging: false\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid style={{ marginTop: 20 }} container direction=\"row\" alignItems=\"flex-start\" >\r\n            <Button style={{ fontSize: 12, fontWeight: 'bold' }} onClick={() => handleOpenAddRedirectUrl(true)} variant='outlined' color=\"secondary\"\r\n              startIcon={<AddIcon />}\r\n            >\r\n              Add Redirect URI\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid style={{ marginTop: 30 }} container direction=\"row\" alignItems=\"flex-start\" >\r\n            <Button onClick={sendUpdateClientDetail} style={{\r\n              marginRight: '15px',\r\n              paddingLeft: \"50px\",\r\n              paddingRight: \"50px\",\r\n              color: \"white\",\r\n              // marginRight: 10,\r\n              fontSize: 18,\r\n              lineHeight: 2.1,\r\n\r\n            }} variant='contained' color=\"primary\" disabled={disabledBtn}\r\n            // startIcon={<AddIcon />}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button variant='contained' color=\"secondary\" style={{\r\n              marginRight: '15px',\r\n              paddingLeft: \"50px\",\r\n              paddingRight: \"50px\",\r\n              // marginRight: 10,\r\n              color: 'white',\r\n              fontSize: 18,\r\n              lineHeight: 2.1,\r\n\r\n            }} onClick={handleClose}\r\n            // startIcon={<EditIcon />}\r\n            >\r\n              Cancel\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <AddClientDialog\r\n        handleSave={handleSaveRole}\r\n        dataToUpdate={state.dataToUpdate}\r\n        data={clientData}\r\n        clientList={state.clientList}\r\n        open={state.open}\r\n        handleOpen={handleOpenEditCLient}\r\n      />\r\n      <UpdateBasicInfo\r\n        handleSave={handleSaveBasicInfo}\r\n        open={state.openBasicInfo}\r\n        dataToUpdate={state.dataToUpdate}\r\n        data={clientData}\r\n        dataField={state.dataField}\r\n        clientList={state.clientList}\r\n        handleOpen={handleOpenEditBasicInfo}\r\n      />\r\n      <AddUrlOriginDialog\r\n        open={state.openOriginOri}\r\n        handleOpen={handleOpenAddOriginUrl}\r\n        handleSave={handleSaveOriginUris}\r\n        data={clientData}\r\n        redirect={false}\r\n      />\r\n      <AddUrlOriginDialog\r\n        open={state.openRedirectOri}\r\n        handleOpen={handleOpenAddRedirectUrl}\r\n        handleSave={handleSaveRedirectUris}\r\n        data={clientData}\r\n        redirect={true}\r\n      />\r\n      <EditMessagingTemplateDialog\r\n        open={state.openTemplateMessage}\r\n        handleClose={handleOpenEditMessageTemplate}\r\n        dataToUpdate={state.messageToUpdate}\r\n        data={messagingTemplate}\r\n        handleSave={handleSaveMessageTemplate}\r\n      />\r\n    </Card>\r\n  );\r\n})\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Grid } from '@material-ui/core';\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole,\r\n} from '../../../actions/ServiceActions'\r\nimport ClientRUDTable from '../userlist/UserRUDTable'\r\nimport ClientDetail from './ClientDetail'\r\nimport ConfirmationDialogRaw from '../userlist/ConfirmationDIalog'\r\n\r\n\r\nconst ClientList = ({ ...props }) => {\r\n  const { _setOpenScreen, _setCompleteRequest, userInfo, clientList} = props\r\n  const [open, setOpen] = useState(false);\r\n  const value = 'Soft Delete'\r\n  const [requestDeleteUser, setRequestDeleteUser] = useState({})\r\n  const [userName, setUserName] = useState('')\r\n\r\n  const callbackRequest = () => {\r\n    let name = userInfo.name\r\n    let email = userInfo.email\r\n    let phone = userInfo.phone\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let requestAllClient = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"SELECT_ALL_CLIENT\",\r\n      customHeaders\r\n    }\r\n    if (clientList.length === 0) _setCompleteRequest(requestAllClient)\r\n  }\r\n\r\n  useEffect(() => {\r\n    _setOpenScreen(\"Client List\")\r\n  }, [_setOpenScreen])\r\n\r\n  useEffect(callbackRequest, [])\r\n\r\n  const [values, setValues] = useState({\r\n    columns: [\r\n      { title: 'Name', field: 'clientName', },\r\n      // { title: 'Origin URI', field: 'originURIs', },\r\n      { title: 'Client Id', field: 'clientId', },\r\n      { title: 'Type', field: 'type', },\r\n    ],\r\n    data: [],\r\n    dataToProcess: null,\r\n  });\r\n\r\n  const [states, setStates] = useState({\r\n    open: false,\r\n\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (clientList[0]) {\r\n      clientList.forEach(item => {\r\n        // item.originURIs = Array.isArray(item.originURIs) ? item.originURIs.join(', ') : item.originURIs\r\n        item.roleDetails = item.roleDetails ? item.roleDetails : Array.isArray(item.clientRoles) ? item.clientRoles : \"\"\r\n        item.clientRoles = Array.isArray(item.clientRoles) ? (item.clientRoles.map(item => item.roleId)).join(', ') : item.clientRoles\r\n      })\r\n\r\n      setValues(prevVal => ({\r\n        ...prevVal,\r\n        data: clientList\r\n      }))\r\n    }\r\n  }, [clientList])\r\n\r\n  // const handleChange = (prop) => (event) => {\r\n  //   setValues({ ...values, [prop]: event.target.value });\r\n  // };\r\n\r\n  const handleUpdate = (newData, oldData) => new Promise((resolve, reject) => {\r\n    if (oldData) {\r\n      setValues((prevState) => {\r\n        const data = [...prevState.data];\r\n        data[data.indexOf(oldData)] = newData;\r\n        return { ...prevState, data };\r\n      })\r\n      resolve()\r\n    }\r\n  })\r\n\r\n  const handleDelete = oldData => new Promise((resolve, reject) => {\r\n    let clientId = oldData.clientId\r\n    let request = {}\r\n    let method = 'DELETE'\r\n    let serviceCode = 'DELETE_CLIENT'\r\n    let urlParams = `/clients/${clientId}`\r\n\r\n    let completeRequest = { request, method, serviceCode, urlParams }\r\n    setRequestDeleteUser(completeRequest)\r\n    setUserName(oldData.clientName)\r\n    setOpen(true)\r\n    resolve()\r\n  })\r\n\r\n  const handleChoose = (val) => {\r\n    if (val === 'Soft Delete') {\r\n      requestDeleteUser.request.isForceDelete = false\r\n      props._setCompleteRequest(requestDeleteUser)\r\n    }\r\n    else {\r\n      requestDeleteUser.request.isForceDelete = true\r\n      props._setCompleteRequest(requestDeleteUser)\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleRowClicked = rowData => {\r\n    setValues({ ...values, dataToProcess: rowData })\r\n    setStates({ ...states, open: true })\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      {states.open\r\n        ? <ClientDetail\r\n          completeRequest={_setCompleteRequest}\r\n          open={states.open}\r\n          handleClose={() => setStates({ ...states, open: false })}\r\n          data={values.dataToProcess}\r\n        />\r\n        : <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" >\r\n          <ClientRUDTable\r\n            confirmdeletetext=\"Apakah anda yakin menghapus data ini?\"\r\n            title=\"Backoffice Client List\"\r\n            columns={values.columns}\r\n            data={values.data}\r\n            updatedata={handleUpdate}\r\n            deletedata={handleDelete}\r\n            rowClicked={handleRowClicked}\r\n            action\r\n          />\r\n        </Grid>}\r\n      < ConfirmationDialogRaw\r\n        id=\"ringtone-menu\"\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        value={value}\r\n        handleChoose={handleChoose}\r\n        userName={userName}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  clientList: store.clientList.list,\r\n  userDetail: store.clientList.detail,\r\n  userFiltered: store.clientList.filteredList,\r\n  userInfo: store.userInfo.info,\r\n  messagingList: store.clientList.messagingList\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)),\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.urlParams))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientList)\r\n","\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Grid, Typography, Button, Card, CardContent, CardActions } from '@material-ui/core'\r\n\r\n\r\nconst AddCLientRole = ({ ...props }) => {\r\n  const { form, handleChange, setShowAddRoles, handleAddClientRole } = props\r\n  \r\n  return (\r\n    <Card >\r\n      <CardContent>\r\n        <Grid>\r\n          <Typography variant='subtitle2'>\r\n            Add RoleId and Description\r\n          </Typography>\r\n        </Grid>\r\n        <Grid>\r\n          <TextField\r\n            margin=\"dense\"\r\n            size=\"small\"\r\n            onChange={handleChange('roleId')}\r\n            id=\"standard-roleId\"\r\n            label=\"RoleId\"\r\n            placeholder=\"RoleId\"\r\n            // onFocus={() => setHelpTextRoleId(true)}\r\n            // onBlur={form.blur ? true : false}\r\n            // helperText={helpTextRoleId ? \"Go to Client List to add more Roles!\" : form.roleIdErrorMessage ? form.roleIdErrorMessage : ''}\r\n            error={form.roleIdErrorMessage ? true : false}\r\n            value={form.roleId}\r\n          />\r\n        </Grid>\r\n        <Grid >\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('roleDescription')}\r\n            id=\"standard-roleDesc\"\r\n            label=\"Description\"\r\n            placeholder=\"Role description\"\r\n            helperText={form.roleDescriptionErrorMessage ? form.roleDescriptionErrorMessage : ''}\r\n            error={form.roleDescriptionErrorMessage ? true : false}\r\n            value={form.roleDescription}\r\n          // onBlur={form.blur ? true : false}\r\n          />\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={() => setShowAddRoles(false)} >\r\n          Cancel\r\n        </Button>\r\n        <Button size=\"small\" color=\"secondary\" onClick={handleAddClientRole} >\r\n          Add\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AddCLientRole","\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Grid, MenuItem, } from '@material-ui/core';\r\n\r\nconst clientType = [\r\n  { value: 'public', label: 'Public' },\r\n  { value: \"confidential\", label: 'Confidential' },\r\n]\r\nconst clientProfile = [\r\n  { value: 'Web Application', label: 'Web Application' },\r\n  { value: 'iOS', label: 'iOS' },\r\n  { value: 'Android', label: 'Android' },\r\n]\r\n\r\nconst CreateClientForm = ({ ...props }) => {\r\n  const { form, handleChange, setFormFocus, formFocus,\r\n    helpTextOrigin, setHelpTextOrigin, helpTextRedirect, setHelpTextRedirect, } = props\r\n\r\n  return (\r\n    <Grid item xs={12} md={6}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} md={8} style={{ marginLeft: 15, marginRight: 15 }} >\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('clientId')}\r\n            id=\"standard-clientId\"\r\n            label=\"Client Id\"\r\n            // placeholder=\"Placeholder\"\r\n            helperText={form.clientIdErrorMessage ? form.clientIdErrorMessage : \"\"}\r\n            error={form.clientIdErrorMessage ? true : false}\r\n            fullWidth\r\n            margin='dense'\r\n            value={form.clientId}\r\n            onFocus={() => setFormFocus({ ...formFocus, clientId: true })}\r\n            onBlur={() => form.clientId ? setFormFocus({ ...formFocus, clientId: true }) : setFormFocus({ ...formFocus, clientId: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.clientId ? true : false\r\n            }}\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('clientName')}\r\n            id=\"standard-clientName\"\r\n            label=\"Client Name\"\r\n            // placeholder=\"Placeholder\"\r\n            // helperText=\"Full width!\"\r\n            helperText={form.clientNameErrorMessage ? form.clientNameErrorMessage : \"\"}\r\n            error={form.clientNameErrorMessage ? true : false}\r\n            fullWidth\r\n            margin=\"dense\"\r\n            value={form.clientName}\r\n            onFocus={() => setFormFocus({ ...formFocus, clientName: true })}\r\n            onBlur={() => form.clientName ? setFormFocus({ ...formFocus, clientName: true }) : setFormFocus({ ...formFocus, clientName: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.clientName ? true : false\r\n            }}\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('clientType')}\r\n            id=\"standard-clientType\"\r\n            label=\"Client Type\"\r\n            select\r\n            value={form.clientType}\r\n            // placeholder=\"Placeholder\"\r\n            // helperText=\"Full width!\"\r\n            fullWidth\r\n            margin=\"dense\"\r\n          >\r\n            {clientType.map((option, i) => (\r\n              <MenuItem  value={option.value} key={i + 2}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('profile')}\r\n            id=\"standard-clientProfile\"\r\n            label=\"Client Profile\"\r\n            select\r\n            value={form.profile}\r\n            // placeholder=\"Placeholder\"\r\n            // helperText=\"Full width!\"\r\n            fullWidth\r\n            margin=\"dense\"\r\n          >\r\n            {clientProfile.map((option, i) => (\r\n              <MenuItem  value={option.value} key={i + 11}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('originURIs')}\r\n            id=\"standard-originURIs\"\r\n            label=\"Origin URI\"\r\n            placeholder=\"http://example.com\"\r\n            helperText={helpTextOrigin ? \"Press Enter to add more URI!\" : ''}\r\n            fullWidth\r\n            multiline\r\n            margin=\"dense\"\r\n            value={form.originURIs}\r\n            onFocus={() => { setFormFocus({ ...formFocus, originURIs: true }); setHelpTextOrigin(true) }}\r\n            onBlur={() => form.originURIs ? setFormFocus({ ...formFocus, originURIs: true }) : setFormFocus({ ...formFocus, originURIs: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.originURIs ? true : false\r\n            }}\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('redirectURIs')}\r\n            id=\"standard-redirectURIs\"\r\n            label=\"Redirect URI\"\r\n            placeholder=\"http://example.com/home\"\r\n            helperText={helpTextRedirect ? \"Press Enter to add more URI!\" : \"\"}\r\n            fullWidth\r\n            multiline\r\n            margin='dense'\r\n            value={form.redirectURIs}\r\n            onFocus={() => { setFormFocus({ ...formFocus, redirectURIs: true }); setHelpTextRedirect(true) }}\r\n            onBlur={() => form.redirectURIs ? setFormFocus({ ...formFocus, redirectURIs: true }) : setFormFocus({ ...formFocus, redirectURIs: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.redirectURIs ? true : false\r\n            }}\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('initialRole')}\r\n            id=\"standard-initialRole\"\r\n            label=\"Initial Role\"\r\n            // placeholder=\"\"\r\n            helperText={form.initialRoleErrorMessage ? form.initialRoleErrorMessage : \"\"}\r\n            error={form.initialRoleErrorMessage ? true : false}\r\n            fullWidth\r\n            multiline\r\n            margin='dense'\r\n            value={form.initialRole}\r\n            // onFocus={() => { setFormFocus({ ...formFocus, initialRole: true }); setHelpTextRedirect(true) }}\r\n            // onBlur={() => form.initialRole ? setFormFocus({ ...formFocus, initialRole: true }) : setFormFocus({ ...formFocus, initialRole: false })}\r\n            // InputLabelProps={{\r\n            //   shrink: formFocus.initialRole ? true : false\r\n            // }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n\r\n}\r\n\r\nexport default CreateClientForm\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Grid, Paper, Typography, Button, Divider, List, ListItemText, FormHelperText } from '@material-ui/core';\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus,\r\n  setServiceMethod, setServiceParams, setServiceCustomHeaders, setServiceRole,\r\n} from '../../../actions/ServiceActions'\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\nimport AddCLientRole from './AddClientRole'\r\nimport CreateClientForm from './CreateClientForm'\r\n\r\n\r\nconst CreateClient = ({ ...props }) => {\r\n  const { _setOpenScreen, _setCompleteRequest, userInfo, } = props\r\n  const [showAddRoles, setShowAddRoles] = useState(false)\r\n  const [helpTextOrigin, setHelpTextOrigin] = useState(false)\r\n  const [helpTextRedirect, setHelpTextRedirect] = useState(false)\r\n  // const [helpTextRoleId, setHelpTextRoleId] = useState(false)\r\n  const [formFocus, setFormFocus] = useState({\r\n    clientId: false,\r\n    clientName: false,\r\n\r\n  })\r\n  const [form, setForm] = useState({\r\n    clientRoles: [],\r\n    clientType: '',\r\n    clientGroupId: \"7ff9bf27-23bd-4253-a015-b2ffbe067f04\",\r\n    profile: '',\r\n  })\r\n  const [, setIsRoleAdded] = useState(false)\r\n  const [submitError, setSubmitError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    _setOpenScreen(\"Create Client\")\r\n  }, [_setOpenScreen])\r\n\r\n  const handleChange = prop => e => {\r\n    e.preventDefault()\r\n    setSubmitError(false)\r\n    let valid = FormValidation(prop, e.target.value)\r\n\r\n    if ((prop === 'originURIs' || prop === 'redirectURIs')) {\r\n      setForm({\r\n        ...form,\r\n        [prop]: e.target.value\r\n      })\r\n    }\r\n    else if (prop === 'initialRole') {\r\n      // let newClientRole = form.clientRoles.splice(0, 0, { roleId: e.target.value, roleDescription: \"Initial role\" })\r\n      setForm({\r\n        ...form,\r\n        [prop]: e.target.value,\r\n        [prop + 'ErrorMessage']: valid.errorMessage,\r\n        clientRoles: [{ roleId: e.target.value, roleDescription: \"Initial role\" }],\r\n      })\r\n    }\r\n    else {\r\n      setForm({\r\n        ...form,\r\n        [prop]: e.target.value,\r\n        [prop + 'ErrorMessage']: valid.errorMessage,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    setSubmitError(false)\r\n    const { clientGroupId, clientId, clientName, clientRoles,\r\n      clientType, originURIs, profile, redirectURIs, initialRole } = form\r\n\r\n    if (clientGroupId && clientId && clientName && clientRoles && clientType && originURIs && profile && redirectURIs && initialRole) {\r\n      let request = {\r\n        clientGroupId, clientId, clientName, clientRoles, originURIs: originURIs.split(/\\r?\\n/),\r\n        profile, redirectURIs: redirectURIs.split(/\\r?\\n/), 'type': clientType, initialUserRole: initialRole\r\n      }\r\n      let name = userInfo.name\r\n      let email = userInfo.email\r\n      let phone = userInfo.phone\r\n      let customHeaders = { name, email }\r\n      if (phone) customHeaders.phone = phone\r\n\r\n      let submitRequest = {\r\n        request,\r\n        method: \"POST\",\r\n        serviceCode: \"CREATE_CLIENT\",\r\n        customHeaders\r\n      }\r\n      _setCompleteRequest(submitRequest)\r\n      setIsRoleAdded(false)\r\n    }\r\n    else {\r\n      setSubmitError(true)\r\n    }\r\n  }\r\n\r\n  const handleAddClientRole = e => {\r\n    e.preventDefault()\r\n    setForm({\r\n      ...form,\r\n      clientRoles: [...form.clientRoles, { roleId: form.roleId, roleDescription: form.roleDescription }],\r\n      roleId: '',\r\n      roleDescription: '',\r\n    })\r\n    setShowAddRoles(false)\r\n    setIsRoleAdded(true)\r\n  }\r\n\r\n  const handleCancel = e => {\r\n    e.preventDefault()\r\n    setHelpTextOrigin(false)\r\n    setHelpTextRedirect(false)\r\n    setIsRoleAdded(false)\r\n    setSubmitError(false)\r\n    setForm({\r\n      ...form,\r\n      clientId: '',\r\n      clientName: '',\r\n      clientType: '',\r\n      clientRoles: [],\r\n      originURIs: '',\r\n      profile: '',\r\n      redirectURIs: '',\r\n      initialRole: '',\r\n    })\r\n    setFormFocus({\r\n      clientId: false,\r\n      clientName: false,\r\n      clientRoles: [],\r\n      clientType: false,\r\n      originURIs: false,\r\n      profile: false,\r\n      redirectURIs: false,\r\n      initialRole: false,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid item xs={12} md={9}>\r\n        <Paper>\r\n          <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n            <Typography variant='h6' color='primary' style={{ marginTop: 20 }} >Create Client</Typography>\r\n          </Grid>\r\n\r\n          <Grid container direction=\"row\"  >\r\n            <CreateClientForm\r\n              setFormFocus={setFormFocus}\r\n              formFocus={formFocus}\r\n              helpTextOrigin={helpTextOrigin}\r\n              setHelpTextOrigin={setHelpTextOrigin}\r\n              helpTextRedirect={helpTextRedirect}\r\n              setHelpTextRedirect={setHelpTextRedirect}\r\n              handleChange={handleChange}\r\n              form={form}\r\n            />\r\n            <Grid item xs={12} md={6} style={{ marginTop: 10 }}>\r\n              <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" >\r\n                <Typography color='primary' variant='subtitle2' >Client Roles:</Typography>\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ marginTop: 10 }} >\r\n                  <Grid item xs={6}>\r\n                    <Grid container direction=\"column\" justify='center' alignItems='center' >\r\n                      <Grid item>\r\n                        Role Id\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container direction=\"row\" justify='flex-start' alignItems='flex-start' >\r\n                      <Grid item>\r\n                        <List>\r\n                          {form.clientRoles[0]\r\n                            ? form.clientRoles.map((item, i) => (<ListItemText key={i} secondary={'- ' + item.roleId} />))\r\n                            : <ListItemText secondary={'- none'} />}\r\n                        </List>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Grid container direction=\"column\" justify='center' alignItems='center' >\r\n                      <Grid item>\r\n                        Description\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid container direction=\"row\" justify='flex-start' alignItems='flex-start' >\r\n                      <Grid item>\r\n                        <List>\r\n                          {form.clientRoles[0]\r\n                            ? form.clientRoles.map((item, i) => (<ListItemText key={i} secondary={'- ' + item.roleDescription} />))\r\n                            : <ListItemText secondary={'- none'} />}\r\n                        </List>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container direction=\"column\" justify='flex-start' alignItems='flex-start' style={{ margin: 20 }}>\r\n                    {\r\n                      !showAddRoles\r\n                        ? <Button disabled={form.initialRole ? false : true} size='small' variant='outlined' color='secondary' onClick={() => setShowAddRoles(true)} >\r\n                          Add Client Roles\r\n                          </Button>\r\n                        : <AddCLientRole\r\n                          form={form}\r\n                          setForm={setForm}\r\n                          handleChange={handleChange}\r\n                          setShowAddRoles={setShowAddRoles}\r\n                          handleAddClientRole={handleAddClientRole} />\r\n                    }\r\n\r\n                    {/* {\r\n                      isRoleAdded\r\n                        ? null\r\n                        : !showAddRoles\r\n                          ? <Button size='small' variant='outlined' color='secondary' onClick={() => setShowAddRoles(true)} >\r\n                            Add Client Roles\r\n                          </Button>\r\n                          : <AddCLientRole\r\n                            form={form}\r\n                            setForm={setForm}\r\n                            handleChange={handleChange}\r\n                            setShowAddRoles={setShowAddRoles}\r\n                            handleAddClientRole={handleAddClientRole}\r\n                          />\r\n                    } */}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Divider style={{ margin: 20 }} />\r\n\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n            <Grid item>\r\n              <Button onClick={handleCancel} variant=\"outlined\" color=\"primary\">Cancel</Button>\r\n            </Grid>\r\n            <Grid style={{ margin: 10 }} item>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">Create</Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n            <FormHelperText error >{submitError ? 'Form not complete' : null}</FormHelperText>\r\n          </Grid>\r\n          <br />\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    userList: store.userList.list,\r\n    userDetail: store.userList.detail,\r\n    userFiltered: store.userList.filteredList,\r\n    userInfo: store.userInfo.info,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)),\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.params))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateClient)\r\n","import React, { useState } from 'react'\r\nimport { Dialog, DialogActions, DialogContent } from '@material-ui/core'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Grid, Typography, Button, MenuItem, TextField } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\n\r\nconst styles = (theme) => ({\r\n    rootForm: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            // width: '25ch',\r\n        },\r\n    },\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    asterisk: {\r\n        color: 'red'\r\n    },\r\n    addButton: {\r\n        color: 'white'\r\n    }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n    const { children, onClose, classes, ...other } = props\r\n\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n})\r\n\r\nconst AddRequestSpesificationDialog = ({ ...props }) => {\r\n    const { classes, data, dataClient } = props\r\n    const [state, setState] = useState({\r\n        clientId: \"\",\r\n\r\n    })\r\n    let dataRoles = []\r\n    const handleClose = () => {\r\n        setState({})\r\n        props.handleClose(false, false)\r\n    }\r\n    // console.log('dataCliet', dataClient)\r\n    const findDuplicateClientId = (arrayOfObj, key) => {\r\n        return arrayOfObj.filter((item, index, array) => {\r\n            return array.map((mapItem) => mapItem[key]).indexOf(item[key]) === index\r\n        })\r\n    }\r\n    // console.log('dupkcate', findDuplicateClientId())\r\n\r\n    const handleAddRequest = () => {\r\n        // let request = {\r\n        //     ...state,\r\n        // }\r\n        // let requestAllClient = {\r\n        //     request,\r\n        //     method:\"POST\",\r\n        //     serviceCode:\"ADD_REQUEST_SPESIFICATION\",\r\n        //     urlParams:'/request-spesifications'\r\n        // }\r\n        // console.log('Request',request)\r\n        delete state.clientIdErrorMessage\r\n        delete state.defaultRoleErrorMessage\r\n        delete state.pathErrorMessage\r\n        delete state.urlDestinationErrorMessage\r\n        delete state.isNeedLoginErrorMessage\r\n        \r\n        props.completeRequest(state)\r\n        // props.handleClose(false)\r\n    }\r\n\r\n    const handleChange = id => e => {\r\n        let valid = FormValidation(id, e.target.value)\r\n        setState({\r\n            ...state,\r\n            [id]: e.target.value,\r\n            [id + 'ErrorMessage']: valid.errorMessage,\r\n\r\n            // dataRoles : dataClient.filter(item=> item.clientId===e.target.value)[0]\r\n        })\r\n    }\r\n    const setDataRoles = () => {\r\n        dataRoles = dataClient.filter(item => item.clientId === state.clientId)[0]\r\n        if (!dataRoles) return []\r\n        else {\r\n            return dataRoles.clientRoles\r\n        }\r\n        // return []\r\n    }\r\n    const needRole = [{ label: \"Yes\", boolean: true }, { label: \"No\", boolean: false }]\r\n\r\n    const disableButton = () => {\r\n        let isNeedLog = state.isNeedLogin === '' || state.isNeedLogin === null || state.isNeedLogin === undefined ? false : true\r\n        if (state.clientId && state.path && state.urlDestination && isNeedLog) return false\r\n        else return true\r\n    }\r\n    return (\r\n        <Dialog fullWidth maxWidth={'xs'} open={props.open} onClose={handleClose} scroll={'paper'}>\r\n            <DialogTitle\r\n                id=\"max-width-dialog-title\"\r\n                onClose={handleClose}\r\n            >\r\n                Add Request Specification\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <form className={classes.rootForm} noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        fullWidth\r\n                        placeholder='Contoh : authentication-backoffice'\r\n                        required\r\n                        select\r\n                        id='clientId'\r\n                        label='Client Id'\r\n                        value={state.clientId}\r\n                        onChange={handleChange('clientId')}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                            classes: {\r\n                                asterisk: classes.asterisk\r\n                            }\r\n                        }}\r\n                    >\r\n                        {findDuplicateClientId(data, 'clientId').map(item =>\r\n                            <MenuItem key={item.clientId} value={item.clientId}>\r\n                                {item.clientId}\r\n                            </MenuItem>\r\n                        )}\r\n                    </TextField>\r\n                    <TextField\r\n                        fullWidth\r\n                        required\r\n                        placeholder='Contoh : /users/*/orders/**'\r\n                        label='Path'\r\n                        onChange={handleChange('path')}\r\n                        error={state.pathErrorMessage ? true : false}\r\n                        value={state.path ? state.path : ''}\r\n                        helperText={state.pathErrorMessage ? state.pathErrorMessage : ''}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                            classes: {\r\n                                asterisk: classes.asterisk\r\n                            }\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        required\r\n                        placeholder='Contoh : http//172.16.10.51:32170/users/*/orders/**'\r\n                        label='URL Destination'\r\n                        onChange={handleChange('urlDestination')}\r\n                        error={state.urlDestinationErrorMessage ? true : false}\r\n                        helperText={state.urlDestinationErrorMessage ? state.urlDestinationErrorMessage : ''}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                            classes: {\r\n                                asterisk: classes.asterisk\r\n                            }\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        required\r\n                        select\r\n                        label='Need Login'\r\n                        onChange={handleChange('isNeedLogin')}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                            classes: {\r\n                                asterisk: classes.asterisk\r\n                            }\r\n                        }}\r\n                    >\r\n                        {needRole.map(item =>\r\n                            <MenuItem key={item.label} value={item.boolean}>\r\n                                {item.label}\r\n                            </MenuItem>\r\n                        )}\r\n                    </TextField>\r\n                    <TextField\r\n                        fullWidth\r\n                        select\r\n                        label='Default Role'\r\n                        onChange={handleChange('defaultRole')}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    >\r\n                        <MenuItem key={'null'} value={null}>\r\n                            Null\r\n                        </MenuItem>\r\n                        {setDataRoles().map(item => <MenuItem key={item.roleId} value={item.roleId}>{item.roleId}</MenuItem>)}\r\n                    </TextField>\r\n                    <TextField\r\n                        fullWidth\r\n                        placeholder='Contoh: 100'\r\n                        label='Priority Value'\r\n                        onChange={handleChange('priorityValue')}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n                    <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                        <Button color='primary' variant='contained'\r\n                            className={classes.addButton} onClick={handleAddRequest} disabled={disableButton()}>\r\n                            Add\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                        <Button onClick={handleClose} color='secondary' variant='contained' className={classes.addButton}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(AddRequestSpesificationDialog)","import React, { useState, useEffect } from 'react'\r\nimport { Dialog, DialogActions, DialogContent } from '@material-ui/core'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Grid, Typography, Button, MenuItem, TextField } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\n\r\nconst styles = (theme) => ({\r\n    rootForm: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            // width: '25ch',\r\n        },\r\n    },\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    asterisk: {\r\n        color: 'red'\r\n    },\r\n    addButton: {\r\n        color: 'white'\r\n    }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n    const { children, onClose, classes, ...other } = props\r\n\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n})\r\n\r\nconst EditRequestSpesificationDialog = ({ ...props }) => {\r\n    const { classes, data, dataClient } = props\r\n    const dataToUpdt = props.dataToUpdate\r\n    const [state, setState] = useState({\r\n        dataToUpdate: {\r\n            clientId: \"\",\r\n            path: \"\",\r\n            urlDestination: \"\",\r\n            isNeedLogin: \"\"\r\n        },\r\n\r\n    })\r\n    useEffect(() => {\r\n        setState({\r\n            dataToUpdate: dataToUpdt\r\n        })\r\n    }, [dataToUpdt])\r\n    let dataRoles = []\r\n    const handleClose = () => {\r\n        setState({})\r\n        props.handleClose(false, true)\r\n    }\r\n    const findDuplicateClientId = (arrayOfObj, key) => {\r\n        return arrayOfObj.filter((item, index, array) => {\r\n            return array.map((mapItem) => mapItem[key]).indexOf(item[key]) === index\r\n        })\r\n    }\r\n    // console.log('dupkcate', findDuplicateClientId())\r\n\r\n    const handleAddRequest = () => {\r\n        let isPriortyValueUpdate = true\r\n        if (state.dataToUpdate['priorityValue'] === dataToUpdt['priorityValue']) {\r\n            isPriortyValueUpdate = false\r\n        }\r\n        delete state.dataToUpdate.clientIdErrorMessage\r\n        delete state.dataToUpdate.isNeedLoginErrorMessage\r\n        delete state.dataToUpdate.pathErrorMessage\r\n        delete state.dataToUpdate.priorityValueErrorMessage\r\n        delete state.dataToUpdate.urlDestinationErrorMessage\r\n        props.completeRequest(state.dataToUpdate, isPriortyValueUpdate)\r\n    }\r\n\r\n    const handleChange = id => e => {\r\n        let valid = FormValidation(id, e.target.value)\r\n        setState({\r\n            ...state,\r\n            dataToUpdate: {\r\n                ...state.dataToUpdate,\r\n                [id]: e.target.value,\r\n            },\r\n            [id + 'ErrorMessage']: valid.errorMessage,\r\n        })\r\n    }\r\n    const setDataRoles = () => {\r\n        let clientId = state.dataToUpdate ? state.dataToUpdate.clientId : ''\r\n        dataRoles = dataClient.filter(item => item.clientId === clientId)[0]\r\n        if (!dataRoles) return []\r\n        else {\r\n            return dataRoles.clientRoles\r\n        }\r\n        // return []\r\n    }\r\n    const needRole = [{ label: \"Yes\", boolean: true }, { label: \"No\", boolean: false }]\r\n\r\n    const disableButton = () => {\r\n        let isNeedLog = state.dataToUpdate ? \r\n         state.dataToUpdate.isNeedLogin === '' || state.dataToUpdate.isNeedLogin === null || state.dataToUpdate.isNeedLogin === undefined ? false : true :\"\"\r\n        let clientId = state.dataToUpdate ? state.dataToUpdate.clientId : \"\"\r\n        let path = state.dataToUpdate ? state.dataToUpdate.path : \"\"\r\n        let urlDestination = state.dataToUpdate ? state.dataToUpdate.urlDestination : \"\"\r\n        // let isNeedLogin = state.dataToUpdate ? state.dataToUpdate.isNeedLogin : \"\"\r\n        if (clientId && path && urlDestination && isNeedLog) return false\r\n        else return true\r\n    }\r\n    // console.log('state',state)\r\n    return (\r\n        <Dialog fullWidth maxWidth={'xs'} open={props.open} onClose={handleClose} scroll={'paper'}>\r\n            <DialogTitle\r\n                id=\"max-width-dialog-title\"\r\n                onClose={handleClose}\r\n            >\r\n                Edit Request Specification\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <form className={classes.rootForm} noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        fullWidth\r\n                        placeholder='Contoh : authentication-backoffice'\r\n                        required\r\n                        select\r\n                        id='clientId'\r\n                        label='Client Id'\r\n                        value={state.dataToUpdate ? state.dataToUpdate.clientId : \"\"}\r\n                        onChange={handleChange('clientId')}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                            classes: {\r\n                                asterisk: classes.asterisk\r\n                            }\r\n                        }}\r\n                    >\r\n                        {findDuplicateClientId(data, 'clientId').map(item =>\r\n                            <MenuItem key={item.clientId} value={item.clientId}>\r\n                                {item.clientId}\r\n                            </MenuItem>\r\n                        )}\r\n                    </TextField>\r\n                    <TextField\r\n                        fullWidth\r\n                        required\r\n                        placeholder='Contoh : /users/*/orders/**'\r\n                        label='Path'\r\n                        onChange={handleChange('path')}\r\n                        error={state.pathErrorMessage ? true : false}\r\n                        value={state.dataToUpdate ? state.dataToUpdate.path : \"\"}\r\n                        helperText={state.pathErrorMessage ? state.pathErrorMessage : ''}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                            classes: {\r\n                                asterisk: classes.asterisk\r\n                            }\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        required\r\n                        placeholder='Contoh : http//172.16.10.51:32170/users/*/orders/**'\r\n                        label='URL Destination'\r\n                        onChange={handleChange('urlDestination')}\r\n                        value={state.dataToUpdate ? state.dataToUpdate.urlDestination : \"\"}\r\n                        error={state.urlDestinationErrorMessage ? true : false}\r\n                        helperText={state.urlDestinationErrorMessage ? state.urlDestinationErrorMessage : ''}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                            classes: {\r\n                                asterisk: classes.asterisk\r\n                            }\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        required\r\n                        select\r\n                        label='Need Login'\r\n                        value={state.dataToUpdate ? state.dataToUpdate.isNeedLogin === 'True' || state.dataToUpdate.isNeedLogin === true ? true : false : \"\"}\r\n                        onChange={handleChange('isNeedLogin')}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                            classes: {\r\n                                asterisk: classes.asterisk\r\n                            }\r\n                        }}\r\n                    >\r\n                        {needRole.map(item =>\r\n                            <MenuItem key={item.label} value={item.boolean}>\r\n                                {item.label}\r\n                            </MenuItem>\r\n                        )}\r\n                    </TextField>\r\n                    <TextField\r\n                        fullWidth\r\n                        select\r\n                        label='Default Role'\r\n                        value={state.dataToUpdate ? state.dataToUpdate.defaultRole : \"\"}\r\n                        onChange={handleChange('defaultRole')}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    >\r\n                        <MenuItem key={'null'} value={null}>\r\n                            Null\r\n                        </MenuItem>\r\n                        {setDataRoles().map(item => <MenuItem key={item.roleId} value={item.roleId}>{item.roleId}</MenuItem>)}\r\n                    </TextField>\r\n                    <TextField\r\n                        fullWidth\r\n                        placeholder='Contoh: 100'\r\n                        label='Priority Value'\r\n                        onChange={handleChange('priorityValue')}\r\n                        value={state.dataToUpdate ? state.dataToUpdate.priorityValue : \"\"}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n                    <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                        <Button color='primary' variant='contained'\r\n                            className={classes.addButton} onClick={handleAddRequest} disabled={disableButton()}>\r\n                            Edit\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                        <Button onClick={handleClose} color='secondary' variant='contained' className={classes.addButton}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(EditRequestSpesificationDialog)","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Grid } from '@material-ui/core';\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n    setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n    setServiceParams, setServiceCustomHeaders, setServiceRole,\r\n} from '../../../actions/ServiceActions'\r\n// import ClientRUDTable from '../userlist/UserRUDTable'\r\nimport TableCustomize from '../../../components/table/TableCustomize'\r\nimport RequestDetail from './RequestDetail'\r\n// import ConfirmationDialogRaw from '../userlist/ConfirmationDIalog'\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddRequestSpesificationDialog from './AddRequestSpesificationDialog'\r\nimport EditRequestSpesificationDialog from './EditRequestSpesificationDialog'\r\n\r\nconst RequestList = ({ ...props }) => {\r\n\r\n    const { _setOpenScreen, _setCompleteRequest, userInfo, requestList, clientList } = props\r\n    // const [updateRequest, setUpdateRequest] = useState(false)\r\n\r\n    useEffect(() => {\r\n        _setOpenScreen(\"Request List\")\r\n    }, [_setOpenScreen])\r\n\r\n    const callbackRequest = () => {\r\n        let name = userInfo.name\r\n        let email = userInfo.email\r\n        let phone = userInfo.phone\r\n        let customHeaders = { name, email }\r\n        if (phone) customHeaders.phone = phone\r\n\r\n        let requestAllClient = {\r\n            request: {},\r\n            method: \"GET\",\r\n            serviceCode: \"SELECT_ALL_REQUEST\",\r\n            customHeaders\r\n        }\r\n        if (requestList.length === 0) { _setCompleteRequest(requestAllClient) }\r\n        // callback('client')\r\n    }\r\n\r\n    useEffect(callbackRequest, [])\r\n\r\n    const [values, setValues] = useState({\r\n        columns: [\r\n            { title: 'Client Id', field: 'clientId', },\r\n            // { title: 'Origin URI', field: 'originURIs', },\r\n            { title: 'Path', field: 'path', },\r\n            { title: 'URL Destination', field: 'urlDestination' },\r\n            { title: \"Need Login\", field: \"isNeedLogin\" },\r\n            { title: \"Priority Value\", field: \"priorityValue\" },\r\n            { title: \"Default Role\", field: \"defaultRole\" },\r\n            // { title: \"Actions\"}\r\n        ],\r\n        data: [],\r\n        dataClient: [],\r\n        dataToProcess: null,\r\n        dataToUpdate: null\r\n    });\r\n\r\n    useEffect(() => {\r\n        setValues(values=>({\r\n            ...values,\r\n            data: requestList,\r\n            dataClient: clientList\r\n        }))\r\n    }, [requestList, clientList])\r\n\r\n    const [states, setStates] = useState({\r\n        openDialogRequest: false,\r\n        editDialogRequest: false\r\n\r\n    })\r\n    const handleOpenDialogRequest = (open, edit, data) => {\r\n        // console.log(edit)\r\n        if (edit) {\r\n            setStates({\r\n                ...states,\r\n                editDialogRequest: open\r\n            })\r\n            setValues({\r\n                ...values,\r\n                dataToUpdate: data\r\n            })\r\n        } else {\r\n\r\n            setStates({\r\n                ...states,\r\n                openDialogRequest: open\r\n            })\r\n        }\r\n    }\r\n\r\n    // const handleDelete = () => {\r\n\r\n    // }\r\n\r\n    const handleUpdateRequest = (state, isPriorityValueUpdate) => {\r\n        let requestSpecificationId = state.requestSpecificationId\r\n        delete state.method\r\n        if (state.isNeedLogin === 'True') {\r\n            state.isNeedLogin = true\r\n        }\r\n        else {\r\n            state.isNeedLogin = false\r\n        }\r\n        let request = {\r\n            ...state,\r\n            priorityValue: state.priorityValue ? Number(state.priorityValue) : null\r\n        }\r\n\r\n        // delete request.requestSpecificationId\r\n        if (!state.priorityValue) {\r\n            delete request.priorityValue\r\n        }\r\n\r\n        if (!isPriorityValueUpdate) {\r\n            delete request.priorityValue\r\n        }\r\n\r\n        delete request.isPriorityValueUpdate\r\n        let requestUpdate = {\r\n            request,\r\n            method: \"PATCH\",\r\n            serviceCode: \"UPDATE_REQUEST_SPESIFICATIONS\",\r\n            urlParams: `/request-specifications/${requestSpecificationId}`\r\n        }\r\n        // console.log('Request', request)\r\n        _setCompleteRequest(requestUpdate)\r\n        handleOpenDialogRequest(false, true)\r\n    }\r\n    // const handleRowClicked = () => {\r\n\r\n    // }\r\n\r\n    // const handleChoose = () => {\r\n\r\n    // }\r\n\r\n    const handleAddRequest = (state) => {\r\n        let request = {\r\n            ...state,\r\n            priorityValue: state.priorityValue ? Number(state.priorityValue) : null\r\n        }\r\n        let requestAllClient = {\r\n            request,\r\n            method: \"POST\",\r\n            serviceCode: \"ADD_REQUEST_SPESIFICATIONS\",\r\n            urlParams: '/request-specifications'\r\n        }\r\n        // console.log('Request', request)\r\n        _setCompleteRequest(requestAllClient)\r\n        handleOpenDialogRequest(false, false)\r\n    }\r\n    const findDuplicateClientId = (arrayOfObj, key) => {\r\n        return arrayOfObj.filter((item, index, array) => {\r\n            return array.map((mapItem) => mapItem[key]).indexOf(item[key]) === index\r\n        })\r\n    }\r\n    return (\r\n        <div >\r\n            {states.open\r\n                ? <RequestDetail\r\n                    completeRequest={_setCompleteRequest}\r\n                    open={states.open}\r\n                    handleClose={() => setStates({ ...states, open: false })}\r\n                    data={values.dataToProcess}\r\n                />\r\n                : <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" >\r\n                    {/* <ClientRUDTable\r\n                        confirmdeletetext=\"Apakah anda yakin menghapus data ini?\"\r\n                        title=\"Backoffice Request List\"\r\n                        columns={values.columns}\r\n                        data={values.data}\r\n                        // updatedata={handleUpdate}\r\n                        deletedata={handleDelete}\r\n                        rowClicked={handleRowClicked}\r\n                        action\r\n                    /> */}\r\n                    <TableCustomize\r\n                        title='Backoffice Request List'\r\n                        column={values.columns}\r\n                        data={values.data}\r\n                        handleEditOpen={handleOpenDialogRequest}\r\n                        filterById={findDuplicateClientId}\r\n                        options={{\r\n                            pagination: true,\r\n                            filterClientId: true\r\n                        }}\r\n                    />\r\n                </Grid>}\r\n            <Grid style={{ marginTop: 20 }} container direction=\"row\" alignItems=\"flex-start\" >\r\n                <Button style={{ fontSize: 12, fontWeight: 'bold' }} onClick={() => handleOpenDialogRequest(true, false)} variant='outlined' color=\"secondary\"\r\n                    startIcon={<AddIcon />}\r\n                >\r\n                    Add Request Specification\r\n                </Button>\r\n            </Grid>\r\n\r\n            <AddRequestSpesificationDialog\r\n                open={states.openDialogRequest}\r\n                handleClose={handleOpenDialogRequest}\r\n                completeRequest={handleAddRequest}\r\n                data={values.data}\r\n                dataClient={values.dataClient}\r\n            />\r\n            <EditRequestSpesificationDialog\r\n                open={states.editDialogRequest}\r\n                handleClose={handleOpenDialogRequest}\r\n                data={values.data}\r\n                dataClient={values.dataClient}\r\n                dataToUpdate={values.dataToUpdate}\r\n                completeRequest={handleUpdateRequest}\r\n\r\n            />\r\n            {/* < ConfirmationDialogRaw\r\n                id=\"ringtone-menu\"\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                value={value}\r\n                handleChoose={handleChoose}\r\n                userName={userName}\r\n            /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n    requestList: store.requestList.list,\r\n    clientList: store.clientList.list,\r\n    userDetail: store.clientList.detail,\r\n    userFiltered: store.clientList.filteredList,\r\n    userInfo: store.userInfo.info,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        _setOpenScreen: val => dispatch(setOpenScreen(val)),\r\n        _setCompleteRequest: (val) => {\r\n            dispatch(setServiceRequest(val.request))\r\n            dispatch(setServiceMethod(val.method))\r\n            dispatch(setServiceCode(val.serviceCode))\r\n            dispatch(setServiceParams(val.urlParams))\r\n            dispatch(setServiceCustomHeaders(val.customHeaders))\r\n            dispatch(setServiceRole(val.serviceRole))\r\n            dispatch(setServiceStatus(\"active\"))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestList)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MaterialTable from 'material-table';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReactExport from 'react-data-export';\r\n\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole, setSecondRequest,\r\n} from '../../../actions/ServiceActions'\r\nimport { setClinicRecapt, setClinikDetail } from \"../../../actions/PaxListActions\";\r\nimport { setSnackbar } from '../../../actions/FeedbackActions';\r\n\r\nimport { yyyymmddWithParams, convertDateyyyymmdd, RupiahFormat } from '../../../utils/utils';\r\nimport FormatText from '../../../i18n'\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n// const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nlet from = yyyymmddWithParams('lastWeek')\r\nlet dateto = yyyymmddWithParams('nextWeek')\r\n\r\nconst ClinicReport = props => {\r\n  const { _setOpenScreen, _setCompleteRequest, userInfo, paxList, roleUsed, _setClinicRecapt } = props\r\n\r\n  const [columns, setColumns] = useState([])\r\n\r\n  const [state, setState] = useState({\r\n    fromdate: from,\r\n    todate: dateto,\r\n    simpleTable: [],\r\n    totalPax: 0,\r\n    agentPrice: 0,\r\n    price: 0,\r\n    dataset: []\r\n  })\r\n\r\n  const initOne = () => {\r\n    _setClinicRecapt([])\r\n    const { name, email, phone } = userInfo\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    const submitFormRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CLINIC_REPORT\",\r\n      urlParams: `/recapt?&from_date=${state.fromdate}&to_date=${state.todate}`,\r\n      customHeaders\r\n    }\r\n    _setCompleteRequest(submitFormRequest)\r\n    _setOpenScreen(\"Redeemed Order\")\r\n  }\r\n\r\n  useEffect(initOne, [])\r\n\r\n  useEffect(() => {\r\n    const tableColumn = [\r\n      { title: \"ID\", field: 'id', width: 50 },\r\n      { title: FormatText('app_name'), field: 'name', },   //   width: 300 },\r\n      { title: FormatText('clinic'), field: 'clinic' },\r\n      { title: FormatText('clinic_redeem_on'), field: 'redeem_on' },\r\n      { title: FormatText('clinic_payment_date'), field: 'payment_on' },\r\n      { title: \"NTA\", field: 'nta' },\r\n      { title: \"NTSA\", field: 'ntsa' },\r\n      { title: FormatText('clinic_price'), field: 'agentprice' },\r\n    ]\r\n\r\n    let newColumn = [...tableColumn]\r\n    if (roleUsed === 'voltras.admin') setColumns(newColumn)\r\n    else setColumns(newColumn.filter(column => column.field !== \"agentprice\" && column.field !== \"ntsa\"))\r\n  }, [roleUsed])\r\n\r\n  useEffect(() => {\r\n    let simpleTable = []\r\n    let dataToProcess = paxList.clinicRecapt\r\n    dataToProcess.forEach(order => order.items.forEach(item => item.products.forEach(product => {\r\n      let rowTable = {\r\n        id: order.id,\r\n        name: product.name,\r\n        clinic: product.klinik.name,\r\n        redeem_on: item.redeem && item.redeem.redeem_on ? convertDateyyyymmdd(item.redeem.redeem_on) : \"\",\r\n        payment_on: order.payment && order.payment.date ? convertDateyyyymmdd(order.payment && order.payment.date) : \"\",\r\n        nta: product.price.nta,\r\n        ntsa: product.price.ntsa,\r\n        agentprice: product.price.price,\r\n      }\r\n      simpleTable.push(rowTable)\r\n    })))\r\n\r\n    let totalPax = simpleTable.length\r\n    let totalAgentPrice = simpleTable.reduce(function (val, element) {\r\n      return val + parseInt(element.nta)\r\n    }, 0)\r\n\r\n    let doneTabel = []\r\n    simpleTable.forEach(item => {\r\n      let obj = {\r\n        ...item,\r\n        nta: RupiahFormat(item.nta),\r\n        ntsa: RupiahFormat(item.ntsa),\r\n        agentprice: RupiahFormat(item.agentprice),\r\n      }\r\n      doneTabel.push(obj)\r\n    })\r\n\r\n    let columns = [\r\n      { title: \"ID\", width: { wch: 5 } },\r\n      { title: FormatText('app_name'), width: { wch: 30 }, style: { font: { bold: true }, alignment: { horizontal: 'center' } }, },\r\n      { title: FormatText('clinic'), width: { wch: 30 }, style: { font: { bold: true }, alignment: { horizontal: 'center' } }, },\r\n      { title: FormatText('clinic_redeem_on'), width: { wch: 20 }, style: { font: { bold: true }, alignment: { horizontal: 'center' } }, },\r\n      { title: FormatText('clinic_payment_date'), width: { wch: 20 }, style: { font: { bold: true }, alignment: { horizontal: 'center' } }, },\r\n      { title: 'NTA', width: { wch: 12 }, style: { font: { bold: true }, alignment: { horizontal: 'center' } }, },\r\n      { title: 'NTSA', width: { wch: 12 }, style: { font: { bold: true }, alignment: { horizontal: 'center' } }, },\r\n      { title: FormatText('clinic_price'), width: { wch: 12 }, style: { font: { bold: true }, alignment: { horizontal: 'center' } }, },\r\n    ]\r\n    let newColumns = []\r\n    if (roleUsed !== 'voltras.admin') newColumns = columns.filter(column => column.title !== FormatText('clinic_price') && column.title !== \"NTSA\")\r\n    else newColumns = columns\r\n    let data = []\r\n    simpleTable.forEach(item => {\r\n      let dataArr = []\r\n      dataArr.push({ value: item.id })\r\n      dataArr.push({ value: item.name })\r\n      dataArr.push({ value: item.clinic })\r\n      dataArr.push({ value: item.redeem_on })\r\n      dataArr.push({ value: item.payment_on })\r\n      dataArr.push({ value: parseInt(item.nta) })\r\n      if (roleUsed === 'voltras.admin') {\r\n        dataArr.push({ value: parseInt(item.ntsa) })\r\n        dataArr.push({ value: parseInt(item.agentprice) })\r\n      }\r\n      data.push(dataArr)\r\n    })\r\n    let dataset = [{ ySteps: 1, columns: newColumns, data }]\r\n\r\n    setState(prevState => ({ ...prevState, dataset, simpleTable: doneTabel, totalPax, agentPrice: RupiahFormat(totalAgentPrice) }))\r\n  }, [paxList.clinicRecapt, roleUsed])\r\n\r\n  const handleDateChange = prop => date => {\r\n    // console.log('DateCgange: ', convertDateyyyymmdd(date))\r\n    setState({\r\n      ...state,\r\n      [prop]: convertDateyyyymmdd(date),\r\n    })\r\n  }\r\n\r\n  // const handleChange = prop => event => {\r\n  //   console.log('Change: ', prop)\r\n  // }\r\n\r\n  const handleExport = prop => {\r\n    // console.log('Change: ', prop)\r\n    // history.push('/KExcelReport')\r\n    let name = userInfo.name ? userInfo.name : ''\r\n    let email = userInfo.email ? userInfo.email : ''\r\n    let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    const submitXlsForm = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CLINIC_XLS_REPORT\",\r\n      urlParams: `/recapt?&from_date=${state.fromdate}&to_date=${state.todate}`,\r\n      customHeaders\r\n    }\r\n    _setCompleteRequest(submitXlsForm)\r\n  }\r\n\r\n  const handleSubmitFilter = () => {\r\n    //GET health/admin/report/recapt?from_date=2020-01-01&to_date=2020-09-01\r\n    let name = userInfo.name ? userInfo.name : ''\r\n    let email = userInfo.email ? userInfo.email : ''\r\n    let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    const submitForm = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CLINIC_REPORT\",\r\n      urlParams: `/recapt?&from_date=${state.fromdate}&to_date=${state.todate}`,\r\n      customHeaders\r\n    }\r\n    _setCompleteRequest(submitForm)\r\n  }\r\n\r\n  return (\r\n\r\n    <Grid container direction='row' justify='flex-start' alignItems='flex-start' style={{ marginBottom: 10, marginTop: 20 }} >\r\n      {/* {console.log(\"TABLE DONE: \", state.simpleTable)} */}\r\n      {/* <Grid item sm={4} >\r\n                <Grid item>\r\n                  <Typography variant=\"subtitle2\">Name:</Typography>\r\n                  <FormControl style={{ width: 300 }}  >\r\n                    <FormGroup >\r\n                      <Input\r\n                        error={state.emailErrorMessage ? true : false}\r\n                        id=\"standard-full-width\"\r\n                        type='text'\r\n                        placeholder='Name'\r\n                        onChange={handleChange('name')}\r\n                        endAdornment={\r\n                          <InputAdornment position=\"end\">\r\n                            <AccountBoxRounded />\r\n                          </InputAdornment>\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item> <br />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Typography style={{ marginBottom: 7 }} variant=\"subtitle2\">Klinik Name:</Typography>\r\n                  {\r\n                    this.props.paxList.klinikList.length === 1\r\n                      ? <TextField id=\"basic-klinik\" value={this.props.paxList.klinikList[0].name} style={{ width: 300 }} />\r\n                      : this.props.paxList.klinikList.length === 0\r\n                        ? <TextField id=\"basic-klinik\" disabled style={{ width: 300 }} />\r\n                        : <SimpleAutocomplete\r\n                          options={this.props.paxList.klinikList[0] ? this.props.paxList.klinikList : [{ name: '' }]}\r\n                          onPick={v => console.log(v)}\r\n                          width={300}\r\n                          optionItem={'name'}\r\n                        />\r\n                  }\r\n\r\n                </Grid>\r\n              </Grid> */}\r\n      <Grid item sm={4} >\r\n        <Typography variant=\"subtitle2\">{FormatText('clinic_payment_date')}:</Typography>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n          <Grid container style={{ marginLeft: 20 }} >\r\n            <KeyboardDatePicker\r\n              size=\"small\"\r\n              clearable\r\n              format=\"yyyy/MM/dd\"\r\n              margin=\"dense\"\r\n              id=\"date-picker-from\"\r\n              label=\"From\"\r\n              value={state.fromdate}\r\n              onChange={handleDateChange('fromdate')}\r\n              KeyboardButtonProps={{\r\n                'aria-label': 'change date',\r\n              }}\r\n            />\r\n          </Grid>\r\n        </MuiPickersUtilsProvider>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <Grid container style={{ marginLeft: 20 }}>\r\n            <KeyboardDatePicker\r\n              clearable\r\n              size=\"small\"\r\n              format=\"yyyy/MM/dd\"\r\n              margin=\"dense\"\r\n              id=\"date-picker-to\"\r\n              label=\"To\"\r\n              value={state.todate}\r\n              onChange={handleDateChange('todate')}\r\n              KeyboardButtonProps={{\r\n                'aria-label': 'change date',\r\n              }}\r\n            />\r\n          </Grid>\r\n        </MuiPickersUtilsProvider>\r\n      </Grid>\r\n      {/* <Grid item sm={3} >\r\n        <FormControl style={{ marginLeft: 15 }} fullWidth>\r\n          <Typography variant=\"subtitle2\">Status:</Typography>\r\n          <FormControl>\r\n            <FormControlLabel\r\n              control={<Checkbox checked={state.New} onChange={handleChange('New')} name=\"New\" />}\r\n              label=\"NEW\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox checked={state.finish} onChange={handleChange('finish')} name=\"finish\" />}\r\n              label=\"FINISH\"\r\n            />\r\n          </FormControl>\r\n        </FormControl>\r\n      </Grid> */}\r\n      <Grid item sm={2} style={{ marginTop: 10 }}  >\r\n        <Grid item><br /></Grid>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify='center'\r\n          alignItems=\"center\">\r\n          {state.simpleTable.length < 1\r\n            ? <Grid item>\r\n              <Button disabled={state.simpleTable.length < 1 ? true : false} size='small' variant=\"outlined\" onClick={() => handleExport(state.simpleTable)} color=\"primary\">\r\n                {FormatText('app_export_xls')}\r\n              </Button>\r\n            </Grid>\r\n            : <Grid item>\r\n              <ExcelFile\r\n                filename={`OrderReport ${state.fromdate} to ${state.todate}`}\r\n                element={\r\n                  <Button size='small' variant=\"outlined\" color=\"primary\">\r\n                    {FormatText('app_export_xls')}\r\n                  </Button>}\r\n              >\r\n                <ExcelSheet dataSet={state.dataset} name=\"Order Report\" />\r\n              </ExcelFile>\r\n            </Grid>}\r\n\r\n\r\n          <Grid> <br /></Grid>\r\n          <Grid item>\r\n            <Button size='small' variant=\"contained\" onClick={handleSubmitFilter} color=\"primary\">\r\n              {FormatText('app_show_report')}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        {/* <Typography style={{ marginLeft: 20 }} variant=\"subtitle2\">Export to xls:</Typography>\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\">\r\n                  <Grid item><br /><br /></Grid>\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" onClick={handleExport} color=\"primary\">\r\n                      Export\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item ><br /> <br /></Grid>\r\n                </Grid> */}\r\n      </Grid>\r\n\r\n      <Grid item sm={1} ></Grid>\r\n\r\n      <Grid item sm={5}  >\r\n        <Typography variant=\"subtitle2\">{FormatText('app_report_summary')}:</Typography>\r\n        <Grid container item style={{ marginLeft: 20, marginTop: 15 }}  >\r\n          <Grid item sm={3}> <Typography variant='caption' >Total Order</Typography></Grid>\r\n          <Grid item sm={3}>: {state.totalPax}</Grid>\r\n        </Grid>\r\n        <Grid container item style={{ marginLeft: 20 }} >\r\n          <Grid item sm={3}><Typography variant='caption' >{FormatText('clinic_agent_price')}</Typography></Grid>\r\n          <Grid item sm={3}>: {state.agentPrice}</Grid>\r\n        </Grid>\r\n        {/* <Grid container item style={{ marginLeft: 20 }} >\r\n          <Grid item sm={3}><Typography variant='caption' >Price</Typography></Grid>\r\n          <Grid item sm={3}>: \"3434\"</Grid>\r\n        </Grid> */}\r\n\r\n\r\n      </Grid>\r\n\r\n\r\n\r\n      <Grid item sm={12} style={{ marginTop: 20 }}>\r\n        <MaterialTable\r\n          title={FormatText('clinic_order_report')}\r\n          columns={columns}\r\n          data={state.simpleTable}\r\n        />\r\n      </Grid>\r\n      <Grid container>\r\n        {/* <div style={{ height: window.screen.height - 700 }} /> */}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  clientList: store.clientList.list,\r\n  userDetail: store.clientList.detail,\r\n  userFiltered: store.clientList.filteredList,\r\n  userInfo: store.userInfo.info,\r\n  paxlistStatus: store.menu.paxList,\r\n  paxList: store.paxList,\r\n  roleUsed: store.userInfo.roleUsed,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)), _setSnackbar: val => dispatch(setSnackbar(val)),\r\n    _setSecondRequest: val => dispatch(setSecondRequest(val)),\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.urlParams))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n    _setClinicDetail: val => dispatch(setClinikDetail(val)),\r\n    _setClinicRecapt: val => dispatch(setClinicRecapt(val)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClinicReport)\r\n","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MaterialTable from 'material-table';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReactExport from 'react-data-export';\r\nimport SimpleAutocomplete from '../../../components/autocomplete/SimpleAutocomplete'\r\n\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole, setSecondRequest, setThirdRequest\r\n} from '../../../actions/ServiceActions'\r\nimport { setClinicRecapt, setClinikDetail, setKlinikList, setPaxProduct } from \"../../../actions/PaxListActions\";\r\nimport { setSnackbar } from '../../../actions/FeedbackActions';\r\n\r\nimport { yyyymmddWithParams, convertDateyyyymmdd, RupiahFormat } from '../../../utils/utils';\r\nimport FormatText from '../../../i18n'\r\nimport { SendToService } from '../../../services/ServiceClient';\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n// const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nlet from = yyyymmddWithParams('lastWeek')\r\nlet dateto = yyyymmddWithParams('nextWeek')\r\n\r\nconst AllClinicReport = props => {\r\n  const { _setOpenScreen, _setCompleteRequest, userInfo, paxList, _setSecondRequest, _setThirdRequest,\r\n    _setClinicRecapt, _setPaxProduct, _setKlinikList } = props\r\n\r\n  const columns = [\r\n    { title: \"ID\", field: 'id', width: 50 },\r\n    { title: FormatText('app_name'), field: 'name', },\r\n    { title: \"Product\", field: 'product', width: 200 },\r\n    { title: FormatText('clinic'), field: 'clinic', width: 200 },\r\n    { title: \"Status\", field: 'status' },\r\n    { title: FormatText('clinic_redeem_on'), field: 'redeem_on' },\r\n    { title: FormatText('clinic_payment_date'), field: 'payment_on' },\r\n    { title: FormatText('clinic_agent_price'), field: 'agentprice' },\r\n    // { title: 'Pax Price', field: 'paxprice' },\r\n  ]\r\n\r\n  const [state, setState] = useState({\r\n    fromdate: from,\r\n    todate: dateto,\r\n    simpleTable: [],\r\n    totalPax: 0,\r\n    agentPrice: 0,\r\n    price: 0,\r\n    dataset: [],\r\n    Paid: false,\r\n    New: false,\r\n    finish: false,\r\n    clinicname: \"\",\r\n    productname: \"\",\r\n  })\r\n\r\n  useEffect(() => {\r\n    // console.log(\"EFFECT DIPANGGIL!!! \")\r\n    // console.log(paxList.clinicRecapt)\r\n    let simpleTable = []\r\n    let dataToProcess = paxList.clinicRecapt\r\n    console.log(\"EFFECT DIPANGGIL!!! \", dataToProcess)\r\n    dataToProcess.forEach(order => order.items.map(item => item.products.forEach(product => {\r\n      let rowTable = {\r\n        id: order.id,\r\n        // name: product.name,\r\n        name: item.name,\r\n        product: product.name,\r\n        clinic: product.klinik.name,\r\n        status: item.status,\r\n        redeem_on: item.redeem && item.redeem.redeem_on ? convertDateyyyymmdd(item.redeem.redeem_on) : \"\",// convertDateyyyymmdd(order.redeem.redeem_on),\r\n        payment_on: order.payment && order.payment.date ? convertDateyyyymmdd(order.payment && order.payment.date) : \"\",// convertDateyyyymmdd(order.payment && order.payment.date),\r\n        agentprice: product.price.nta,\r\n        paxprice: product.price.price,\r\n      }\r\n      simpleTable.push(rowTable)\r\n    })))\r\n\r\n\r\n    // let totalPax = simpleTable.length\r\n    let totalAgentPrice = simpleTable.reduce(function (val, element) {\r\n      return val + parseInt(element.agentprice)\r\n    }, 0)\r\n\r\n    let doneTabel = []\r\n    simpleTable.forEach(item => {\r\n      let obj = {\r\n        ...item,\r\n        status: item.status === \"FINISH\" ? item.status = \"REDEEMED\" : item.status,\r\n        agentprice: RupiahFormat(item.agentprice)\r\n      }\r\n      doneTabel.push(obj)\r\n    })\r\n\r\n    // console.log(totalAgentPrice)\r\n\r\n    let columns = [\r\n      { title: \"ID\", width: { wch: 5 } },\r\n      { title: FormatText('app_name'), width: { wch: 30 } },\r\n      { title: \"Product\", width: { wch: 30 } },\r\n      { title: FormatText('clinic'), width: { wch: 30 } },\r\n      { title: \"Status\", width: { wch: 12 } },\r\n      { title: FormatText('clinic_redeem_on'), width: { wch: 12 } },\r\n      { title: FormatText('clinic_payment_date'), width: { wch: 12 } },\r\n      { title: FormatText('clinic_agent_price'), width: { wch: 12 } },\r\n    ]\r\n    let data = []\r\n    simpleTable.forEach(item => {\r\n      let dataArr = []\r\n      dataArr.push({ value: item.id })\r\n      dataArr.push({ value: item.name })\r\n      dataArr.push({ value: item.product })\r\n      dataArr.push({ value: item.clinic })\r\n      dataArr.push({ value: item.status })\r\n      dataArr.push({ value: item.redeem_on })\r\n      dataArr.push({ value: item.payment_on })\r\n      dataArr.push({ value: parseInt(item.agentprice) })\r\n      // dataArr.push(item.paxprice)\r\n\r\n      data.push(dataArr)\r\n    })\r\n    let dataset = [{ ySteps: 1, columns, data }]\r\n\r\n    let fixedTable = doneTabel.filter(item => (item.status !== \"UNCONFIRMED\") && (item.payment_on))\r\n    let totalPax = fixedTable.length\r\n\r\n    setState(previousState => ({ ...previousState, dataset, simpleTable: fixedTable, totalPax, agentPrice: RupiahFormat(totalAgentPrice) }))\r\n    // console.log(\"DATASET: \", fixedTable)\r\n    _setOpenScreen(\"All Order Report\")\r\n  }, [paxList.clinicRecapt, _setOpenScreen])\r\n\r\n  useEffect(() => {\r\n    setState(previousState => ({ ...previousState, simpleTable: [], totalPax: 0, agentPrice: 0, }))\r\n    const { name, email, phone } = userInfo\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    if (name && email) {\r\n      SendToService(\r\n        {},\r\n        \"GET\",\r\n        \"GET_ALL_ORDER\",\r\n        `/list?&paymentdate_from=${from}&paymentdate_to=${dateto}`,\r\n        customHeaders,\r\n        null,\r\n        null,\r\n        response => {\r\n          _setClinicRecapt(response.body)\r\n          SendToService(\r\n            {},\r\n            \"GET\",\r\n            \"healthProduct\",\r\n            null,\r\n            customHeaders,\r\n            null,\r\n            null,\r\n            product => {\r\n              _setPaxProduct(product.body)\r\n              SendToService(\r\n                {},\r\n                \"GET\",\r\n                \"healthKlinik\",\r\n                null,\r\n                customHeaders,\r\n                null,\r\n                null,\r\n                clinic => {\r\n                  _setKlinikList(clinic.body)\r\n                }\r\n              )\r\n            }\r\n          )\r\n        })\r\n    }\r\n  }, [])\r\n\r\n\r\n  const handleDateChange = prop => date => {\r\n    // console.log('DateCgange: ', convertDateyyyymmdd(date))\r\n    setState({\r\n      ...state,\r\n      [prop]: convertDateyyyymmdd(date),\r\n    })\r\n  }\r\n\r\n  const handleExport = prop => {\r\n    let name = userInfo.name ? userInfo.name : ''\r\n    let email = userInfo.email ? userInfo.email : ''\r\n    let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    const submitXlsForm = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CLINIC_XLS_REPORT\",\r\n      urlParams: `/recapt?&from_date=${state.fromdate}&to_date=${state.todate}`,\r\n      customHeaders\r\n    }\r\n    _setCompleteRequest(submitXlsForm)\r\n  }\r\n\r\n  const handleSubmitFilter = () => {\r\n    let name = userInfo.name ? userInfo.name : ''\r\n    let email = userInfo.email ? userInfo.email : ''\r\n    let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let paymentParam = `&paymentdate_from=${state.fromdate}&paymentdate_to=${state.todate}`\r\n    let statusParam = (state.Paid && !state.finish)\r\n      ? '&status=PAID' //'&redeem_status=NEW'\r\n      : (!state.Paid && state.finish)\r\n        ? '&status=FINISH'   // '&redeem_status=REDEEMED'\r\n        : (state.Paid && state.finish)\r\n          ? \"\"\r\n          : \"\"\r\n    let productParam = state.productname ? `&productname=${state.productname}` : \"\"\r\n    let clinicParam = state.clinicname ? `&clinicname=${state.clinicname}` : \"\"\r\n    const submitForm = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_ALL_ORDER\",\r\n      urlParams: \"/list?\" + paymentParam + (statusParam ? statusParam : \"\") + productParam + clinicParam,\r\n      customHeaders\r\n    }\r\n    _setCompleteRequest(submitForm)\r\n    console.log(submitForm)\r\n  }\r\n\r\n  const handleChange = prop => event => {\r\n    if (prop === 'Paid') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else if (prop === 'New') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else if (prop === 'finish') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else if (prop === 'Booking Date') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else if (prop === 'Test Date') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else if (prop === 'Redeem Date') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else {\r\n      setState({\r\n        ...state,\r\n        [prop]: event.target.value,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handlePickProduct = item => {\r\n    console.log(item)\r\n    if (item) setState({ ...state, productname: item.name })\r\n    else setState({ ...state, productname: \"\" })\r\n  }\r\n\r\n  const handlePickClinic = item => {\r\n    console.log(item)\r\n    if (item) setState({ ...state, clinicname: item.name })\r\n    else setState({ ...state, clinicname: \"\" })\r\n  }\r\n\r\n  return (\r\n\r\n    <Grid container direction='row' justify='flex-start' alignItems='flex-start' style={{ marginBottom: 10, marginTop: 20 }} >\r\n      <Grid item sm={2} >\r\n        <Typography variant=\"subtitle2\">{FormatText('clinic_payment_date')}:</Typography>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n          <Grid container style={{ marginLeft: 20 }} >\r\n            <KeyboardDatePicker\r\n              style={{ width: 150 }}\r\n              size=\"small\"\r\n              clearable\r\n              format=\"yyyy/MM/dd\"\r\n              margin=\"dense\"\r\n              id=\"date-picker-from\"\r\n              label=\"From\"\r\n              value={state.fromdate}\r\n              onChange={handleDateChange('fromdate')}\r\n              KeyboardButtonProps={{\r\n                'aria-label': 'change date',\r\n              }}\r\n            />\r\n          </Grid>\r\n        </MuiPickersUtilsProvider>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <Grid container style={{ marginLeft: 20 }}>\r\n            <KeyboardDatePicker\r\n              style={{ width: 150 }}\r\n              clearable\r\n              size=\"small\"\r\n              format=\"yyyy/MM/dd\"\r\n              margin=\"dense\"\r\n              id=\"date-picker-to\"\r\n              label=\"To\"\r\n              value={state.todate}\r\n              onChange={handleDateChange('todate')}\r\n              KeyboardButtonProps={{\r\n                'aria-label': 'change date',\r\n              }}\r\n            />\r\n          </Grid>\r\n        </MuiPickersUtilsProvider>\r\n      </Grid>\r\n      <Grid item sm={4} style={{ marginLeft: 20 }}  >\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Typography variant=\"subtitle2\" style={{ marginTop: 25 }} >Product:</Typography>\r\n          <SimpleAutocomplete\r\n            small\r\n            id=\"productAutocomplete\"\r\n            options={paxList.product[0] ? paxList.product : []}\r\n            width={320}\r\n            optionItem={'name'}\r\n            // label=\"Product\"\r\n            // notShrink={true}\r\n            // onSelect={handleSelect}\r\n            // handleInputChange={handleInputChange}\r\n            onPick={handlePickProduct}\r\n          />\r\n\r\n          <Typography variant=\"subtitle2\" style={{ marginTop: 5 }} >Clinic:</Typography>\r\n          <SimpleAutocomplete\r\n            small\r\n            id=\"clinicAutocomplete\"\r\n            options={paxList.klinikList[0] ? paxList.klinikList : []}\r\n            width={320}\r\n            optionItem={'name'}\r\n            // label=\"Clinic\"\r\n            // notShrink={true}\r\n            // onSelect={handleSelect}\r\n            // handleInputChange={handleInputChange}\r\n            onPick={handlePickClinic}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item sm={3} >\r\n        <Typography variant=\"subtitle2\" style={{ marginTop: 25 }}>Status:</Typography>\r\n        <FormControl size=\"small\" style={{ marginLeft: 15 }} fullWidth>\r\n          <FormControlLabel\r\n            control={<Checkbox size=\"small\" checked={state.Paid} onChange={handleChange('Paid')} name=\"Paid\" />}\r\n            label=\"Paid\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox size=\"small\" checked={state.finish} onChange={handleChange('finish')} name=\"finish\" />}\r\n            label=\"Redeemed\"\r\n          />\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item sm={2}  >\r\n        <Typography variant=\"subtitle2\">{FormatText('app_report_summary')}:</Typography>\r\n        <Grid container direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\" item style={{ marginLeft: 5, marginTop: 15 }}  >\r\n          <Grid item sm={5}> <Typography variant='caption' >Total Order</Typography></Grid>\r\n          <Grid item >: {state.totalPax}</Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\" item style={{ marginLeft: 5 }} >\r\n          <Grid item sm={5}><Typography variant='caption' >{FormatText('clinic_agent_price')}</Typography></Grid>\r\n          <Grid item >: {state.agentPrice}</Grid>\r\n        </Grid>\r\n        {state.simpleTable.length < 1\r\n          ? <Grid item style={{ marginTop: 10 }} >\r\n            <Button disabled={state.simpleTable.length < 1 ? true : false} size='small' variant=\"outlined\" onClick={() => handleExport(state.simpleTable)} color=\"primary\">\r\n              {FormatText('app_export_xls')}\r\n            </Button>\r\n          </Grid>\r\n          : <Grid item style={{ marginTop: 10 }} >\r\n            <ExcelFile\r\n              filename={\r\n                `OrderReport; ${state.fromdate} to ${state.todate}; ${state.Paid && !state.finish ? \"PAID;\" : !state.Paid && state.finish ? \"REDEEMED;\" : \"ALL;\"} ${state.productname ? \" \" + state.productname + \";\" : \"\"} ${state.clinicname ? \" \" + state.clinicname + \";\" : \"\"}`\r\n              }\r\n              element={\r\n                <Button size='small' variant=\"outlined\" color=\"primary\">\r\n                  {FormatText('app_export_xls')}\r\n                </Button>}\r\n            >\r\n              <ExcelSheet dataSet={state.dataset} name=\"Order Report\" />\r\n            </ExcelFile>\r\n          </Grid>}\r\n        <Grid item style={{ marginTop: 10 }}>\r\n          <Button size='small' variant=\"contained\" onClick={handleSubmitFilter} color=\"primary\">\r\n            {FormatText('app_show_report')}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item sm={12} style={{ marginTop: 20 }}>\r\n        <MaterialTable\r\n          title={FormatText('clinic_order_report')}\r\n          columns={columns}\r\n          data={state.simpleTable}\r\n        />\r\n      </Grid>\r\n      <Grid container>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  clientList: store.clientList.list,\r\n  userDetail: store.clientList.detail,\r\n  userFiltered: store.clientList.filteredList,\r\n  userInfo: store.userInfo.info,\r\n  paxlistStatus: store.menu.paxList,\r\n  paxList: store.paxList\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)), _setSnackbar: val => dispatch(setSnackbar(val)),\r\n    _setSecondRequest: val => dispatch(setSecondRequest(val)),\r\n    _setThirdRequest: val => dispatch(setThirdRequest(val)),\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.urlParams))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n    _setClinicDetail: val => dispatch(setClinikDetail(val)),\r\n    _setClinicRecapt: val => dispatch(setClinicRecapt(val)),\r\n    _setPaxProduct: val => dispatch(setPaxProduct(val)),\r\n    _setKlinikList: val => dispatch(setKlinikList(val)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllClinicReport)\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { FormValidation } from '../../utils/FormValidation';\r\nimport { Avatar, Typography } from '@material-ui/core';\r\nimport { resizeImage } from '../../utils/utils';\r\n// import { sendImageToService } from '../../services/ServiceClient';\r\nimport FormatText from '../../i18n';\r\n\r\nexport default function EditDialog(props) {\r\n  const { editItem } = props\r\n  const [name, setName] = useState(\"\")\r\n  const [value, setValue] = useState('')\r\n  const [key, setKey] = useState('')\r\n  const [img, setImg] = useState('')\r\n  const [action, setAction] = useState(false)\r\n  const [imgPreview, setImgPreview] = useState('')\r\n  const [validation, setValidation] = useState({})\r\n  const [imageFile, setImageFile] = useState(\"\")\r\n  const [imageType, setImageType] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    setValidation({\r\n      error: false,\r\n      errorMessage: '',\r\n    })\r\n    setImg(editItem.picture)\r\n    setName(editItem.name)\r\n    setKey(editItem.key)\r\n    setValue(editItem.value)\r\n    setAction(editItem.action)\r\n  }, [editItem])\r\n\r\n  const handleEditValue = prop => e => {\r\n    let valid = FormValidation(prop, e.target.value)\r\n    setValidation(valid)\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setName(editItem.name)\r\n    setKey(editItem.key)\r\n    setValue(editItem.value)\r\n    props.handleEditClose()\r\n  }\r\n\r\n  const handleYes = () => {\r\n    if (imgPreview) {\r\n      let newObj = { name, value, key, action, picture: imgPreview, imageFile, imageType }\r\n      props.handleNewItem(newObj)\r\n    }\r\n    else props.handleNewItem({ name, value, key, action })\r\n    props.handleEditClose()\r\n  }\r\n\r\n  const fileSelected = async e => {\r\n    setValidation({ error: false, errorMessage: '', })\r\n    let file = e.target.files[0]\r\n    if (file) {\r\n      if (!file.type.includes('image')) setValidation({ error: true, errorMessage: 'Must be image file', })\r\n      // else if (file.size > 1000000) setValidation({ error: true, errorMessage: 'Image is bigger than 1 MB', })\r\n      else {\r\n        const data = await resizeImage(file);\r\n        // console.log(\"DATA: \", data)\r\n        setImgPreview(data.blobUrl)\r\n        setImageFile(data.file)\r\n        setImageType(data.type)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.open} onClose={props.handleEditClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Edit {name}</DialogTitle>\r\n        {\r\n          <DialogContent>\r\n            <center>\r\n              <DialogContentText style={{ width: 290 }}>\r\n                {FormatText('app_save_to_change')}\r\n              </DialogContentText>\r\n            </center>\r\n            {\r\n              key === 'picture'\r\n                ? <div>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    onChange={fileSelected}\r\n                    style={{ display: 'none' }}\r\n                    id=\"raised-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                  />\r\n                  <center>\r\n                    <Avatar style={{ width: 75, height: 75, marginBottom: 15 }} src={imgPreview ? imgPreview : img ? img : \"\"} />\r\n                  </center>\r\n\r\n                  <label htmlFor=\"raised-button-file\">\r\n                    <center>\r\n                      <Typography color='error' variant='caption' >{validation.errorMessage}</Typography>\r\n                      <Button variant='outlined' component=\"span\" size='small' color='primary' >\r\n                        {FormatText('app_select_photo')}\r\n                      </Button>\r\n                    </center>\r\n                  </label>\r\n                </div>\r\n                : <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"name\"\r\n                  label={name}\r\n                  value={value}\r\n                  onChange={handleEditValue(key)}\r\n                  placeholder={name}\r\n                  style={{ width: 280 }}\r\n                  error={validation.error ? true : false}\r\n                  helperText={validation.errorMessage ? validation.errorMessage : \"\"}\r\n                />\r\n            }\r\n          </DialogContent>\r\n        }\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"secondary\">\r\n            {FormatText('app_cancel')}\r\n          </Button>\r\n          <Button onClick={handleYes} color=\"primary\" disabled={validation.error ? true : false}>\r\n            {FormatText('app_choose')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport EditDialog from './EditDialog'\r\n\r\nimport { setOpenScreen } from \"../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole,\r\n} from '../../actions/ServiceActions'\r\nimport { Button, Tooltip } from '@material-ui/core';\r\nimport FormatText from '../../i18n';\r\nimport Config from '../../config';\r\nimport { sendImageToService } from '../../services/ServiceClient';\r\n\r\nconst UserProfile = props => {\r\n  const { _setOpenScreen, userInfo } = props\r\n  const [basic, setBasic] = useState([])\r\n  const [editOpen, setEditOpen] = useState(false)\r\n  const [editItem, setEditItem] = useState(false)\r\n\r\n  useEffect(() => {\r\n    _setOpenScreen(\"Manage Account\")\r\n\r\n  }, [_setOpenScreen])\r\n\r\n  useEffect(() => {\r\n    let text = FormatText('app_photo_personalize')\r\n    let data = userInfo\r\n    // let image = \"\"\r\n    let basicInfo = []\r\n    if (data.picture) {\r\n      basicInfo = [\r\n        { name: FormatText('common_photo'), value: text, action: true, key: 'picture', picture: data.picture },\r\n        { name: FormatText('common_name'), value: data.name ? data.name : \"\", action: true, key: 'name' },\r\n        { name: FormatText('common_email'), value: data.email ? data.email : \"\", action: false, key: 'email' },\r\n        { name: FormatText('common_phone'), value: data.phone ? data.phone : \"\", action: true, key: 'phone' },\r\n        { name: FormatText('common_address'), value: data.address ? data.address : \"\", action: true, key: 'address' },\r\n\r\n      ]\r\n      setBasic(basicInfo)\r\n      // getBase64Image(data.picture).then(result => {\r\n      //   console.log(result)\r\n      //   basicInfo = [\r\n      //     { name: FormatText('common_photo'), value: text, action: true, key: 'picture', picture: result },\r\n      //     { name: FormatText('common_name'), value: data.name ? data.name : \"\", action: true, key: 'name' },\r\n      //     { name: FormatText('common_email'), value: data.email ? data.email : \"\", action: true, key: 'email' },\r\n      //     { name: FormatText('common_phone'), value: data.phone ? data.phone : \"\", action: true, key: 'phone' },\r\n      //     { name: FormatText('common_address'), value: data.address ? data.address : \"\", action: true, key: 'address' },\r\n\r\n      //   ]\r\n      //   setBasic(basicInfo)\r\n      // })\r\n    } else {\r\n      basicInfo = [\r\n        { name: FormatText('common_photo'), value: text, action: true, key: 'picture', picture: data.picture, imageFile: \"\", imageType: \"\" },\r\n        { name: FormatText('common_name'), value: data.name ? data.name : \"\", action: true, key: 'name' },\r\n        { name: FormatText('common_email'), value: data.email ? data.email : \"\", action: false, key: 'email' },\r\n        { name: FormatText('common_phone'), value: data.phone ? data.phone : \"\", action: true, key: 'phone' },\r\n        { name: FormatText('common_address'), value: data.address ? data.address : \"\", action: true, key: 'address' },\r\n\r\n      ]\r\n      setBasic(basicInfo)\r\n    }\r\n  }, [userInfo])\r\n\r\n  const handleEdit = item => {\r\n    setEditItem(item)\r\n    setEditOpen(true)\r\n  }\r\n\r\n  const handleEditClose = () => setEditOpen(false)\r\n\r\n  const handleNewItem = item => {\r\n    let newBasic = basic.map(itemBasic => {\r\n      if (itemBasic.name === item.name) {\r\n        return item\r\n      }\r\n      return itemBasic\r\n    })\r\n    setBasic(newBasic)\r\n  }\r\n\r\n  const handleSave = async () => {\r\n    let attributeToUpdate = {}\r\n    let oldData = userInfo\r\n    let imageType = \"\"\r\n    // console.log(basic)\r\n    basic.map(item => {\r\n      if (item.imageType) imageType = item.imageType\r\n      return attributeToUpdate = { ...attributeToUpdate, [item.key]: item.key === 'picture' ? item.imageFile : item.value }\r\n    })\r\n    if (attributeToUpdate.name === oldData.name) delete attributeToUpdate.name\r\n    if (attributeToUpdate.email === oldData.email) delete attributeToUpdate.email\r\n    if (attributeToUpdate.phone === oldData.phone) delete attributeToUpdate.phone\r\n    if (attributeToUpdate.address === oldData.address) delete attributeToUpdate.address\r\n    if (attributeToUpdate.picture === oldData.picture) delete attributeToUpdate.picture\r\n    let request = { attributeToUpdate }\r\n    let method = \"PATCH\"\r\n    let serviceCode = 'UPDATE_USER_INFO'\r\n\r\n    const { name, email, phone, address, picture } = request.attributeToUpdate\r\n    if (phone) request.attributeToUpdate.phone = phone[0] === '0' ? '+62' + phone.slice(1) : phone\r\n    if (!name) delete request.attributeToUpdate.name\r\n    if (!email) delete request.attributeToUpdate.email\r\n    if (!phone) delete request.attributeToUpdate.phone\r\n    if (!address) delete request.attributeToUpdate.address\r\n    if (!picture) delete request.attributeToUpdate.picture\r\n\r\n    if (attributeToUpdate.picture) {\r\n      let response = await sendImageToService(attributeToUpdate.picture, imageType, attributeToUpdate.picture)\r\n      if (response.ID) {\r\n        request.attributeToUpdate.picture = Config.gatewayRepoFile + `/static-file-manager/retrieve?file=${response.ID}`\r\n        props._setCompleteRequest({ request, method, serviceCode })\r\n      }\r\n      else console.log(\"Error\")\r\n    }\r\n    else props._setCompleteRequest({ request, method, serviceCode })\r\n    // console.log(\"DAta to save: \", request)\r\n  }\r\n\r\n  return (\r\n    <Grid style={{ marginTop: 30 }} container direction=\"column\" justify=\"flex-start\" alignItems=\"center\" spacing={2}>\r\n      <Grid item sm={12} xl={12} style={{ marginTop: 30 }}>\r\n        <Paper elevation={2} >\r\n          <br />\r\n          <Grid item >\r\n            <center>\r\n              <Typography variant='h6' color='primary' >{FormatText('app_account_profile')}</Typography>\r\n            </center>\r\n          </Grid>\r\n          <List margin={20}  >\r\n            \r\n            {\r\n              basic && basic.map((item, i) => {\r\n                return (\r\n                  <ListItem divider key={i} style={{ marginRight: 30 }} >\r\n                    <ListItemText\r\n                      secondary={item.name}\r\n                      style={{ width: '20ch' }}\r\n                    />\r\n                    <ListItemText\r\n                      secondary={item.name === 'Photo' || item.name === 'Foto' ? item.value : !item.value ? 'edit to fill' : ''}\r\n                      primary={item.name !== 'Photo' && item.name !== 'Foto' ? item.value : ''}\r\n                      style={{ width: '60ch' }}\r\n                    // secondary={secondary ? 'Secondary text' : null}\r\n                    />\r\n                    <ListItemSecondaryAction style={{ marginRight: 15 }}>\r\n                      {item.name === 'Photo' || item.name === 'Foto'\r\n                        ? <Tooltip title=\"Edit\" >\r\n                          <Avatar\r\n                            src={item.picture}\r\n                            onClick={() => handleEdit(item)}\r\n                          />\r\n                        </Tooltip>\r\n                        : item.action\r\n                          ? <Tooltip title=\"Edit\" >\r\n                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleEdit(item)}>\r\n                              <EditIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          : null}\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                )\r\n              })\r\n            }\r\n          </List>\r\n\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n            <Grid style={{ marginTop: 20, marginBottom: 20 }}>\r\n              <Button\r\n                onClick={() => props.history.push('/Home')}\r\n                variant='outlined'\r\n                color='secondary'\r\n                startIcon={<ClearIcon />}\r\n                style={{\r\n                  width: 150,\r\n                  textTransform: 'none',\r\n                  fontWeight: 'bold',\r\n                  marginRight: 15\r\n                }}\r\n              >\r\n                {FormatText('app_cancel')}\r\n              </Button>\r\n              <Button\r\n                onClick={handleSave}\r\n                variant='outlined'\r\n                color='primary'\r\n                startIcon={<SaveIcon />}\r\n                style={{\r\n                  width: 150,\r\n                  textTransform: 'none',\r\n                  fontWeight: 'bold',\r\n                  marginLeft: 15\r\n                }}\r\n              >\r\n                {FormatText('common_save')}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <Grid >\r\n          <div style={{ height: 150 }} />\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n      <EditDialog\r\n        open={editOpen}\r\n        handleEditClose={handleEditClose}\r\n        editItem={editItem}\r\n        handleNewItem={handleNewItem}\r\n      />\r\n\r\n      <canvas id=\"canvas\" style={{ width: \"300\", display: 'none' }}></canvas>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  clientList: store.clientList.list,\r\n  userDetail: store.clientList.detail,\r\n  userFiltered: store.clientList.filteredList,\r\n  userInfo: store.userInfo.info,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)),\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.urlParams))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile)","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './GenericJson.css';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { setConfigDetailModal } from '../../actions/GenericConfigurationActions';\r\nimport { setOpenScreen } from \"../../actions/SystemActions\";\r\nimport {\r\n    setServiceRequest, setServiceCode, setServiceStatus,\r\n    setServiceCustomHeaders, setServiceMethod, setServiceParams, setSecondRequest\r\n} from '../../actions/ServiceActions';\r\n\r\nimport { converDateDDMMYY } from '../../utils/utils';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst GenericJson = ({ setCompleteRequest, setOpenScreen, configList,\r\n    configDetailModal, setConfigDetailModal, configDetail, setSecondRequest }) => {\r\n\r\n    const [editConfig, setEditConfig] = useState(false);\r\n    const [modalConfigDetail, setModalConfigDetail] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setOpenScreen(\"Generic Configuration\");\r\n    }, [setOpenScreen]);\r\n\r\n\r\n    useEffect(() => {\r\n        const initialConfiguration = () => {\r\n            let fullRequest = {\r\n                request: {},\r\n                serviceMethod: 'GET',\r\n                serviceCode: 'GENERIC_JSON_CONFIGURATION',\r\n                customHeaders: {\r\n                    clientId: 'voltras-health'\r\n                }\r\n            }\r\n\r\n            setCompleteRequest(fullRequest);\r\n        }\r\n\r\n        initialConfiguration();\r\n    }, [setCompleteRequest]);\r\n\r\n    const handleChangeConfig = e => {\r\n        const { value } = e.target;\r\n        setModalConfigDetail(value);\r\n    }\r\n\r\n    const handleDetailConfig = (id) => {\r\n        let fullRequest = {\r\n            request: {},\r\n            params: \"/\" + id,\r\n            serviceMethod: 'GET',\r\n            serviceCode: 'GENERIC_JSON_CONFIGURATION_DETAIL',\r\n            customHeaders: {\r\n                clientId: 'voltras-health'\r\n            }\r\n        }\r\n        setCompleteRequest(fullRequest);\r\n    }\r\n\r\n    const handleCloseModal = () => {\r\n        setConfigDetailModal(false);\r\n        setEditConfig(false);\r\n    }\r\n\r\n    const handleSaveConfiguration = () => {\r\n        const detail = JSON.parse(modalConfigDetail);\r\n        let fullRequest = {\r\n            request: detail,\r\n            params: \"/\" + detail.id,\r\n            serviceMethod: 'POST',\r\n            serviceCode: 'GENERIC_JSON_CONFIGURATION_UPDATE',\r\n            customHeaders: {\r\n                clientId: 'voltras-health'\r\n            }\r\n        }\r\n        setCompleteRequest(fullRequest);\r\n\r\n\r\n        //Updtae\r\n        let fullRequest2 = {\r\n            request: {},\r\n            method: 'GET',\r\n            serviceCode: 'GENERIC_JSON_CONFIGURATION',\r\n            customHeaders: {\r\n                clientId: 'voltras-health'\r\n            }\r\n        }\r\n        setSecondRequest(fullRequest2)\r\n        setEditConfig(false);\r\n    }\r\n\r\n    const handleEditConfiguration = () => {\r\n        const value = JSON.stringify(configDetail, undefined, 5);\r\n        setModalConfigDetail(value)\r\n        setEditConfig(true);\r\n    }\r\n\r\n    return (\r\n        <div className='generic-json-container'>\r\n            <div className='generic-configuration-container'>\r\n                <div className='generic-header'>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Generic Configuration List\r\n                    </Typography>\r\n                </div>\r\n\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>ID</TableCell>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell>Updated On</TableCell>\r\n                            <TableCell>Updated By</TableCell>\r\n                            <TableCell>Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            configList.map(({ id, name, update }) => (\r\n                                <TableRow key={id}>\r\n                                    <TableCell>{id}</TableCell>\r\n                                    <TableCell>{name}</TableCell>\r\n                                    <TableCell>{converDateDDMMYY(update.on)}</TableCell>\r\n                                    <TableCell>{update.by}</TableCell>\r\n                                    <TableCell>\r\n                                        <IconButton aria-label=\"delete\" onClick={() => handleDetailConfig(id)}>\r\n                                            <i style={{ fontSize: '18px' }} className=\"fas fa-info-circle\"></i>\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n            <Dialog\r\n                open={configDetailModal}\r\n                scroll={\"paper\"}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                maxWidth={\"xl\"}\r\n\r\n            >\r\n                <DialogTitle>\r\n                    <div className='dialog-header'>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Configuration Detail\r\n                        </Typography>\r\n                        <IconButton aria-label=\"delete\" onClick={handleCloseModal}>\r\n                            <i className=\"fas fa-times\" ></i>\r\n                        </IconButton>\r\n                    </div>\r\n\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div className='dialog-content'>\r\n                        <TextField\r\n                            label=\"JSON Config\"\r\n                            multiline\r\n                            rowsMax={20}\r\n                            value={modalConfigDetail ? modalConfigDetail : JSON.stringify(configDetail, undefined, 5)}\r\n                            onChange={handleChangeConfig}\r\n                            variant=\"outlined\"\r\n                            style={{ width: '100%' }}\r\n                            disabled={!editConfig}\r\n                        />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <div className='dialog-footer'>\r\n                        {\r\n                            editConfig ?\r\n                                <div>\r\n                                    <Button style={{ marginRight: '10px' }} onClick={handleCloseModal} variant='outlined' color=\"primary\">\r\n                                        Cancel\r\n                                </Button>\r\n                                    <Button onClick={handleSaveConfiguration} variant='contained' color=\"primary\">\r\n                                        Save Configuration\r\n                                </Button>\r\n                                </div>\r\n                                :\r\n                                <Button onClick={handleEditConfiguration} variant='contained' color=\"primary\">\r\n                                    Edit Configuration\r\n                            </Button>\r\n                        }\r\n                    </div>\r\n\r\n                </DialogActions>\r\n            </Dialog>\r\n            <div style={{ height: window.screen.height - 550 }} >\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCompleteRequest: (val) => {\r\n        dispatch(setServiceRequest(val.request))\r\n        dispatch(setServiceMethod(val.serviceMethod))\r\n        dispatch(setServiceCode(val.serviceCode))\r\n        dispatch(setServiceCustomHeaders(val.customHeaders))\r\n        dispatch(setServiceParams(val.serviceParams))\r\n        dispatch(setServiceParams(val.params))\r\n        dispatch(setServiceStatus(val.serviceStatus || 'active'))\r\n    },\r\n    setOpenScreen: (val) => dispatch(setOpenScreen(val)),\r\n    setConfigDetailModal: (val) => dispatch(setConfigDetailModal(val)),\r\n    setSecondRequest: (val) => dispatch(setSecondRequest(val))\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    configList: state.genericConfiguration.configurationList,\r\n    configDetail: state.genericConfiguration.configDetail,\r\n    configDetailModal: state.genericConfiguration.configDetailModal\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GenericJson);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { fade, withStyles } from '@material-ui/core/styles';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { useSpring, animated } from 'react-spring/web.cjs';\r\n\r\nfunction TransitionComponent(props) {\r\n    const style = useSpring({\r\n      from: { opacity: 0, transform: 'translate3d(20px,0,0)' },\r\n      to: { opacity: props.in ? 1 : 0, transform: `translate3d(${props.in ? 0 : 20}px,0,0)` },\r\n    });\r\n  \r\n    return (\r\n      <animated.div style={style}>\r\n        <Collapse {...props} />\r\n      </animated.div>\r\n    );\r\n}\r\n  \r\nTransitionComponent.propTypes = {\r\n    in: PropTypes.bool,\r\n};\r\n  \r\nconst StyledTreeItem = withStyles((theme) => ({\r\n    iconContainer: {\r\n      '& .close': {\r\n        opacity: 0.3,\r\n      },\r\n    },\r\n    group: {\r\n      marginLeft: 7,\r\n      paddingLeft: 18,\r\n      borderLeft: `1px dashed ${fade(theme.palette.text.primary, 0.4)}`,\r\n    },\r\n}))((props) => <TreeItem {...props} TransitionComponent={TransitionComponent} />);\r\n\r\nconst ClinicScopeTree = ({ items }) => {\r\n    if (!items || !items.length) {\r\n        return null\r\n    }\r\n    return items.map(item => {\r\n        if (item.children) {\r\n            return (\r\n                <StyledTreeItem nodeId={item.id} label={item.name}>\r\n                    <ClinicScopeTree items={item.children} />\r\n                </StyledTreeItem>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <StyledTreeItem nodeId={item.id} label={item.name}/>\r\n            )\r\n        }\r\n    })\r\n};\r\n\r\nexport default ClinicScopeTree;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ClinicScopeTree from './ClinicScopeTree';\r\n\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\n\r\nimport './ClinicScope.css';\r\n\r\nfunction MinusSquare(props) {\r\n    return (\r\n        <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\r\n            {/* tslint:disable-next-line: max-line-length */}\r\n            <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\r\n        </SvgIcon>\r\n    );\r\n}\r\n\r\nfunction PlusSquare(props) {\r\n    return (\r\n        <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\r\n            {/* tslint:disable-next-line: max-line-length */}\r\n            <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\r\n        </SvgIcon>\r\n    );\r\n}\r\n\r\nfunction CloseSquare(props) {\r\n    return (\r\n        <SvgIcon className=\"close\" fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\r\n            {/* tslint:disable-next-line: max-line-length */}\r\n            <path d=\"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\" />\r\n        </SvgIcon>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 264,\r\n        flexGrow: 1,\r\n        maxWidth: 400,\r\n    },\r\n});\r\n\r\nconst ClinicScope = ({ setOpenScreen }) => {\r\n\r\n    useEffect(() => {\r\n        setOpenScreen(\"Clinic Scope\");\r\n    }, [setOpenScreen]);\r\n\r\n    const classes = useStyles();\r\n    const data =\r\n    {\r\n        id: 1,\r\n        name: 'Voltras',\r\n        children: [\r\n            {\r\n                id: 2,\r\n                name: 'Biofarma',\r\n                children: [\r\n                    {\r\n                        id: 3,\r\n                        name: 'Klinik Biofarma 1',\r\n                        children: null\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Kimia Farma',\r\n                children: [\r\n                    {\r\n                        id: 5,\r\n                        name: 'Klinik Kimia Farma 1',\r\n                        children: [\r\n                            {\r\n                                id: 7,\r\n                                name: 'Klinik Kimia Farma 1.1',\r\n                                children: null\r\n                            },\r\n                            {\r\n                                id: 8,\r\n                                name: 'Klinik Kimia Farma 1.2',\r\n                                children: [\r\n                                    {\r\n                                        id: 123,\r\n                                        name: 'Klinik Kimia Farma 123',\r\n                                        children: null\r\n                                    }\r\n                                ]\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        id: 6,\r\n                        name: 'Klinik Kimia Farma 2',\r\n                        children: null\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='clinic-scope-container'>\r\n            <TreeView\r\n                className={classes.root}\r\n                defaultExpanded={['1']}\r\n                defaultCollapseIcon={<MinusSquare />}\r\n                defaultExpandIcon={<PlusSquare />}\r\n                defaultEndIcon={<CloseSquare />}\r\n            >\r\n                <ClinicScopeTree\r\n                    items={data.children}\r\n                />\r\n            </TreeView>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapDispacthToProps = dispatch => ({\r\n    setOpenScreen: (val) => dispatch(setOpenScreen(val)),\r\n});\r\n\r\nexport default connect(null, mapDispacthToProps)(ClinicScope);","\r\nimport React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Home from '../screens/home'\r\nimport Login from '../screens/login'\r\nimport Register from '../screens/register'\r\nimport PaxList from '../screens/clinic/paxList'\r\nimport PaxDetail from '../screens/clinic/paxdetail'\r\nimport QRScreen from \"../screens/clinic/qrscreen\";\r\nimport KCreateAdmin from '../screens/voltrasadmin/createuser'\r\nimport KAdminList from '../screens/voltrasadmin/userlist'\r\nimport KSetting from '../screens/clinic/clinicSetting'\r\nimport KClinicList from '../screens/clinic/clinicList'\r\nimport KClinicRegistration from '../screens/clinic/clinicRegistration'\r\nimport VCreateUser from '../screens/voltrasadmin/createuser'\r\nimport VUserList from '../screens/voltrasadmin/userlist'\r\nimport VClientList from '../screens/voltrasadmin/clientlist'\r\nimport VCreateClient from '../screens/voltrasadmin/createclient'\r\nimport VRequestList from '../screens/voltrasadmin/requestlist'\r\nimport clinicReport from '../screens/clinic/clinicReport'\r\nimport KOrderReportAll from '../screens/clinic/clinicReport/AllReport'\r\nimport UserProfile from '../screens/userprofile'\r\nimport GenericJson from '../screens/genericjson/GenericJson';\r\nimport ClinicScope from '../screens/clinic/clinic_scope/ClinicScope';\r\n\r\nconst Routing = () => (\r\n  <div>\r\n    <Switch>\r\n      <Route exact path='/' component={Home} />\r\n      <Route path='/Home' component={Home} />\r\n      <Route path='/Login' component={Login} />\r\n      <Route path='/Register' component={Register} />\r\n      <Route path='/PaxList' component={PaxList} />\r\n      <Route path='/PaxDetail' component={PaxDetail} />\r\n      <Route path='/QrScreen' component={QRScreen} />\r\n      <Route path='/VCreateUser' component={VCreateUser} />\r\n      <Route path='/VUserList' component={VUserList} />\r\n      <Route path='/KCreateAdmin' component={KCreateAdmin} />\r\n      <Route path='/KAdminList' component={KAdminList} />\r\n      <Route path='/KSetting' component={KSetting} />\r\n      <Route path='/KClinicList' component={KClinicList} />\r\n      <Route path='/KClinicRegistration' component={KClinicRegistration} />\r\n      <Route path='/VClientList' component={VClientList} />\r\n      <Route path='/VRequestList' component={VRequestList}/>\r\n      <Route path='/VCreateClient' component={VCreateClient} />\r\n      <Route path='/OrderReport' component={clinicReport} />\r\n      <Route path='/KOrderReportAll' component={KOrderReportAll} />\r\n      <Route path='/UserProfile' component={UserProfile} />\r\n      <Route path='/GenericConfiguration' component={GenericJson} />\r\n      <Route path='/ClinicScope' component={ClinicScope} />\r\n    </Switch>\r\n  </div>\r\n)\r\nexport default Routing\r\n","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Button } from '@material-ui/core';\r\nimport {\r\n  setServiceCode, setServiceCustomHeaders, setServiceMethod, setServiceParams,\r\n  setServiceRequest, setServiceRole, setServiceStatus\r\n} from '../../actions/ServiceActions';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    feedback: state.feedback,\r\n    locale: state.system.locale,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.urlParams))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n\r\n  }\r\n}\r\n\r\nclass MySnackBar extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      severity: \"\",\r\n      message: \"\",\r\n      action: false,\r\n      actionLabel: \"\"\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    console.log(\"NEXT PROPS SNACK: \", nextProps)\r\n    let feedback = nextProps.feedback.snackBar\r\n    let open = feedback.open\r\n    let message = feedback.message\r\n    if (open && message) {\r\n      this.setState({ ...this.state, ...feedback, open: true, })\r\n      if (feedback.redirect) {\r\n        setTimeout(() => {\r\n          this.props.history.push(`/${feedback.redirect}`)\r\n        }, 2000);\r\n      }\r\n    }\r\n    else {\r\n      this.setState({ ...this.state, open: false, })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"DIDMOUNT: \", this.state)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({\r\n      open: false,\r\n      severity: \"\",\r\n      message: \"\",\r\n      action: false,\r\n      actionLabel: \"\"\r\n    })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ ...this.state, open: false })\r\n  }\r\n\r\n  handleAction = () => {\r\n    let principalType = ''\r\n    let lang = this.props.locale ? this.props.locale.slice(0, 2) : 'en'\r\n    let redirectURI = \"http://www.alamanak.co.id\"\r\n    let actionType = this.state.action\r\n    if (actionType === 'SEND_EMAIL_VERIFICATION') {\r\n      principalType = 'email'\r\n    }\r\n    if (actionType === 'SEND_PHONE_VERIFICATION') {\r\n      principalType = 'phone'\r\n    }\r\n    //  GET /verification-code/{principalType}?lang={lang}&redirectURI={redirectURI}\r\n    let actionRequest = {\r\n      method: 'GET',\r\n      request: {},\r\n      serviceCode: actionType,\r\n      urlParams: `/${principalType}?&lang=${lang}&redirectURI=${redirectURI}`\r\n    }\r\n    this.props._setCompleteRequest(actionRequest)\r\n    this.setState({ ...this.state, open: false })\r\n  }\r\n\r\n  render() {\r\n    const { open, message, position, severity, action, actionLabel, duration } = this.state\r\n    return (\r\n      <div >\r\n        <Snackbar\r\n          anchorOrigin={position\r\n            ? { vertical: position.split('-')[0], horizontal: position.split('-')[1] }\r\n            : { vertical: 'bottom', horizontal: 'center' }}\r\n          open={open}\r\n          autoHideDuration={duration ? duration : 4000}\r\n          onClose={this.handleClose}\r\n          message={message}\r\n        >\r\n          <MuiAlert\r\n            elevation={6}\r\n            variant=\"filled\"\r\n            onClose={this.handleClose}\r\n            severity={severity}\r\n            action={action ? (\r\n              <Button color='primary' variant='contained' onClick={this.handleAction} style={{ textTransform: 'none', fontWeight: 'bold', }}>\r\n                {actionLabel}\r\n              </Button>\r\n            ) : null}\r\n          >\r\n            {message}\r\n          </MuiAlert>\r\n        </Snackbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MySnackBar)\r\n","\r\nimport React, { useState, forwardRef } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n// import DialogActions from '@material-ui/core/DialogActions';\r\n// import DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\n// import DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Button, Typography, Card, Input, Grid, FormHelperText, FormControl } from '@material-ui/core';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport FormatText from '../../i18n'\r\nimport { FormValidation } from '../../utils/FormValidation';\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function OtpDialog(props) {\r\n\r\n  const [state, setState] = useState({\r\n    otp: '',\r\n    otpErrorMessage: '',\r\n    onLoginErrorMessage: '',\r\n\r\n  })\r\n\r\n  const handleClose = () => {\r\n    // console.log(\"dipanggil tak\")\r\n    props.handleDialogClose()\r\n  };\r\n\r\n  const handleSubmitOtp = () => {\r\n    if (state.otp) {\r\n      let clientId = props.clientId\r\n      let challenge = state.otp\r\n      let otpID = props.otpID\r\n      let request = {\r\n        challenge,\r\n        otpID,\r\n        redirectURI: \"http://www.alamanak.co.id\",\r\n      }\r\n      let fullRequest = { request, method: 'POST', serviceCode: 'VERIFICATION_CHECK', customHeaders: { clientId }, params:'/phone' }\r\n      props.handleSubmitOtp(fullRequest)\r\n    }\r\n    setTimeout(() => {\r\n      props.handleDialogClose()\r\n    }, 50);\r\n  }\r\n\r\n  const handleChange = prop => event => {\r\n    event.preventDefault()\r\n    let valid = FormValidation(prop, event.target.value)\r\n    // console.log(typeof event.target.value)\r\n    setState({\r\n      ...state,\r\n      [prop]: event.target.value.slice(0, 6),\r\n      [prop + 'ErrorMessage']: valid.errorMessage,\r\n    })\r\n  }\r\n\r\n  const handleCancelOtp = () => {\r\n    // console.log('CANCEL')\r\n    props.handleDialogClose()\r\n  }\r\n\r\n  const handleResendOtp = () => {\r\n    // console.log('clicked')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n      >\r\n        <Card style={{ display: 'flex', flexWrap: 'wrap', width: 300, }} elevation={4}>\r\n          <Grid style={{ margin: 30 }} container direction=\"column\" justify=\"center\" alignItems=\"center\" >\r\n            <Typography variant=\"h5\" color='primary'><b>{FormatText('app_submit_otp')}</b> </Typography>\r\n            <Typography variant=\"caption\" color='textSecondary' >{FormatText('app_submit_otp_text')}</Typography>\r\n            <Typography variant='subtitle2' color='primary' >{props.phone}</Typography>\r\n\r\n            <FormControl style={{ margin: 10, width: '12ch', textAlign: 'center' }}  >\r\n              <Input\r\n                autoFocus\r\n                style={{ fontSize: 28, textAlign: 'center' }}\r\n                error={state.otpErrorMessage ? true : false}\r\n                id=\"standard-adornment-otp\"\r\n                type='text'\r\n                onChange={handleChange('otp')}\r\n                value={state.otp}\r\n                maxLength={6}\r\n              />\r\n            </FormControl>\r\n            {\r\n              state.otpErrorMessage\r\n                ? <FormHelperText error id=\"email-helper-text\">{state.otpErrorMessage}</FormHelperText>\r\n                : null\r\n            }\r\n\r\n            <FormControl>\r\n              <Grid>\r\n                <Button onClick={handleCancelOtp} variant=\"outlined\" color=\"primary\" style={{ margin: 10, }}>\r\n                  {FormatText('app_cancel')}\r\n                </Button>\r\n                <Button\r\n                  onClick={handleSubmitOtp}\r\n                  disabled={state.otp ? false : true}\r\n                  style={{ margin: 10, }}\r\n                  variant=\"contained\"\r\n                  color=\"primary\">\r\n                  {FormatText('app_submit')}\r\n                </Button>\r\n              </Grid>\r\n              {\r\n                state.onLoginErrorMessage\r\n                  ? <FormHelperText error id=\"password-helper-text\">{state.onLoginErrorMessage}</FormHelperText>\r\n                  : null\r\n              }\r\n            </FormControl>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography variant=\"caption\" color='textSecondary' >{FormatText('app_not_receive_otp')}</Typography>\r\n              <Button\r\n                size='small'\r\n                onClick={handleResendOtp}\r\n                color=\"primary\"\r\n                style={{ textTransform: 'none', fontWeight: 'bold', fontSize: 12 }}\r\n              >\r\n                {FormatText('app_resend_otp')}\r\n              </Button>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n        {/* <DialogTitle id=\"alert-dialog-slide-title\">{props.dialogTitle}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            {props.dialogContent}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            {props.cancelTitle}\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\" style={{ fontWeight: 'bold', }} >\r\n            {props.submitTitle}\r\n          </Button>\r\n        </DialogActions> */}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Paper, Avatar, Chip } from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Routing from '../../router/Routing'\r\nimport { setMenuCollapseStatus, toggleCollapseMenu } from \"../../actions/MenuActions\";\r\nimport { dispatchLogout, setMenuClickUrl } from '../../actions/SystemActions'\r\nimport { setUserMenu } from \"../../actions/MenuActions\"\r\nimport {\r\n  setServiceRole, setServiceRequest, setServiceCode, setServiceCustomHeaders,\r\n  setServiceStatus, setServiceMethod, setServiceParams\r\n} from '../../actions/ServiceActions'\r\nimport { openMenuStructure } from \"../../utils/MenuStructure\";\r\nimport SnackbarFeed from '../snackBar/SnackBar'\r\nimport OtpDialog from '../dialog/OtpDialog'\r\nimport FormatText from '../../i18n'\r\nimport Config from '../../config'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    store: state.system,\r\n    menuItems: state.menu.menuItems,\r\n    menu: state.menu,\r\n    userInfo: state.userInfo,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setMenuCollapseStatus: val => {\r\n      dispatch(setMenuCollapseStatus(val))\r\n    },\r\n    _setMenuClickUrl: val => {\r\n      dispatch(setMenuClickUrl(val))\r\n    },\r\n    _toggleCollapseMenu: val => {\r\n      dispatch(toggleCollapseMenu(val))\r\n    },\r\n    _logout: () => {\r\n      dispatch(dispatchLogout())\r\n      dispatch(dispatch(setUserMenu(openMenuStructure)))\r\n    },\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.params))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.role))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n  }\r\n}\r\n\r\nclass NavBarRightMenu extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      mainHidden: false,\r\n      openLogout: false,\r\n      dialogOpen: false,\r\n      otpID: \"\"\r\n    }\r\n  }\r\n\r\n  // UNSAFE_componentWillMount() {\r\n  //   console.log('NAV WILL MOUNT: ', this.props.store)\r\n  // }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    // console.log(\"STATIC PROPS: \", props, state)\r\n    if (props.store.otpID && (props.store.otpID !== state.otpID)) {\r\n      return {\r\n        ...state,\r\n        dialogOpen: true,\r\n        otpID: props.store.otpID\r\n      }\r\n    }\r\n    // Return null to indicate no change to state.\r\n    return null;\r\n  }\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true, mainHidden: true })\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false, mainHidden: false })\r\n  };\r\n\r\n  handleDrawerClick = (menuItem) => {\r\n    let windowscreen = window.screen.width\r\n    let screen = menuItem.url\r\n    // console.log(\"screen : \",screen)\r\n    this.props._setMenuClickUrl(screen)\r\n    if (!menuItem.children[0]) {\r\n      if (screen === \"Logout\") {\r\n        this.setState({\r\n          ...this.state,\r\n          openLogout: true\r\n        })\r\n      }\r\n      else {\r\n        // TOGGLE MENU BUTTON\r\n        if (windowscreen < 1000) {\r\n          this.setState({\r\n            open: !this.state.open,\r\n            mainHidden: !this.state.mainHidden,\r\n          })\r\n          this.props.history.push(`/${screen}`)\r\n        } else {\r\n          this.props.history.push(`/${screen}`)\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      // Uncoment to make submenu toggle collapse\r\n      Object.entries(this.props.menu).forEach(([key, val]) => {\r\n        if (key !== 'menuItems') this.props._toggleCollapseMenu({ name: key, value: false })\r\n      })\r\n\r\n      let val = { name: screen, value: !this.props.menu[screen] }\r\n      this.props._toggleCollapseMenu(val)\r\n    }\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      openLogout: true\r\n    })\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      openLogout: false\r\n    })\r\n  };\r\n\r\n  handleMainClick = () => {\r\n    let windowscreen = window.screen.width\r\n    if (windowscreen < 1000 && this.state.mainHidden) {\r\n      this.setState({\r\n        open: !this.state.open,\r\n        mainHidden: !this.state.mainHidden,\r\n      })\r\n    }\r\n  }\r\n\r\n  handleLogout = () => {\r\n    // let userRole = this.props.userInfo.info.userRole\r\n    // this.props.history.push('/Home')\r\n    const logoutRequest = {\r\n      request: { \"redirectURI\": \"http://login.page\" },\r\n      method: \"POST\",\r\n      serviceCode: \"logout\",\r\n    }\r\n    localStorage.clear()\r\n    this.props._setCompleteRequest(logoutRequest)\r\n    this.setState({\r\n      ...this.state,\r\n      openLogout: false,\r\n      open: false\r\n    })\r\n  }\r\n\r\n  handleDialogClose = () => {\r\n    // console.log(\"dipanggil tak\")\r\n    this.setState({\r\n      ...this.state,\r\n      dialogOpen: !this.state.dialogOpen\r\n    })\r\n  }\r\n\r\n  handleSubmitOtp = fullRequest => {\r\n    // console.log(fullRequest)\r\n    this.props._setCompleteRequest(fullRequest)\r\n  }\r\n\r\n  handleClick = () => {\r\n    // console.log('Clicked')\r\n    this.props.history.push('UserProfile')\r\n  }\r\n\r\n  render() {\r\n    const { classes, store, menu, menuItems, userInfo } = this.props;\r\n    const loginStyle = {\r\n      display: 'flex',\r\n      backgroundImage: `url(${store.appConstant && store.openScreen === 'Login'\r\n        ? store.appConstant.backgroundLogin\r\n        : Config.gatewayRepoFile + '/static-file-manager/retrieve?file=voltras_login_background'})`,\r\n      backgroundSize: 'cover',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundAttachment: 'fixed',\r\n      // position: \"fixed\",\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      // height: '100%',\r\n    }\r\n    const defaultStyle = {\r\n      display: 'flex',\r\n      backgroundImage: `url(${store.appConstant ? store.appConstant.backgroundApp : \"\"})`,\r\n      backgroundSize: 'cover',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundAttachment: 'fixed',\r\n      // position: \"fixed\",\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n    }\r\n\r\n    return (\r\n      <div style={store.openScreen === 'Login' ? loginStyle : defaultStyle}\r\n      >\r\n        <CssBaseline />\r\n        {\r\n          store.openScreen === 'Login'\r\n            ? null\r\n            : <AppBar\r\n              position=\"fixed\"\r\n              className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: this.state.open,\r\n              })}\r\n            >\r\n              <Toolbar>\r\n\r\n                {store.openScreen === 'Home'\r\n                  ? <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                    <i className=\"fas fa-clinic-medical\"></i>\r\n                  </IconButton>\r\n                  : store.openScreen === 'Order List'\r\n                    ? <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                      <i className=\"fas fa-file-medical\"></i>\r\n                    </IconButton>\r\n                    : <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                      <i className=\"fas fa-laptop-house\"></i>\r\n                    </IconButton>\r\n\r\n                }\r\n                <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                  {store.openScreen ? store.openScreen : \"Clinic Backoffice\"}\r\n                </Typography>\r\n\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  edge=\"end\"\r\n                  onClick={this.handleDrawerOpen}\r\n                  className={clsx(this.state.open && classes.hide)}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n\r\n              </Toolbar>\r\n              {store.serviceStart ? <LinearProgress color=\"secondary\" /> : null}\r\n            </AppBar>\r\n        }\r\n        <main\r\n          onClick={this.handleMainClick}\r\n          className={clsx(classes.content, {\r\n            [classes.contentShift]: this.state.open,\r\n          })}\r\n          style={store.openScreen === 'Login' ? { marginRight: 0 } : null}\r\n        >\r\n          {/* <Hidden xsDown={this.state.mainHidden}> */}\r\n          <Grid style={{ marginTop: 50 }}>\r\n            <OtpDialog\r\n              handleDialogClose={this.handleDialogClose}\r\n              open={this.state.dialogOpen}\r\n              otpID={this.state.otpID}\r\n              phone={userInfo.info.phone}\r\n              clientId={userInfo.info.aud}\r\n              handleSubmitOtp={this.handleSubmitOtp}\r\n            />\r\n            <Routing />\r\n            <SnackbarFeed history={this.props.history} />\r\n          </Grid>\r\n          {/* </Hidden> */}\r\n        </main>\r\n        {\r\n          store.openScreen === 'Login'\r\n            ? null\r\n            : <Drawer\r\n              className={classes.drawer}\r\n              variant=\"persistent\"\r\n              anchor=\"right\"\r\n              open={this.state.open}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              <List>\r\n                <ListItem>\r\n                  <br />\r\n                  <Paper elevation={0} style={{ width: 240, }} >\r\n                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\"  >\r\n                      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\"  >\r\n                        <Grid item onClick={this.handleDrawerClose} >\r\n                          <Avatar\r\n                            style={{ width: 75, height: 75, marginBottom: 5 }}\r\n                            src={userInfo.info.picture ? userInfo.info.picture : ''}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item  >\r\n                          <center><Typography variant='subtitle2' >{userInfo.info ? userInfo.info.name : ''}</Typography></center>\r\n                        </Grid>\r\n                        <Grid item >\r\n                          <center>\r\n                            <Typography variant='caption' >{userInfo.info ? userInfo.info.email || userInfo.info.phone : ''}</Typography>\r\n                          </center>\r\n                        </Grid>\r\n                        <Grid item style={{ marginTop: 15 }} >\r\n                          <Chip onClick={this.handleClick} label={FormatText('app_manage_acount')} variant=\"outlined\" size=\"small\" />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Paper>\r\n                  <br />\r\n                </ListItem>\r\n              </List>\r\n              <Divider />\r\n\r\n              {\r\n                menuItems && menuItems.map((menuItem, i) => {\r\n                  return <div key={i}>\r\n                    <List>\r\n                      <ListItem button onClick={() => this.handleDrawerClick(menuItem)} >\r\n                        <Typography style={{ fontSize: \"18px\" }}>{menuItem.label}</Typography>\r\n                      </ListItem>\r\n                    </List>\r\n                    {\r\n                      menu[menuItem.url]\r\n                        ? <div>\r\n                          {\r\n                            menuItem.children.map((childItem, i) => {\r\n                              return childItem\r\n                                ? <div key={i}>\r\n                                  <List style={{ marginLeft: 15, }}>\r\n                                    <ListItem button onClick={() => this.handleDrawerClick(childItem)} key={i}>\r\n                                      <ChevronRightIcon />\r\n                                      <ListItemText primary={childItem.label} />\r\n                                    </ListItem>\r\n                                  </List>\r\n                                </div>\r\n                                : null\r\n                            })\r\n                          }\r\n                        </div>\r\n                        : null\r\n                    }\r\n\r\n                    <Divider />\r\n                  </div>\r\n                })\r\n              }\r\n              <Grid style={{ marginTop: 10 }} container direction=\"column\" justify=\"center\" alignItems=\"center\"  >\r\n                <Typography variant=\"caption\" color='textSecondary' >version {Config.appVersion}</Typography>\r\n                <Typography variant=\"caption\" color='textSecondary' >Copyright © 2020, voltras.net</Typography>\r\n              </Grid>\r\n            </Drawer>\r\n        }\r\n\r\n        <Dialog\r\n          open={this.state.openLogout}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{FormatText('app_logout')}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">{FormatText('app_confirm_logout')}?\r\n          </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              {FormatText('app_cancel')}\r\n            </Button>\r\n            <Button onClick={this.handleLogout} color=\"primary\" autoFocus>\r\n              {FormatText('app_logout')}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst drawerWidth = 240;\r\nconst useNavStyles = (theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: drawerWidth,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-start',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginRight: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    [theme.breakpoints.up('md')]: {\r\n      marginRight: 0,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n});\r\n\r\nconst Navigation = connect(mapStateToProps, mapDispatchToProps)(NavBarRightMenu)\r\n\r\nexport default withStyles(useNavStyles)(Navigation)\r\n","\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom'\r\nimport ServiceExecutor from './ServiceExecutor'\r\n// import GlobalDialog from './components/dialog/GlobalDialog'\r\n// import SnackBar from './components/snackBar/SnackBar'\r\nimport SnackBarError from './components/snackBar/SnackBarError'\r\nimport Navbar from './components/navBar/NavigationBar'\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\n\r\nimport { setUserMenu } from \"./actions/MenuActions\";\r\nimport { setAppConstant, setLocale } from './actions/SystemActions'\r\n// import { setServiceRequest, setServiceCode, setServiceStatus, setServiceCustomHeaders, setServiceMethod } from \"./actions/ServiceActions\";\r\nimport { setResetPasswordCode, setVerificationCode } from \"./actions/UserInfoActions\";\r\nimport { openMenuStructure } from \"./utils/MenuStructure\";\r\n// import { AppStructures } from './utils/AppStructures'\r\nimport Config from '../src/config'\r\n\r\nlet urlImage = Config.gatewayRepoFile\r\n\r\nconst AppStructures = [{\r\n  aud: 'authentication-backoffice',\r\n  name: 'Voltras Backoffice',\r\n  domain: ['http://localhost:3030', 'http://172.16.10.98:3030', 'http://172.16.10.98:3032'],\r\n  title: \"VoltrasBOS\",\r\n  welcome: \"Backoffice System\",\r\n  locale: 'id-Id',\r\n  backgroundLogin: urlImage + '/static-file-manager/retrieve?file=voltras_login_background',\r\n  backgroundApp: '',\r\n  icon: <BuildIcon style={{ width: 50, height: 50, }} />,\r\n  openMenu: [\r\n    {\r\n      label: \"Login\",\r\n      url: \"Login\",\r\n      children: []\r\n    },\r\n    // {\r\n    //   label: \"Generic Input\",\r\n    //   url: \"GenericInput\",\r\n    //   children: []\r\n    // },\r\n    {\r\n      label: \"Register\",\r\n      url: \"Register\",\r\n      children: []\r\n    },\r\n  ],\r\n  loggedMenu: [\r\n    {\r\n      label: \"Home\",\r\n      url: \"Home\",\r\n      children: []\r\n    },\r\n    {\r\n      label: \"Client Management\",\r\n      url: \"VoltrasClientManagement\",\r\n      children: [\r\n        { label: \"Client List\", url: \"VClientList\", children: [] },\r\n        { label: \"Create Client\", url: \"VCreateClient\", children: [] },\r\n      ]\r\n    },\r\n    {\r\n      label: \"User Management\",\r\n      url: \"VoltrasUserManagement\",\r\n      children: [\r\n        { label: \"User List\", url: \"VUserList\", children: [] },\r\n        { label: \"Create User\", url: \"VCreateUser\", children: [] },\r\n      ]\r\n    },\r\n    {\r\n      label: \"Request Specification\",\r\n      url: \"VoltrasRequestSpesification\",\r\n      children: [\r\n        { label: \"Request List\", url: \"VRequestList\", children: [] }\r\n      ]\r\n    },\r\n    {\r\n      label: \"Logout\",\r\n      url: \"Logout\",\r\n      children: []\r\n    },\r\n  ],\r\n  requestHeader: {\r\n    'client-id': 'authentication-backoffice',\r\n  }\r\n}, {\r\n  aud: 'voltras-health',\r\n  name: 'Voltras Health',\r\n  domain: ['https://health.voltras.net'],\r\n  title: \"Voltras Health\",\r\n  welcome: \"Clinic Backoffice System\",\r\n  locale: 'id-Id',\r\n  backgroundLogin: urlImage + '/static-file-manager/retrieve?file=health_login_background',\r\n  backgroundApp: urlImage + '/static-file-manager/retrieve?file=health_app_background',\r\n  icon: <LocalHospitalIcon style={{ width: 50, height: 50, }} />,\r\n  openMenu: [\r\n    {\r\n      label: \"Login\",\r\n      url: \"Login\",\r\n      children: []\r\n    },\r\n    {\r\n      label: \"Register\",\r\n      url: \"Register\",\r\n      children: []\r\n    },\r\n  ],\r\n  loggedMenu: [\r\n    {\r\n      label: \"Home\",\r\n      url: \"Home\",\r\n      children: []\r\n    },\r\n    {\r\n      label: \"Order List\",\r\n      url: \"PaxList\",\r\n      children: []\r\n    },\r\n    {\r\n      label: \"Order Report\",\r\n      url: \"KReport\",\r\n      children: [\r\n        {\r\n          label: \"All Order\",\r\n          url: \"KOrderReportAll\",\r\n          children: []\r\n        },\r\n        {\r\n          label: \"Redeemed Order\",\r\n          url: \"OrderReport\",\r\n          children: []\r\n        },]\r\n    },\r\n    {\r\n      label: \"Clinic Management\",\r\n      url: \"KClinicManager\",\r\n      children: [\r\n        {\r\n          label: \"Clinic List\",\r\n          url: \"KClinicList\",\r\n          children: []\r\n        },\r\n        {\r\n          label: \"Clinic Setting\",\r\n          url: \"KSetting\",\r\n          children: []\r\n        },\r\n        {\r\n          label: \"Clinic Registration\",\r\n          url: \"KClinicRegistration\",\r\n          children: []\r\n        },\r\n        // {\r\n        //   label: \"Clinic Scope\",\r\n        //   url: \"ClinicScope\",\r\n        //   children: []\r\n        // },\r\n      ]\r\n    },\r\n    {\r\n      label: \"Generic Configuration\",\r\n      url: \"GenericConfiguration\",\r\n      children: []\r\n    },\r\n    {\r\n      label: \"Logout\",\r\n      url: \"Logout\",\r\n      children: []\r\n    },\r\n  ],\r\n  requestHeader: {\r\n    'client-id': 'voltras-health',\r\n  }\r\n}, {\r\n  aud: 'dummy-aud',\r\n  name: 'Dummy App',\r\n  domain: ['http://localhost:3030', 'http://172.16.10.98:3032'],\r\n  title: \"DUMMY APP\",\r\n  welcome: \"Dummy App\",\r\n  locale: 'id-Id',\r\n  backgroundLogin: '',\r\n  backgroundApp: '',\r\n  icon: < i className=\"fas fa-mosque\" style={{ width: 50, height: 50, fontSize: 40, }}></i >,\r\n  openMenu: [\r\n    {\r\n      label: \"Login\",\r\n      url: \"Login\",\r\n      children: []\r\n    },\r\n    {\r\n      label: \"Logout\",\r\n      url: \"Logout\",\r\n      children: []\r\n    },\r\n  ],\r\n  loggedMenu: [\r\n    {\r\n      label: \"Home\",\r\n      url: \"Home\",\r\n      children: []\r\n    },\r\n    {\r\n      label: \"Product\",\r\n      url: \"Product\",\r\n      children: [\r\n        { label: \"Add New Product\", url: \"AddNewProduct\", children: [] },\r\n        { label: \"Manage Product\", url: \"ManageProduct\", children: [] }\r\n      ]\r\n    },\r\n    {\r\n      label: \"Report\",\r\n      url: \"Report\",\r\n      children: [\r\n        { label: \"Booking Summary\", url: \"BookingSummary\", children: [] },\r\n        { label: \"Payment Summary\", url: \"PaymentSummary\", children: [] }\r\n      ]\r\n    },\r\n    {\r\n      label: \"Logout\",\r\n      url: \"Logout\",\r\n      children: []\r\n    },\r\n  ],\r\n},\r\n]\r\nconst mapStateToProps = state => {\r\n  // console.log(\"GLOBAL STATE: \", state)\r\n  return {\r\n    userInfo: state.userInfo\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setUserMenu: val => dispatch(setUserMenu(val)),\r\n    _setAppConstant: val => dispatch(setAppConstant(val)),\r\n    _setLocale: val => dispatch(setLocale(val)),\r\n    _setResetPasswordCode: val => dispatch(setResetPasswordCode(val)),\r\n    _setVerificationCode: val => dispatch(setVerificationCode(val)),\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  // constructor(props) {\r\n  //   super(props)\r\n  //   this.state = {\r\n  //     open: true,\r\n  //     setOpen: false\r\n  //   }\r\n  // }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    function isMobile() {\r\n      return ((window.innerWidth <= 800) && (window.innerHeight <= 600));\r\n    }\r\n    const { screen } = window\r\n    if (!navigator.xr && isMobile() && screen.orientation && screen.orientation.lock) {\r\n      screen.orientation.lock('landscape');\r\n    }\r\n    // console.log(\r\n    //   \"WILL MOUNT APP: \", window.location.origin\r\n    //   , ', Language: ', navigator.language\r\n    //   , ', HREF: ', window.location.href\r\n    // )\r\n\r\n    let locationHref = window.location.href\r\n    // console.log(\"resetpasswordcode: \", locationHref.split('/').slice(-1)[0])\r\n    if (locationHref.split('/')[3] && (locationHref.split('/')[3] === 'reset-password-recovery')) {\r\n      this.props._setResetPasswordCode(locationHref.split('/').slice(-1)[0])\r\n    }\r\n    if (locationHref.split('/')[3] && (locationHref.split('/')[3] === 'verification-code')) {\r\n      this.props._setVerificationCode(locationHref.split('/').slice(-1)[0])\r\n    }\r\n    // console.log(locationHref.split('/'))\r\n    // console.log(locationHref.split('/')[3])\r\n    // console.log(locationHref.split('/').slice(-1)[0])\r\n    let origin = window.location.origin\r\n    let app = AppStructures.filter(item => item.domain.includes(origin))\r\n    this.props._setAppConstant(app[0] ? app[0] : AppStructures[0])\r\n    // document.title = app[0].title\r\n    // console.log(\"SETTING CONSTANTS: \",app[0])\r\n\r\n    let language = navigator.language\r\n    this.props._setLocale(language)\r\n\r\n    let accessToken = localStorage.getItem('accessToken')\r\n    if (accessToken) { this.props.history.push('/Home') }\r\n    else {\r\n      this.props._setUserMenu(openMenuStructure)\r\n      this.props.history.push('/Login')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n        <Navbar history={this.props.history} />\r\n        <ServiceExecutor history={this.props.history} />\r\n        {/* <GlobalDialog history={this.props.history} /> */}\r\n        {/* <SnackBar history={this.props.history} /> */}\r\n        <SnackBarError history={this.props.history} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter, MemoryRouter } from 'react-router-dom'\r\nimport { ThemeProvider } from '@material-ui/styles'\r\n\r\nimport { theme } from './Theme'\r\nimport store from './Store'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ThemeProvider theme={theme}>\r\n      <MemoryRouter>\r\n        <App />\r\n      </MemoryRouter>\r\n    </ThemeProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}