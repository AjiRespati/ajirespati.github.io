{"version":3,"sources":["assets/image/backoffice02.jpg","Theme.js","module/SystemReducer.js","module/ServiceReducer.js","module/ResponseReducer.js","module/UserInfoReducer.js","module/MenuReducer.js","module/PaxListReducers.js","module/FeedbackReducer.js","module/AutoCompleteReducer.js","module/UserListReducers.js","module/ClientListReducer.js","module/GenericConfigurationReducer.js","module/RequestListReducer.js","module/CombineReducers.js","Store.js","actions/ServiceActions.js","actions/ResponseActions.js","actions/UserInfoActions.js","actions/MenuActions.js","actions/PaxListActions.js","actions/FeedbackActions.js","actions/SystemActions.js","actions/UserListActions.js","actions/GenericConfigurationActions.js","config/index.js","services/ServiceUrl.js","utils/Crypting.js","i18n/app.js","i18n/error.js","i18n/common.js","i18n/clinic.js","i18n/index.js","services/ServiceClient.js","utils/MenuStructure.js","utils/AppStructures.js","ServiceExecutor.js","actions/ClientListActions.js","actions/RequestListAction.js","components/snackBar/SnackBarError.js","screens/home/KlinikHomeScreen.js","screens/home/VoltrasHomeScreen.js","screens/home/HomeScreen.js","screens/home/index.js","components/dialog/GlobalDialog.js","utils/FormValidation.js","components/autocomplete/SimpleAutocomplete.js","screens/login/ForgotPasswordForm.js","screens/login/ChooseRoleCard.js","screens/login/InsertOTPCard.js","screens/login/GoogleLogin.js","screens/login/ChooseAppCard.js","screens/login/LoginCard.js","screens/login/LoginScreen.js","screens/login/index.js","screens/register/RegisterScreen.js","screens/register/index.js","utils/utils.js","components/list/ListTableMobile.js","screens/clinic/paxList/FilterDesktop.js","screens/clinic/paxList/PaxListScreen.js","screens/clinic/paxList/index.js","screens/clinic/paxdetail/RescheduleDialog.js","screens/clinic/paxdetail/index.js","screens/clinic/qrscreen/QrScreen.js","screens/clinic/qrscreen/index.js","screens/voltrasadmin/createuser/CreateUserForm.js","screens/voltrasadmin/createuser/AddUserClient.js","screens/voltrasadmin/createuser/index.js","screens/voltrasadmin/userlist/UserRUDTable.js","screens/voltrasadmin/userlist/UpdateUserDialog.js","screens/voltrasadmin/userlist/AddClientDialog.js","screens/voltrasadmin/userlist/BasicUserInformation.js","screens/voltrasadmin/userlist/UpdateUserBasicInfoDialog.js","screens/voltrasadmin/userlist/UserDetail.js","screens/voltrasadmin/userlist/ConfirmationDIalog.js","screens/voltrasadmin/userlist/index.js","screens/clinic/clinicSetting/AddUserDialog.js","screens/clinic/clinicSetting/LogoPreviewDialog.js","screens/clinic/clinicSetting/EditWithReplaceDialog.js","screens/clinic/clinicSetting/index.js","screens/clinic/clinicList/FilterForm.js","screens/clinic/clinicList/index.js","screens/clinic/clinicRegistration/index.js","screens/voltrasadmin/clientlist/AddClientDialog.js","screens/voltrasadmin/clientlist/updateBasicInfo.js","screens/voltrasadmin/clientlist/AddUrlOriginDialog.js","components/table/TableCustomize.js","screens/voltrasadmin/clientlist/EditMessagingTemplate.js","screens/voltrasadmin/clientlist/ClientDetail.js","screens/voltrasadmin/clientlist/index.js","screens/voltrasadmin/createclient/AddClientRole.js","screens/voltrasadmin/createclient/CreateClientForm.js","screens/voltrasadmin/createclient/index.js","screens/voltrasadmin/requestlist/AddRequestSpesificationDialog.js","screens/voltrasadmin/requestlist/EditRequestSpesificationDialog.js","screens/voltrasadmin/requestlist/index.js","screens/clinic/clinicReport/index.js","screens/clinic/clinicReport/AllReport.js","screens/userprofile/EditDialog.js","screens/userprofile/index.js","screens/genericjson/GenericJson.js","screens/genericjson/CatalogProduct.js","screens/clinic/clinic_scope/ClinicScopeTree.js","screens/clinic/clinic_scope/ClinicScope.js","screens/clinic/clinic_report_summary/TableCreator.js","screens/clinic/clinic_report_summary/DialogDetail.js","screens/clinic/clinic_report_summary/AllOrder.js","screens/clinic/clinic_report_summary/RedeemedOrder.js","router/Routing.js","components/snackBar/SnackBar.js","components/dialog/OtpDialog.js","components/navBar/NavigationBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","error","initialstate","locale","serviceStart","openScreen","menuClickUrl","appConstant","roleAuth","root","admin","endUser","popChooseRole","googleParams","access_type","scope","response_type","prompt","client_id","otpID","system","state","action","type","snackbarMsg","val","file","request","secondRequest","thirdRequest","status","serviceCode","method","params","customHeaders","role","test","headersContent","service","response","info","sessionInfo","otpId","roleUsed","resetPasswordCode","verificationCode","userInfo","menuItems","menu","name","value","list","detail","product","filteredList","klinikList","clinicDetail","cityList","clinicUser","clinicRecapt","myClinic","clinic_parents","parentList","clinic_recapt_logistic","paxList","snackBar","open","severity","message","position","actionLabel","dialog","stepper","step","feedback","INITIAL_STATE","autocomplete","inputValue","klinikValue","klinikInputValue","UserList","messagingList","messagingEdit","ClientList","configurationList","productCatalogList","configDetail","configDetailModal","genericConfiguration","data","RequestList","appReducers","combineReducers","clientList","userList","requestList","store","createStore","setServiceRequest","setServiceStatus","setServiceCode","setServiceMethod","setServiceParams","setServiceCustomHeaders","setServiceRole","setSecondRequest","setResponse","setUserInfo","setUserSessionInfo","setUserOtpId","setRoleUsed","setResetPasswordCode","setVerificationCode","setUserMenu","setMenuCollapseStatus","setPaxList","setPaxDetail","setPaxProduct","setKlinikList","setClinikDetail","setClinicRecapt","setCityList","setParentList","setClinicRecaptLogistic","setSnackbar","setDialog","setOpenScreen","setAppConstant","setPopChooseRole","setLocale","setUserFilteredList","setConfigDetailModal","console","log","process","Config","production","appVersion","gatewaySecurity","gatewayBackOffice","serviceUrl","hash","algortm","stringData","crypto","createHash","update","digest","generateSignature","headers","body","key","orderedHeaders","Object","keys","sort","forEach","v","orderedBody","stringHeader","JSON","stringify","replace","stringBody","createHmac","hmac","appText","app_name","en","id","app_phone","app_email","app_new","app_paid","app_finish","app_password","app_password_confirmation","app_forgot_password","app_from","app_to","app_back","app_cancel","app_submit","app_welcome","app_sign_in","app_sign_up","app_register","app_choose","app_choose_role","app_choose_role_used","app_submit_otp","app_submit_otp_text","app_not_receive_otp","app_resend_otp","app_email_or_phone","app_no_account","app_have_account","app_export_xls","app_submit_filter","app_not_mandatory","app_regis_sucess_msg","app_email_success_msg","app_sms_success_msg","app_verification_succes","app_send_email_verify","app_send_phone_verify","app_delete_data_confirmation","app_date_to_show","app_show_report","app_report_summary","app_logout","app_confirm_logout","app_manage_acount","app_success_update_account","app_select_photo","app_account_profile","app_photo_personalize","app_save_to_change","errorText","err_submit","err_email_phone_empty","err_email_phone_format","err_not_six_char","err_phone_empty","err_phone_format","err_name_empty","err_clinic_name_empty","err_address_empty","err_email_empty","err_email_format","err_password_empty","err_passconfirm_mismatch","err_clientid_empty","err_clientid_format","err_clientname_empty","err_roleid_empty","err_roleid_format","err_initialrole_empty","err_initialrole_format","err_clienttype_not_choosen","err_profile_not_choosen","err_description_empty","err_atleast_one_name_chosen","err_redeemby_empty","err_otp_empty","err_otp_must_number","err_uri_empty","err_uri_format","err_email_masking_100","err_masking_name_format","err_masking_name_empty","err_path_empty","err_path_format","err_product_empty","err_product_format","commonText","common_with","common_or","common_add","common_signin_with","common_signup_with","common_change_password","common_new_password","common_close","common_contact_person","common_birth_date","common_products","common_name","common_phone","common_email","common_address","common_photo","common_change","common_save","clinicText","clinic","clinic_name","clinic_city","clinic_address","clinic_order_list","clinic_test_request_date","clinic_order_report","clinic_test_date","clinic_order_date","clinic_birth_date","clinic_redeem_date","clinic_payment_date","clinic_redeem_by","clinic_redeem_on","clinic_payment_on","clinic_agent_price","clinic_price","clinic_redeem_success","clinic_redeem_confirmation","clinic_order_detail","clinic_active","clinic_user_list","clinic_add_user","clinic_regis_sucess","clinic_activation_success","clinic_add_user_success","clinic_delete_user_success","clinic_delete_sucess","clinic_logo","clinic_set_logo","clinic_change_logo","clinic_change_logo_success","clinic_inactive_confirmation","clinic_inactive","textInternationalize","FormatText","keyText","Store","getState","langUsed","includes","slice","keyedText","SendToService","urlParams","onSucceed","window","location","origin","dispatch","aud","stateAccessToken","accessToken","stateKey","clientId","email","phone","localStorage","getItem","roleToSend","hardcodeHeaders","snackFeed","redirect","duration","requestJSON","oReq","XMLHttpRequest","ServiceUrl","setRequestHeader","bodySignature","pairs","split","result","pair","decodeURIComponent","principalType","roleIds","bodyForSignature","send","addEventListener","toString","readyState","responseText","parse","respErr","messageError","errorDescription","setTimeout","clear","testsdate","total","createResponseError","e","desc","onerror","ontimeout","sendImageToService","image","blobFile","Promise","resolve","reject","urlConnection","gatewayRepoFile","blob","Blob","openMenuStructure","label","url","children","urlImage","AppStructures","domain","title","welcome","backgroundLogin","backgroundApp","icon","style","width","height","openMenu","loggedMenu","requestHeader","className","fontSize","menuCreator","roleChoosen","userMenu","item","allMenu","arrMenu","map","filter","child","Executor","nextProps","this","props","setGenericConfigList","setConfigDetail","_setGeneralProductCatalog","successSnackbar","requestAllClient","requestAllUser","getClinicUserRequest","healthKlinikRequest","_setResponse","history","push","_setUserOtpId","setItem","idToken","JwtDecoder","oldRole","newRole","length","_setUserInfo","_setUserSessionInfo","_setPopChooseRole","newMenu","obj","_setMenuCollapseStatus","_setRoleUsed","_setUserMenu","_logout","_setSnackbar","updatedUserInfo","_setResetPasswordCode","_setSystemOtpId","_setGoogleParams","Array","isArray","_setPaxDetail","a","b","x","_setPaxList","_setClinicRecapt","_setPaxProduct","_setCompleteRequest","_clearSecondRequest","_setKlinikList","_setUserDetail","_setUserList","items","_setUserFilteredList","creationDate","_setClientMessagingList","_setClientList","_setRequestList","updateMessageTemplate","messageTemplateId","messagingTemplateId","completeRequests","newArr","city","_setCityList","newCLinicArr","_setClinicUser","clinic_id","_setMyClinic","_setClinicParent","_setParentList","Component","connect","setGoogleParams","setUserList","setUserDetail","setClientList","_setDialog","setClinikUser","_clearThirdRequest","_setClinikDetail","serviceRole","setSystemOtpId","setMyClinic","setGeneralProductCatalog","setClinicsParents","setRequestList","setClientMessagingList","MySnackBar","handleClose","setState","autoHideDuration","Snackbar","onClose","elevation","variant","KlinikHome","_setSecondRequest","_setVerificationCode","useState","voucherId","voucherIdErrorMessage","submitErrorMessage","disabled","useEffect","scrollTo","screen","navigator","xr","innerWidth","innerHeight","orientation","lock","prevState","redirectURI","prop","Grid","container","direction","Hidden","xsDown","sm","justify","alignItems","marginTop","Typography","color","xs","Card","CardContent","marginBottom","FormControl","fullWidth","InputLabel","htmlFor","Input","autoFocus","onChange","event","target","onKeyPress","which","orderId","healthOrderRequest","isError","FormHelperText","Button","onClick","preventDefault","Link","component","useStyles","makeStyles","flexGrow","paper","padding","spacing","textAlign","text","VoltrasHome","classes","userEmail","setstate","backgroundImage","Background","backgroundRepeat","backgroundPositionX","Paper","HomeScreen","isQrShow","_setAppConstant","_setOpenScreen","app","document","Homes","Transition","forwardRef","ref","Slide","AlertDialogSlide","handleDialogClose","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","dialogTitle","DialogContent","DialogContentText","dialogContent","DialogActions","cancelTitle","handleDialogSubmit","fontWeight","submitTitle","regexEmail","regexPhoneId","regexLettersHypenUnderscore","regexUri","regexNumberOnly","regexStringOnly","regexStringOnly2","regexPath","errorMessage","FormValidation","formType","withStyles","labelRoot","fontFamily","inputRoot","options","optionItem","onPick","helperText","handleInputChange","setIndex","freeSolo","clearOnBlur","values","handleFocus","small","React","setValue","setInputValue","handleChange","newValue","listIndex","handleInputValueChange","enterPressed","onFocus","smDown","Autocomplete","size","blurOnSelect","onInputChange","getOptionLabel","option","renderInput","TextField","smUp","InputProps","GlobalForm","showPassword","showConfirm","handleFormChange","valid","password","handleMouseDownPassword","margin","SimpleAutocomplete","handleClient","formLabel","passwordErrorMessage","endAdornment","InputAdornment","IconButton","aria-label","onMouseDown","confirmPasswordErrorMessage","textTransform","newPassword","confirmNewPassword","confirmPassword","submitChangePassword","ChooseRoleCard","onRadioChange","handleChooseRole","marginLeft","RadioGroup","i","FormControlLabel","control","Radio","otpErrorMessage","onLoginErrorMessage","InsertOTPCard","handleCancelOtp","handleResendOtp","handleSubmitOtp","otp","LoginHooks","signIn","useGoogleLogin","onSuccess","res","requestLogin","code","handleGoogleLogin","onFailure","isSignedIn","accessType","responseType","redirectUri","startIcon","src","alt","buttonText","ChooseAppCard","LoginCard","handleEnter","handleClickShowPassword","handleSubmit","handleRegister","handleForgotOpen","setAud","showLogin","setShowLogin","onpopstate","display","flexWrap","GoogleLogin","emailErrorMessage","autoComplete","regexPhone","LoginScreen","provider","fullRequest","serviceMethod","_setRequest","_setServiceCode","_setServiceStatus","challenge","loginRequest","forgotOpen","clientIdErrorMessage","modifiedMenu","oldMenu","resetMenu","language","_setLocale","serviceParams","verificationCheckRequest","CircularProgress","visibility","thickness","ForgotPasswordForm","mdDown","alignSelf","justifySelf","Login","_setServiceMethod","_setServiceCustomHeaders","_dispatchLogout","serviceStatus","bullet","transform","pos","withoutLabel","textField","RegisterScreen","registerRequest","nameErrorMessage","phoneErrorMessage","_setServiceRole","RupiahFormat","nominal","parseInt","toLocaleString","currency","minimumFractionDigits","convertDateyyyymmdd","date","newDate","Date","getFullYear","getMonth","Number","getDate","datetoanydaysafter","any","getTime","isDateBeforeNow","dateNow","converDateDDMMYY","year","month","timeConverter","hour","getHours","minutes","getMinutes","yyyymmddWithParams","now","nextWeek","lastWeek","nextYear","resizeImage","fileLoader","FileReader","canvas","createElement","context","imageObj","Image","appendChild","getContext","match","readAsDataURL","onload","onabort","iw","ih","scale","Math","min","iwScaled","ihScaled","clearRect","drawImage","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","dataURItoBlob","toDataURL","blobUrl","createBlobFromBase64","fileType","URL","createObjectURL","backgroundColor","background","column","List","disablePadding","index","ListItem","noWrap","arrow","idx","field","onClickUpdate","Tooltip","titleTooltipUpdate","IconUpdateCustomize","onClickDelete","titleTooltipDelete","IconDeleteCustomize","align","onClickList","button","Divider","paddingTop","paddingBottom","ExcelFile","ReactExport","ExcelSheet","FilterDesktop","handleSubmitFilter","handleDateChange","marginRight","Checkbox","checked","utils","DateFnsUtils","clearable","format","KeyboardButtonProps","Paid","finish","New","filename","element","dataSet","dataset","from","to","columnPush","order","fromdate","todate","unpaid","simpleTable","currentList","listLengthById","tableColumns","simpleList","payment","rowTable","office","user_info","officeCode","testdate","products","date_of_birth","toUpperCase","klinikname","klinik","redeem_on","redeem","redeem_by","tableCreator","dataToProcess","rawColumns","wch","dataArr","ySteps","columns","datasetCreator","infos","handleRowClick","rowData","ID","healthOrderDetailRequest","payment_from","payment_to","test_from","test_to","redeem_from","redeem_to","paymentParam","testParam","redeemParam","statusParam","nameParam","isParams","onRowClick","DatePicker","InputLabelProps","shrink","paddingLeft","paddingRight","borderRadius","orderList","PaxList","_setFilteredList","setFilteredList","_setServiceParams","PaxListScreen","closeButton","right","top","grey","other","disableTypography","fromdateErrorMessage","originDate","minDate","maxValidDate","reason","reasonErrorMessage","order_id","item_id","new_clinic_data","input_date","date_off","vendor_close","day_off","day","n","getDay","newClinic","new_date_off","new_day_off","person_product","product_name","new_product_list","valid_until","handleCancel","cityClinicRequest","handleSave","rescheduleRequest","handlePick","cityRequest","handlePickClinic","handleInputChangeClinic","maxWidth","scroll","LinearProgress","dividers","lg","autoOk","maxDate","disablePast","placeholder","multiline","notShrink","focused","regexNumberLetter","_setServiceStart","_setServiceEnd","openRedeemDialog","fullName","redeemBy","member","memberStatus","clickedItem","fileSelected","clickedFile","rescheduleDialog","redeemArr","errorArr","showAutoId","itemToState","globalInfo","contact","handleInputRedeem","person_name","memberToSubmit","itemError","kinship","person_id_name","person_id_no","person_id_type","err_message","recurseRedeemSubmit","urlParam","submitRedeem","then","newMember","handleKtpOpen","handleRedeemClose","oldArr","handleSelectPax","objRedeem","objErr","openReschedule","id_type","as","selfName","id_no","handleInputParentChange","getParentRequest","oldErr","handlePickParent","pick","oldItems","handleParentFocus","handlePickType","RescheduleDialog","handleOpen","CardMedia","person_id_image","person_id_nameErrorMessage","typo","FormHelperTextProps","person_date_of_birth","undefined","QrScreen","handleQrShow","handleScan","next","basicInformation","_serviceEnd","handleError","err","_serviceStart","md","onError","onScan","resolution","facingMode","Qr","CreateUserForm","form","setFormFocus","formFocus","setShowPassword","setShowConfirmPassword","showConfirmPassword","userType","setUserType","types","createUserTypes","onBlur","select","MenuItem","AddUserClient","showAddUserClient","setShowAddUserClient","chooseClientList","handleResource","handleAddClientRole","fullmd","assignedUserRole","ListItemText","resourcesAllowedList","roleIdErrorMessage","resourcelist","FormLabel","FormGroup","roleId","CardActions","userDetail","userFiltered","resource","profile","submitNotError","setForm","newResourcelist","clientRoles","clientName","newResource","filteredResource","roleDescription","clientGroupId","emailVerified","phoneVerified","header_name","header_email","header_phone","MaterialTableCRUD","updatedata","deletedata","rowClicked","confirmdeletetext","handleDelete","oldData","localization","editRow","deleteText","actions","tooltip","editable","onRowDelete","actionsColumnIndex","search","rowStyle","UpdateUserDialog","roleList","setRoleList","available","setAvailable","newRoleList","setNewRoleList","clientDetail","dataToUpdate","client","newList","propRoleList","insertAvailable","handleAddItemRole","handleRemoveItemRole","handleRemoveRole","dense","ListItemIcon","edge","saveRoleList","concat","dataToSave","join","AddClientDialog","handleAddClient","clientData","clientDataToFilter","userRole","userId","BasicUserInfomation","capture","setCapture","basicInfo","setBasicInfo","verified","gender","address","picture","handleOpenEdit","fontStyle","href","rel","Avatar","borderWidth","borderColor","borderStyle","styles","rootForm","rootUpload","asterisk","addButton","inputUpload","setData","images","noValidate","accept","fileReader","files","multiple","urlDestinationErrorMessage","completeRequest","saveDisabled","setSaveDisabled","setClientData","addClientOpen","openEditBasicInfo","saveRequest","setSaveRequest","updateUser","setUpdateUser","userIsId","handleOpenEditBasic","userRoleToUpdate","dataToPush","addClientRequest","sendUpdateRequest","emailVerifiedEdit","phoneVerifiedEdit","attributeToUpdate","emailEdit","phoneEdit","genderEdit","addressEdit","profileEdit","nameEdit","uuid","catch","backToTable","ConfirmationDialogRaw","userName","valueProp","handleChoose","header","content","radioGroupRef","useRef","disableBackdropClick","disableEscapeKeyDown","onEntering","current","focus","setOpen","requestDeleteUser","setRequestDeleteUser","setUserName","lookup","setValues","states","setStates","isverified","oldVal","originURIs","roleDetails","UserDetail","newData","indexOf","isForceDelete","handleAddUser","notComplete","addClinicUserRequest","LogoPreviewDialog","imgPreview","setImgPreview","setImageFile","handleSaveImage","validation","setValidation","ownPreview","setOwnPreview","changeDisabled","setChangeDisabled","errorSnackbar","existingList","availableList","availTitle","existingTitle","datePicker","timePicker","dialogWidth","availableItemInState","setAvailableItemInState","existingListInState","setExistingListInState","newExistingListInState","setNewExistingListInState","openMonday","closeMonday","openTuesday","closeTuesday","openWednesday","closeWednesday","openThursday","closeThursday","openFriday","closeFriday","openSaturday","closeSaturday","openSunday","closeSunday","operational","setOperational","days","exisListToState","clinicOpen","prod","dayList","filteredAvail","el","handleAddItemExisting","opDay","opOpen","opClose","opText","handleRemoveItemExisting","removeDay","dayId","handleRemoveExisting","itemToSave","handleDayHourChange","openattr","textattr","TimePicker","ampm","paxlistStatus","setClinic","setClinicUser","clinicProduct","setCLinicProduct","imageFile","imageType","setImageType","popUpPreview","setPopUpPreview","userToDelete","setUserToDelete","openProductEdit","setOpenProductEdit","openDaysEdit","setOpenDaysEdit","openDateEdit","setOpenDateEdit","daysAvailable","close","clinicClickedId","clinicToSet","logo_url","users","newUsers","rolesStr","roles","availableProducts","available_products_id","productList","handleOpenAddClient","handleOpenLogoPreview","handleOpenProductEdit","handleOpenDaysEdit","handleOpenDateEdit","AddUserDialog","clinicInfo","addClinicLogoRequest","userid","deleteRequest","oldVendorClose","valueDays","arrOffDay","creatorEmail","creation","paging","FilterHead","selectedValue","setSelectedValue","setFilteredData","_setClinicDetail","setColumns","dataUpdate","setDataUpdate","orderedData","handleUpdate","getClinicRequest","handleRowClicked","filteredData","FilterForm","parentProps","regisClinicRequest","previousState","parent_id","clinicNameErrorMessage","addressErrorMessage","clinicName","parentClinic","showAdd","setShowAdd","addRoleList","roleDescriptionErrorMessage","objRole","UpdateBasicInfo","dataField","AddUrlOriginDialog","originUris","redirectUris","uri","redirectUrisErrorMessage","originUrisErrorMessage","disabledButton","maxHeight","table","minWidth","rootToolbar","TableCustomize","setDataSearch","setFilterValue","page","setPage","rowsPerPage","setRowsPerPage","dataSearch","filterValue","emptyRows","handleChangePage","newPage","handleChangeRowsPerPage","handleSearch","findDuplicateClientId","arrayOfObj","array","mapItem","Toolbar","filterClientId","Table","TableHead","TableRow","TableCell","TableBody","item1","index1","handleEditOpen","handleGetData","cursor","colSpan","pagination","TableFooter","TablePagination","rowsPerPageOptions","count","SelectProps","inputProps","native","onChangePage","onChangeRowsPerPage","ActionsComponent","TablePaginationActions","useStyles1","flexShrink","useTheme","ceil","max","MUIDialogTitle","dataToUpdt","messagingTemplateCode","messagingTemplateLang","subjectTemplate","rows","contentTemplate","_setClientMessagingEdit","setClientMessagingEdit","originUri","setOriginUri","setRedirectUri","basicInfoReq","setBasicInfoReq","messagingTemplate","setMessagingTemplate","messageToUpdate","openBasicInfo","openOriginOri","openRedirectOri","openTemplateMessage","disabledBtn","setDisabledBtn","arrayObjOrigin","arrayRedirectUri","basicData","redirectURIs","edit","clientSecret","initialUserRole","emailSender","emailSenderMaskingName","clientDomain","setUpdateMessage","messagingTemp","setMessagingTemp","handleOpenEditCLient","handleOpenAddOriginUrl","handleOpenAddRedirectUrl","handleOpenEditBasicInfo","handleOpenEditMessageTemplate","onRowUpdate","handleDeleteClientRole","splice","requestMessagetTemp","lineHeight","emailSenderErrorMessage","emailSenderMaskingNameErrorMessage","EditMessagingTemplate","prevVal","ClientDetail","AddCLientRole","setShowAddRoles","clientType","clientProfile","helpTextOrigin","setHelpTextOrigin","helpTextRedirect","setHelpTextRedirect","required","clientNameErrorMessage","clientDomainErrorMessage","initialRoleErrorMessage","initialRole","showAddRoles","clientGroup","setIsRoleAdded","submitError","setSubmitError","dataClient","dataRoles","pathErrorMessage","path","boolean","defaultRoleErrorMessage","isNeedLoginErrorMessage","isNeedLog","isNeedLogin","urlDestination","disableButton","defaultRole","setDataRoles","priorityValue","isPriortyValueUpdate","priorityValueErrorMessage","openDialogRequest","editDialogRequest","handleOpenDialogRequest","filterById","isPriorityValueUpdate","requestSpecificationId","requestUpdate","dateto","totalPax","agentPrice","price","submitFormRequest","tableColumn","newColumn","payment_on","nta","ntsa","agentprice","totalAgentPrice","reduce","doneTabel","font","bold","alignment","horizontal","newColumns","handleExport","submitXlsForm","submitForm","_setThirdRequest","setThirdRequest","clinicname","productname","paxprice","fixedTable","productParam","clinicParam","handlePickProduct","EditDialog","editItem","setName","setKey","img","setImg","setAction","handleEditClose","newObj","handleNewItem","basic","setBasic","editOpen","setEditOpen","setEditItem","handleEdit","xl","divider","ListItemSecondaryAction","newBasic","itemBasic","configList","setCompleteRequest","editConfig","setEditConfig","modalConfigDetail","setModalConfigDetail","handleChangeConfig","handleDetailConfig","handleCloseModal","handleSaveConfiguration","handleEditConfiguration","gutterBottom","on","by","rowsMax","openModalCreate","setOpenModalCreate","openModalEdit","setOpenModalEdit","createProduct","setCreateProduct","updateProduct","setUpdateProduct","handeChangeProductUpdate","pricing","discount_nta","discount_price","validity_period","handleOpenCreateCatalog","handleChangeCreateCatalog","handleChangeSearch","condition","RegExp","justifyContent","placement","product_nameErrorMessage","priceErrorMessage","ntaErrorMessage","ntsaErrorMessage","discount_priceErrorMessage","discount_ntaErrorMessage","inputVariant","handleChangeDate","useSpring","opacity","in","div","Collapse","StyledTreeItem","iconContainer","group","borderLeft","fade","TreeItem","ClinicScopeTree","nodeId","MinusSquare","SvgIcon","d","PlusSquare","CloseSquare","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","numOr0","isNaN","createClinicSummaryTable","clinic_product","nextColumns","allColumns","allRows","allDatasetRows","objItems","cp","newItems","newObjItems","row","datasetRow","sum","datasetColumn","createBiofarmaSummaryTable","detail_per_clinic","total_per_product","default_row_per_clinic","per_clinic","p","patient","total_patient","total_nta","row_total","total_pax_arr","total_nta_arr","sum_patient","sum_nta","firstRow","j","objDataSet","newRow","rowItem","DialogDetail","detailData","mapDispatchToProps","table_component","table_biofarma","available_product","clinic_product_id","request_date_obj","openDetail","setOpenDetail","setDetailData","handleOpenDetail","TableContainer","g","num","Routing","exact","Home","Register","PaxDetail","QRScreen","VCreateUser","VUserList","KCreateAdmin","KAdminList","KSetting","KClinicList","KClinicRegistration","VClientList","VRequestList","VCreateClient","clinicReport","KOrderReportAll","UserProfile","GenericJson","CatalogProduct","ClinicScope","AllOrderSummary","RedeemOrderSummary","handleAction","lang","actionType","actionRequest","anchorOrigin","vertical","OtpDialog","maxLength","NavBarRightMenu","handleDrawerOpen","mainHidden","handleDrawerClose","handleDrawerClick","menuItem","windowscreen","_setMenuClickUrl","entries","_toggleCollapseMenu","openLogout","handleClickOpen","handleMainClick","handleLogout","dialogOpen","handleClick","loginStyle","backgroundSize","backgroundAttachment","left","defaultStyle","CssBaseline","AppBar","clsx","appBar","appBarShift","menuButton","hide","contentShift","Drawer","drawer","anchor","drawerPaper","Chip","childItem","Navigation","setMenuClickUrl","toggleCollapseMenu","transition","transitions","create","easing","sharp","leavingScreen","easeOut","enteringScreen","drawerHeader","mixins","toolbar","breakpoints","up","App","locationHref","ServiceExecutor","SnackBarError","withRouter","Boolean","hostname","ReactDOM","render","ThemeProvider","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8005dd7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backoffice02.246215a8.jpg\";","\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nexport  const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#08ff00',\r\n      main: '#00f100',\r\n      dark: '#00cb00',\r\n      contrastText: '#000000',\r\n    },\r\n    secondary: {\r\n      light: '#637bfe',\r\n      main: '#3d5afe',\r\n      dark: '#2a3eb1',\r\n      contrastText: '#000000',\r\n    },\r\n    error: {\r\n      light: '#ef9a9a',\r\n      main: '#f06461',\r\n      dark: '#b71c1c',\r\n      contrastText: '#000000',\r\n    }\r\n  },\r\n});\r\n","\r\nconst initialstate = {\r\n  locale: '',\r\n  serviceStart: false,\r\n  openScreen: \"\",\r\n  menuClickUrl: '',\r\n  appConstant: null,\r\n  roleAuth: {\r\n    root: 'AUTHENTICATION_ROOT',\r\n    admin: 'AUTHENTICATION_ADMIN',\r\n    endUser: 'AUTHENTICATION_USER'\r\n  },\r\n  popChooseRole: false,\r\n  // googleParams: null,\r\n  googleParams: {\r\n    access_type: \"offline\",\r\n    scope: \"https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email\",\r\n    response_type: \"code\",\r\n    prompt: \"consent\",\r\n    client_id: \"321981158486-ac5nqdqbq0hjla14a299ln736s2kuj14.apps.googleusercontent.com\"\r\n  },\r\n  otpID: '',\r\n}\r\n\r\nconst system = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case 'SERVICE_START': return { ...state, serviceStart: true }\r\n    case 'SERVICE_END': return { ...state, serviceStart: false }\r\n    case 'SET_SNACKBAR_MESSAGE': return { ...state, snackbarMsg: action.val }\r\n    case 'SET_OPEN_SCREEN': return { ...state, openScreen: action.val }\r\n    case 'SET_MENU_CLICK_URL': return { ...state, menuClickUrl: action.val }\r\n    case 'SET_APP_CONSTANT': return { ...state, appConstant: action.val }\r\n    case 'SET_LOCALE': return { ...state, locale: action.val }\r\n    case 'POP_CHOOSE_ROLE': return { ...state, popChooseRole: action.val }\r\n    case 'SET_GOOGLE_PARAMS': return { ...state, googleParams: action.val }\r\n    case 'SET_SYSTEM_OTP_ID': return { ...state, otpID: action.val }\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        serviceStart: false,\r\n        menuClickUrl: '',\r\n        roleAuth: {\r\n          root: 'AUTHENTICATION_ROOT',\r\n          admin: 'AUTHENTICATION_ADMIN',\r\n          endUser: 'AUTHENTICATION_USER'\r\n        },\r\n        popChooseRole: false,\r\n        otpID: '',\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default system\r\n","\r\n// let domain = window.location.origin\r\n\r\nconst initialstate = {\r\n  file: null,\r\n  request: {},\r\n  secondRequest: false,\r\n  thirdRequest: false,\r\n  status: \"inactive\",\r\n  serviceCode: null,\r\n  method: \"POST\",\r\n  params: \"\",\r\n  customHeaders: null,\r\n  role: null,\r\n  test: false,\r\n  headersContent: {\r\n    // \"connection\": \"keep-alive\",\r\n    // \"gadget-id\": \"mygadgetId\",\r\n    // \"role\": \"end-user\",\r\n    // \"client-id\": \"voltras-health\",\r\n    // \"content-type\": \"application/json\",\r\n    // \"accept\": \"*/*\",\r\n    // \"origin\": `${domain}`,\r\n    // \"accept-encoding\": \"gzip, deflate\",\r\n  },\r\n}\r\n\r\nconst service = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case 'SET_FILE':\r\n      return { ...state, file: action.val }\r\n    case 'SET_SERVICE_CODE':\r\n      return { ...state, serviceCode: action.val }\r\n    case 'SET_SERVICE_STATUS':\r\n      return { ...state, status: action.val }\r\n    case 'SET_SERVICE_METHOD':\r\n      return { ...state, method: action.val }\r\n    case 'SET_SERVICE_REQUEST':\r\n      return { ...state, request: action.val }\r\n    case 'SET_SERVICE_PARAMS':\r\n      return { ...state, params: action.val }\r\n    case 'SET_SERVICE_CUSTOM_HEADERS':\r\n      return { ...state, customHeaders: action.val }\r\n    case 'SET_SERVICE_ROLE':\r\n      return { ...state, role: action.val }\r\n    case 'SET_HEADERS_CONTENT':\r\n      return { ...state, headersContent: { ...state.headersContent, ...action.val } }\r\n    case 'SET_SECOND_REQUEST':\r\n      return { ...state, secondRequest: action.val, }\r\n    case 'CLEAR_SECOND_REQUEST':\r\n      return { ...state, secondRequest: false }\r\n    case 'SET_THIRD_REQUEST':\r\n      return { ...state, thirdRequest: action.val, }\r\n    case 'CLEAR_THIRD_REQUEST':\r\n      return { ...state, thirdRequest: false }\r\n    case 'SET_TEST':\r\n      return { ...state, test: action.val, }\r\n    case 'RESET_SERVICE':\r\n      // reset service except second and third request\r\n      return {\r\n        ...state,\r\n        \"request\": {},\r\n        \"status\": \"inactive\",\r\n        \"serviceCode\": null,\r\n        \"method\": \"POST\",\r\n        \"params\": \"\",\r\n        'customHeaders': null,\r\n        'role': null,\r\n        \"test\": false,\r\n        'headersContent': {},\r\n      }\r\n    case 'LOGOUT':\r\n      return initialstate\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default service\r\n\r\n\r\n\r\n\r\n\r\n","\r\nconst initialstate = {\r\n  response:{},\r\n}\r\n\r\nconst response = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case 'SET_RESPONSE':\r\n      return {\r\n        ...state,\r\n        response: action.val\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default response\r\n","\r\nconst initialstate = {\r\n  info: {},\r\n  sessionInfo: {},\r\n  otpId: '',\r\n  roleUsed: '',\r\n  resetPasswordCode: '',\r\n  verificationCode: '',\r\n}\r\n\r\nconst userInfo = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case 'SET_USER_INFO': return { ...state, info: { ...state.info, ...action.val } }\r\n    case 'SET_USER_SESSION_INFO': return { ...state, sessionInfo: action.val }\r\n    case 'SET_USER_OTP_ID': return { ...state, otpId: action.val }\r\n    case 'SET_ROLE_USED': return { ...state, roleUsed: action.val }\r\n    case 'RESET_PASSWORD_CODE': return { ...state, resetPasswordCode: action.val }\r\n    case 'SET_VERIFICATION_CODE': return { ...state, verificationCode: action.val }\r\n    case 'LOGOUT': return initialstate\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default userInfo\r\n","\r\nconst initialstate = {\r\n  menuItems: [],\r\n}\r\n\r\nconst menu = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case 'SET_USER_MENU':\r\n      return {\r\n        ...state,\r\n        menuItems: action.val\r\n      }\r\n    case 'SET_MENU_COLLAPSE_STATUS':\r\n      return {\r\n        ...state,\r\n        ...action.val\r\n      }\r\n    case 'TOGGLE_COLLAPSE_MENU':\r\n      return {\r\n        ...state,\r\n        [action.val.name]: action.val.value\r\n      }\r\n    case 'LOGOUT':\r\n      return initialstate\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default menu\r\n","\r\nconst initialstate = {\r\n  list: [],\r\n  detail: {},\r\n  product: [],\r\n  filteredList: [],\r\n  klinikList: [],\r\n  clinicDetail: {},\r\n  cityList: [],\r\n  clinicUser: null,\r\n  clinicRecapt: [],\r\n  myClinic: null,\r\n  clinic_parents: [],\r\n  parentList: [],\r\n  clinic_recapt_logistic: []\r\n}\r\n\r\nconst paxList = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case 'SET_PAX_LIST':\r\n      return {\r\n        ...state,\r\n        list: action.val\r\n      }\r\n    case 'SET_PAX_DETAIL':\r\n      return {\r\n        ...state,\r\n        detail: action.val\r\n      }\r\n    case 'SET_PAX_PRODUCT':\r\n      return {\r\n        ...state,\r\n        product: action.val\r\n      }\r\n    case 'SET_KLINIK_LIST':\r\n      return {\r\n        ...state,\r\n        klinikList: action.val\r\n      }\r\n    case 'SET_CLINIC_DETAIL':\r\n      return {\r\n        ...state,\r\n        clinicDetail: action.val\r\n      }\r\n    case 'SET_CLINIC_USER':\r\n      return {\r\n        ...state,\r\n        clinicUser: action.val\r\n      }\r\n    case 'SET_CLINIC_RECAPT':\r\n      return {\r\n        ...state,\r\n        clinicRecapt: action.val\r\n      }\r\n    case 'SET_FILTERED_LIST':\r\n      return {\r\n        ...state,\r\n        filteredList: action.val\r\n      }\r\n    case 'SET_CITY_LIST':\r\n      return {\r\n        ...state,\r\n        cityList: action.val\r\n      }\r\n    case 'SET_MY_CLINIC':\r\n      return { ...state, myClinic: action.val }\r\n    case 'SET_CLINIC_PARENTS':\r\n      return { ...state, clinic_parents: action.val }\r\n    case 'SET_PARENT_LIST':\r\n      return { ...state, parentList: action.val }\r\n    case 'SET_CLINIC_RECAPT_LOGISTIC':\r\n      return { ...state, clinic_recapt_logistic: action.val }\r\n    case 'LOGOUT':\r\n      return initialstate\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default paxList\r\n","\r\nconst initialstate = {\r\n  snackBar: {\r\n    open: false,\r\n    severity: \"info\",\r\n    message: \"\",\r\n    position: 'bottom-center',\r\n    action: \"\",\r\n    actionLabel: '',\r\n  },\r\n  dialog: {\r\n    open: false,\r\n    message: \"\"\r\n  },\r\n  stepper: {\r\n    open: false,\r\n    step: 0,\r\n    message: \"\"\r\n  },\r\n}\r\n\r\nconst feedback = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case \"SET_SNACKBAR\":\r\n      return {\r\n        ...state,\r\n        snackBar: action.val\r\n      }\r\n    case \"SET_DIALOG\":\r\n      return {\r\n        ...state,\r\n        dialog: action.val\r\n      }\r\n    case 'LOGOUT':\r\n      return initialstate\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default feedback","\r\nconst INITIAL_STATE = {\r\n  autocomplete: null,\r\n  inputValue: \"\",\r\n  klinikList: [],\r\n  klinikValue: {},\r\n  klinikInputValue: \"\"\r\n};\r\n\r\nconst autocomplete = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'SET_AUTOCOMPLETE_VALUE':\r\n      return {\r\n        ...state,\r\n        autocomplete: action.val\r\n      }\r\n    case 'SET_INPUT_VALUE':\r\n      return {\r\n        ...state,\r\n        inputValue: action.val\r\n      }\r\n    case 'SET_KLINIK_LIST_RESPONSE':\r\n      return {\r\n        ...state,\r\n        klinikList: action.val\r\n      }\r\n    case 'SET_KLINIK_VALUE':\r\n      return {\r\n        ...state,\r\n        klinikValue: action.val\r\n      }\r\n    case 'SET_KLINIK_INPUT_VALUE':\r\n      return {\r\n        ...state,\r\n        klinikInputValue: action.val\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default autocomplete;\r\n\r\n","\r\nconst initialstate = {\r\n  list: [],\r\n  detail: {},\r\n  filteredList:[]\r\n}\r\n\r\nconst UserList = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case 'SET_USER_LIST':\r\n      return {\r\n        ...state,\r\n        list: action.val\r\n      }\r\n    case 'SET_USER_DETAIL':\r\n      return {\r\n        ...state,\r\n        detail: action.val\r\n      }\r\n    case 'SET_USER_FILTERED_LIST':\r\n      return {\r\n        ...state,\r\n        filteredList: action.val\r\n      }\r\n    case 'LOGOUT':\r\n      return initialstate\r\n      \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default UserList\r\n","\r\nconst initialstate = {\r\n  list: [],\r\n  detail: {},\r\n  filteredList: [],\r\n  messagingList: [],\r\n  messagingEdit: {}\r\n}\r\n\r\nconst ClientList = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case 'SET_CLIENT_LIST':\r\n      return {\r\n        ...state,\r\n        list: action.val\r\n      }\r\n    case 'SET_CLIENT_DETAIL':\r\n      return {\r\n        ...state,\r\n        detail: action.val\r\n      }\r\n    case 'SET_CLIENT_FILTERED_LIST':\r\n      return {\r\n        ...state,\r\n        filteredList: action.val\r\n      }\r\n    case 'SET_CLIENT_MESSAGE_LIST':\r\n      return {\r\n        ...state,\r\n        messagingList: action.val\r\n      }\r\n    case'SET_CLIENT_MESSAGE_EDIT':\r\n      return {\r\n        ...state,\r\n        messagingEdit:action.val\r\n      }\r\n    case 'LOGOUT':\r\n      return initialstate\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default ClientList\r\n","const INITIAL_STATE = {\r\n    configurationList: [],\r\n    productCatalogList:[],\r\n    configDetail: null,\r\n    configDetailModal: false\r\n}\r\n\r\nconst genericConfiguration = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'SET_GENERIC_CONFIG_LIST':\r\n            return {\r\n                ...state,\r\n                configurationList: action.data\r\n            }\r\n        case 'SET_CONFIG_DETAIL':\r\n            return {\r\n                ...state,\r\n                configDetail: action.data\r\n            }\r\n        case 'SET_CONFIG_DETAIL_MODAL':\r\n            return {\r\n                ...state,\r\n                configDetailModal: action.val\r\n            }\r\n        case \"SET_GENERAL_PRODUCT_CATALOG\":\r\n            return {\r\n                ...state,\r\n                productCatalogList: action.val\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default genericConfiguration;","const initialstate = {\r\n    list: [],\r\n    detail: {},\r\n    filteredList: []\r\n  }\r\n  \r\n  const RequestList = (state = initialstate, action) => {\r\n    switch (action.type) {\r\n      case 'SET_REQUEST_LIST':\r\n        return {\r\n          ...state,\r\n          list: action.val\r\n        }\r\n      case 'SET_REQUEST_DETAIL':\r\n        return {\r\n          ...state,\r\n          detail: action.val\r\n        }\r\n      case 'SET_CLIENT_FILTERED_LIST':\r\n        return {\r\n          ...state,\r\n          filteredList: action.val\r\n        }\r\n      case 'LOGOUT':\r\n        return initialstate\r\n  \r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default RequestList","\r\nimport { combineReducers } from 'redux'\r\nimport system from './SystemReducer'\r\nimport service from './ServiceReducer'\r\nimport response from './ResponseReducer'\r\nimport userInfo from './UserInfoReducer'\r\nimport menu from './MenuReducer';\r\nimport paxList from './PaxListReducers'\r\nimport feedback from './FeedbackReducer'\r\nimport autocomplete from './AutoCompleteReducer'\r\nimport userList from './UserListReducers'\r\nimport clientList from './ClientListReducer'\r\nimport genericConfiguration from './GenericConfigurationReducer';\r\nimport requestList from './RequestListReducer'\r\n\r\nconst appReducers = combineReducers({\r\n  autocomplete,\r\n  clientList,\r\n  feedback,\r\n  menu,\r\n  paxList,\r\n  response,\r\n  system,\r\n  service,\r\n  userInfo,\r\n  userList,\r\n  genericConfiguration,\r\n  requestList\r\n})\r\n\r\nexport default appReducers","\r\nimport { createStore } from 'redux';\r\nimport appReducers from './module/CombineReducers'\r\n\r\nconst store = createStore(appReducers)\r\n\r\nexport default store","\r\nexport const setServiceRequest = val => {\r\n  return {\r\n    type: 'SET_SERVICE_REQUEST',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setServiceStatus = val => {\r\n  return {\r\n    type: 'SET_SERVICE_STATUS',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setServiceCode = val => {\r\n  return {\r\n    type: 'SET_SERVICE_CODE',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setServiceMethod = val => {\r\n  return {\r\n    type: 'SET_SERVICE_METHOD',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setServiceParams = val => {\r\n  return {\r\n    type: 'SET_SERVICE_PARAMS',\r\n    val,\r\n  }\r\n}\r\n\r\nexport const setServiceCustomHeaders = val => {\r\n  return {\r\n    type: 'SET_SERVICE_CUSTOM_HEADERS',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setHeadersContent = val => {\r\n  return {\r\n    type: 'SET_HEADERS_CONTENT',\r\n    val\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const setServiceRole = val => {\r\n  return {\r\n    type: 'SET_SERVICE_ROLE',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setServiceTest = val => {\r\n  return {\r\n    type: 'SET_TEST',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setSecondRequest = val => ({ type: 'SET_SECOND_REQUEST', val })\r\nexport const clearSecondRequest = () => ({ type: 'CLEAR_SECOND_REQUEST' })\r\nexport const setThirdRequest = val => ({ type: 'SET_THIRD_REQUEST', val })\r\nexport const clearThirdRequest = () => ({ type: 'CLEAR_THIRD_REQUEST' })\r\n\r\nexport const resetService = () => {\r\n  return {\r\n    type: 'RESET_SERVICE',\r\n  }\r\n}","\r\nexport const setResponse = val => {\r\n  return {\r\n    type: 'SET_RESPONSE',\r\n    val\r\n  }\r\n}\r\n","\r\nexport const setUserInfo = val => { return { type: \"SET_USER_INFO\", val } }\r\nexport const setUserSessionInfo = val => { return { type: \"SET_USER_SESSION_INFO\", val } }\r\nexport const setUserOtpId = val => { return { type: 'SET_USER_OTP_ID', val } }\r\nexport const setRoleUsed = val => { return { type: 'SET_ROLE_USED', val } }\r\nexport const setResetPasswordCode = val => { return { type: 'RESET_PASSWORD_CODE', val } }\r\nexport const setVerificationCode = val => { return { type: 'SET_VERIFICATION_CODE', val } }\r\n","\r\nexport const setUserMenu = val => {\r\n  return {\r\n    type: \"SET_USER_MENU\",\r\n    val\r\n  }\r\n}\r\n\r\nexport const setMenuCollapseStatus = val => {\r\n  return {\r\n    type:\"SET_MENU_COLLAPSE_STATUS\",\r\n    val\r\n  }\r\n}\r\n\r\nexport const toggleCollapseMenu = val => {\r\n  return {\r\n    type:\"TOGGLE_COLLAPSE_MENU\",\r\n    val\r\n  }\r\n}\r\n","\r\nexport const setPaxList = val => {\r\n  return {\r\n    type: \"SET_PAX_LIST\",\r\n    val\r\n  }\r\n}\r\n\r\nexport const setPaxDetail = val => {\r\n  return {\r\n    type: \"SET_PAX_DETAIL\",\r\n    val\r\n  }\r\n}\r\n\r\nexport const setPaxProduct = val => {\r\n  return {\r\n    type: \"SET_PAX_PRODUCT\",\r\n    val\r\n  }\r\n}\r\n\r\nexport const setFilteredList = val => {\r\n  return {\r\n    type: 'SET_FILTERED_LIST',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setKlinikList = val => {\r\n  return {\r\n    type: 'SET_KLINIK_LIST',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setClinikDetail = val => {\r\n  return {\r\n    type: 'SET_CLINIC_DETAIL',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setClinicRecapt = val => {\r\n  return {\r\n    type: 'SET_CLINIC_RECAPT',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setClinikUser = val => {\r\n  return {\r\n    type: 'SET_CLINIC_USER',\r\n    val\r\n  }\r\n}\r\n\r\n\r\nexport const setCityList = val => {\r\n  return {\r\n    type: 'SET_CITY_LIST',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setMyClinic = val => { return { type: 'SET_MY_CLINIC', val } }\r\nexport const setClinicsParents = val => { return { type: 'SET_CLINIC_PARENTS', val } }\r\nexport const setParentList = val => { return { type: 'SET_PARENT_LIST', val } }\r\nexport const setClinicRecaptLogistic = val => { return { type: 'SET_CLINIC_RECAPT_LOGISTIC', val } }\r\n","\r\nexport const setSnackbar = val => {\r\n  return {\r\n    type: \"SET_SNACKBAR\",\r\n    val\r\n  }\r\n}\r\n\r\nexport const setDialog = val => {\r\n  return {\r\n    type: \"SET_DIALOG\",\r\n    val\r\n  }\r\n}","\r\nexport const serviceStart = () => { return { type: 'SERVICE_START' } }\r\nexport const serviceEnd = () => { return { type: 'SERVICE_END' } }\r\nexport const setSnackbarMessage = val => { return { type: 'SET_SNACKBAR_MESSAGE', val } }\r\nexport const setOpenScreen = val => { return { type: \"SET_OPEN_SCREEN\", val } }\r\nexport const dispatchLogout = () => { return { type: \"LOGOUT\" } }\r\nexport const setMenuClickUrl = val => { return { type: 'SET_MENU_CLICK_URL', val } }\r\nexport const setAppConstant = val => { return { type: 'SET_APP_CONSTANT', val } }\r\nexport const setPopChooseRole = val => { return { type: 'POP_CHOOSE_ROLE', val } }\r\nexport const setLocale = val => { return { type: 'SET_LOCALE', val } }\r\nexport const setGoogleParams = val => { return { type: 'SET_GOOGLE_PARAMS', val } }\r\nexport const setSystemOtpId = val => { return { type: 'SET_SYSTEM_OTP_ID', val } }\r\n","\r\nexport const setUserList = val =>{\r\n  return {\r\n    type: 'SET_USER_LIST',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setUserDetail = val => {\r\n  return {\r\n    type: 'SET_USER_DETAIL',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setUserFilteredList = val => {\r\n  return {\r\n    type: 'SET_USER_FILTERED_LIST',\r\n    val\r\n  }\r\n}\r\n","export const setGenericConfigList = (data) => ({\r\n    type: 'SET_GENERIC_CONFIG_LIST',\r\n    data\r\n});\r\n\r\nexport const setConfigDetail = (data) => ({\r\n    type: 'SET_CONFIG_DETAIL',\r\n    data\r\n});\r\n\r\nexport const setConfigDetailModal = (val) => ({\r\n    type: 'SET_CONFIG_DETAIL_MODAL',\r\n    val\r\n});\r\n\r\nexport const setGeneralProductCatalog = val =>({\r\n    type:'SET_GENERAL_PRODUCT_CATALOG',\r\n    val\r\n})","\r\nimport development from './development.json'\r\nimport production from './production.json'\r\n\r\nconst appVersion = '1.0.3'\r\n\r\nconsole.log(\"ENVIRONMENT: \", process.env)\r\n\r\nlet Config = {}\r\nConfig = production\r\n\r\nif (process.env.NODE_ENV === 'development') Config = development\r\nConfig.appVersion = appVersion\r\n\r\nexport default Config\r\n","\r\nimport Config from \"../config\"\r\n\r\n// let environtment = 'LIVE'\r\n// let environtment = 'DEVELOPMENT'\r\n\r\n// console.log(Config)\r\n// export const urlImage = 'https://repo.voltras.net'   // 'http://203.196.90.105:8080' // 'https://repo.voltras.net\r\n\r\n// let newGatewayLive = 'https:/.voltras.net/security'\r\n// let gatewayBOLive = 'http://203.196.90.104:31996'\r\n\r\n// let urlNewGateway = environtment === 'DEVELOPMENT' ? \"http://172.16.10.51:30397\" : newGatewayLive\r\n// let urlGatewayBO = environtment === 'DEVELOPMENT' ? 'http://172.16.10.51:31996' : gatewayBOLive\r\n// let urlService = environtment === 'DEVELOPMENT' ? \"http://172.16.10.93:8001\" : newGatewayLive\r\n\r\nlet gatewaySecurity = Config.gatewaySecurity\r\nlet gatewayBackOffice = Config.gatewayBackOffice\r\n// let gatewayHealth = Config.gatewayMsHealth\r\n\r\nconst serviceUrl = serviceCode => {\r\n  switch (serviceCode) {\r\n    case \"login\":\r\n      return gatewaySecurity + \"/login\"  \r\n\r\n    case \"logout\":\r\n      return gatewaySecurity + \"/logout\"\r\n\r\n    case \"register\":\r\n      return gatewaySecurity + \"/register\"  \r\n\r\n    case 'UPDATE_USER_INFO':\r\n      return gatewaySecurity + '/users/me'\r\n\r\n    case 'OTP':\r\n      return gatewaySecurity + \"/validate-otp\"   //   POST /validate-otp\r\n\r\n    case 'RESET_PASSWORD_REQUEST':\r\n      return gatewaySecurity + \"/reset-password-request\" \r\n\r\n    case 'CHANGE_PASSWORD_REQUEST':\r\n      return gatewaySecurity + \"/reset-password-recovery\"  \r\n\r\n    case 'SEND_EMAIL_VERIFICATION':\r\n      return gatewaySecurity + \"/verification-code\"  \r\n\r\n    case 'SEND_PHONE_VERIFICATION':\r\n      return gatewaySecurity + \"/verification-code\"   \r\n\r\n    case 'VERIFICATION_CHECK':\r\n      return gatewaySecurity + \"/verification-code\"     \r\n\r\n    case 'REQ_AUTH_GOOGLE_PARAMS':\r\n      return gatewaySecurity + '/params/google-oauth'  \r\n\r\n    case \"SELECT_USER_ROLE\":\r\n      return gatewayBackOffice + \"/user/select/role\"\r\n\r\n    case \"SELECT_USER_FULL_INFO\":\r\n      return gatewayBackOffice + \"/user/select/full\"\r\n\r\n    case 'SELECT_USER_DETAIL_FULL_INFO':\r\n      return gatewayBackOffice + \"/user/select/full\"\r\n\r\n    case \"CREATE_BO_USER\":\r\n      return gatewayBackOffice + \"/users\"\r\n\r\n    case 'SELECT_ALL_USER':\r\n      return gatewayBackOffice + '/users'\r\n\r\n    case 'DELETE_USER':\r\n      return gatewayBackOffice\r\n\r\n    case \"UPDATE_USER_ROLE\":\r\n      return gatewayBackOffice   // 'http://172.16.10.51:31564'\r\n\r\n    case \"UPDATE_BASIC_USER\":\r\n      return gatewayBackOffice\r\n\r\n    case \"UPDATE_TEMPLATE_MESSAGE\":\r\n      return gatewayBackOffice\r\n\r\n    case \"SELECT_ALL_MESSAGE\":\r\n      return gatewayBackOffice\r\n\r\n    case 'SELECT_ALL_CLIENT':\r\n      return gatewayBackOffice + '/clients'\r\n\r\n    case 'CREATE_CLIENT':\r\n      return gatewayBackOffice + '/clients'\r\n\r\n    case 'SELECT_ALL_REQUEST':\r\n      return gatewayBackOffice +'/request-specifications'\r\n\r\n    case 'UPDATE_CLIENT_DETAIL':\r\n      return gatewayBackOffice\r\n      \r\n    case 'ADD_CLIENT_ROLE':\r\n      return gatewayBackOffice\r\n\r\n    case 'DELETE_CLIENT_ROLE':\r\n      return gatewayBackOffice\r\n\r\n    case 'DELETE_CLIENT':\r\n      return gatewayBackOffice\r\n      \r\n    case 'ADD_REQUEST_SPESIFICATIONS':\r\n      return gatewayBackOffice\r\n\r\n    case 'UPDATE_REQUEST_SPESIFICATIONS':\r\n      return gatewayBackOffice\r\n\r\n    case 'HEALTH_ORDER_DETAIL':\r\n      return gatewaySecurity + \"/admin/orders\"\r\n\r\n    case \"healthOrder\":\r\n      return gatewaySecurity + \"/admin/orders\"\r\n\r\n    case \"healthKlinik\":\r\n      return gatewaySecurity + \"/admin/clinics\"\r\n\r\n    case \"healthProduct\":\r\n      return gatewaySecurity + \"/products\"\r\n\r\n    case 'GET_CITY_LIST':\r\n      return gatewaySecurity + ''\r\n\r\n    case 'GET_CITY_CLINIC_LIST':\r\n      return gatewaySecurity + ''\r\n\r\n    case 'GET_ALL_ORDER':\r\n      return gatewaySecurity + \"/admin/orders\"\r\n\r\n    case 'RESCHEDULE_ORDER':\r\n      return gatewaySecurity + \"/admin/orders\"\r\n\r\n    case 'CLINIC_REGISTRATION':\r\n      return gatewaySecurity + \"/admin/clinics\"\r\n\r\n    case 'SEND_CLINIC_ACTIVATION':\r\n      return gatewaySecurity + \"/admin/clinics\"\r\n\r\n    case 'ADD_CLINIC_USER':\r\n      return gatewaySecurity + \"/admin/clinics\"\r\n\r\n    case 'DELETE_CLINIC_USER':\r\n      return gatewaySecurity + \"/admin/clinics\"\r\n\r\n    case 'DELETE_CLINIC':\r\n      return gatewaySecurity + \"/admin/clinics\"\r\n\r\n    case 'GET_CLINIC_USER':\r\n      return gatewaySecurity + \"/admin/clinics\"\r\n\r\n    case 'GET_MY_CLINIC':\r\n      return gatewaySecurity + \"/admin/users/me\"\r\n\r\n    case 'GET_CLINIC_REPORT':\r\n      return gatewaySecurity + \"/admin/report\"\r\n\r\n    case 'RECAPT_CLINIC_SUMMARY':\r\n      return gatewaySecurity + \"/admin/report/logistic\"\r\n\r\n    case 'RECAPT_BIOFARMA_SUMMARY':\r\n      return gatewaySecurity + \"/admin/report\"\r\n\r\n    case 'ADD_CLINIC_LOGO':\r\n      return gatewaySecurity + \"/admin/clinics\"\r\n\r\n    case 'EDIT_CLINIC_SETTING':\r\n      return gatewaySecurity + \"/admin/clinics\"\r\n      \r\n    case 'GENERIC_JSON_CONFIGURATION':\r\n      return gatewaySecurity+'/admin/configurations';\r\n\r\n    case 'GENERIC_JSON_CONFIGURATION_DETAIL':\r\n      return gatewaySecurity+'/admin/configurations';\r\n\r\n    case 'GENERIC_JSON_CONFIGURATION_UPDATE':\r\n      return gatewaySecurity+'/admin/configurations';\r\n\r\n    case 'GENERAL_PRODUCT_CATALOG':\r\n      return gatewaySecurity+'/products'\r\n\r\n    case 'GENERAL_PRODUCT_CATALOG_CREATE':\r\n      return gatewaySecurity+'/admin/products'\r\n    \r\n    case 'GENERAL_PRODUCT_CATALOG_UPDATE':\r\n      return gatewaySecurity+'/admin/products'\r\n\r\n    case 'GET_CLINIC_PARENTS': \r\n      return gatewaySecurity + \"/admin/clinics/parents\" \r\n    \r\n    case 'GET_PARENT_LIST':\r\n      return gatewaySecurity + \"/admin/persons\" \r\n\r\n    case 'PURCHASE_VOUCHER_NUMBER':\r\n      return gatewaySecurity + \"/admin\" \r\n\r\n    default:\r\n      return gatewaySecurity\r\n  }\r\n}\r\n\r\nexport default serviceUrl\r\n","\r\nimport crypto from 'crypto'\r\n\r\nexport const hash = (algortm, stringData) => {\r\n  return crypto.createHash(algortm).update(stringData).digest('hex')\r\n}\r\n\r\nexport const hmac = (algortm, key, stringData) => {\r\n  return crypto.createHmac(algortm, key).update(stringData).digest('hex')\r\n}\r\n\r\nexport const bodyForSignature = (request, method, serviceCode, urlParams) => {\r\n  let bodySignature = request\r\n  if (urlParams) {\r\n    if (method === 'GET' && urlParams.includes('?')) {\r\n      let pairs = urlParams.split('&').slice(1)\r\n      var result = {};\r\n      pairs.forEach(function (pair) {\r\n        pair = pair.split('=');\r\n        result[pair[0]] = decodeURIComponent(pair[1] || '');\r\n      })\r\n      bodySignature = { ...bodySignature, ...result }\r\n      if (serviceCode === 'SEND_EMAIL_VERIFICATION') bodySignature.principalType = 'email'\r\n      if (serviceCode === 'SEND_PHONE_VERIFICATION') bodySignature.principalType = 'phone'\r\n    }\r\n    else if (!urlParams.includes('?')) {\r\n      // console.log(\"PARAMS SPLIT: \", urlParams.split('/'))\r\n      if ((serviceCode === 'ADD_CLIENT_ROLE') || (serviceCode === 'DELETE_CLIENT')) bodySignature.clientId = urlParams.split('/')[2]\r\n      if (serviceCode === 'DELETE_CLIENT_ROLE') {\r\n        // console.log(\"BRUAHAHA: \", urlParams.split('/'))\r\n        bodySignature.clientId = urlParams.split('/')[2]\r\n        bodySignature.roleIds = urlParams.split('/')[4]\r\n      }\r\n      if (serviceCode === 'UPDATE_USER_ROLE') bodySignature.id = urlParams.split('/')[2]\r\n      if (serviceCode === 'DELETE_USER') bodySignature.id = urlParams.split('/')[2]\r\n      if (serviceCode === 'SELECT_ALL_CLIENT' && urlParams.split('/')[1]) bodySignature.clientId = urlParams.split('/')[1]\r\n\r\n    }\r\n  }\r\n  return bodySignature\r\n}\r\n\r\nexport const generateSignature = (headers, body, key) => {\r\n  let orderedHeaders = {}\r\n  Object.keys(headers).sort().forEach(v => {\r\n    orderedHeaders[v] = headers[v]\r\n  })\r\n\r\n  let orderedBody = {}\r\n  Object.keys(body).sort().forEach(v => {\r\n    orderedBody[v] = body[v]\r\n  })\r\n\r\n  let stringHeader = JSON.stringify(orderedHeaders).replace(/\\s/g, '');\r\n  let stringBody = JSON.stringify(orderedBody).replace(/\\s/g, '');\r\n  let stringMsg = hash('sha1', stringHeader) + hash('sha1', stringBody);\r\n  let signature = hmac('sha256', key, stringMsg)\r\n  // console.log('Header sebelum hash: ', stringHeader)\r\n  // console.log('Body sebelum hash: ', stringBody)\r\n  // console.log(\"STRING HEADER: \", hash('sha1', stringHeader))\r\n  // console.log(\"STRING BODY: \", hash('sha1', stringBody))\r\n  // console.log(\"STRING MESSAGE: \", stringMsg)\r\n\r\n  return signature\r\n}\r\n\r\nexport const generateRoleToSend = (aud, role) => {\r\n  let roleToSend = 'end-user'\r\n  if (aud === 'voltras-health') {\r\n    if (role.includes('voltras.admin')) roleToSend = 'voltras.admin'\r\n    else if (role.includes('biofarma.admin')) roleToSend = 'biofarma.admin'\r\n    else if (role.includes('clinic.admin')) roleToSend = 'clinic.admin'\r\n    else if (role.includes('health.admin')) roleToSend = 'health.admin'\r\n    else if (role.includes('clinic.operator')) roleToSend = 'clinic.operator'\r\n    else roleToSend = 'member'\r\n    // else roleToSend = 'end-user'\r\n  }\r\n  else {\r\n    if (role.includes('root')) roleToSend = 'root'\r\n    // else if (role.includes('AUTHENTICATION_ADMIN')) roleToSend = 'AUTHENTICATION_ADMIN'\r\n    else roleToSend = 'member'\r\n  }\r\n  // console.log(\"HUAYOOO: \", aud, role)\r\n  return roleToSend\r\n}","\r\nconst appText = {\r\n  app_name: { en: 'Name', id: 'Nama' },\r\n  app_phone: { en: 'Phone', id: 'Telepon' },\r\n  app_email: { en: 'Email', id: 'Email' },\r\n  app_new: { en: 'New', id: 'Baru' },\r\n  app_paid:{en:'Paid', id: 'Terbayar'},\r\n  app_finish: { en: 'Finish', id: 'Selesai' },\r\n  app_password: { en: 'Password', id: 'Kata sandi' },\r\n  app_password_confirmation: { en: 'Password Confirmation', id: 'Konfirmasi Kata Sandi' },\r\n  app_forgot_password: { en: 'Forgot password?', id: 'Lupa kata sandi?' },\r\n  app_from: { en: 'From', id: 'Dari' },\r\n  app_to: { en: 'To', id: 'Sampai' },\r\n  app_back: { en: 'Back', id: 'Kembali' },\r\n  app_cancel: { en: 'Cancel', id: 'Batal' },\r\n  app_submit: { en: 'Submit', id: 'Masukkan' },\r\n  app_welcome: { en: 'Welcome', id: 'Selamat Datang' },\r\n  app_sign_in: { en: 'Sign In', id: 'Masuk' },\r\n  app_sign_up: { en: 'Sign Up', id: 'Daftar' },\r\n  app_register: { en: 'Register', id: 'Daftar' },\r\n  app_choose: { en: 'Choose', id: 'Pilih' },\r\n  app_choose_role: { en: 'Choose Role', id: 'Pilih Role' },\r\n  app_choose_role_used: { en: 'Choose role to used', id: 'Pilih role untuk digunakan' },\r\n  app_submit_otp: { en: 'Submit OTP', id: 'Masukkan OTP' },\r\n  app_submit_otp_text: { en: 'Submit OTP sent to your number:', id: 'Masukkan OTP yang dikirimkan ke nomor:' },\r\n  app_not_receive_otp: { en: 'Did not receive the OTP?', id: 'Tidak menerima OTP?' },\r\n  app_resend_otp: { en: 'Resend OTP', id: 'Kirim ulang OTP' },\r\n  app_email_or_phone: { en: 'Email or Phone', id: 'Email atau Telepon' },\r\n  app_no_account: { en: 'Don\\'t have an account?', id: 'Tidak punya akun?' },\r\n  app_have_account: { en: 'Already have an account?', id: 'Sudah punya akun?' },\r\n  app_export_xls: { en: 'Export to Xls', id: 'Ekspor ke Xls' },\r\n  app_submit_filter: { en: 'Submit Filter', id: 'Masukkan Filter' },\r\n  app_not_mandatory: { en: 'Not mandatory', id: 'Tidak wajib' },\r\n  app_regis_sucess_msg: { en: 'Registration is successful, please Sign In.', id: 'Pendaftaran berhasil, silakan Masuk' },\r\n  app_email_success_msg: { en: 'Send email successful, check your email.', id: 'Pengiriman email berhasil, periksa email anda.' },\r\n  app_sms_success_msg: { en: 'Send message successful, check your email.', id: 'Pengiriman pesan berhasil, periksa sms anda.' },\r\n  app_verification_succes: { en: \"Verification successful.\", id: 'Verifikasi berhasil.' },\r\n  app_send_email_verify: { en: \"Send email verification\", id: \"Kirim verifikasi email\" },\r\n  app_send_phone_verify: { en: \"Send phone verification\", id: \"Kirim verifikasi telepon\" },\r\n  app_delete_data_confirmation: { en: 'Are you sure you want to delete this data?', id: 'Apakah Anda yakin ingin menghapus data ini?' },\r\n  app_date_to_show: { en: 'Date to show in Report', id: 'Tanggal untuk ditampilkan dalam Laporan' },\r\n  app_show_report: { en: 'Show Report', id: 'Tampilkan Laporan' },\r\n  app_report_summary: { en: 'Report Summary', id: 'Ringkasan Laporan' },\r\n  app_logout: { en: 'Logout', id: 'Keluar' },\r\n  app_confirm_logout: { en: 'Are you sure you want to logout', id: 'Anda yakin ingin keluar?' },\r\n  app_manage_acount: { en: 'Manage your account', id: 'Kelola akun anda' },\r\n  app_success_update_account: { en: 'Update account successful', id: 'Pembaruan akun berhasil' },\r\n  app_select_photo: { en: 'Select a photo from your computer', id: 'Pilih foto dari komputer anda' },\r\n  app_account_profile: { en: 'Account Profile', id: 'Profil Akun' },\r\n  app_photo_personalize: { en: 'A photo helps personalize your account', id: 'Sebuah foto membantu personalisasi akun Anda' },\r\n  app_save_to_change: { en: 'Press the \"SAVE\" button to save changes', id: 'Tekan tombol \"SIMPAN\" untuk menyimpan perubahan' },\r\n\r\n}\r\n\r\nexport default appText\r\n","\r\nconst errorText = {\r\n  err_submit: { en: 'Error in form', id: 'Kesalahan di dalam form' },\r\n  err_email_phone_empty: { en: 'Must be filled by email/phone.', id: 'Harus diisi dengan email/telepon' },\r\n  err_email_phone_format: { en: 'Wrong email/phone format.', id: 'Format email/telepon salah.' },\r\n  err_not_six_char: { en: 'At least 8 character.', id: 'Paling tidak 8 karakter.' },\r\n  err_phone_empty: { en: 'Phone must be filled.', id: 'Telepon harus diisi.' },\r\n  err_phone_format: { en: 'Wrong phone format. (0... or +62...)', id: 'Format telepon salah. (0... atau +62...)' },\r\n  err_name_empty: { en: 'Name must be filled.', id: 'Nama harus diisi.' },\r\n  err_clinic_name_empty: { en: 'Clinic name must be filled.', id: 'Nama klinik harus diisi.' },\r\n  err_address_empty: { en: 'Address must be filled.', id: 'Alamat harus diisi.' },\r\n  err_email_empty: { en: 'Email must be filled.', id: 'Email harus diisi.' },\r\n  err_email_format: { en: 'Wrong email format.', id: 'Format email salah.' },\r\n  err_password_empty: { en: 'Password must be filled.', id: 'Kata kunci harus diisi.' },\r\n  err_passconfirm_mismatch: { en: 'Confirmation not match', id: 'Konfirmasi tidak sesuai.' },\r\n  err_clientid_empty: { en: 'Client ID must be filled.', id: 'Client ID harus diisi.' },\r\n  err_clientid_format: { en: 'Wrong Client ID format.', id: 'Format Client ID salah.' },\r\n  err_clientname_empty: { en: 'Client name must be filled.', id: 'Nama client harus diisi.' },\r\n  err_roleid_empty: { en: 'Role ID must be filled.', id: 'Role ID harus diisi.' },\r\n  err_roleid_format: { en: 'Wrong Role ID format.', id: 'Format Role ID salah.' },\r\n  err_initialrole_empty: { en: 'Initial role must be filled.', id: 'Initial role harus diisi.' },\r\n  err_initialrole_format: { en: 'Wrong initial role format.', id: 'Format initial role salah.' },\r\n  err_clienttype_not_choosen: { en: 'Client Type must be chosen', id: 'Client Type harus dipilih' },\r\n  err_profile_not_choosen: { en: 'Profile must be chosen', id: 'Profil harus dipilih' },\r\n  err_description_empty: { en: 'Description must be filled.', id: 'Deskripsi harus diisi.' },\r\n  err_atleast_one_name_chosen: { en: 'At least one name must be chosen', id: 'Setidaknya satu nama harus dipilih' },\r\n  err_redeemby_empty: { en: 'Redeem By must be filled', id: 'Redeem Oleh harus diisi' },\r\n  err_otp_empty: { en: 'Empty OTP', id: 'OTP kosong' },\r\n  err_otp_must_number: { en: 'OTP must number', id: 'OTP harus angka' },\r\n  err_uri_empty: {en: \"Empty uri\",id:\"uri kosong\"},\r\n  err_uri_format:{en:\"Wrong uri format\",id:\"Format uri salah\"},\r\n  err_email_masking_100:{en:\"Email masking can't more than 100\",id:\"email masking tidak boleh lebih dari 100\"},\r\n  err_masking_name_format:{en:\"Wrong format email masking name\",id:\" format email masking name salah\"},\r\n  err_masking_name_empty:{en:\"empty email masking name\",id:\"email masking name kosong\"},\r\n  err_path_empty: {en: \"Empty path\",id:\"path kosong\"},\r\n  err_path_format:{en:\"Wrong path format\",id:\"Format path salah\"},\r\n  err_product_empty:{en:\"Empty data\",id:'Data kosong'},\r\n  err_product_format:{en: 'Wrong data format',id:'format data salah'},\r\n  // err_product_number_empty:{en:\"Empty product name\",id:'Nama produk kosong'},\r\n  // err_product_number_format:{en: 'Wrong product name format',id:'format product name salah'}\r\n\r\n}\r\n\r\nexport default errorText\r\n","\r\nconst commonText = {\r\n  common_with: { en: 'with', id: 'dengan' },\r\n  common_or: { en: 'or', id: 'atau' },\r\n  common_add: { en: 'Add', id: 'Tambah' },\r\n  common_signin_with: { en: 'Sign in with', id: 'Masuk dengan' },\r\n  common_signup_with: { en: 'Sign up with', id: 'Daftar dengan' },\r\n  common_change_password: { en: 'Change Password', id: 'Ganti Kata Kunci' },\r\n  common_new_password: { en: 'New Password', id: 'Kata Kunci Baru' },\r\n  common_close: { en: 'Close', id: 'Tutup' },\r\n  common_contact_person: { en: 'Contact Person', id: 'Narahubung' },\r\n  common_birth_date: { en: 'Birth Date', id: 'Tanggal Lahir' },\r\n  common_products: { en: 'Products', id: \"Produk\" },\r\n  common_name: { en: 'Name', id: 'Nama' },\r\n  common_phone: { en: 'Phone', id: 'Telepon' },\r\n  common_email: { en: 'Email', id: 'Email' },\r\n  common_address: { en: 'Address', id: 'Alamat' },\r\n  common_photo: { en: 'Photo', id: 'Foto' },\r\n  common_change: { en: 'Change', id: 'Ganti' },\r\n  common_save: { en: 'Save', id: 'Simpan' },\r\n\r\n}\r\n\r\nexport default commonText\r\n","\r\nconst clinicText = {\r\n  clinic: { en: 'Clinic', id: 'Klinik' },\r\n  clinic_name: { en: 'Clinic Name', id: 'Nama Klinik' },\r\n  clinic_city: { en: 'Clinic City', id: 'Kota Klinik' },\r\n  clinic_address: { en: 'Clinic Address', id: 'Alamat Klinik' },\r\n  clinic_order_list: { en: 'Order List', id: 'Daftar Order' },\r\n  clinic_test_request_date: { en: 'Test request date', id: 'Tanggal permintaan tes' },\r\n  clinic_order_report: { en: \"Order Report\", id: 'Laporan Order' },\r\n  clinic_test_date: { en: 'Test Date', id: 'Tanggal Test' },\r\n  clinic_order_date: { en: 'Order Date', id: 'Tanggal Order' },\r\n  clinic_birth_date: { en: 'Birth Date', id: 'Tanggal Lahir' },\r\n  clinic_redeem_date: { en: 'Redeem Date', id: 'Tanggal Redeem' },\r\n  clinic_payment_date: { en: 'Payment Date', id: 'Tanggal Pembayaran' },\r\n  clinic_redeem_by: { en: 'Redeem By', id: 'Redeem Oleh' },\r\n  clinic_redeem_on: { en: 'Redeem On', id: 'Tanggal Redeem' },\r\n  clinic_payment_on: { en: 'Payment On', id: 'Tanggal Pembayaran' },\r\n  clinic_agent_price: { en: 'Agent Price', id: 'Harga Agen' },\r\n  clinic_price: { en: 'Price', id: 'Harga' },\r\n  clinic_redeem_success: { en: 'Redeem successful', id: 'Redeem berhasil' },\r\n  clinic_redeem_confirmation: { en: 'Redeem Confirmation', id: 'Konfirmasi Redeem' },\r\n  clinic_order_detail: { en: 'Order Detail', id: 'Detail Order' },\r\n  clinic_active: { en: 'Clinic active.', id: 'Klinik aktif.' },\r\n  clinic_user_list: { en: 'User List', id: 'Daftar Pengguna' },\r\n  clinic_add_user: { en: \"Add User\", id: 'Tambah Penguna' },\r\n  clinic_regis_sucess: { en: \"Clinic Registration Successful\", id: 'Pendaftaran klinik berhasil' },\r\n  clinic_activation_success: { en: \"Clinic Activation Successful\", id: 'Aktivasi Klinik berhasil' },\r\n  clinic_add_user_success: { en: \"Add Clinic User Successful\", id: 'Tambah pengguna klinik berhasil' },\r\n  clinic_delete_user_success: { en: \"Delete Clinic User Successful\", id: 'Hapus pengguna klinik berhasil' },\r\n  clinic_delete_sucess: { en: 'Delete Clinic Successful', id: 'Hapus klinik berhasil' },\r\n  clinic_logo: { en: 'Clinic Logo', id: 'Logo Klinik' },\r\n  clinic_set_logo: { en: 'Set Clinic Logo', id: 'Set Logo Klinik' },\r\n  clinic_change_logo: { en: 'Change Clinic Logo', id: 'Ganti Logo Klinik' },\r\n  clinic_change_logo_success: { en: 'Change clinic logo successful', id: 'Ganti logo klinik berhasil' },\r\n  clinic_parents: { en: \"Parent Clinic\", id: \"Klinik Induk\" },\r\n  clinic_inactive_confirmation: { en: \"Would you like to make this clinic inactive?\", id: \"Apakah anda ingin membuat klinik ini tidak aktif?\" },\r\n  clinic_inactive: { en: 'Clinic inactive.', id: 'Klinik tidak aktif.' },\r\n}\r\n\r\nexport default clinicText\r\n","\r\nimport Store from '../Store'\r\nimport appText from './app'\r\nimport errorText from './error'\r\nimport commonText from './common'\r\nimport clinicText from './clinic'\r\n\r\n\r\n\r\nconst textInternationalize = {\r\n  ...appText,\r\n  ...errorText,\r\n  ...commonText,\r\n  ...clinicText,\r\n}\r\n\r\nconst FormatText = keyText => {\r\n  let langAvailable = ['en', 'id',]\r\n  let locale = Store.getState().system.locale\r\n  let langUsed = \"\"\r\n\r\n  if (langAvailable.includes(locale.slice(0, 2))) langUsed = locale.slice(0, 2)\r\n  else langUsed = 'en'\r\n  let keyedText = textInternationalize[keyText]\r\n\r\n  if (!keyedText) return keyText\r\n  else return keyedText[langUsed]\r\n}\r\n\r\nexport default FormatText\r\n","\r\nimport Store from '../Store'\r\nimport ServiceUrl from './ServiceUrl'\r\nimport { serviceStart, serviceEnd, dispatchLogout } from '../actions/SystemActions'\r\nimport { resetService } from '../actions/ServiceActions'\r\n// import { setResponse } from '../actions/ResponseActions'\r\nimport { setSnackbar } from '../actions/FeedbackActions'\r\nimport { generateSignature, bodyForSignature } from '../utils/Crypting'\r\nimport FormatText from '../i18n'\r\nimport Config from '../config';\r\nimport { setClinicRecaptLogistic } from '../actions/PaxListActions'\r\n\r\nexport const SendToService = (request, method, serviceCode, urlParams, customHeaders, role, file, onSucceed) => {\r\n  let domain = window.location.origin\r\n  // console.log(\"DOMAIN: \", domain)\r\n  // console.log('CUSTOM HEADERS: ', customHeaders)\r\n  Store.dispatch(serviceStart())\r\n  let state = Store.getState()\r\n  let userInfo = state.userInfo.info\r\n  let aud = state.system.appConstant ? state.system.appConstant.aud : null\r\n  let roleUsed = state.userInfo.roleUsed\r\n  let locale = state.system.locale\r\n  let stateAccessToken = state.userInfo.sessionInfo.accessToken\r\n  let stateKey = state.userInfo.sessionInfo.key\r\n\r\n  let clientId = null\r\n  if (aud) clientId = aud\r\n  if (userInfo.aud) clientId = userInfo.aud\r\n  if (customHeaders) if (customHeaders.clientId) clientId = customHeaders.clientId\r\n\r\n  let name = userInfo.name ? userInfo.name : customHeaders ? customHeaders.name : null\r\n  let email = userInfo.email ? userInfo.email : customHeaders ? customHeaders.email : null\r\n  let phone = userInfo.phone ? userInfo.phone : customHeaders ? customHeaders.phone : null\r\n  let accessToken = stateAccessToken ? stateAccessToken : localStorage.getItem(\"accessToken\") ? localStorage.getItem(\"accessToken\") : null\r\n  let key = stateKey ? stateKey : localStorage.getItem(\"key\") ? localStorage.getItem(\"key\") : null\r\n  let roleToSend = role ? role : roleUsed ? roleUsed : null  // headersContent.role\r\n  let hardcodeHeaders = {\r\n    'access-token': accessToken,\r\n    'role': roleToSend,\r\n    \"gadget-id\": \"mygadgetId\",\r\n  }\r\n  const snackFeed = {\r\n    open: true, severity: \"success\", message: \"Successful\", redirect: '',\r\n    action: false, actionLabel: \"\", position: 'bottom-center', duration: 4000,\r\n  }\r\n  // console.log(\"HAYO CLIENT...: \", clientId)\r\n  // console.log(userInfo.aud)\r\n  if (clientId) hardcodeHeaders['client-id'] = clientId\r\n\r\n  let requestJSON = JSON.stringify(request)\r\n  let oReq = new XMLHttpRequest();\r\n\r\n  // console.log(\"REQUEST URL: \", method, ServiceUrl(serviceCode) + (urlParams ? urlParams : \"\"))\r\n  // console.log('REQUEST BODY: ', request)\r\n\r\n  oReq.open(method, ServiceUrl(serviceCode) + (urlParams ? urlParams : \"\"), true)\r\n\r\n  // oReq.setRequestHeader('Accept-Language', locale)\r\n  oReq.setRequestHeader('gadget-id', \"mygadgetId\")\r\n  if (roleToSend && (serviceCode !== 'login')) oReq.setRequestHeader(\"role\", roleToSend)\r\n  if (clientId) oReq.setRequestHeader('client-id', clientId)\r\n  if (name) oReq.setRequestHeader('name', name)\r\n  if (email) oReq.setRequestHeader('email', email)\r\n  if (phone) oReq.setRequestHeader('phone', phone)\r\n  oReq.setRequestHeader('Content-type', 'application/json')\r\n\r\n  let bodySignature = urlParams ? bodyForSignature(request, method, serviceCode, urlParams) : request\r\n  if ((serviceCode === 'SEND_CLINIC_ACTIVATION')\r\n    || (serviceCode === 'GET_CLINIC_USER')\r\n    || (serviceCode === 'ADD_CLINIC_USER')) bodySignature = request\r\n\r\n  if (key) {\r\n    oReq.setRequestHeader(\"access-token\", accessToken)\r\n    oReq.setRequestHeader('signature', generateSignature(hardcodeHeaders, bodySignature, key))\r\n  }\r\n\r\n  oReq.send(requestJSON)\r\n\r\n  oReq.addEventListener('load', () => {\r\n    let status = oReq.status.toString()\r\n    Store.dispatch(resetService())\r\n    if (oReq.readyState === 4 && status.slice(0, 1) === '2') {\r\n      Store.dispatch(serviceEnd())\r\n      // console.log(\"OPO TOH: \", typeof oReq.responseText)\r\n      let response = {\r\n        headers: {},\r\n        body: oReq.responseText && (oReq.responseText !== 'null') ? JSON.parse(oReq.responseText) : {}\r\n      }\r\n      onSucceed(response)\r\n    }\r\n    else {\r\n      Store.dispatch(serviceEnd())\r\n\r\n      if (serviceCode === 'logout') {\r\n        Store.dispatch(dispatchLogout())\r\n      }\r\n      if (status.slice(0, 1) === '4') {\r\n        const respErr = JSON.parse(oReq.responseText)\r\n        console.log(\"ERROR YA: \", serviceCode, respErr)\r\n        let messageError = respErr.errorDescription ? respErr.errorDescription[locale.slice(0, 2)] : respErr.message ? respErr.message : respErr\r\n        // const responseErr = {\r\n        //   headers: {},\r\n        //   body: {\r\n        //     error: true,\r\n        //     errorDescription: respErr.errorDescription\r\n        //       ? respErr.errorDescription[locale.slice(0, 2)]\r\n        //       : respErr.message ? respErr.message : oReq.responseText\r\n        //   }\r\n        // }\r\n\r\n        if (\r\n          (respErr.error === 'error.auth.securityValidation.tokenNotFound')\r\n          || (respErr.error === 'error.auth.securityValidation.invalidAccessToken')\r\n        ) {\r\n          snackFeed.message = messageError\r\n          snackFeed.severity = \"error\"\r\n          snackFeed.redirect = \"Login\"\r\n          Store.dispatch(setSnackbar(snackFeed))\r\n          setTimeout(() => {\r\n            localStorage.clear()\r\n            Store.dispatch(dispatchLogout())\r\n          }, 2000);\r\n        }\r\n        else if (respErr.error === \"error.auth.securityValidation.emailNotVerified\") {\r\n          // responseErr.body.error = respErr.error\r\n          // const snackFeedback = {\r\n          //   open: true,\r\n          //   message: messageError,\r\n          //   severity: \"warning\",\r\n          //   position: 'top-center',\r\n          //   action: \"SEND_EMAIL_VERIFICATION\",\r\n          //   actionLabel: FormatText('app_send_email_verify')\r\n          // }\r\n          // console.log(\"kesini?\")\r\n          snackFeed.message = messageError\r\n          snackFeed.severity = \"warning\"\r\n          snackFeed.position = 'top-center'\r\n          snackFeed.action = \"SEND_EMAIL_VERIFICATION\"\r\n          snackFeed.actionLabel = FormatText('app_send_email_verify')\r\n          snackFeed.duration = 14000\r\n          Store.dispatch(setSnackbar(snackFeed))\r\n        }\r\n        else if (respErr.error === \"error.auth.securityValidation.phoneNotVerified\") {\r\n          // responseErr.body.error = respErr.error\r\n          // const snackFeedback = {\r\n          //   open: true,\r\n          //   message: messageError,\r\n          //   severity: \"warning\",\r\n          //   position: 'top-center',\r\n          //   action: \"SEND_PHONE_VERIFICATION\",\r\n          //   actionLabel: FormatText('app_send_phone_verify')\r\n          // }\r\n          // console.log(\"kesini?\")\r\n          snackFeed.message = messageError\r\n          snackFeed.severity = \"warning\"\r\n          snackFeed.position = 'top-center'\r\n          snackFeed.action = \"SEND_PHONE_VERIFICATION\"\r\n          snackFeed.actionLabel = FormatText('app_send_phone_verify')\r\n          snackFeed.duration = 14000\r\n          Store.dispatch(setSnackbar(snackFeed))\r\n        }\r\n        else if (serviceCode === 'RECAPT_CLINIC_SUMMARY') {\r\n          Store.dispatch(setClinicRecaptLogistic({ product: [], testsdate: \"\" }))\r\n          snackFeed.message = messageError\r\n          snackFeed.severity = \"warning\"\r\n          Store.dispatch(setSnackbar(snackFeed))\r\n        }\r\n        else if (serviceCode === 'RECAPT_BIOFARMA_SUMMARY') {\r\n          Store.dispatch(setClinicRecaptLogistic({ total: [], detail: [] }))\r\n          snackFeed.message = messageError\r\n          snackFeed.severity = \"warning\"\r\n          Store.dispatch(setSnackbar(snackFeed))\r\n        }\r\n        else {\r\n          // Store.dispatch(setResponse(responseErr))\r\n          snackFeed.message = JSON.stringify(messageError)\r\n          snackFeed.severity = \"error\"\r\n          Store.dispatch(setSnackbar(snackFeed))\r\n        }\r\n      }\r\n      else {\r\n        // let responseErr = {\r\n        //   headers: {},\r\n        //   body: {\r\n        //     error: true,\r\n        //     errorDescription: oReq.responseText\r\n        //   }\r\n        // }\r\n        // Store.dispatch(setResponse(responseErr))\r\n        snackFeed.message = oReq.responseText\r\n        snackFeed.severity = \"error\"\r\n        Store.dispatch(setSnackbar(snackFeed))\r\n      }\r\n    }\r\n  })\r\n\r\n  const createResponseError = (e, desc) => {\r\n    console.log(\"ERRORKAH? \", desc, JSON.stringify(e))\r\n    // let response = {\r\n    //   headers: {\r\n    //     'statusCode': 400,\r\n    //     'userMessage': \"net::ERR_CONNECTION_TIMED_OUT\",\r\n    //   },\r\n    //   body: {\r\n    //     error: true,\r\n    //     errorDescription: \"net::ERR_CONNECTION_TIMED_OUT\",\r\n    //     ...e\r\n    //   }\r\n    // }\r\n    if (domain === 'http://localhost:3030' || domain === 'http://172.16.10.98:3032') {\r\n      // Store.dispatch(setResponse(response))\r\n      snackFeed.message = \"net::ERR_CONNECTION_TIMED_OUT\"\r\n      snackFeed.severity = \"error\"\r\n      Store.dispatch(setSnackbar(snackFeed))\r\n      Store.dispatch(serviceEnd())\r\n    }\r\n    else {\r\n      // Store.dispatch(setResponse(response))\r\n      snackFeed.message = \"net::ERR_CONNECTION_TIMED_OUT\"\r\n      snackFeed.severity = \"error\"\r\n      Store.dispatch(setSnackbar(snackFeed))\r\n      Store.dispatch(serviceEnd())\r\n      // setTimeout(() => {\r\n      //   // window.location.reload()\r\n      // }, 300)\r\n\r\n    }\r\n  }\r\n\r\n  oReq.onerror = e => createResponseError(e, 'onError')\r\n\r\n  oReq.ontimeout = e => createResponseError(e, 'onTimeout')\r\n}\r\n\r\nexport const sendImageToService = (image, type, blobFile) => {\r\n  const snackFeed = {\r\n    open: true, severity: \"success\", message: \"Successful\", redirect: '',\r\n    action: false, actionLabel: \"\", position: 'bottom-center', duration: 4000,\r\n  }\r\n  // let respErr = {\r\n  //   headers: {\r\n  //     'statusCode': 400,\r\n  //     'userMessage': \"net::ERR_CONNECTION_TIMED_OUT\",\r\n  //   },\r\n  //   body: {\r\n  //     error: true,\r\n  //     errorDescription: \"net::ERR_CONNECTION_TIMED_OUT\",\r\n  //   }\r\n  // }\r\n  return new Promise((resolve, reject) => {\r\n    Store.dispatch(serviceStart())\r\n    const urlConnection = Config.gatewayRepoFile + \"/static-file-manager/insert\";;\r\n    var oReq = new XMLHttpRequest();\r\n    oReq.open(\"POST\", urlConnection, true);\r\n    oReq.addEventListener('load', () => {\r\n      if (oReq.readyState === 4 && oReq.status === 200) {\r\n        const response = JSON.parse(oReq.responseText);\r\n        resolve(response);\r\n        Store.dispatch(serviceEnd())\r\n      }\r\n      else resolve({ type: \"error\", message: \"Something went wrong\", }); Store.dispatch(serviceEnd())\r\n    })\r\n    var blob = blobFile ? blobFile : new Blob([image], { type });\r\n    // console.log(\"BLOB: \", blob)\r\n    oReq.send(blob);\r\n\r\n    oReq.onerror = e => {\r\n      resolve({ type: \"error\", message: \"Something went wrong\", });\r\n      // Store.dispatch(setResponse(respErr))\r\n      // Store.dispatch(serviceEnd())\r\n      snackFeed.message = \"net::ERR_CONNECTION_TIMED_OUT\"\r\n      snackFeed.severity = \"error\"\r\n      Store.dispatch(setSnackbar(snackFeed))\r\n      Store.dispatch(serviceEnd())\r\n    }\r\n\r\n    oReq.ontimeout = e => {\r\n      resolve({ type: \"error\", message: \"Something went wrong\", });\r\n      // Store.dispatch(setResponse(respErr))\r\n      // Store.dispatch(serviceEnd())\r\n      snackFeed.message = \"net::ERR_CONNECTION_TIMED_OUT\"\r\n      snackFeed.severity = \"error\"\r\n      Store.dispatch(setSnackbar(snackFeed))\r\n      Store.dispatch(serviceEnd())\r\n    }\r\n\r\n  })\r\n}","\r\n// Menus with no logged condition\r\nexport const openMenuStructure = [\r\n  {\r\n    label: \"Login\",\r\n    url: \"Login\",\r\n    children: []\r\n  },\r\n  // {\r\n  //   label: \"Generic Input\",\r\n  //   url: \"GenericInput\",\r\n  //   children: []\r\n  // },\r\n  {\r\n    label: \"Register\",\r\n    url: \"Register\",\r\n    children: []\r\n  },\r\n]\r\n\r\n// Menus with logged condition\r\nexport const klinikMenuStructure = [\r\n  {\r\n    label: \"Home\",\r\n    url: \"Home\",\r\n    children: []\r\n  },\r\n  // {\r\n  //   label: \"Generic Input\",\r\n  //   url: \"GenericInput\",\r\n  //   children: []\r\n  // },\r\n  {\r\n    label: \"Order List\",\r\n    url: \"PaxList\",\r\n    children: []\r\n  },\r\n  // {\r\n  //   label: \"Voltras Admin\",\r\n  //   url: \"VoltrasAdmin\",\r\n  //   children: [\r\n  //     { label: \"Create User\", url: \"VCreateUser\", children: [] },\r\n  //     { label: \"User List\", url: \"VUserList\", children: [] },\r\n  //   ]\r\n  // },\r\n  {\r\n    label: \"Logout\",\r\n    url: \"Logout\",\r\n    children: []\r\n  },\r\n  // {\r\n  //   label: \"Home\",\r\n  //   url: \"Home\",\r\n  //   children: []\r\n  // },\r\n  // {\r\n  //   label: \"Product\",\r\n  //   url: \"Product\",\r\n  //   children: [\r\n  //     { label: \"Add New Product\", url: \"AddNewProduct\", children: [] },\r\n  //     { label: \"Manage Product\", url: \"ManageProduct\", children: [] }\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   label: \"Report\",\r\n  //   url: \"Report\",\r\n  //   children: [\r\n  //     { label: \"Booking Summary\", url: \"BookingSummary\", children: [] },\r\n  //     { label: \"Payment Summary\", url: \"PaymentSummary\", children: [] }\r\n  //   ]\r\n  // },\r\n]\r\n\r\nexport const VAMenuStructure = [\r\n  {\r\n    label: \"Home\",\r\n    url: \"Home\",\r\n    children: []\r\n  },\r\n  {\r\n    label: \"Voltras Admin\",\r\n    url: \"VoltrasAdmin\",\r\n    children: [\r\n      { label: \"Create User\", url: \"VCreateUser\", children: [] },\r\n      { label: \"User List\", url: \"VUserList\", children: [] },\r\n    ]\r\n  },\r\n  {\r\n    label: \"Logout\",\r\n    url: \"Logout\",\r\n    children: []\r\n  },\r\n  // {\r\n  //   label: \"Home\",\r\n  //   url: \"Home\",\r\n  //   children: []\r\n  // },\r\n  // {\r\n  //   label: \"Product\",\r\n  //   url: \"Product\",\r\n  //   children: [\r\n  //     { label: \"Add New Product\", url: \"AddNewProduct\", children: [] },\r\n  //     { label: \"Manage Product\", url: \"ManageProduct\", children: [] }\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   label: \"Report\",\r\n  //   url: \"Report\",\r\n  //   children: [\r\n  //     { label: \"Booking Summary\", url: \"BookingSummary\", children: [] },\r\n  //     { label: \"Payment Summary\", url: \"PaymentSummary\", children: [] }\r\n  //   ]\r\n  // },\r\n]\r\n\r\n\r\nexport const almanakMenuStructure = [\r\n  {\r\n    label: \"Home\",\r\n    url: \"Home\",\r\n    children: []\r\n  },\r\n  {\r\n    label: \"Logout\",\r\n    url: \"Logout\",\r\n    children: []\r\n  },\r\n]\r\n\r\nexport const UmrohMenuStructure = [\r\n  {\r\n    label: \"Home\",\r\n    url: \"Home\",\r\n    children: []\r\n  },\r\n  {\r\n    label: \"Product\",\r\n    url: \"Product\",\r\n    children: [\r\n      { label: \"Add New Product\", url: \"AddNewProduct\", children: [] },\r\n      { label: \"Manage Product\", url: \"ManageProduct\", children: [] }\r\n    ]\r\n  },\r\n  {\r\n    label: \"Report\",\r\n    url: \"Report\",\r\n    children: [\r\n      { label: \"Booking Summary\", url: \"BookingSummary\", children: [] },\r\n      { label: \"Payment Summary\", url: \"PaymentSummary\", children: [] }\r\n    ]\r\n  },\r\n  {\r\n    label: \"Logout\",\r\n    url: \"Logout\",\r\n    children: []\r\n  },\r\n]","\r\nimport React from 'react'\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport Config from \"../config\"\r\n\r\nlet urlImage = Config.gatewayRepoFile\r\n\r\nexport const AppStructures = [\r\n  {\r\n    aud: 'voltras-health',\r\n    name: 'Voltras Health',\r\n    domain: ['https://health.voltras.net'],\r\n    title: \"Voltras Health\",\r\n    welcome: \"Clinic Backoffice System\",\r\n    locale: 'id-Id',\r\n    backgroundLogin: urlImage + '/static-file-manager/retrieve?file=health_login_background',\r\n    backgroundApp: urlImage + '/static-file-manager/retrieve?file=health_app_background',\r\n    icon: <LocalHospitalIcon style={{ width: 50, height: 50, }} />,\r\n    openMenu: [\r\n      {\r\n        label: \"Login\",\r\n        url: \"Login\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Register\",\r\n        url: \"Register\",\r\n        children: []\r\n      },\r\n    ],\r\n    loggedMenu: [\r\n      {\r\n        label: \"Home\",\r\n        url: \"Home\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Order List\",\r\n        url: \"PaxList\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Order Report\",\r\n        url: \"KReport\",\r\n        children: [\r\n          {\r\n            label: \"All Order\",\r\n            url: \"KOrderReportAll\",\r\n            children: []\r\n          },\r\n          {\r\n            label: \"Redeemed Order\",\r\n            url: \"OrderReport\",\r\n            children: []\r\n          },]\r\n      },\r\n      {\r\n        label: \"Order Summary\",\r\n        url: \"KSummary\",\r\n        children: [\r\n          {\r\n            label: \"All Order\",\r\n            url: \"KOrderSummaryAll\",\r\n            children: []\r\n          },\r\n          {\r\n            label: \"Redeemed Order\",\r\n            url: \"KOrderSummaryRedeem\",\r\n            children: []\r\n          },]\r\n      },\r\n      {\r\n        label: \"Clinic Management\",\r\n        url: \"KClinicManager\",\r\n        children: [\r\n          {\r\n            label: \"Clinic List\",\r\n            url: \"KClinicList\",\r\n            children: []\r\n          },\r\n          {\r\n            label: \"Clinic Setting\",\r\n            url: \"KSetting\",\r\n            children: []\r\n          },\r\n          {\r\n            label: \"Clinic Registration\",\r\n            url: \"KClinicRegistration\",\r\n            children: []\r\n          },\r\n          // {\r\n          //   label: \"Clinic Scope\",\r\n          //   url: \"ClinicScope\",\r\n          //   children: []\r\n          // },\r\n        ]\r\n      },\r\n      {\r\n        label: \"Generic Configuration\",\r\n        // url: \"GenericConfiguration\",\r\n        children: [\r\n          {\r\n            label:'Configuration',\r\n            url: \"GenericConfiguration\",\r\n            children: []\r\n          },\r\n          {\r\n            label:'Catalog Product',\r\n            url:\"CatalogProduct\",\r\n            children: []\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        label: \"Logout\",\r\n        url: \"Logout\",\r\n        children: []\r\n      },\r\n    ],\r\n    requestHeader: {\r\n      'client-id': 'voltras-health',\r\n    }\r\n  }, {\r\n    aud: 'authentication-backoffice',\r\n    name: 'Voltras Backoffice',\r\n    domain: ['http://localhost:3030', 'http://172.16.10.98:3030', 'http://172.16.10.98:3032'],\r\n    title: \"VoltrasBOS\",\r\n    welcome: \"Backoffice System\",\r\n    locale: 'id-Id',\r\n    backgroundLogin: urlImage + '/static-file-manager/retrieve?file=voltras_login_background',\r\n    backgroundApp: '',\r\n    icon: <BuildIcon style={{ width: 50, height: 50, }} />,\r\n    openMenu: [\r\n      {\r\n        label: \"Login\",\r\n        url: \"Login\",\r\n        children: []\r\n      },\r\n      // {\r\n      //   label: \"Generic Input\",\r\n      //   url: \"GenericInput\",\r\n      //   children: []\r\n      // },\r\n      {\r\n        label: \"Register\",\r\n        url: \"Register\",\r\n        children: []\r\n      },\r\n    ],\r\n    loggedMenu: [\r\n      {\r\n        label: \"Home\",\r\n        url: \"Home\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Client Management\",\r\n        url: \"VoltrasClientManagement\",\r\n        children: [\r\n          { label: \"Client List\", url: \"VClientList\", children: [] },\r\n          { label: \"Create Client\", url: \"VCreateClient\", children: [] },\r\n        ]\r\n      },\r\n      {\r\n        label: \"User Management\",\r\n        url: \"VoltrasUserManagement\",\r\n        children: [\r\n          { label: \"User List\", url: \"VUserList\", children: [] },\r\n          { label: \"Create User\", url: \"VCreateUser\", children: [] },\r\n        ]\r\n      },\r\n      {\r\n        label: \"Request Specification\",\r\n        url: \"VoltrasRequestSpesification\",\r\n        children: [\r\n          { label: \"Request List\", url: \"VRequestList\", children: [] }\r\n        ]\r\n      },\r\n      {\r\n        label: \"Logout\",\r\n        url: \"Logout\",\r\n        children: []\r\n      },\r\n    ],\r\n    requestHeader: {\r\n      'client-id': 'authentication-backoffice',\r\n    }\r\n  }, {\r\n    aud: 'dummy-aud',\r\n    name: 'Dummy App',\r\n    domain: ['http://localhost:3030', 'http://172.16.10.98:3032'],\r\n    title: \"DUMMY APP\",\r\n    welcome: \"Dummy App\",\r\n    locale: 'id-Id',\r\n    backgroundLogin: '',\r\n    backgroundApp: '',\r\n    icon: < i className=\"fas fa-mosque\" style={{ width: 50, height: 50, fontSize: 40, }}></i >,\r\n    openMenu: [\r\n      {\r\n        label: \"Login\",\r\n        url: \"Login\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Logout\",\r\n        url: \"Logout\",\r\n        children: []\r\n      },\r\n    ],\r\n    loggedMenu: [\r\n      {\r\n        label: \"Home\",\r\n        url: \"Home\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Product\",\r\n        url: \"Product\",\r\n        children: [\r\n          { label: \"Add New Product\", url: \"AddNewProduct\", children: [] },\r\n          { label: \"Manage Product\", url: \"ManageProduct\", children: [] }\r\n        ]\r\n      },\r\n      {\r\n        label: \"Report\",\r\n        url: \"Report\",\r\n        children: [\r\n          { label: \"Booking Summary\", url: \"BookingSummary\", children: [] },\r\n          { label: \"Payment Summary\", url: \"PaymentSummary\", children: [] }\r\n        ]\r\n      },\r\n      {\r\n        label: \"Logout\",\r\n        url: \"Logout\",\r\n        children: []\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\n\r\nexport const menuCreator = (domain, clientId, roleChoosen) => {\r\n  // console.log(\"MENU CREATOR INIT: \", domain, clientId, roleChoosen)\r\n  let userMenu = []\r\n  let Structures = [...AppStructures]\r\n  Structures.forEach(item => {\r\n    if (item.aud === clientId) {\r\n      let allMenu = item.loggedMenu\r\n\r\n      if (clientId === 'voltras-health') {\r\n        if (roleChoosen === 'member') {\r\n          let arrMenu = allMenu.map(item => {\r\n            if (item.label === 'Clinic Management' || item.label === 'Clinic') {\r\n              item.label = 'Clinic'\r\n              item = {\r\n                ...item,\r\n                children: (item.children.filter(child => child.label !== \"Clinic Setting\"))\r\n              }\r\n            }\r\n            return item\r\n          })\r\n          userMenu = arrMenu.filter(item => item.label !== 'Order List' && item.label !== 'Order Report' && item.label !== \"Generic Configuration\")\r\n        }\r\n        else if (roleChoosen === 'clinic.operator') {\r\n          userMenu = allMenu.filter(\r\n            item => item.label !== 'Order Report'\r\n              && item.label !== 'Order Summary'\r\n              && item.label !== 'Clinic Management'\r\n              && item.label !== 'Clinic'\r\n              && item.label !== \"Generic Configuration\"\r\n          )\r\n          // console.log(\"YANG BENER: \", userMenu)\r\n        }\r\n        else if (roleChoosen === 'clinic.admin') {\r\n          let arrMenu = allMenu.map(item => {\r\n            if (item.label === 'Clinic Management' || item.label === 'Clinic') {\r\n              item = {\r\n                ...item,\r\n                children: (item.children.filter(child => child.label === \"Clinic Setting\"))\r\n              }\r\n            }\r\n            return item\r\n          })\r\n          userMenu = arrMenu.filter(item => item.label !== 'Order Report' && item.label !== \"Generic Configuration\")\r\n        }\r\n        else if (roleChoosen === 'biofarma.admin') {\r\n          let arrMenu = allMenu.map(item => {\r\n            if (item.label === 'Clinic Management' || item.label === 'Clinic') {\r\n              item = {\r\n                ...item,\r\n                children: (item.children.filter(child => child.label !== \"Clinic Setting\"))\r\n              }\r\n            }\r\n            return item\r\n          })\r\n          userMenu = arrMenu.filter(item => item.label !== 'Order List' && item.label !== \"Generic Configuration\")\r\n        }\r\n        else {\r\n          let arrMenu = allMenu.map(item => {\r\n            if (item.label === 'Clinic Management' || item.label === 'Clinic') {\r\n              item = {\r\n                ...item,\r\n                children: (item.children.filter(child => child.label !== \"Clinic Setting\"))\r\n              }\r\n            }\r\n            return item\r\n          })\r\n          userMenu = arrMenu\r\n        }\r\n      }\r\n      else userMenu = allMenu\r\n      // console.log(userMenu)\r\n    }\r\n  })\r\n  return userMenu\r\n}\r\n\r\nexport const resetMenu = (modifiedMenu, clientId) => {\r\n  let oldMenu = []\r\n  if (clientId === 'voltras-health') {\r\n    let arrMenu = modifiedMenu.map(item => {\r\n      if (item.label === 'Clinic') item.label = 'Clinic Management'\r\n      return item\r\n    })\r\n    oldMenu = arrMenu\r\n  } else oldMenu = modifiedMenu\r\n  return oldMenu\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport JwtDecoder from 'jwt-decode';\r\n\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole, clearSecondRequest, clearThirdRequest,\r\n} from './actions/ServiceActions'\r\nimport { setResponse } from './actions/ResponseActions'\r\nimport { setUserInfo, setUserSessionInfo, setUserOtpId, setRoleUsed, setResetPasswordCode } from \"./actions/UserInfoActions\";\r\nimport { setUserMenu, setMenuCollapseStatus } from \"./actions/MenuActions\";\r\nimport {\r\n  setPaxList, setPaxDetail, setPaxProduct, setKlinikList, setCityList, setClinikUser,\r\n  setClinikDetail, setClinicRecapt, setMyClinic, setClinicsParents, setParentList, setClinicRecaptLogistic\r\n} from \"./actions/PaxListActions\";\r\nimport { setSnackbar, setDialog } from './actions/FeedbackActions'\r\nimport { dispatchLogout, setPopChooseRole, setGoogleParams, setSystemOtpId } from './actions/SystemActions'\r\nimport { setUserList, setUserDetail, setUserFilteredList } from \"./actions/UserListActions\";\r\nimport { setClientList, setClientMessagingList } from \"./actions/ClientListActions\";\r\nimport { setRequestList } from './actions/RequestListAction'\r\nimport { setGenericConfigList, setConfigDetail, setConfigDetailModal, setGeneralProductCatalog } from './actions/GenericConfigurationActions';\r\n\r\nimport { SendToService } from './services/ServiceClient'\r\nimport { openMenuStructure } from \"./utils/MenuStructure\";\r\nimport { menuCreator } from './utils/AppStructures';\r\nimport FormatText from './i18n'\r\n\r\nconst mapStateToProps = state => ({ service: state.service, userInfo: state.userInfo.info, clientList: state.clientList })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  _logout: () => { dispatch(dispatchLogout()); dispatch(setUserMenu(openMenuStructure)) },\r\n  _setGoogleParams: val => dispatch(setGoogleParams(val)), _setResetPasswordCode: val => dispatch(setResetPasswordCode(val)),\r\n  _setClinicRecapt: val => dispatch(setClinicRecapt(val)), _setPopChooseRole: val => dispatch(setPopChooseRole(val)),\r\n  _setResponse: val => dispatch(setResponse(val)), _setUserMenu: val => dispatch(setUserMenu(val)),\r\n  _setMenuCollapseStatus: val => dispatch(setMenuCollapseStatus(val)), _setPaxList: val => dispatch(setPaxList(val)),\r\n  _setPaxDetail: val => dispatch(setPaxDetail(val)), _setPaxProduct: val => dispatch(setPaxProduct(val)),\r\n  _setKlinikList: val => dispatch(setKlinikList(val)), _setUserSessionInfo: val => dispatch(setUserSessionInfo(val)),\r\n  _setUserInfo: val => dispatch(setUserInfo(val)), _setUserOtpId: val => dispatch(setUserOtpId(val)),\r\n  _setUserList: val => dispatch(setUserList(val)), _setUserDetail: val => dispatch(setUserDetail(val)),\r\n  _setClientList: val => dispatch(setClientList(val)), _setSnackbar: val => dispatch(setSnackbar(val)),\r\n  _setDialog: val => dispatch(setDialog(val)), _setUserFilteredList: val => dispatch(setUserFilteredList(val)),\r\n  _setCityList: val => dispatch(setCityList(val)), _setClinicUser: val => dispatch(setClinikUser(val)),\r\n  _setRoleUsed: val => dispatch(setRoleUsed(val)), _clearSecondRequest: () => dispatch(clearSecondRequest()),\r\n  _clearThirdRequest: () => dispatch(clearThirdRequest()), _setClinikDetail: val => dispatch(setClinikDetail(val)),\r\n  _setCompleteRequest: (val) => {\r\n    dispatch(setServiceRequest(val.request)); dispatch(setServiceMethod(val.method)); dispatch(setServiceCode(val.serviceCode));\r\n    dispatch(setServiceParams(val.urlParams)); dispatch(setServiceCustomHeaders(val.customHeaders));\r\n    dispatch(setServiceRole(val.serviceRole)); dispatch(setServiceStatus(\"active\"));\r\n  },\r\n  _setSystemOtpId: val => dispatch(setSystemOtpId(val)), _setMyClinic: val => dispatch(setMyClinic(val)),\r\n  setGenericConfigList: (data) => dispatch(setGenericConfigList(data)),\r\n  setConfigDetail: (val) => dispatch(setConfigDetail(val)),\r\n  setConfigDetailModal: (val) => dispatch(setConfigDetailModal(val)),\r\n  _setGeneralProductCatalog: val => dispatch(setGeneralProductCatalog(val)),\r\n  _setClinicParent: val => dispatch(setClinicsParents(val)),\r\n  _setRequestList: val => dispatch(setRequestList(val)),\r\n  _setClientMessagingList: val => dispatch(setClientMessagingList(val)),\r\n  _setParentList: val => dispatch(setParentList(val)), setClinicRecaptLogistic: val => dispatch(setClinicRecaptLogistic(val)),\r\n})\r\n\r\nclass Executor extends Component {\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    const { setGenericConfigList, setConfigDetailModal, setConfigDetail, _setGeneralProductCatalog } = this.props;\r\n    let domain = window.location.origin\r\n    let old = this.props.service.status\r\n    let next = nextProps.service.status\r\n    if (old !== next) {\r\n      const { request, method, params, serviceCode, status, customHeaders, role, file } = nextProps.service\r\n      let successSnackbar = { open: true, severity: \"success\", message: \"Successful\", action: false, actionLabel: \"\" }\r\n\r\n      if (serviceCode && (status === \"active\")) {\r\n        SendToService(request, method, serviceCode, params, customHeaders, role, file, response => {\r\n          let phone = this.props.userInfo.phone ? this.props.userInfo.phone : \"\"\r\n          let customHeaders = {\r\n            email: this.props.userInfo.email,\r\n            phone: this.props.userInfo.phone,\r\n            name: this.props.userInfo.name ? this.props.userInfo.name : \"\",\r\n          }\r\n          if (phone) customHeaders.phone = phone\r\n          let requestAllClient = {\r\n            request: {},\r\n            method: \"GET\",\r\n            serviceCode: \"SELECT_ALL_CLIENT\",\r\n            customHeaders,\r\n          }\r\n          let requestAllUser = {\r\n            request: {},\r\n            method: \"GET\",\r\n            serviceCode: \"SELECT_ALL_USER\",\r\n            customHeaders,\r\n          }\r\n          let getClinicUserRequest = {\r\n            request: {},\r\n            method: \"GET\",\r\n            serviceCode: \"GET_CLINIC_USER\",\r\n            customHeaders,\r\n          }\r\n          let healthKlinikRequest = {\r\n            request: {},\r\n            method: \"GET\",\r\n            serviceCode: \"healthKlinik\",\r\n            urlParams: \"\",\r\n            customHeaders,\r\n          }\r\n\r\n          let body = response.body\r\n          this.props._setResponse(response)\r\n          if (!body.error) {\r\n            switch (serviceCode) {\r\n              case \"login\":\r\n                if (body.otpID) {\r\n                  this.props._setUserOtpId(body.otpID)\r\n                }\r\n                else {\r\n                  // accessToken to localStorage\r\n                  localStorage.setItem(\"accessToken\", body.accessToken)\r\n                  localStorage.setItem(\"key\", body.key)\r\n                  localStorage.setItem(\"idToken\", body.idToken)\r\n                  let userInfo = JwtDecoder(body.idToken)\r\n                  let oldRole = userInfo.role\r\n                  let newRole = []\r\n                  if (oldRole.length > 1 && oldRole.includes('member')) newRole = oldRole.filter(item => item !== 'member')\r\n                  else newRole = oldRole\r\n                  userInfo.role = newRole\r\n                  this.props._setUserInfo(userInfo)\r\n                  this.props._setUserSessionInfo(body)\r\n                  let aud = userInfo.aud\r\n                  localStorage.setItem(\"aud\", aud)\r\n                  let role = newRole\r\n                  if (role.length > 1) {\r\n                    this.props._setPopChooseRole(true)\r\n                  }\r\n                  else {\r\n                    localStorage.setItem(\"roleUsed\", role[0])\r\n                    let newMenu = menuCreator(domain, aud, role[0])\r\n                    let obj = {}\r\n                    if (newMenu.length > 0) newMenu.map(item => {\r\n                      return obj = {\r\n                        ...obj,\r\n                        [item.url]: false,\r\n                      }\r\n                    })\r\n                    this.props._setMenuCollapseStatus(obj)\r\n                    this.props._setRoleUsed(role[0])\r\n                    this.props._setUserMenu(newMenu)\r\n                    this.props.history.push('/Home')\r\n                  }\r\n                }\r\n                break;\r\n\r\n              case 'OTP':\r\n                if (body.otpID) {\r\n                  this.props._setUserOtpId(body.otpID)\r\n                }\r\n                else {\r\n                  // accessToken to localStorage\r\n                  localStorage.setItem(\"accessToken\", body.accessToken)\r\n                  localStorage.setItem(\"key\", body.key)\r\n                  localStorage.setItem(\"idToken\", body.idToken)\r\n                  let userInfo = JwtDecoder(body.idToken)\r\n                  let oldRole = userInfo.role\r\n                  let newRole = []\r\n                  if (oldRole.length > 1 && oldRole.includes('member')) newRole = oldRole.filter(item => item !== 'member')\r\n                  else newRole = oldRole\r\n                  userInfo.role = newRole\r\n                  this.props._setUserInfo(userInfo)\r\n                  this.props._setUserSessionInfo(body)\r\n                  let aud = userInfo.aud\r\n                  localStorage.setItem(\"aud\", aud)\r\n                  let role = newRole\r\n                  if (role.length > 1) {\r\n                    this.props._setPopChooseRole(true)\r\n                  }\r\n                  else {\r\n                    localStorage.setItem(\"roleUsed\", role[0])\r\n                    let newMenu = menuCreator(domain, aud, role[0])\r\n                    let obj = {}\r\n                    if (newMenu.length > 0) newMenu.map(item => {\r\n                      return obj = {\r\n                        ...obj,\r\n                        [item.url]: false,\r\n                      }\r\n                    })\r\n                    this.props._setMenuCollapseStatus(obj)\r\n                    this.props._setRoleUsed(role[0])\r\n                    this.props._setUserMenu(newMenu)\r\n                    this.props.history.push('/Home')\r\n                  }\r\n                }\r\n                break;\r\n\r\n              case 'logout':\r\n                this.props._setUserMenu(openMenuStructure)\r\n                localStorage.clear()\r\n                this.props.history.push('/Login')\r\n                this.props._logout()\r\n                break;\r\n\r\n              case \"register\":\r\n                successSnackbar.message = FormatText('app_regis_sucess_msg')\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props.history.push('/Login')\r\n                break;\r\n\r\n              case 'UPDATE_USER_INFO':\r\n                localStorage.setItem(\"idToken\", body.idToken)\r\n                let updatedUserInfo = JwtDecoder(body.idToken)\r\n                this.props._setUserInfo(updatedUserInfo)\r\n                successSnackbar.message = FormatText('app_success_update_account')\r\n                this.props._setSnackbar(successSnackbar)\r\n                break\r\n\r\n              case 'RESET_PASSWORD_REQUEST':\r\n                successSnackbar.message = \"Send email successful\"\r\n                successSnackbar.severity = \"info\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                break;\r\n\r\n              case 'CHANGE_PASSWORD_REQUEST':\r\n                successSnackbar.message = \"Change password successful, proceed to sign in\"\r\n                successSnackbar.severity = \"info\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setResetPasswordCode(null)\r\n                break;\r\n\r\n              case 'SEND_EMAIL_VERIFICATION':\r\n                successSnackbar.message = FormatText('app_email_success_msg')\r\n                successSnackbar.severity = \"info\"\r\n                successSnackbar.position = 'bottom-center'\r\n                successSnackbar.action = false\r\n                this.props._setSnackbar(successSnackbar)\r\n                break;\r\n\r\n              case 'SEND_PHONE_VERIFICATION':\r\n                this.props._setSystemOtpId(body.otpID)\r\n                // successSnackbar.message = FormatText('app_sms_success_msg')\r\n                // successSnackbar.severity = \"info\"\r\n                // successSnackbar.position = 'bottom-center'\r\n                // successSnackbar.action = false\r\n                // this.props._setSnackbar(successSnackbar)\r\n                break;\r\n\r\n              case 'VERIFICATION_CHECK':\r\n                successSnackbar.message = FormatText('app_verification_succes')\r\n                successSnackbar.severity = \"success\"\r\n                successSnackbar.position = 'bottom-center'\r\n                successSnackbar.action = false\r\n                this.props._setSnackbar(successSnackbar)\r\n                break;\r\n\r\n              case 'REQ_AUTH_GOOGLE_PARAMS':\r\n                this.props._setGoogleParams(body)\r\n                break\r\n\r\n              case 'HEALTH_ORDER_DETAIL':\r\n                if (Array.isArray(body) && body.length > 0) {\r\n                  this.props._setPaxDetail(body)\r\n                  this.props.history.push('/PaxDetail')\r\n                }\r\n                else {\r\n                  successSnackbar.message = \"Order not found\"\r\n                  successSnackbar.severity = 'error'\r\n                  this.props._setSnackbar(successSnackbar)\r\n                }\r\n                break\r\n\r\n              case \"healthOrder\":\r\n                if (Array.isArray(body) && body.length > 0) {\r\n                  body.sort((a, b) => {\r\n                    let x = a.id\r\n                    let y = b.id\r\n                    return y - x\r\n                  })\r\n                  this.props._setPaxList(body)\r\n                }\r\n                else {\r\n                  this.props._setPaxList([])\r\n                  successSnackbar.message = \"Order not found\"\r\n                  successSnackbar.severity = 'error'\r\n                  this.props._setSnackbar(successSnackbar)\r\n                  // this.props._setPaxList([])\r\n                }\r\n                break;\r\n\r\n              case 'PURCHASE_VOUCHER_NUMBER':\r\n                if (Array.isArray(body) && body.length > 0) {\r\n                  this.props._setPaxDetail(body)\r\n                  this.props.history.push('/PaxDetail')\r\n                }\r\n                else {\r\n                  this.props._setPaxList([])\r\n                  successSnackbar.message = \"Order not found\"\r\n                  successSnackbar.severity = 'error'\r\n                  this.props._setSnackbar(successSnackbar)\r\n                }\r\n                break\r\n\r\n              case 'GET_ALL_ORDER':\r\n                this.props._setClinicRecapt(body)\r\n                break\r\n\r\n              case 'RESCHEDULE_ORDER':\r\n                successSnackbar.message = \"Reschedule order successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props.history.push('/PaxList')\r\n                break\r\n\r\n              case \"healthProduct\":\r\n                this.props._setPaxProduct(body)\r\n                if (this.props.service.secondRequest) this.props._setCompleteRequest(this.props.service.secondRequest)\r\n                this.props._clearSecondRequest()\r\n                break;\r\n\r\n              case 'healthKlinik':\r\n                this.props._setKlinikList(body)\r\n                break;\r\n\r\n              case \"SELECT_USER_FULL_INFO\":\r\n                this.props._setUserInfo(body)\r\n                break;\r\n\r\n              case 'SELECT_USER_DETAIL_FULL_INFO':\r\n                this.props._setUserDetail(body)\r\n                this.props._setUserList([body])\r\n                break;\r\n\r\n              case 'SELECT_ALL_USER':\r\n                this.props._setUserList(body.items)\r\n                break;\r\n\r\n              case 'CREATE_BO_USER':\r\n                successSnackbar.message = \"Create User Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(requestAllUser)\r\n                this.props.history.push('/VUserList')\r\n                break;\r\n\r\n              case 'UPDATE_USER_ROLE':\r\n                successSnackbar.message = \"Update User Role Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(requestAllUser)\r\n                this.props._setUserFilteredList(body.items)\r\n                break;\r\n\r\n              case 'DELETE_USER':\r\n                successSnackbar.message = \"Delete User Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(requestAllUser)\r\n                break;\r\n\r\n              case 'UPDATE_BASIC_USER':\r\n                successSnackbar.message = \"Update Basic Info User Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(requestAllUser)\r\n                break;\r\n              case 'UPDATE_TEMPLATE_MESSAGE':\r\n                successSnackbar.message = \"Update Client Detail Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(requestAllClient)\r\n                break;\r\n\r\n              case 'SELECT_ALL_MESSAGE':\r\n                let messagingList = body.items\r\n                if (Array.isArray(messagingList) && messagingList.length > 0) {\r\n                  messagingList.sort((a, b) => {\r\n                    let x = a.creationDate\r\n                    let y = b.creationDate\r\n                    return y - x\r\n                  })\r\n                  this.props._setClientMessagingList(messagingList)\r\n                }\r\n                else this.props._setClientMessagingList([])\r\n                break;\r\n\r\n              case 'SELECT_ALL_CLIENT':\r\n                let clientList = body.items\r\n                if (Array.isArray(clientList) && clientList.length > 0) {\r\n                  clientList.sort((a, b) => {\r\n                    let x = a.creationDate\r\n                    let y = b.creationDate\r\n                    return y - x\r\n                  })\r\n                  this.props._setClientList(clientList)\r\n                }\r\n                else this.props._setClientList([])\r\n                break;\r\n              case 'SELECT_ALL_REQUEST':\r\n                let requestList = body.items\r\n                if (Array.isArray(requestList) && requestList.length > 0) {\r\n                  requestList.sort((a, b) => {\r\n                    let x = a.creationDate\r\n                    let y = b.creationDate\r\n                    return y - x\r\n                  })\r\n                  this.props._setRequestList(requestList)\r\n                }\r\n                else this.props._setRequestList([])\r\n                this.props._setCompleteRequest(requestAllClient)\r\n                break;\r\n              case 'CREATE_CLIENT':\r\n                successSnackbar.message = \"Create Client Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(requestAllClient)\r\n                this.props.history.push('/VClientList')\r\n                break;\r\n\r\n              case 'ADD_CLIENT_ROLE':\r\n                successSnackbar.message = \"Add Client Role Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(requestAllClient)\r\n                break;\r\n              case \"UPDATE_CLIENT_DETAIL\":\r\n                successSnackbar.message = \"Update Client Detail Successful\"\r\n                let messagingEdit = this.props.clientList.messagingEdit\r\n                if (messagingEdit.updateMessageTemplate) {\r\n                  let messageTemplateId = messagingEdit.messagingTemplateId\r\n                  let method = \"PATCH\"\r\n                  let serviceCode = \"UPDATE_TEMPLATE_MESSAGE\"\r\n                  let urlParams = `/clients/${messagingEdit.clientId}/messaging-templates/${messageTemplateId}`\r\n                  let request = {\r\n                    ...messagingEdit\r\n                  }\r\n                  // delete request.clientId\r\n                  delete request.updateMessageTemplate\r\n                  // console.log('request',request)\r\n                  let completeRequests = { request, method, serviceCode, urlParams }\r\n                  this.props._setCompleteRequest(completeRequests)\r\n                  break;\r\n                }\r\n                else {\r\n                  this.props._setSnackbar(successSnackbar)\r\n                  this.props._setCompleteRequest(requestAllClient)\r\n                  break;\r\n                }\r\n              case 'DELETE_CLIENT_ROLE':\r\n                successSnackbar.message = \"Delete Client Role Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(requestAllClient)\r\n                break;\r\n\r\n              case 'DELETE_CLIENT':\r\n                successSnackbar.message = \"Delete Client Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(requestAllClient)\r\n                break;\r\n              case 'ADD_REQUEST_SPESIFICATIONS':\r\n                successSnackbar.message = \"Add Request Spesifiactions Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest({\r\n                  ...requestAllClient,\r\n                  serviceCode: 'SELECT_ALL_REQUEST'\r\n                })\r\n                break;\r\n              case 'UPDATE_REQUEST_SPESIFICATIONS':\r\n                successSnackbar.message = \"Update Request Spesifiactions Successful\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest({\r\n                  ...requestAllClient,\r\n                  serviceCode: 'SELECT_ALL_REQUEST'\r\n                })\r\n                break;\r\n\r\n              case 'GET_CITY_LIST':\r\n                let newArr = []\r\n                if (Array.isArray(body)) {\r\n                  if (body.length > 0) {\r\n                    body.forEach(item => {\r\n                      if (item.name) newArr.push(item)\r\n                      else newArr.push({ city: item })\r\n                    })\r\n                    this.props._setCityList(newArr)\r\n                  }\r\n                }\r\n                break;\r\n\r\n              case 'GET_CITY_CLINIC_LIST':\r\n                let newCLinicArr = []\r\n                if (Array.isArray(body)) {\r\n                  if (body.length > 0) {\r\n                    body.forEach(item => {\r\n                      if (item.name) newCLinicArr.push(item)\r\n                      else newCLinicArr.push({ city: item })\r\n                    })\r\n                    this.props._setKlinikList(newCLinicArr)\r\n                  }\r\n                  else this.props._setKlinikList(newCLinicArr)\r\n                }\r\n                break;\r\n\r\n\r\n              case 'CLINIC_REGISTRATION':\r\n                successSnackbar.message = FormatText('clinic_regis_sucess')\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(healthKlinikRequest)\r\n                if (this.props.userInfo.roleUsed !== 'member') this.props.history.push('/KClinicList')\r\n                else this.props.history.push('/Home')\r\n                break;\r\n\r\n              case 'SEND_CLINIC_ACTIVATION':\r\n                successSnackbar.message = FormatText('clinic_activation_success')\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setCompleteRequest(healthKlinikRequest)\r\n                break;\r\n\r\n              case 'ADD_CLINIC_USER':\r\n                successSnackbar.message = FormatText('clinic_add_user_success')\r\n                this.props._setSnackbar(successSnackbar)\r\n                if (this.props.service.secondRequest) this.props._setCompleteRequest(this.props.service.secondRequest)\r\n                this.props._clearSecondRequest()\r\n                break;\r\n\r\n              case 'DELETE_CLINIC_USER':\r\n                successSnackbar.message = FormatText('clinic_delete_user_success')\r\n                this.props._setSnackbar(successSnackbar)\r\n                if (this.props.service.secondRequest) this.props._setCompleteRequest(this.props.service.secondRequest)\r\n                this.props._clearSecondRequest()\r\n                break;\r\n\r\n              case 'DELETE_CLINIC':\r\n                successSnackbar.message = FormatText('clinic_delete_sucess')\r\n                this.props._setSnackbar(successSnackbar)\r\n                if (this.props.service.secondRequest) this.props._setCompleteRequest(this.props.service.secondRequest)\r\n                this.props._clearSecondRequest()\r\n                break;\r\n\r\n              case 'GET_CLINIC_USER':\r\n                this.props._setClinicUser(body)\r\n                if (!this.props.service.secondRequest) this.props.history.push('/KSetting')\r\n                this.props._clearSecondRequest()\r\n                break;\r\n\r\n              case 'GET_MY_CLINIC':\r\n                if (body[0]) {\r\n                  getClinicUserRequest.urlParams = `/${body[0].clinic_id}`\r\n                  this.props._setCompleteRequest(getClinicUserRequest)\r\n                  this.props._setMyClinic(body[0])\r\n                }\r\n                break;\r\n\r\n              case 'GET_CLINIC_REPORT':\r\n                this.props._setClinicRecapt(body)\r\n                break;\r\n\r\n              case 'RECAPT_CLINIC_SUMMARY':\r\n                this.props.setClinicRecaptLogistic(body)\r\n                break;\r\n\r\n              case 'RECAPT_BIOFARMA_SUMMARY':\r\n                this.props.setClinicRecaptLogistic(body)\r\n                break;\r\n\r\n              case 'ADD_CLINIC_LOGO':\r\n                successSnackbar.message = FormatText('clinic_change_logo_success')\r\n                this.props._setSnackbar(successSnackbar)\r\n                break\r\n\r\n              case 'EDIT_CLINIC_SETTING':\r\n                successSnackbar.message = \"Edit clinic setting success.\"\r\n                this.props._setSnackbar(successSnackbar)\r\n                this.props._setClinicUser(body)\r\n                break\r\n\r\n              case 'GENERIC_JSON_CONFIGURATION':\r\n                setGenericConfigList(body);\r\n                break;\r\n              case 'GENERIC_JSON_CONFIGURATION_DETAIL':\r\n                setConfigDetail(body);\r\n                setConfigDetailModal(true);\r\n                break;\r\n              case 'GENERIC_JSON_CONFIGURATION_UPDATE':\r\n                setConfigDetailModal(false);\r\n                // setGenericConfigList(body);\r\n                successSnackbar.message = 'Update Configuration Success'\r\n                successSnackbar.severity = \"success\"\r\n                successSnackbar.position = 'bottom-center'\r\n                successSnackbar.action = false\r\n                this.props._setSnackbar(successSnackbar);\r\n\r\n                // console.log('SECOND REQUEST', this.props.service.secondRequest)\r\n                //Panggil request ulang\r\n                if (this.props.service.secondRequest) this.props._setCompleteRequest(this.props.service.secondRequest)\r\n                this.props._clearSecondRequest()\r\n                break;\r\n              case 'GENERAL_PRODUCT_CATALOG':\r\n                _setGeneralProductCatalog(body)\r\n                break\r\n              case 'GENERAL_PRODUCT_CATALOG_CREATE':\r\n                setConfigDetailModal(false);\r\n                // setGenericConfigList(body);\r\n                successSnackbar.message = 'Create product catalog is success'\r\n                successSnackbar.severity = \"success\"\r\n                successSnackbar.position = 'bottom-center'\r\n                successSnackbar.action = false\r\n                this.props._setSnackbar(successSnackbar);\r\n                this.props._setCompleteRequest({\r\n                  request: {},\r\n                  method: 'GET',\r\n                  serviceCode: 'GENERAL_PRODUCT_CATALOG',\r\n                  customHeaders: {\r\n                    clientId: 'voltras-health'\r\n                  }\r\n                })\r\n\r\n                break\r\n              case 'GENERAL_PRODUCT_CATALOG_UPDATE':\r\n                setConfigDetailModal(false);\r\n                // setGenericConfigList(body);\r\n                successSnackbar.message = 'Update Product catalog success'\r\n                successSnackbar.severity = \"success\"\r\n                successSnackbar.position = 'bottom-center'\r\n                successSnackbar.action = false\r\n                this.props._setSnackbar(successSnackbar);\r\n                // this.props._setCompleteRequest(this.props.service.secondRequest)\r\n                this.props._setCompleteRequest({\r\n                  request: {},\r\n                  method: 'GET',\r\n                  serviceCode: 'GENERAL_PRODUCT_CATALOG',\r\n                  customHeaders: {\r\n                    clientId: 'voltras-health'\r\n                  }\r\n                })\r\n                break\r\n              case 'GET_CLINIC_PARENTS':\r\n                this.props._setClinicParent(body)\r\n                if (this.props.service.secondRequest) this.props._setCompleteRequest(this.props.service.secondRequest)\r\n                this.props._clearSecondRequest()\r\n                break\r\n\r\n              case 'GET_PARENT_LIST':\r\n                this.props._setParentList(body)\r\n                break\r\n\r\n\r\n              default:\r\n                break;\r\n\r\n            }\r\n          }\r\n          else if (serviceCode === 'logout') this.props.history.push('/Login')\r\n        })\r\n      }\r\n    }\r\n  }\r\n  render() { return <div > </div> }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Executor)\r\n","\r\nexport const setClientList = val => {\r\n  return {\r\n    type: 'SET_CLIENT_LIST',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setClientDetail = val => {\r\n  return {\r\n    type: 'SET_CLIENT_DETAIL',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setClientFilteredList = val => {\r\n  return {\r\n    type: 'SET_CLIENT_FILTERED_LIST',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setClientMessagingList = val =>{\r\n  return {\r\n    type:'SET_CLIENT_MESSAGE_LIST',\r\n    val\r\n  }\r\n}\r\n\r\nexport const setClientMessagingEdit = val =>{\r\n  return {\r\n    type:'SET_CLIENT_MESSAGE_EDIT',\r\n    val\r\n  }\r\n}\r\n","export const setRequestList = val => {\r\n    return {\r\n      type: 'SET_REQUEST_LIST',\r\n      val\r\n    }\r\n  }\r\n  \r\n  export const setRequestDetail = val => {\r\n    return {\r\n      type: 'SET_REQUEST_DETAIL',\r\n      val\r\n    }\r\n  }\r\n  \r\n//   export const setClientFilteredList = val => {\r\n//     return {\r\n//       type: 'SET_CLIENT_FILTERED_LIST',\r\n//       val\r\n//     }\r\n//   }","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    response: state.response\r\n  }\r\n}\r\n\r\nclass MySnackBar extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      message: \"\",\r\n      autoHideDuration: 2000,\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    // console.log(\"STATIC PROPS: \", props, state)\r\n    let error = props.response.response\r\n      ? props.response.response.body\r\n        ? props.response.response.body.error\r\n        : false\r\n      : false\r\n    let message = props.response.response\r\n      ? props.response.response.body\r\n        ? props.response.response.body.errorDescription\r\n        : \"\"\r\n      : \"\"\r\n\r\n    if (error) {\r\n      if (error === 'error.auth.securityValidation.invalidAccessToken') {\r\n        localStorage.clear()\r\n        setTimeout(() => {\r\n          props.history.push('/Login')\r\n        }, 2000);\r\n        return { ...state, open: true, message }\r\n      }\r\n      else if (error === \"error.auth.securityValidation.emailNotVerified\") return { ...state, open: false, }\r\n      else if (error === \"error.auth.securityValidation.phoneNotVerified\") return { ...state, open: false, }\r\n      else return { ...state, open: true, message }\r\n    }\r\n\r\n    // Return null to indicate no change to state.\r\n    return null;\r\n  }\r\n\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   let error = nextProps.response.response.body.error\r\n  //   let message = nextProps.response.response.body.errorDescription ? nextProps.response.response.body.errorDescription : \"\"\r\n  //   if (error) {\r\n  //     if (error === 'error.auth.securityValidation.invalidAccessToken') {\r\n  //       this.setState({ ...this.state, open: true, message })\r\n  //       localStorage.clear()\r\n  //       setTimeout(() => {\r\n  //         this.props.history.push('/Login')\r\n  //       }, 2000);\r\n  //     }\r\n  //     else if (error === \"error.auth.securityValidation.emailNotVerified\") this.setState({ ...this.state, open: false, })\r\n  //     else if (error === \"error.auth.securityValidation.phoneNotVerified\") this.setState({ ...this.state, open: false, })\r\n  //     else this.setState({ ...this.state, open: true, message })\r\n  //   }\r\n  //   else {\r\n  //     this.setState({ ...this.state, open: false, })\r\n  //   }\r\n  // }\r\n\r\n  handleClose = () => {\r\n    this.setState({ ...this.state, open: false })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n        <Snackbar open={this.state.open} autoHideDuration={this.state.autoHideDuration} onClose={this.handleClose}>\r\n          <MuiAlert elevation={6} variant=\"filled\" onClose={this.handleClose} severity=\"error\">\r\n            {this.state.message}\r\n          </MuiAlert>\r\n        </Snackbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MySnackBar)\r\n","\r\nimport React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Hidden } from '@material-ui/core';\r\nimport FormatText from '../../i18n'\r\n\r\nconst KlinikHome = ({ ...props }) => {\r\n  const { _setCompleteRequest, _setSecondRequest, history, userInfo, _setVerificationCode, clinic } = props\r\n  const [state, setState] = useState({\r\n    voucherId: '',\r\n    voucherIdErrorMessage: '',\r\n    submitErrorMessage: '',\r\n    disabled: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n    function isMobile() {\r\n      return ((window.innerWidth <= 800) && (window.innerHeight <= 600));\r\n    }\r\n    const { screen } = window\r\n    if (!navigator.xr && isMobile() && screen.orientation && screen.orientation.lock) {\r\n      screen.orientation.lock('landscape');\r\n    }\r\n\r\n    let name = userInfo.info.name ? userInfo.info.name : ''\r\n    let email = userInfo.info.email ? userInfo.info.email : ''\r\n    let phone = userInfo.info.phone ? userInfo.info.phone : ''\r\n    let customHeaders = { email, name }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let roleUsed = userInfo.roleUsed\r\n    setState(prevState => ({ ...prevState, disabled: roleUsed === 'biofarma.admin' ? true : false }))\r\n\r\n    if ((roleUsed === 'clinic.admin')) {\r\n      let myClinicRequest = {\r\n        request: {},\r\n        method: \"GET\",\r\n        serviceCode: \"GET_MY_CLINIC\",\r\n        customHeaders,\r\n      }\r\n      _setCompleteRequest(myClinicRequest)\r\n      _setSecondRequest(true)\r\n\r\n    }\r\n  }, [userInfo, _setCompleteRequest, _setSecondRequest])\r\n\r\n  useEffect(() => {\r\n    let name = userInfo.info.name ? userInfo.info.name : ''\r\n    let email = userInfo.info.email ? userInfo.info.email : ''\r\n    let phone = userInfo.info.phone ? userInfo.info.phone : ''\r\n    let verificationCode = userInfo.verificationCode ? userInfo.verificationCode : ''\r\n    let customHeaders = { email, name }\r\n    if (phone) customHeaders = phone\r\n    let request = { redirectURI: \"http://www.alamanak.co.id\", verificationCode }\r\n\r\n    let verificationCheckRequest = {\r\n      request,\r\n      method: \"POST\",\r\n      serviceCode: \"VERIFICATION_CHECK\",\r\n      params: `/email`,\r\n      customHeaders,\r\n    }\r\n    if (verificationCode) {\r\n      _setCompleteRequest(verificationCheckRequest)\r\n      _setVerificationCode(null)\r\n    }\r\n  }, [userInfo, _setCompleteRequest, _setVerificationCode])\r\n\r\n  const handleChange = prop => event => {\r\n    if (prop === 'voucherId') {\r\n      if (event.target.value.length === 0) {\r\n        setState({\r\n          ...state,\r\n          [prop]: event.target.value,\r\n          isError: true,\r\n          voucherIdErrorMessage: \"OrderId must be filled\"\r\n        })\r\n      }\r\n      else {\r\n        setState({\r\n          ...state,\r\n          [prop]: event.target.value,\r\n          isError: false,\r\n          voucherIdErrorMessage: \"\",\r\n          submitErrorMessage: \"\"\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleEnter = event => {\r\n    if (event.which === 13 && event.key === \"Enter\") {\r\n      let orderId = state.voucherId\r\n\r\n      let name = userInfo.info.name ? userInfo.info.name : ''\r\n      let email = userInfo.info.email ? userInfo.info.email : ''\r\n      let phone = userInfo.info.phone ? userInfo.info.phone : ''\r\n      let customHeaders = { email, name }\r\n      if (phone) customHeaders.phone = phone\r\n      if (orderId) {\r\n        let healthOrderRequest = {\r\n          request: {},\r\n          method: \"GET\",\r\n          serviceCode: \"HEALTH_ORDER_DETAIL\",\r\n          params: `/${orderId.toString()}`,\r\n          customHeaders\r\n        }\r\n        _setCompleteRequest(healthOrderRequest)\r\n\r\n      }\r\n      else {\r\n        setState({\r\n          ...state,\r\n          isError: true,\r\n          voucherIdErrorMessage: \"OrderId must be filled\"\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    let orderId = state.voucherId\r\n\r\n    let name = userInfo.info.name ? userInfo.info.name : ''\r\n    let email = userInfo.info.email ? userInfo.info.email : ''\r\n    let phone = userInfo.info.phone ? userInfo.info.phone : ''\r\n    let customHeaders = { email, name }\r\n    if (phone) customHeaders.phone = phone\r\n    if (orderId) {\r\n      let healthOrderRequest = {\r\n        request: {},\r\n        method: \"GET\",\r\n        serviceCode: \"HEALTH_ORDER_DETAIL\",\r\n        params: `/${orderId.toString()}`,\r\n        customHeaders\r\n      }\r\n      _setCompleteRequest(healthOrderRequest)\r\n\r\n    }\r\n    else {\r\n      setState({\r\n        ...state,\r\n        isError: true,\r\n        voucherIdErrorMessage: \"OrderId must be filled\"\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container direction=\"row\" >\r\n      <Hidden xsDown >\r\n        <Grid item sm={state.disabled ? 12 : 7}>\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems='flex-start' style={{ marginTop: 40 }} >\r\n            <Grid item sm={2}> </Grid>\r\n            <Grid item sm={5} style={{ marginTop: 40 }} >\r\n              <Grid >  <Typography variant='h6' color='primary' >{clinic ? clinic.name : \"Clinic Backoffice\"}</Typography>  </Grid>\r\n              <Grid >  <Typography variant='h5' >{FormatText('app_welcome')}</Typography> </Grid>\r\n              <Grid>  <Typography variant='subtitle2' >{userInfo.roleUsed ? userInfo.roleUsed : ''}</Typography> </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Hidden>\r\n      <Grid item xs={12} sm={5}>\r\n        {\r\n          state.disabled\r\n            ? null\r\n            : <Grid container direction=\"row\" justify='flex-start' alignItems='flex-start' style={{ marginTop: 15 }} >\r\n              <Card variant=\"elevation\" >\r\n                <center>\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\" ><b>Order Details</b> </Typography>\r\n                    <Typography variant=\"caption\" style={{ marginBottom: 15 }} >Search by </Typography>\r\n                    <div>\r\n                      <br />\r\n                      <FormControl disabled={state.disabled} fullWidth style={{ marginBottom: 5 }}  >\r\n                        <InputLabel error={state.voucherIdErrorMessage ? true : false} htmlFor=\"standard-voucherId\">Order ID</InputLabel>\r\n                        <Input\r\n                          autoFocus\r\n                          error={state.voucherIdErrorMessage ? true : false}\r\n                          id=\"standard-adornment-voucherId\"\r\n                          type=\"text\"\r\n                          value={state.voucherId}\r\n                          onChange={handleChange('voucherId')}\r\n                          onKeyPress={handleEnter}\r\n                        />\r\n                        {state.voucherIdErrorMessage\r\n                          ? <FormHelperText error id=\"email-helper-text\">{state.voucherIdErrorMessage}</FormHelperText>\r\n                          : null}\r\n                      </FormControl>\r\n                      <br />\r\n                      <br />\r\n\r\n                      <Button\r\n                        disabled={state.disabled}\r\n                        fullWidth\r\n                        style={{ marginBottom: 15 }}\r\n                        onClick={handleSubmit}\r\n                        variant=\"contained\" color=\"primary\"\r\n                      >\r\n                        Search\r\n                      </Button>\r\n\r\n                      {state.submitErrorMessage\r\n                        ? <FormHelperText error id=\"email-helper-text\">{state.submitErrorMessage}</FormHelperText>\r\n                        : null}\r\n\r\n                      <Typography variant=\"caption\">or</Typography>\r\n                      <div>\r\n                        <Link disabled={state.disabled} style={{ marginTop: 15 }} onClick={() => history.push('/QrScreen')}\r\n                          component=\"button\"\r\n                          variant=\"body2\">Use QR Code</Link>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </center>\r\n              </Card>\r\n            </Grid>\r\n        }\r\n\r\n      </Grid>\r\n      <Grid container>\r\n        <div style={{ height: window.screen.height - 350 }} />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default KlinikHome\r\n","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Card from '@material-ui/core/Card';\r\n// import CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid'\r\n// import Input from '@material-ui/core/Input';\r\n// import InputLabel from '@material-ui/core/InputLabel';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\n// import { CircularProgress } from '@material-ui/core';\r\nimport Background from '../../assets/image/backoffice02.jpg'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst VoltrasHome = ({ ...props }) => {\r\n  const classes = useStyles();\r\n  const [state, setstate] = useState({\r\n    userEmail: '',\r\n    roleUsed: '',\r\n  })\r\n\r\n  useEffect(() => {\r\n    setstate(prevState => ({\r\n      ...prevState,\r\n      userEmail: props.userInfo.info.email,\r\n      roleUsed: props.userInfo.roleUsed,\r\n    }))\r\n  }, [props.userInfo.info, props.userInfo.roleUsed])\r\n\r\n  return (\r\n    <div style={{\r\n      backgroundImage: `url(${Background})`,\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundPositionX: 'center',\r\n      height: 525,\r\n      width: 600\r\n    }} >\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Paper className={classes.paper} elevation={0} >\r\n          <Grid container direction='column' justify='flex-start' alignItems='center'  >\r\n            {/* <Grid item xs={12} >\r\n            Hello Voltras\r\n          </Grid>\r\n          <Grid item xs={12} >\r\n            WELCOME\r\n          </Grid> */}\r\n            <Grid item xs={12} >\r\n              <Typography variant='subtitle2' >\r\n                {state.roleUsed}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} >\r\n              {/* <CircularProgress/> */}\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VoltrasHome","\r\nimport React, { Component } from 'react'\r\nimport JwtDecoder from 'jwt-decode';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport KlinikHome from './KlinikHomeScreen'\r\nimport VoltrasHome from './VoltrasHomeScreen'\r\nimport { menuCreator, AppStructures } from \"../../utils/AppStructures\";\r\n\r\nclass HomeScreen extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      voucherId: \"\",\r\n      voucherIdErrorMessage: \"\",\r\n      isError: true,\r\n      submitErrorMessage: \"\",\r\n      isQrShow: false,\r\n      result: 'no result',\r\n      aud: '',\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    let domain = window.location.origin\r\n    const { _setUserMenu, _setMenuCollapseStatus, _setAppConstant, _setUserInfo, _setOpenScreen,\r\n      _setUserSessionInfo, _setRoleUsed, history } = this.props\r\n\r\n    // console.log(\"HOME INI WILL MOUNT...!\", this.props)\r\n    let accessToken = localStorage.getItem('accessToken')\r\n    let idToken = localStorage.getItem('idToken')\r\n    let key = localStorage.getItem('key')\r\n    let aud = localStorage.getItem('aud')\r\n    let roleUsed = localStorage.getItem('roleUsed')\r\n    if (accessToken && idToken && key && aud && roleUsed) {\r\n      this.setState({ ...this.state, aud })\r\n      let app = AppStructures.filter(item => item.aud === aud)\r\n      let newMenu = menuCreator(domain, aud, roleUsed)\r\n      let obj = {}\r\n      if (newMenu.length > 0) newMenu.map(item => {\r\n        return obj = {\r\n          ...obj,\r\n          [item.url]: false,\r\n        }\r\n      })\r\n      document.title = app[0].title\r\n      _setAppConstant(app[0])\r\n      _setMenuCollapseStatus(obj)\r\n      _setUserMenu(newMenu)\r\n      _setUserSessionInfo({ accessToken, key })\r\n      _setUserInfo(JwtDecoder(idToken))\r\n      _setRoleUsed(roleUsed)\r\n      _setOpenScreen(\"Home\")\r\n    }\r\n    else {\r\n      history.push('/Login')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n        {\r\n          this.state.aud\r\n            ? this.state.aud === 'voltras-health'\r\n              ? <KlinikHome { ...this.props } />\r\n              : <VoltrasHome { ...this.props } />\r\n            : null\r\n        }\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HomeScreen","\r\nimport { connect } from 'react-redux'\r\nimport Homes from './HomeScreen'\r\n\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole, setSecondRequest\r\n} from '../../actions/ServiceActions'\r\nimport { setOpenScreen, setAppConstant } from '../../actions/SystemActions'\r\nimport { setPaxList, setPaxDetail } from \"../../actions/PaxListActions\";\r\nimport { setUserSessionInfo, setUserInfo, setRoleUsed, setVerificationCode } from \"../../actions/UserInfoActions\";\r\nimport { setUserMenu, setMenuCollapseStatus } from '../../actions/MenuActions';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    clinic: state.paxList.clinicUser,\r\n    paxList: state.paxList.list,\r\n    detail: state.paxList.detail,\r\n    userInfo: state.userInfo,\r\n    system: state.system,\r\n    menu: state.menu.menuItems,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setUserSessionInfo: val => dispatch(setUserSessionInfo(val)), _setUserInfo: val => dispatch(setUserInfo(val)),\r\n    _setUserMenu: val => dispatch(setUserMenu(val)), _setMenuCollapseStatus: val => dispatch(setMenuCollapseStatus(val)),\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)), _setPaxList: val => dispatch(setPaxList(val)),\r\n    _setPaxDetail: val => dispatch(setPaxDetail(val)), _setRoleUsed: val => dispatch(setRoleUsed(val)),\r\n    _setAppConstant: val => dispatch(setAppConstant(val)), _setVerificationCode: val => dispatch(setVerificationCode(val)),\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.params))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n    _setSecondRequest: val => dispatch(setSecondRequest(val)),\r\n  }\r\n}\r\n\r\nconst HomeScreen = connect(mapStateToProps, mapDispatchToProps)(Homes)\r\n\r\nexport default HomeScreen\r\n","\r\nimport React, { forwardRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide({...props}) {\r\n  \r\n  const handleClose = () => {\r\n    props.handleDialogClose()\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    props.handleDialogSubmit()\r\n    setTimeout(() => {\r\n      props.handleDialogClose()\r\n    }, 50);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{props.dialogTitle}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            {props.dialogContent}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            {props.cancelTitle}\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\" style={{ fontWeight: 'bold', }} >\r\n            {props.submitTitle}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport FormatText from \"../i18n\"\r\n\r\n// eslint-disable-next-line\r\nlet regexEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\nlet regexPhoneId = /^(^\\+62\\s?|^0)(\\d{3,4}-?){2}\\d{3,4}$/      // phone +62 or 08....\r\n// let regexPhoneCountryCode = /^(\\+)[\\d]{6,16}$/    // phone with contry code\r\n// let regexPhone = /^(\\+62)[\\d]{6,16}$/      // phone +62 \r\n// eslint-disable-next-line\r\nlet regexLettersHypenUnderscore = /^([\\.A-Za-z0-9_-]+)$/\r\n// eslint-disable-next-line\r\nlet regexUri = /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*[\\:\\.][a-z0-9]{2,5}(:[0-9]{1,5})?(\\/.*)?$/\r\n// let regexUriPort = /^https?:\\/\\/(?:w{1,3}\\.)?[^\\s.]+(?:\\.[a-z]+)*(?::\\d+)?(?:\\/\\w+(?:-\\w+)*)*(?![^<]*(?:<\\/\\w+>|\\/?>))/\r\nlet regexNumberOnly = /^[0-9]*$/\r\nlet regexStringOnly = /^[a-zA-Z ]*$/\r\nlet regexStringOnly2 = /^\\S([a-zA-Z ])*$/\r\nlet regexPath = /^(\\/)?[a-zA-Z]+(\\/.*)?$/\r\n\r\nlet result = {\r\n  error: false,\r\n  errorMessage: '',\r\n}\r\n\r\nexport const FormValidation = (formType, value) => {\r\n  switch (formType) {\r\n    case 'otp':\r\n\r\n      if (!regexNumberOnly.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_otp_must_number')\r\n      }\r\n      else if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_otp_empty')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case \"phone\":\r\n      // if (value.length === 0) {\r\n      //   result.error = true\r\n      //   result.errorMessage = FormatText('err_phone_empty')\r\n      // }\r\n      // else \r\n      if (!regexPhoneId.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_phone_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case \"name\":\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_name_empty')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case 'clinicName':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_clinic_name_empty')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case 'address':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_address_empty')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case \"email\":\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_email_empty')\r\n      }\r\n      else if (!regexEmail.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_email_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case 'password':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_password_empty')\r\n      }\r\n      else if (value.length < 8) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_not_six_char')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case 'confirmPassword':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = \"confirm password must be filled\"\r\n      }\r\n      else if (value.length < 8) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_not_six_char')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case 'clientId':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_clientid_empty')\r\n      }\r\n      else if (!regexLettersHypenUnderscore.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_clientid_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case \"clientName\":\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_clientname_empty')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case 'roleId':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_roleid_empty')\r\n      }\r\n      else if (!regexLettersHypenUnderscore.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_roleid_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case 'initialRole':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_initialrole_empty')\r\n      }\r\n      else if (!regexLettersHypenUnderscore.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_initialrole_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case \"clientType\":\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_clienttype_not_choosen')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case \"profile\":\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_profile_not_choosen')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n\r\n    case \"roleDescription\":\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_description_empty')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n    case \"originUris\":\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_uri_empty')\r\n      }\r\n      else if (!regexUri.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_uri_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n    case \"redirectUris\":\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_uri_empty')\r\n      }\r\n      else if (!regexUri.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_uri_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n    case \"emailSender\":\r\n      if (value.length === 0) {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      else if (!regexEmail.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_email_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n    case \"emailSenderMaskingName\":\r\n\r\n      if (value.length > 100) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_masking_name_100')\r\n      }\r\n      else if (!regexStringOnly.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_masking_name_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n    case \"path\":\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_path_empty')\r\n      }\r\n      else if (!regexPath.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_path_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n    case \"urlDestination\":\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_uri_empty')\r\n      }\r\n      else if (!regexUri.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_uri_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n    case \"clientDomain\":\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_uri_empty')\r\n      }\r\n      else if (!regexUri.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_uri_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n    case 'product_name':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_product_empty')\r\n      }\r\n      else if (!regexStringOnly2.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_product_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n    case 'price':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_product_empty')\r\n      }\r\n      else if (!regexNumberOnly.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_product_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n    case 'nta':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_product_empty')\r\n      }\r\n      else if (!regexNumberOnly.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_product_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n    case 'ntsa':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_product_empty')\r\n      }\r\n      else if (!regexNumberOnly.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_product_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n    case 'discount_price':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_product_empty')\r\n      }\r\n      else if (!regexNumberOnly.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_product_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n    case 'discount_nta':\r\n      if (value.length === 0) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_product_empty')\r\n      }\r\n      else if (!regexNumberOnly.test(value)) {\r\n        result.error = true\r\n        result.errorMessage = FormatText('err_product_format')\r\n      }\r\n      else {\r\n        result.error = false\r\n        result.errorMessage = \"\"\r\n      }\r\n      return result\r\n    default:\r\n      return result\r\n  }\r\n}\r\n","\r\n/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\n\r\n// const customStyle = makeStyles({\r\n//   root: {\r\n//     \"& .MuiFormLabel-root\": {\r\n//       fontSize: \".9rem\"\r\n//     },\r\n//     \"& .MuiOutlinedInput-input\": {\r\n//       padding: \"14px 10px\"\r\n//     },\r\n//     \"& .MuiInputBase-input\": {\r\n//       fontSize: \"14px\"\r\n//     },\r\n\r\n//     \"& .MuiInputLabel-shrink\": {\r\n//       transform: \"translate(0, 1.5px) scale(0.75)\"\r\n//     }\r\n//   }\r\n// });\r\n\r\nconst style = theme => (\r\n  {\r\n    labelRoot: {\r\n      fontSize: 12,\r\n      fontFamily: 'Arial, Helvetica, sans-serif',\r\n    },\r\n    inputRoot: {\r\n      fontSize: 12,\r\n      fontFamily: 'Arial, Helvetica, sans-serif',\r\n      // height: 25\r\n    }\r\n  }\r\n)\r\n\r\nexport default withStyles(style)(function ComboBox({ ...props }) {\r\n\r\n  const { options, optionItem, onPick, id, helperText, label, width, autoFocus, handleInputChange,\r\n    setIndex, freeSolo, clearOnBlur, values, handleFocus, small, classes } = props\r\n\r\n  // const classes = customStyle();\r\n\r\n  const [value, setValue] = React.useState({});\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  // const [disabled, setDisabled] = React.useState(false);\r\n  // const [error, setError] = React.useState(false);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    // console.log(\"DI CLICK?\")\r\n    // if (newValue) {\r\n    let listIndex = setIndex\r\n    setValue(newValue)\r\n    onPick(newValue, listIndex)\r\n    // }\r\n    // else {\r\n    //   setValue({})\r\n    // }\r\n  }\r\n\r\n  const handleInputValueChange = (event, newValue) => {\r\n    let listIndex = setIndex\r\n    let enterPressed = event && event.key === 'Enter' ? true : false\r\n    setInputValue(newValue);\r\n    if (handleInputChange) handleInputChange(newValue, listIndex, enterPressed)\r\n  }\r\n\r\n  const onFocus = () => {\r\n    if (handleFocus) handleFocus()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hidden smDown>\r\n        <Autocomplete\r\n          size={small ? \"small\" : \"medium\"}\r\n          fullWidth\r\n          onFocus={onFocus}\r\n          clearOnBlur={clearOnBlur}\r\n          freeSolo={freeSolo}\r\n          autoFocus={autoFocus}\r\n          blurOnSelect\r\n          value={values ? values : value}\r\n          onChange={handleChange}\r\n          inputValue={inputValue}\r\n          onInputChange={handleInputValueChange}\r\n          disabled={false}\r\n          id={id}\r\n          style={{ width: width ? width : '100%' }}\r\n          options={options}\r\n          getOptionLabel={(option) => optionItem ? option[optionItem] ? option[optionItem] : '' : ''}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              id={id}\r\n              autoFocus={autoFocus}\r\n              // className={classes.root}\r\n              error={false}\r\n              helperText={helperText}\r\n              {...params}\r\n              label={label}\r\n              variant='standard'\r\n            // InputLabelProps={{\r\n            //   shrink: notShrink ? false : true,\r\n            // }}\r\n            />\r\n          )}\r\n        />\r\n      </Hidden>\r\n      <Hidden smUp>\r\n        <Autocomplete\r\n          size={small ? \"small\" : \"medium\"}\r\n          fullWidth\r\n          onFocus={onFocus}\r\n          clearOnBlur={clearOnBlur}\r\n          freeSolo={freeSolo}\r\n          autoFocus={autoFocus}\r\n          blurOnSelect\r\n          value={values ? values : value}\r\n          onChange={handleChange}\r\n          inputValue={inputValue}\r\n          onInputChange={handleInputValueChange}\r\n          disabled={false}\r\n          id={id}\r\n          style={{ width: width ? width : '100%' }}\r\n          classes={{\r\n            option: classes.inputRoot\r\n          }}\r\n          options={options}\r\n          getOptionLabel={(option) => optionItem ? option[optionItem] ? option[optionItem] : '' : ''}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              id={id}\r\n              autoFocus={autoFocus}\r\n              // className={classes.root}\r\n              error={false}\r\n              helperText={helperText}\r\n              {...params}\r\n              label={label}\r\n              variant='standard'\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                style: {\r\n                  fontSize: 12,\r\n                  fontFamily: 'Arial, Helvetica, sans-serif'\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Hidden>\r\n    </>\r\n  );\r\n})\r\n\r\n","\r\nimport React, { useState, } from 'react';\r\nimport { Grid, Typography, Button, Card, FormControl, FormHelperText, TextField, } from '@material-ui/core';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { FormValidation } from '../../utils/FormValidation';\r\nimport FormatText from '../../i18n';\r\nimport SimpleAutocomplete from '../../components/autocomplete/SimpleAutocomplete';\r\n\r\n\r\nconst GlobalForm = props => {\r\n  const domain = window.location.origin\r\n  const [state, setState] = useState({\r\n    showPassword: false,\r\n    showConfirm: false,\r\n  })\r\n\r\n  const handleFormChange = prop => event => {\r\n    // console.log(prop)\r\n    let value = event.target.value\r\n    let valid = FormValidation(prop, value)\r\n    if (prop === 'confirmPassword') {\r\n      if (state.password !== event.target.value) {\r\n        setState({\r\n          ...state,\r\n          isError: true,\r\n          [prop]: event.target.value,\r\n          [prop + 'ErrorMessage']: FormatText('err_passconfirm_mismatch'),\r\n          submitErrorMessage: ''\r\n        });\r\n      }\r\n      else {\r\n        setState({\r\n          ...state,\r\n          isError: valid.error,\r\n          [prop]: event.target.value,\r\n          [prop + 'ErrorMessage']: valid.errorMessage,\r\n          submitErrorMessage: ''\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      setState({\r\n        ...state,\r\n        isError: valid.error,\r\n        [prop]: event.target.value,\r\n        [prop + 'ErrorMessage']: valid.errorMessage,\r\n        submitErrorMessage: ''\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    let newPassword = state.password\r\n    let confirmNewPassword = state.confirmPassword\r\n    if (newPassword && (newPassword === confirmNewPassword)) {\r\n      let request = { newPassword, confirmNewPassword }\r\n      props.submitChangePassword(request)\r\n    }\r\n    else {\r\n      setState({\r\n        ...state,\r\n        submitErrorMessage: FormatText('err_submit'),\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Card elevation={4} style={{ margin: 20, width: 285 }} >\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n\r\n          {\r\n            domain === 'http://health.voltras.net'\r\n              ? <div></div>\r\n              : domain === 'https://health.voltras.net'\r\n                ? <div></div>\r\n                : domain === 'https://localhost:3030'\r\n                  ? <div></div>\r\n                  : <FormControl style={{ width: '30ch', marginTop: 20 }} >\r\n                    <SimpleAutocomplete\r\n                      label={'App to Login'}\r\n                      options={[{ name: 'Klinik App' }, { name: 'Voltras Back Office' }, { name: 'Almanak' },]}\r\n                      onPick={v => props.handleClient(v)}\r\n                      // notShrink={this.state.clientId ? false : true}\r\n                      optionItem={'name'}\r\n                    />\r\n                  </FormControl>\r\n          }\r\n\r\n          <Typography color='primary' variant=\"h5\" style={{ marginTop: 20, fontWeight: 'bold' }} >{props.formLabel}</Typography>\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleFormChange('password')}\r\n            id=\"standard-pass\"\r\n            label={FormatText('common_new_password')}\r\n            type={state.showPassword ? 'text' : 'password'}\r\n            helperText={state.passwordErrorMessage ? state.passwordErrorMessage : \"\"}\r\n            error={state.passwordErrorMessage ? true : false}\r\n            // fullWidth\r\n            margin='dense'\r\n            // value={state.password}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() => setState({ ...state, showPassword: !state.showPassword })}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleFormChange('confirmPassword')}\r\n            id=\"standard-pass\"\r\n            label={FormatText('app_password_confirmation')}\r\n            type={state.showConfirm ? 'text' : 'password'}\r\n            helperText={state.confirmPasswordErrorMessage ? state.confirmPasswordErrorMessage : \"\"}\r\n            error={state.confirmPasswordErrorMessage ? true : false}\r\n            // fullWidth\r\n            margin='dense'\r\n            // value={state.confirmPassword}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() => setState({ ...state, showConfirm: !state.showConfirm })}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {state.showConfirm ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n\r\n          <br />\r\n          {\r\n            state.submitErrorMessage\r\n              ? <FormHelperText error id=\"email-helper-text\">{state.submitErrorMessage}</FormHelperText>\r\n              : null\r\n          }\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ textTransform: 'none', fontWeight: 'bold', width: 200, marginBottom: 20, marginTop: 10 }}\r\n            onClick={handleSubmit}\r\n          >\r\n            Send\r\n          </Button>\r\n        </Grid>\r\n      </Card>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default GlobalForm\r\n","\r\nimport React from 'react'\r\nimport { RadioGroup, FormControlLabel, Radio, Button, Typography, Card, Grid, FormHelperText, FormControl } from '@material-ui/core';\r\nimport FormatText from '../../i18n';\r\n\r\nconst ChooseRoleCard = props => {\r\n  // console.log('ROLE CARD PROPS: ', props)\r\n  const { classes, onRadioChange, userInfo, state, handleChooseRole, } = props\r\n\r\n  return (\r\n    <Card className={classes} elevation={4}>\r\n      <Grid style={{ marginTop: 30 }} container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n          <Typography variant=\"h5\" color='primary'>\r\n            <b>{FormatText('app_choose_role')}</b>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n          <Typography variant=\"caption\" color='textSecondary' >\r\n            {FormatText('app_choose_role_used')}\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n          <FormControl style={{ margin: 10, marginLeft: 25, }}  >\r\n            <RadioGroup onChange={onRadioChange} >\r\n              {\r\n                userInfo.info.role\r\n                  ? userInfo.info.role.map((item, i) => {\r\n                    return (\r\n                      <FormControlLabel value={item} control={<Radio />} label={item} key={i} />\r\n                    )\r\n                  })\r\n                  : null\r\n              }\r\n            </RadioGroup>\r\n            {\r\n              state.otpErrorMessage\r\n                ? <FormHelperText error id=\"email-helper-text\">{this.state.otpErrorMessage}</FormHelperText>\r\n                : null\r\n            }\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <FormControl>\r\n          <Grid>\r\n            <Button\r\n              onClick={handleChooseRole}\r\n              disabled={state.roleChoosen ? false : true}\r\n              style={{ margin: 10, width: 120 }}\r\n              variant=\"contained\" color=\"primary\">\r\n              {FormatText('app_choose')}\r\n            </Button>\r\n          </Grid>\r\n          {\r\n            state.onLoginErrorMessage\r\n              ? <FormHelperText error id=\"password-helper-text\">{state.onLoginErrorMessage}</FormHelperText>\r\n              : null\r\n          }\r\n        </FormControl>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ChooseRoleCard\r\n","\r\nimport React from 'react'\r\nimport { Button, Typography, Card, Input, Grid, FormHelperText, FormControl } from '@material-ui/core';\r\nimport FormatText from '../../i18n';\r\n\r\nconst InsertOTPCard = props => {\r\n  const { classes, handleCancelOtp, handleResendOtp, state, handleSubmitOtp, handleChange } = props\r\n\r\n  return (\r\n    <Card className={classes} style={{ width: 300 }} elevation={4}>\r\n      <Grid\r\n        style={{ margin: 30 }}\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h5\" color='primary'><b>{FormatText('app_submit_otp')}</b> </Typography>\r\n        <Typography variant=\"caption\" color='textSecondary' >{FormatText('app_submit_otp_text')}</Typography>\r\n        <Typography variant='subtitle2' color='primary' >{state.email}</Typography>\r\n\r\n        <FormControl style={{ margin: 10, width: '12ch', textAlign: 'center' }}  >\r\n          <Input\r\n            autoFocus\r\n            style={{ fontSize: 28, textAlign: 'center' }}\r\n            error={state.otpErrorMessage ? true : false}\r\n            id=\"standard-adornment-otp\"\r\n            type='text'\r\n            onChange={handleChange('otp')}\r\n            value={state.otp}\r\n          />\r\n          {\r\n            state.otpErrorMessage\r\n              ? <FormHelperText error id=\"email-helper-text\">{state.otpErrorMessage}</FormHelperText>\r\n              : null\r\n          }\r\n        </FormControl>\r\n\r\n        <FormControl>\r\n          <Grid>\r\n            <Button onClick={handleCancelOtp} variant=\"outlined\" color=\"primary\" style={{ margin: 10, }}>\r\n              {FormatText('app_cancel')}\r\n            </Button>\r\n            <Button\r\n              onClick={handleSubmitOtp}\r\n              disabled={state.otp ? false : true}\r\n              style={{ margin: 10, }}\r\n              variant=\"contained\"\r\n              color=\"primary\">\r\n              {FormatText('app_submit')}\r\n            </Button>\r\n          </Grid>\r\n          {\r\n            state.onLoginErrorMessage\r\n              ? <FormHelperText error id=\"password-helper-text\">{state.onLoginErrorMessage}</FormHelperText>\r\n              : null\r\n          }\r\n        </FormControl>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Typography variant=\"caption\" color='textSecondary' >{FormatText('app_not_receive_otp')}</Typography>\r\n          <Button\r\n            size='small'\r\n            onClick={handleResendOtp}\r\n            color=\"primary\"\r\n            style={{ textTransform: 'none', fontWeight: 'bold', fontSize: 12 }}\r\n          >\r\n            {FormatText('app_resend_otp')}\r\n          </Button>\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default InsertOTPCard\r\n","\r\nimport React from 'react'\r\nimport { Button } from '@material-ui/core';\r\nimport { useGoogleLogin } from 'react-google-login';\r\n// import FormatText from '../../i18n';\r\n// import { refreshTokenSetup } from '../../utils/GoogleRefreshToken';\r\n\r\nfunction LoginHooks(props) {\r\n  // console.log(\"GOOGLE PROPS: \", props)\r\n  const { client_id, access_type, prompt, response_type, } = props.params\r\n\r\n  const onSuccess = (res) => {\r\n    // console.log('Login Success: currentUser:', res);\r\n    // alert(\r\n    //   `Logged in successfully welcome ${res} 😍. \\n See console for full profile object.`\r\n    // );\r\n    // refreshTokenSetup(res);\r\n    const requestLogin = {\r\n      \"provider\": \"google\",\r\n      \"responseType\": \"token\",\r\n      \"code\": res.code,\r\n      \"redirectURI\": \"http://localhost:3000\",\r\n      \"nonce\": \"\"\r\n    }\r\n    if (res.code) props.handleGoogleLogin(requestLogin)\r\n\r\n  };\r\n\r\n  const onFailure = (res) => {\r\n    console.log('Login failed: res:', res);\r\n    // alert(\r\n    //   `Failed to login. 😢 Please ping this to repo owner twitter.com/sivanesh_fiz`\r\n    // );\r\n  };\r\n\r\n  const { signIn } = useGoogleLogin({\r\n    onSuccess,\r\n    onFailure,\r\n    clientId: client_id,\r\n    isSignedIn: false,\r\n    accessType: access_type,\r\n    responseType: response_type,\r\n    redirectUri: \"http://localhost:3000\",\r\n    prompt,\r\n  });\r\n\r\n  return (\r\n    <Button\r\n      fullWidth={props.fullWidth}\r\n      color='primary'\r\n      size='large'\r\n      onClick={signIn}\r\n      style={{\r\n        width: props.width || 240,\r\n        textTransform: 'none',\r\n        color: 'black'\r\n      }}\r\n      variant='outlined'\r\n      startIcon={<img style={{ width: 24, }} src=\"icons/google.svg\" alt=\"google login\" className=\"icon\" />}\r\n    >\r\n      {/* <img style={{ width: 24, marginRight: 15 }} src=\"icons/google.svg\" alt=\"google login\" className=\"icon\" /> */}\r\n      &nbsp;  {props.buttonText} Google\r\n    </Button>\r\n    // <button onClick={signIn} className=\"button\">\r\n    //   <img src=\"icons/google.svg\" alt=\"google login\" className=\"icon\"></img>\r\n\r\n    //   <span className=\"buttonText\">Sign in with Google</span>\r\n    // </button>\r\n    // <IconButton aria-label=\"google\" onClick={signIn} color='secondary' >\r\n    //   <i style={{ fontSize: 20 }} className={\"fab fa-google\"} />\r\n    // </IconButton>\r\n  )\r\n}\r\n\r\n// const logoutHooks = props => {\r\n\r\n//   const { signOut, loaded } = useGoogleLogout({\r\n//     jsSrc,\r\n//     onFailure,\r\n//     clientId,\r\n//     cookiePolicy,\r\n//     loginHint,\r\n//     hostedDomain,\r\n//     fetchBasicProfile,\r\n//     discoveryDocs,\r\n//     uxMode,\r\n//     redirectUri,\r\n//     scope,\r\n//     accessType,\r\n//     onLogoutSuccess\r\n//   })\r\n//   return (\r\n//     <IconButton aria-label=\"google\" onClick={signIn} color='secondary' >\r\n//       <i style={{ fontSize: 20 }} className={\"fab fa-google\"} />\r\n//     </IconButton>\r\n\r\n//   )\r\n// }\r\n\r\n\r\nexport default LoginHooks;","\r\nimport React from 'react'\r\nimport { IconButton, Grid, Paper, Typography } from '@material-ui/core'\r\nimport { AppStructures } from '../../utils/AppStructures';\r\n\r\nconst ChooseAppCard = ({ ...props }) => {\r\n\r\n  const handleClick = name => e => {\r\n    props.handleClient({ name })\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={1} style={{ width: 300 }} >\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n        <Grid item style={{ marginTop: 20, marginBottom: 10 }}><Typography variant='h6' >Choose Client</Typography> </Grid>\r\n      </Grid>\r\n\r\n      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n        {AppStructures.map((item, i) => {\r\n          return (\r\n            <Grid item style={{ margin: 12, width: 75 }} onClick={handleClick(item.name)} key={i} >\r\n              <IconButton aria-label=\"delete\" color=\"primary\">\r\n                {item.icon}\r\n              </IconButton>\r\n              <center><Typography variant='subtitle2' >{item.name}</Typography> </center>\r\n            </Grid>\r\n          )\r\n        })}\r\n      </Grid>\r\n\r\n      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" style={{ height: 100 }} > </Grid>\r\n\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default ChooseAppCard\r\n","\r\nimport React, { useState, useEffect } from 'react'\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport {\r\n  Button, Typography, Card, CardContent, Grid, IconButton, Input, InputLabel, InputAdornment,\r\n  FormHelperText, FormControl,\r\n} from '@material-ui/core';\r\nimport FormatText from '../../i18n';\r\nimport GoogleLogin from './GoogleLogin'\r\nimport ChooseAppCard from './ChooseAppCard'\r\n\r\n// eslint-disable-next-line\r\nlet regexEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n// let regexPhone = /^(^\\+62\\s?|^0)(\\d{3,4}-?){2}\\d{3,4}$/\r\n\r\n\r\nconst LoginCard = ({ ...props }) => {\r\n  let domain = window.location.origin\r\n  const { handleChange, handleClient, handleGoogleLogin, handleEnter, handleClickShowPassword, handleMouseDownPassword,\r\n    handleSubmit, handleRegister, handleForgotOpen, state, system, history } = props\r\n  const [aud, setAud] = useState(\"\")\r\n  const [showLogin, setShowLogin] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (system.appConstant) {\r\n      setAud(system.appConstant.aud)\r\n    }\r\n  }, [system.appConstant])\r\n\r\n  useEffect(() => {\r\n    if (showLogin === false && state.clientId) setShowLogin(true)\r\n  }, [state.clientId, showLogin])\r\n\r\n  useEffect(() => {\r\n    // return () => {\r\n    // && history.location.pathname === \"any specific path\")\r\n    if (history.action === \"POP\") {\r\n      setShowLogin(false)\r\n      // history.replace(history.location.pathname, /* the new state */);\r\n    }\r\n    // };\r\n  }, [history.action])\r\n\r\n\r\n  useEffect(() => {\r\n    if (aud === 'voltras-health') setShowLogin(true)\r\n  }, [aud])\r\n\r\n  window.onpopstate = e => { }\r\n\r\n  return (\r\n    <div>\r\n      {showLogin ? null : <ChooseAppCard handleClient={handleClient} />}\r\n\r\n      <Card style={{\r\n        display: showLogin ? 'flex' : 'none',\r\n        flexWrap: 'wrap',\r\n        width: 285,\r\n      }} elevation={4}>\r\n        <center>\r\n          <CardContent >\r\n            <Typography color='primary' variant=\"h5\"><b>{FormatText('app_sign_in')}</b> </Typography>\r\n            <div>\r\n              {/* <FormControl style={{ width: '30ch', margin: 7, marginBottom: 20, display: aud === 'voltras-health' ? 'none' : '' }} >\r\n                <SimpleAutocomplete\r\n                  id=\"LoginChooseApp\"\r\n                  label={'App to Login'}\r\n                  options={[{ name: 'Klinik App' }, { name: 'Voltras Back Office' }, { name: 'Almanak' },]}\r\n                  onPick={v => handleClient(v)}\r\n                  notShrink={state.clientId ? false : true}\r\n                  optionItem={'name'}\r\n                />\r\n              </FormControl> */}\r\n              {\r\n                state.clientId === 'voltras-health' || domain === 'https://health.voltras.net'\r\n                  ? <div>\r\n                    {/* <Typography variant=\"caption\">{FormatText('common_with')}</Typography> */}\r\n                    <div style={{ marginBottom: 15, marginTop: 20 }}>\r\n                      <GoogleLogin\r\n                        params={system.googleParams}\r\n                        handleGoogleLogin={handleGoogleLogin}\r\n                        buttonText={FormatText('common_signin_with')}\r\n                      />\r\n                      {/* <IconButton aria-label=\"google\" onClick={handleGoogle}>\r\n                                      <i style={{ fontSize: 20 }} className={\"fab fa-google\"} />\r\n                                    </IconButton>\r\n                                    <IconButton disabled aria-label=\"facebook\">\r\n                                      <FacebookIcon />\r\n                                    </IconButton>\r\n                                    <IconButton disabled aria-label=\"facebook\">\r\n                                      <Twitter />\r\n                                    </IconButton> */}\r\n                    </div>\r\n                    <Typography variant='subtitle2' >{FormatText('common_or')}</Typography>\r\n                  </div>\r\n                  : null\r\n              }\r\n\r\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n                <FormControl style={{ width: '30ch', margin: 7, }} >\r\n                  <InputLabel error={state.emailErrorMessage ? true : false} htmlFor=\"standard-adornment-password\">\r\n                    {FormatText('app_email_or_phone')}\r\n                  </InputLabel>\r\n                  <Input\r\n                    autoFocus\r\n                    autoComplete='on'\r\n                    error={state.emailErrorMessage ? true : false}\r\n                    id=\"standard-adornment-email\"\r\n                    type='text'\r\n                    value={state.email}\r\n                    onChange={handleChange('email')}\r\n                    onKeyPress={handleEnter}\r\n                  />\r\n                  {\r\n                    state.emailErrorMessage\r\n                      ? <FormHelperText error id=\"email-helper-text\">{state.emailErrorMessage}</FormHelperText>\r\n                      : null\r\n                  }\r\n                </FormControl>\r\n              </Grid>\r\n              {\r\n                regexEmail.test(state.email)\r\n                  ? <FormControl style={{ width: '30ch', margin: 7, }} >\r\n                    <InputLabel error={state.passwordErrorMessage ? true : false} htmlFor=\"standard-adornment-password\">\r\n                      {FormatText('app_password')}\r\n                    </InputLabel>\r\n                    <Input\r\n                      error={state.passwordErrorMessage ? true : false}\r\n                      id=\"standard-adornment-password\"\r\n                      type={state.showPassword ? 'text' : 'password'}\r\n                      value={state.password}\r\n                      onChange={handleChange('password')}\r\n                      endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                          >\r\n                            {state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }\r\n                      onKeyPress={handleEnter}\r\n                    />\r\n                    {\r\n                      state.passwordErrorMessage\r\n                        ? <FormHelperText error id=\"password-helper-text\">{state.passwordErrorMessage}</FormHelperText>\r\n                        : null\r\n                    }\r\n                  </FormControl>\r\n                  : null\r\n              }\r\n\r\n            </div>\r\n            {\r\n              regexEmail.test(state.email)\r\n                ? <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-start\" >\r\n                  <Button\r\n                    size='small'\r\n                    color=\"primary\"\r\n                    style={{ textTransform: 'none', fontWeight: 'bold', marginTop: 10 }}\r\n                    onClick={handleForgotOpen}     //{() => setState({ ...state, forgotOpen: true })}\r\n                  >\r\n                    {FormatText('app_forgot_password')}\r\n                  </Button>\r\n                </Grid>\r\n                : null\r\n            }\r\n            <FormControl>\r\n              <Button\r\n                size='large'\r\n                onClick={handleSubmit}\r\n                style={{\r\n                  width: 240,\r\n                  textTransform: 'none',\r\n                  fontWeight: 'bold',\r\n                  marginTop: regexEmail.test(state.email) ? 1 : 25\r\n                }}\r\n                variant=\"contained\" color=\"primary\">\r\n                {FormatText('app_sign_in')}\r\n              </Button>\r\n              {\r\n                state.onLoginErrorMessage\r\n                  ? <FormHelperText error id=\"password-helper-text\">{state.onLoginErrorMessage}</FormHelperText>\r\n                  : null\r\n              }\r\n            </FormControl>\r\n          </CardContent>\r\n\r\n          <div style={{ marginBottom: 15 }}>\r\n            <Typography variant='caption' >{FormatText('app_no_account')}</Typography>\r\n            <Button onClick={handleRegister} color=\"primary\" style={{ textTransform: 'none', fontWeight: 'bold' }} >\r\n              {FormatText('app_sign_up')}\r\n            </Button>\r\n          </div>\r\n        </center>\r\n        <br />\r\n        <br />\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginCard\r\n","\r\nimport React, { Component } from 'react'\r\n// import Twitter from '@material-ui/icons/Twitter';\r\n// import FacebookIcon from '@material-ui/icons/Facebook'\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport { openMenuStructure } from \"../../utils/MenuStructure\";\r\nimport { menuCreator, resetMenu } from '../../utils/AppStructures';\r\nimport { Typography, Grid, Hidden, CircularProgress } from '@material-ui/core';\r\nimport FormatText from '../../i18n';\r\nimport ForgotPasswordDialog from '../../components/dialog/GlobalDialog'\r\nimport ForgotPasswordForm from './ForgotPasswordForm'\r\nimport ChooseRoleCard from './ChooseRoleCard'\r\nimport InsertOTPCard from './InsertOTPCard'\r\nimport LoginCard from './LoginCard'\r\n// import AppMenuConst from '../../utils/AppStructures.json'\r\nimport Config from '../../config'\r\n\r\n// eslint-disable-next-line\r\nlet regexEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\nlet regexPhone = /^(^\\+62\\s?|^0)(\\d{3,4}-?){2}\\d{3,4}$/\r\n\r\nlet urlImage = Config.gatewayRepoFile\r\n\r\nconst AppStructures = [\r\n  {\r\n    aud: 'authentication-backoffice',\r\n    name: 'Voltras Backoffice',\r\n    domain: ['http://localhost:3030', 'http://172.16.10.98:3030', 'http://172.16.10.98:3032'],\r\n    title: \"VoltrasBOS\",\r\n    welcome: \"Backoffice System\",\r\n    locale: 'id-Id',\r\n    backgroundLogin: urlImage + '/static-file-manager/retrieve?file=voltras_login_background',\r\n    backgroundApp: '',\r\n    icon: <BuildIcon style={{ width: 50, height: 50, }} />,\r\n    openMenu: [\r\n      {\r\n        label: \"Login\",\r\n        url: \"Login\",\r\n        children: []\r\n      },\r\n      // {\r\n      //   label: \"Generic Input\",\r\n      //   url: \"GenericInput\",\r\n      //   children: []\r\n      // },\r\n      {\r\n        label: \"Register\",\r\n        url: \"Register\",\r\n        children: []\r\n      },\r\n    ],\r\n    loggedMenu: [\r\n      {\r\n        label: \"Home\",\r\n        url: \"Home\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Client Management\",\r\n        url: \"VoltrasClientManagement\",\r\n        children: [\r\n          { label: \"Client List\", url: \"VClientList\", children: [] },\r\n          { label: \"Create Client\", url: \"VCreateClient\", children: [] },\r\n        ]\r\n      },\r\n      {\r\n        label: \"User Management\",\r\n        url: \"VoltrasUserManagement\",\r\n        children: [\r\n          { label: \"User List\", url: \"VUserList\", children: [] },\r\n          { label: \"Create User\", url: \"VCreateUser\", children: [] },\r\n        ]\r\n      },\r\n      {\r\n        label: \"Request Specification\",\r\n        url: \"VoltrasRequestSpesification\",\r\n        children: [\r\n          { label: \"Request List\", url: \"VRequestList\", children: [] }\r\n        ]\r\n      },\r\n      {\r\n        label: \"Logout\",\r\n        url: \"Logout\",\r\n        children: []\r\n      },\r\n    ],\r\n    requestHeader: {\r\n      'client-id': 'authentication-backoffice',\r\n    }\r\n  }, {\r\n    aud: 'voltras-health',\r\n    name: 'Voltras Health',\r\n    domain: ['https://health.voltras.net', 'https://ajirespati.github.io/'],\r\n    title: \"Voltras Health\",\r\n    welcome: \"Clinic Backoffice System\",\r\n    locale: 'id-Id',\r\n    backgroundLogin: urlImage + '/static-file-manager/retrieve?file=health_login_background',\r\n    backgroundApp: urlImage + '/static-file-manager/retrieve?file=health_app_background',\r\n    icon: <LocalHospitalIcon style={{ width: 50, height: 50, }} />,\r\n    openMenu: [\r\n      {\r\n        label: \"Login\",\r\n        url: \"Login\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Register\",\r\n        url: \"Register\",\r\n        children: []\r\n      },\r\n    ],\r\n    loggedMenu: [\r\n      {\r\n        label: \"Home\",\r\n        url: \"Home\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Order List\",\r\n        url: \"PaxList\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Order Report\",\r\n        url: \"KReport\",\r\n        children: [\r\n          {\r\n            label: \"All Order\",\r\n            url: \"KOrderReportAll\",\r\n            children: []\r\n          },\r\n          {\r\n            label: \"Redeemed Order\",\r\n            url: \"OrderReport\",\r\n            children: []\r\n          },]\r\n      },\r\n      {\r\n        label: \"Clinic Management\",\r\n        url: \"KClinicManager\",\r\n        children: [\r\n          {\r\n            label: \"Clinic List\",\r\n            url: \"KClinicList\",\r\n            children: []\r\n          },\r\n          {\r\n            label: \"Clinic Setting\",\r\n            url: \"KSetting\",\r\n            children: []\r\n          },\r\n          {\r\n            label: \"Clinic Registration\",\r\n            url: \"KClinicRegistration\",\r\n            children: []\r\n          },\r\n          // {\r\n          //   label: \"Clinic Scope\",\r\n          //   url: \"ClinicScope\",\r\n          //   children: []\r\n          // },\r\n        ]\r\n      },\r\n      {\r\n        label: \"Generic Configuration\",\r\n        url: \"GenericConfiguration\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Logout\",\r\n        url: \"Logout\",\r\n        children: []\r\n      },\r\n    ],\r\n    requestHeader: {\r\n      'client-id': 'voltras-health',\r\n    }\r\n  }, {\r\n    aud: 'dummy-aud',\r\n    name: 'Dummy App',\r\n    domain: ['http://localhost:3030', 'http://172.16.10.98:3032'],\r\n    title: \"DUMMY APP\",\r\n    welcome: \"Dummy App\",\r\n    locale: 'id-Id',\r\n    backgroundLogin: '',\r\n    backgroundApp: '',\r\n    icon: < i className=\"fas fa-mosque\" style={{ width: 50, height: 50, fontSize: 40, }}></i >,\r\n    openMenu: [\r\n      {\r\n        label: \"Login\",\r\n        url: \"Login\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Logout\",\r\n        url: \"Logout\",\r\n        children: []\r\n      },\r\n    ],\r\n    loggedMenu: [\r\n      {\r\n        label: \"Home\",\r\n        url: \"Home\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Product\",\r\n        url: \"Product\",\r\n        children: [\r\n          { label: \"Add New Product\", url: \"AddNewProduct\", children: [] },\r\n          { label: \"Manage Product\", url: \"ManageProduct\", children: [] }\r\n        ]\r\n      },\r\n      {\r\n        label: \"Report\",\r\n        url: \"Report\",\r\n        children: [\r\n          { label: \"Booking Summary\", url: \"BookingSummary\", children: [] },\r\n          { label: \"Payment Summary\", url: \"PaymentSummary\", children: [] }\r\n        ]\r\n      },\r\n      {\r\n        label: \"Logout\",\r\n        url: \"Logout\",\r\n        children: []\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nclass LoginScreen extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      otp: '',\r\n      otpErrorMessage: '',\r\n      email: '',\r\n      emailErrorMessage: '',\r\n      password: '',\r\n      passwordErrorMessage: '',\r\n      showPassword: false,\r\n      clientId: '',\r\n      clientIdErrorMessage: '',\r\n      onLoginErrorMessage: '',\r\n      isError: true,\r\n      roleChoosen: '',\r\n      forgotOpen: false,\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    let origin = window.location.origin\r\n    this.props._setOpenScreen(\"Login\")\r\n    this.props._setUserMenu(openMenuStructure)\r\n    //TODO: hardcoded app structure must be generic by window.location.origin\r\n    if (this.props.system.appConstant === null) {\r\n      let app = AppStructures.filter(item => item.domain.includes(origin))\r\n      this.props._setAppConstant(app[0] ? app[0] : AppStructures[0])\r\n      // document.title = app[0].title\r\n      resetMenu(app[0] ? app[0].loggedMenu : AppStructures[0].loggedMenu, app[0] ? app[0].aud : AppStructures[0].aud)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props._setOpenScreen(\"Login\")\r\n    let language = navigator.language\r\n    this.props._setLocale(language)\r\n    let clientId = this.props.system.appConstant ? this.props.system.appConstant.aud : null\r\n    let request = {}\r\n    let fullRequest = {\r\n      request,\r\n      serviceMethod: 'GET',\r\n      serviceCode: 'REQ_AUTH_GOOGLE_PARAMS',\r\n      serviceParams: '?redirectURI=http://www.alamanak.co.id',\r\n      customHeaders: { clientId },\r\n    }\r\n    if (clientId) this.props._setCompleteRequest(fullRequest)\r\n    let verificationCode = this.props.userInfo.verificationCode ? this.props.userInfo.verificationCode : ''\r\n    let requestVerify = { redirectURI: \"http://www.alamanak.co.id\", verificationCode }\r\n    // console.log(clientId, verificationCode)\r\n    let verificationCheckRequest = {\r\n      request: requestVerify,\r\n      serviceMethod: \"POST\",\r\n      serviceCode: \"VERIFICATION_CHECK\",\r\n      serviceParams: `/email`,\r\n    }\r\n    if (verificationCode) {\r\n      this.props._setCompleteRequest(verificationCheckRequest)\r\n      this.props._setVerificationCode(null)\r\n    }\r\n  }\r\n\r\n  handleResendOtp = e => {\r\n    let clientId = this.state.clientId\r\n    this.setState({\r\n      ...this.state,\r\n      onLoginErrorMessage: \"\", otp: \"\"\r\n    })\r\n    let request = {\r\n      redirectURI: \"http://www.alamanak.co.id\",\r\n      provider: \"internal\",\r\n      responseType: \"token\",\r\n    }\r\n    let email = this.state.email\r\n    let password = this.state.password\r\n    if (regexEmail.test(email)) {\r\n      request.email = email\r\n      request.password = password\r\n    }\r\n    else request.phone = email\r\n\r\n    localStorage.setItem('email', email)\r\n    this.props._setUserInfo({ email })\r\n    let fullRequest = { request, serviceMethod: 'POST', serviceCode: 'login', customHeaders: { clientId }, }\r\n    this.props._setCompleteRequest(fullRequest)\r\n  }\r\n\r\n  handleSubmitOtp = e => {\r\n    if (this.state.otp) {\r\n      let clientId = this.state.clientId\r\n      this.props._setRequest({})\r\n      this.props._setServiceCode(\"\")\r\n      this.props._setServiceStatus(\"\")\r\n      let challenge = this.state.otp\r\n      let otpID = this.props.userInfo.otpId\r\n      let request = {\r\n        challenge,\r\n        otpID,\r\n        redirectURI: \"http://www.alamanak.co.id\",\r\n      }\r\n      let fullRequest = { request, serviceMethod: 'POST', serviceCode: 'OTP', customHeaders: { clientId }, }\r\n      this.props._setCompleteRequest(fullRequest)\r\n    }\r\n  }\r\n\r\n  handleCancelOtp = () => {\r\n    this.props._setUserOtpId('')\r\n    this.setState({ ...this.state, email: '' })\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    let domain = window.location.origin\r\n    event.preventDefault()\r\n    let clientId = this.state.clientId\r\n    this.props._setRequest({})\r\n    this.props._setServiceCode(\"\")\r\n    this.props._setServiceStatus(\"\")\r\n    if (clientId) {\r\n      if (!this.state.isError) {\r\n        this.setState({\r\n          ...this.state,\r\n          onLoginErrorMessage: \"\"\r\n        })\r\n        let request = {\r\n          redirectURI: \"http://www.alamanak.co.id\",\r\n          provider: \"internal\",\r\n          responseType: \"token\",\r\n        }\r\n        let email = this.state.email\r\n        let password = this.state.password\r\n        if (regexEmail.test(email)) {\r\n          request.email = email\r\n          request.password = password\r\n          localStorage.setItem('email', email)\r\n          this.props._setUserInfo({ email })\r\n        }\r\n        else request.phone = email[0] === '0' ? '+62' + email.slice(1) : email\r\n        // console.log(request)\r\n        let fullRequest = { request, serviceMethod: 'POST', serviceCode: 'login', customHeaders: { clientId }, }\r\n        this.props._setCompleteRequest(fullRequest)\r\n      }\r\n    }\r\n    /**\r\n     * LOGIN WITH REAL DOMAIN\r\n     */\r\n    else if ((domain === 'https://health.voltras.net')) {\r\n      let domainClientId = 'voltras-health'\r\n      if (!this.state.isError) {\r\n        this.setState({\r\n          ...this.state,\r\n          onLoginErrorMessage: \"\"\r\n        })\r\n        let email = this.state.email\r\n        let password = this.state.password\r\n        let loginRequest = {\r\n          redirectURI: \"http://www.alamanak.co.id\",\r\n          provider: \"internal\",\r\n          responseType: \"token\",\r\n        }\r\n        if (regexEmail.test(email)) {\r\n          loginRequest.email = email\r\n          loginRequest.password = password\r\n          localStorage.setItem('email', email)\r\n          this.props._setUserInfo({ email })\r\n        }\r\n        else loginRequest.phone = email[0] === '0' ? '+62' + email.slice(1) : email\r\n\r\n        let fullRequest = { request: loginRequest, serviceMethod: 'POST', serviceCode: 'login', customHeaders: { clientId: domainClientId }, }\r\n        this.props._setCompleteRequest(fullRequest)\r\n      }\r\n    }\r\n    else {\r\n      this.setState({\r\n        ...this.state,\r\n        onLoginErrorMessage: \"App to Login must be chosen\"\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChange = prop => event => {\r\n    if (prop === 'password' && event.target.value.length === 0) {\r\n      this.setState({\r\n        ...this.state,\r\n        [prop]: event.target.value,\r\n        isError: true,\r\n        passwordErrorMessage: FormatText('err_password_empty')\r\n      })\r\n    }\r\n    else if (prop === 'password' && event.target.value.length < 8) {\r\n      this.setState({\r\n        ...this.state,\r\n        [prop]: event.target.value,\r\n        isError: true,\r\n        passwordErrorMessage: FormatText('err_not_six_char')\r\n      })\r\n    }\r\n    else if (prop === 'email') {\r\n      if (\r\n        (regexEmail.test(event.target.value) || regexPhone.test(event.target.value))\r\n        && event.target.value.length > 0\r\n      ) {\r\n        this.setState({\r\n          ...this.state,\r\n          [prop]: event.target.value,\r\n          isError: false,\r\n          emailErrorMessage: ''\r\n        })\r\n      } else if (event.target.value.length === 0) {\r\n        this.setState({\r\n          ...this.state,\r\n          [prop]: event.target.value,\r\n          isError: true,\r\n          emailErrorMessage: FormatText('err_email_phone_empty')\r\n        })\r\n      }\r\n      else {\r\n        this.setState({\r\n          ...this.state,\r\n          [prop]: event.target.value,\r\n          isError: true,\r\n          emailErrorMessage: FormatText('err_email_phone_format')\r\n        })\r\n      }\r\n    }\r\n    else {\r\n      this.setState({\r\n        ...this.state,\r\n        emailErrorMessage: \"\",\r\n        passwordErrorMessage: \"\",\r\n        isError: false,\r\n        [prop]: event.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  handleEnter = event => {\r\n    if (event.which === 13 && event.key === \"Enter\") {\r\n      this.handleSubmit(event)\r\n    }\r\n  }\r\n\r\n  handleClickShowPassword = (event) => {\r\n    this.setState({\r\n      ...this.state,\r\n      showPassword: !this.state.showPassword\r\n    })\r\n  }\r\n\r\n  handleRegister = (event) => {\r\n    event.preventDefault()\r\n    this.props.history.push('/Register')\r\n  }\r\n\r\n  handleClient = value => {\r\n    // console.log(value)\r\n    let client = [\r\n      {\r\n        label: 'Voltras Health',\r\n        clientId: 'voltras-health'\r\n      },\r\n      {\r\n        label: 'Voltras Backoffice',\r\n        clientId: 'authentication-backoffice'\r\n      },\r\n      {\r\n        label: 'Dummy App',\r\n        clientId: 'cerita nya Almanak'\r\n      },\r\n\r\n    ]\r\n    if (value) {\r\n      let clientId = client.filter(item => item.label === value.name)[0].clientId\r\n      // console.log(clientId)\r\n      this.setState({ ...this.state, clientId, onLoginErrorMessage: '' })\r\n    }\r\n  }\r\n\r\n  onRadioChange = e => {\r\n    e.preventDefault()\r\n    // console.log(e.target.value)\r\n    this.setState({\r\n      ...this.state,\r\n      roleChoosen: e.target.value\r\n    })\r\n  }\r\n\r\n  handleChooseRole = () => {\r\n    /**\r\n     * MAJOR CODE FOR ENTERING THE APP\r\n     * 1. Read domain and role choose by user.\r\n     * 2. Choose Homepage and Menu to show.\r\n     */\r\n\r\n    let domain = window.location.origin\r\n    let roleChoosen = this.state.roleChoosen\r\n    let userInfo = this.props.userInfo.info\r\n    let clientId = userInfo.aud\r\n    let newMenu = menuCreator(domain, clientId, roleChoosen)\r\n\r\n    let obj = {}\r\n    if (newMenu.length > 0) newMenu.map(item => {\r\n      return obj = {\r\n        ...obj,\r\n        [item.url]: false,\r\n      }\r\n    })\r\n    this.props._setMenuCollapseStatus(obj)\r\n    this.props._setUserMenu(newMenu)\r\n    this.props._setRoleUsed(roleChoosen)\r\n    localStorage.setItem(\"roleUsed\", roleChoosen)\r\n    this.props._setPopChooseRole(false)\r\n    this.props.history.push('/Home')\r\n  }\r\n\r\n  handleDialogClose = () => this.setState({ ...this.state, forgotOpen: false })\r\n\r\n  handleDialogSubmit = () => {\r\n    // console.log('dialog submit process')\r\n    let domain = window.location.origin\r\n    // event.preventDefault()\r\n    let clientId = this.state.clientId\r\n    this.props._setRequest({})\r\n    this.props._setServiceCode(\"\")\r\n    this.props._setServiceStatus(\"\")\r\n    if (clientId) {\r\n      if (!this.state.isError) {\r\n        this.setState({\r\n          ...this.state,\r\n          onLoginErrorMessage: \"\"\r\n        })\r\n        let request = {\r\n          redirectURI: \"http://www.alamanak.co.id\",\r\n          email: this.state.email\r\n        }\r\n        let fullRequest = { request, serviceMethod: 'POST', serviceCode: 'RESET_PASSWORD_REQUEST', customHeaders: { clientId }, }\r\n        this.props._setCompleteRequest(fullRequest)\r\n\r\n        this.setState({ ...this.state, email: \"\" })\r\n      }\r\n    }\r\n    /**\r\n     * LOGIN WITH REAL DOMAIN\r\n     */\r\n    else if ((domain === 'https://health.voltras.net')) {\r\n      let domainClientId = 'voltras-health'\r\n      if (!this.state.isError) {\r\n        this.setState({ ...this.state, onLoginErrorMessage: \"\" })\r\n        let email = this.state.email\r\n        let request = { email, redirectURI: \"http://www.alamanak.co.id\", }\r\n        let fullRequest = { request, serviceMethod: 'POST', serviceCode: 'RESET_PASSWORD_REQUEST', customHeaders: { clientId: domainClientId } }\r\n        this.props._setCompleteRequest(fullRequest)\r\n\r\n        this.setState({ ...this.state, email: \"\" })\r\n      }\r\n    }\r\n    else {\r\n      this.setState({\r\n        ...this.state,\r\n        onLoginErrorMessage: \"App to Login must be chosen\"\r\n      })\r\n    }\r\n  }\r\n\r\n  submitChangePassword = request => {\r\n    // console.log(\"kesinikah: \", request)\r\n    let domain = window.location.origin\r\n    let clientId = this.state.clientId\r\n    this.props._setRequest({})\r\n    this.props._setServiceCode(\"\")\r\n    this.props._setServiceStatus(\"\")\r\n    if (clientId) {\r\n      request.redirectURI = \"http://www.alamanak.co.id\"\r\n      request.resetPasswordCode = this.props.userInfo.resetPasswordCode\r\n      let fullRequest = { request, serviceMethod: 'POST', serviceCode: 'CHANGE_PASSWORD_REQUEST', customHeaders: { clientId }, }\r\n      this.props._setCompleteRequest(fullRequest)\r\n    }\r\n    /**\r\n     * LOGIN WITH REAL DOMAIN\r\n     */\r\n    else if ((domain === 'https://health.voltras.net')) {\r\n      let domainClientId = 'voltras-health'\r\n      request.redirectURI = \"http://www.alamanak.co.id\"\r\n      request.resetPasswordCode = this.props.userInfo.resetPasswordCode\r\n      let fullRequest = { request, serviceMethod: 'POST', serviceCode: 'CHANGE_PASSWORD_REQUEST', customHeaders: { clientId: domainClientId }, }\r\n      this.props._setCompleteRequest(fullRequest)\r\n    }\r\n    else {\r\n      this.setState({\r\n        ...this.state,\r\n        onLoginErrorMessage: \"App to Login must be chosen\"\r\n      })\r\n    }\r\n  }\r\n\r\n  handleGoogleLogin = request => {\r\n    /*\r\n      Sementara hanya voltras-health yg bisa login by google\r\n    */\r\n    let domainClientId = 'voltras-health'\r\n    let fullRequest = { request, serviceMethod: 'POST', serviceCode: 'login', customHeaders: { clientId: domainClientId }, }\r\n    this.props._setCompleteRequest(fullRequest)\r\n  }\r\n\r\n  handleForgotOpen = () => this.setState({ ...this.state, forgotOpen: true })\r\n\r\n  render() {\r\n    // let domain = window.location.origin\r\n    const { classes, system } = this.props;\r\n    return (\r\n      <div >\r\n        <center>\r\n          <CircularProgress\r\n            style={{ visibility: system.serviceStart && system.openScreen === 'Login' ? \"visible\" : \"hidden\" }}\r\n            color=\"secondary\"\r\n            size={30}\r\n            thickness={5}\r\n          />\r\n        </center>\r\n        <ForgotPasswordDialog\r\n          open={this.state.forgotOpen}\r\n          handleDialogClose={this.handleDialogClose}\r\n          dialogTitle=\"Change password request\"\r\n          dialogContent={`A confirmation email will be sent to: ${this.state.email}`}\r\n          cancelTitle='Cancel'\r\n          submitTitle='Send'\r\n          handleDialogSubmit={this.handleDialogSubmit}\r\n        />\r\n        {\r\n          this.props.userInfo.resetPasswordCode\r\n            ? <ForgotPasswordForm\r\n              formLabel={FormatText('common_change_password')}\r\n              submitChangePassword={this.submitChangePassword}\r\n              state={this.state}\r\n              handleClient={this.handleClient}\r\n            />\r\n            : <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" >\r\n              <Hidden mdDown>\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    width: 600\r\n                  }} >\r\n                  <br />\r\n\r\n                  <div style={{ marginTop: 100 }} >\r\n                    <Typography variant=\"subtitle2\" >\r\n                      {FormatText('app_welcome')}\r\n                    </Typography>\r\n                    <Typography variant=\"h4\" color='primary' >\r\n                      {system.appConstant ? system.appConstant.welcome : \"\"}\r\n                    </Typography>\r\n\r\n                  </div>\r\n                </div>\r\n              </Hidden>\r\n              <div style={{ alignSelf: \"center\", justifySelf: \"center\" }}  >\r\n                <br />\r\n                {this.props.system.popChooseRole\r\n                  ? <ChooseRoleCard\r\n                    onRadioChange={this.onRadioChange}\r\n                    userInfo={this.props.userInfo}\r\n                    state={this.state}\r\n                    handleChooseRole={this.handleChooseRole}\r\n                    classes={classes.root}\r\n                  />\r\n                  : this.props.userInfo.otpId\r\n                    ? <InsertOTPCard\r\n                      classes={classes.root}\r\n                      state={this.state}\r\n                      handleChange={this.handleChange}\r\n                      handleCancelOtp={this.handleCancelOtp}\r\n                      handleSubmitOtp={this.handleSubmitOtp}\r\n                      handleResendOtp={this.handleResendOtp}\r\n                    />\r\n                    : <LoginCard\r\n                      handleChange={this.handleChange}\r\n                      handleClient={this.handleClient}\r\n                      handleGoogleLogin={this.handleGoogleLogin}\r\n                      handleEnter={this.handleEnter}\r\n                      handleClickShowPassword={this.handleClickShowPassword}\r\n                      handleMouseDownPassword={this.handleMouseDownPassword}\r\n                      handleSubmit={this.handleSubmit}\r\n                      handleRegister={this.handleRegister}\r\n                      handleForgotOpen={this.handleForgotOpen}\r\n                      state={this.state}\r\n                      setState={this.setState}\r\n                      // system={this.props.system}\r\n                      {...this.props}\r\n                    />\r\n                }\r\n              </div>\r\n            </Grid>\r\n        }\r\n        <div style={{ height: window.screen.height - 500 }} >\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport const useLoginStyles = (theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: 285,\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    width: '30ch',\r\n  },\r\n});\r\n\r\nexport default LoginScreen","\r\nimport { connect } from 'react-redux'\r\nimport LoginScreen, { useLoginStyles } from './LoginScreen'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { setServiceRequest, setServiceCode, setServiceStatus, setServiceCustomHeaders, setServiceMethod, setServiceParams } from '../../actions/ServiceActions'\r\nimport { setOpenScreen, dispatchLogout, setAppConstant, setPopChooseRole, setLocale } from '../../actions/SystemActions'\r\nimport { setUserInfo, setUserOtpId, setRoleUsed, setVerificationCode } from \"../../actions/UserInfoActions\";\r\nimport { setUserMenu, setMenuCollapseStatus } from \"../../actions/MenuActions\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    system: state.system,\r\n    userInfo: state.userInfo,\r\n    menu: state.menu,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setLocale: val => dispatch(setLocale(val)),\r\n    _setVerificationCode: val => dispatch(setVerificationCode(val)),\r\n    _setServiceMethod: val => dispatch(setServiceMethod(val)),\r\n    _setRequest: val => dispatch(setServiceRequest(val)),\r\n    _setServiceCode: val => dispatch(setServiceCode(val)),\r\n    _setServiceStatus: val => dispatch(setServiceStatus(val)),\r\n    _setServiceCustomHeaders: val => dispatch(setServiceCustomHeaders(val)),\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)),\r\n    _setUserInfo: val => dispatch(setUserInfo(val)),\r\n    _setUserOtpId: val => dispatch(setUserOtpId(val)),\r\n    _setAppConstant: val => dispatch(setAppConstant(val)),\r\n    _setUserMenu: val => dispatch(setUserMenu(val)),\r\n    _setRoleUsed: val => dispatch(setRoleUsed(val)),\r\n    _setMenuCollapseStatus: val => dispatch(setMenuCollapseStatus(val)),\r\n    _dispatchLogout: () => dispatch(dispatchLogout()),\r\n    _setPopChooseRole: val => dispatch(setPopChooseRole(val)),\r\n    _setCompleteRequest: val => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.serviceMethod))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceParams(val.serviceParams))\r\n      dispatch(setServiceStatus(val.serviceStatus || 'active'))\r\n    }\r\n  }\r\n}\r\n\r\nconst Login = connect(mapStateToProps, mapDispatchToProps)(LoginScreen)\r\n\r\nexport default withStyles(useLoginStyles)(Login)","\r\nimport React, { Component } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { FormValidation } from \"../../utils/FormValidation\";\r\nimport FormatText from '../../i18n';\r\nimport GoogleLogin from '../login/GoogleLogin'\r\n\r\nclass RegisterScreen extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      name: null,\r\n      nameErrorMessage: '',\r\n      phone: null,\r\n      phoneErrorMessage: '',\r\n      email: '',\r\n      emailErrorMessage: '',\r\n      password: '',\r\n      passwordErrorMessage: '',\r\n      confirmPassword: \"\",\r\n      confirmPasswordErrorMessage: '',\r\n      showPassword: false,\r\n      showConfirm: false,\r\n      isError: true,\r\n      submitErrorMessage: \"\",\r\n    }\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault()\r\n    const { name, phone, email, password, confirmPassword, isError } = this.state\r\n\r\n    if (name && email && password && confirmPassword && !isError) {\r\n      let registerRequest = { name, email, password, redirectURI: \"http://www.alamanak.co.id\", }\r\n      if (phone) registerRequest.phone = phone[0] === '0' ? '+62' + phone.slice(1) : phone\r\n      this.props._setRequest(registerRequest)\r\n      this.props._setServiceCode(\"register\")\r\n      // set CLient for development only in Live will automatically choosen by domain\r\n      // coment out all on live\r\n      this.props._setServiceCustomHeaders({\r\n        // change clientID here in development\r\n        clientId: 'voltras-health'\r\n      })\r\n      this.props._setServiceStatus(\"active\")\r\n    }\r\n    else {\r\n      this.setState({\r\n        ...this.state,\r\n        isError: true,\r\n        submitErrorMessage: FormatText('err_submit')\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChange = prop => event => {\r\n    let valid = FormValidation(prop, event.target.value)\r\n    if (prop === 'confirmPassword') {\r\n      if (this.state.password !== event.target.value) {\r\n        this.setState({\r\n          ...this.state,\r\n          isError: true,\r\n          [prop]: event.target.value,\r\n          [prop + 'ErrorMessage']: FormatText('password confirmation not match'),\r\n        });\r\n      }\r\n      else {\r\n        this.setState({\r\n          ...this.state,\r\n          isError: false,\r\n          [prop]: event.target.value,\r\n          [prop + 'ErrorMessage']: '',\r\n          submitErrorMessage: \"\",\r\n        });\r\n      }\r\n    }\r\n    else if (prop === 'phone' && !event.target.value) {\r\n      this.setState({\r\n        ...this.state,\r\n        isError: false,\r\n        [prop]: event.target.value,\r\n        [prop + 'ErrorMessage']: '',\r\n        submitErrorMessage: \"\",\r\n      });\r\n    }\r\n    else {\r\n      this.setState({\r\n        ...this.state,\r\n        [prop]: event.target.value,\r\n        [prop + 'ErrorMessage']: valid.errorMessage,\r\n        isError: valid.error,\r\n        submitErrorMessage: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  handleMouseDownPassword(event) {\r\n    event.preventDefault()\r\n  }\r\n\r\n  handleGoogleLogin = request => {\r\n    /*\r\n      Sementara hanya voltras-health yg bisa login by google\r\n    */\r\n    let domainClientId = 'voltras-health'\r\n    let fullRequest = { request, serviceMethod: 'POST', serviceCode: 'login', customHeaders: { clientId: domainClientId }, }\r\n    this.props._setCompleteRequest(fullRequest)\r\n  }\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div >\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n          <Card className={classes.root} elevation={4}>\r\n            <CardContent style={{ width: 320, textAlign: 'center' }}>\r\n              <Typography color='primary' variant=\"h5\" style={{ marginBottom: 15 }} ><b>{FormatText('app_sign_up')}</b> </Typography>\r\n              <Grid container item direction=\"column\" justify=\"center\" alignItems=\"center\" >\r\n\r\n                <GoogleLogin\r\n                  params={this.props.system.googleParams}\r\n                  handleGoogleLogin={this.handleGoogleLogin}\r\n                  buttonText={FormatText('common_signup_with')}\r\n                  width={280}\r\n                />\r\n\r\n                <Typography variant='subtitle2' style={{ marginTop: 20 }} >{FormatText('common_or')}</Typography>\r\n                <FormControl fullWidth style={{ marginBottom: 5 }} >\r\n                  <InputLabel error={this.state.nameErrorMessage ? true : false} htmlFor=\"standard-adornment-password\">\r\n                    {FormatText('app_name')} <span style={{ color: 'red' }}>*</span>\r\n                  </InputLabel>\r\n                  <Input\r\n                    error={this.state.nameErrorMessage ? true : false}\r\n                    id=\"standard-adornment-name\"\r\n                    type='text'\r\n                    onChange={this.handleChange('name')}\r\n                  />\r\n                  {\r\n                    this.state.nameErrorMessage\r\n                      ? <FormHelperText error id=\"name-helper-text\">{this.state.nameErrorMessage}</FormHelperText>\r\n                      : null\r\n                  }\r\n                </FormControl>\r\n\r\n                <FormControl fullWidth style={{ marginBottom: 5 }} >\r\n                  <InputLabel error={this.state.emailErrorMessage ? true : false} htmlFor=\"standard-adornment-password\">\r\n                    {FormatText('app_email')} <span style={{ color: 'red' }}>*</span>\r\n                  </InputLabel>\r\n                  <Input\r\n                    error={this.state.emailErrorMessage ? true : false}\r\n                    id=\"standard-adornment-email\"\r\n                    type='text'\r\n                    onChange={this.handleChange('email')}\r\n                  />\r\n                  {\r\n                    this.state.emailErrorMessage\r\n                      ? <FormHelperText error id=\"email-helper-text\">{this.state.emailErrorMessage}</FormHelperText>\r\n                      : null\r\n                  }\r\n                </FormControl>\r\n\r\n                <FormControl fullWidth style={{ marginBottom: 5 }} >\r\n                  <InputLabel error={this.state.phoneErrorMessage ? true : false} htmlFor=\"standard-adornment-password\">\r\n                    {FormatText('app_phone')}\r\n                  </InputLabel>\r\n                  <Input\r\n                    error={this.state.phoneErrorMessage ? true : false}\r\n                    id=\"standard-adornment-phone\"\r\n                    type='text'\r\n                    onChange={this.handleChange('phone')}\r\n                  />\r\n                  {\r\n                    this.state.phoneErrorMessage\r\n                      ? <FormHelperText error id=\"phone-helper-text\">{this.state.phoneErrorMessage}</FormHelperText>\r\n                      : <FormHelperText id=\"phone-helper-text\">{FormatText('app_not_mandatory')}</FormHelperText>\r\n                  }\r\n                </FormControl>\r\n\r\n                <FormControl fullWidth style={{ marginBottom: 5 }}  >\r\n                  <InputLabel error={this.state.passwordErrorMessage ? true : false} htmlFor=\"standard-adornment-password\">\r\n                    {FormatText('app_password')} <span style={{ color: 'red' }}>*</span>\r\n                  </InputLabel>\r\n                  <Input\r\n                    error={this.state.passwordErrorMessage ? true : false}\r\n                    id=\"standard-adornment-password\"\r\n                    type={this.state.showPassword ? 'text' : 'password'}\r\n                    value={this.state.password}\r\n                    onChange={this.handleChange('password')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={() => this.setState({ ...this.state, showPassword: !this.state.showPassword })}\r\n                          onMouseDown={this.handleMouseDownPassword}\r\n                        >\r\n                          {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                  />\r\n                  {\r\n                    this.state.passwordErrorMessage\r\n                      ? <FormHelperText error id=\"email-helper-text\">{this.state.passwordErrorMessage}</FormHelperText>\r\n                      : null\r\n                  }\r\n                </FormControl>\r\n\r\n                <FormControl fullWidth style={{ marginBottom: 5 }}  >\r\n                  <InputLabel error={this.state.confirmPasswordErrorMessage ? true : false} htmlFor=\"standard-adornment-password\">\r\n                    {FormatText('app_password_confirmation')} <span style={{ color: 'red' }}>*</span>\r\n                  </InputLabel>\r\n                  <Input\r\n                    error={this.state.confirmPasswordErrorMessage ? true : false}\r\n                    id=\"standard-adornment-confirm\"\r\n                    type={this.state.showConfirm ? 'text' : 'password'}\r\n                    onChange={this.handleChange('confirmPassword')}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle confirm visibility\"\r\n                          onClick={() => this.setState({ ...this.state, showConfirm: !this.state.showConfirm })}\r\n                          onMouseDown={this.handleMouseDownPassword}\r\n                        >\r\n                          {this.state.showConfirm ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                  />\r\n                  {\r\n                    this.state.confirmPasswordErrorMessage\r\n                      ? <FormHelperText error id=\"email-helper-text\">{this.state.confirmPasswordErrorMessage}</FormHelperText>\r\n                      : null\r\n                  }\r\n                </FormControl>\r\n\r\n                <Button\r\n                  fullWidth\r\n                  onClick={this.handleSubmit}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{ textTransform: 'none', fontWeight: 'bold', marginTop: 20 }}\r\n                >\r\n                  {FormatText('app_sign_up')}\r\n                </Button>\r\n                {\r\n                  this.state.submitErrorMessage\r\n                    ? <FormHelperText error id=\"email-helper-text\">{this.state.submitErrorMessage}</FormHelperText>\r\n                    : null\r\n                }\r\n\r\n              </Grid>\r\n              <Grid>\r\n\r\n                <div style={{ marginTop: 10 }}>\r\n                  <Typography variant='caption' >{FormatText('app_have_account')}</Typography>\r\n                  <Button onClick={() => this.props.history.push('/Login')} color=\"primary\" style={{ textTransform: 'none', fontWeight: 'bold' }} >\r\n                    {FormatText('app_sign_in')}\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport const useLoginStyles = (theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: 10,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    width: '25ch',\r\n  },\r\n});\r\n\r\nexport default RegisterScreen","\r\nimport { connect } from 'react-redux'\r\nimport RegisterScreen, { useLoginStyles } from './RegisterScreen'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceRole, setServiceCustomHeaders,\r\n  setServiceMethod, setServiceParams,\r\n} from '../../actions/ServiceActions'\r\nimport { setOpenScreen } from '../../actions/SystemActions'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    system: state.system,\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setRequest: val => {\r\n      dispatch(setServiceRequest(val))\r\n    },\r\n    _setServiceRole: val => {\r\n      dispatch(setServiceRole(val))\r\n    },\r\n    _setServiceCode: val => {\r\n      dispatch(setServiceCode(val))\r\n    },\r\n    _setServiceStatus: val => {\r\n      dispatch(setServiceStatus(val))\r\n    },\r\n    _setOpenScreen: val => {\r\n      dispatch(setOpenScreen(val))\r\n    },\r\n    _setServiceCustomHeaders: val => dispatch(setServiceCustomHeaders(val)),\r\n    _setCompleteRequest: val => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.serviceMethod))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceParams(val.serviceParams))\r\n      dispatch(setServiceStatus(val.serviceStatus || 'active'))\r\n    }\r\n  }\r\n}\r\n\r\nconst Login = connect(mapStateToProps, mapDispatchToProps)(RegisterScreen)\r\n\r\nexport default withStyles(useLoginStyles)(Login)","\r\n// export const dateNormalizationMilis = (dt) => {\r\n//     const date = new Date(dt);\r\n//     const dateNor = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0).getTime();\r\n//     return dateNor;\r\n// }\r\n\r\nexport const RupiahFormat = (nominal) => {\r\n    let rupiah = (parseInt(nominal).toLocaleString('id', { style: 'currency', currency: 'IDR', minimumFractionDigits: 0 }))\r\n    return rupiah;\r\n}\r\n\r\n\r\nexport const yearFromNowTo10Later = () => {\r\n    const range = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n    const year = new Date().getFullYear();\r\n    const yearRange = range.map((item) => item + year);\r\n    return yearRange;\r\n}\r\n\r\nexport const convertDateyyyymmdd = (date) => {\r\n    const newDate = new Date(date);\r\n    const year = newDate.getFullYear();\r\n    const month = newDate.getMonth() + 1 < 10 ? \"0\" + Number(newDate.getMonth() + 1) : Number(newDate.getMonth() + 1);\r\n    const datenew = newDate.getDate() < 10 ? \"0\" + Number(newDate.getDate()) : Number(newDate.getDate());\r\n    const yyyymmdd = year + \"-\" + month + \"-\" + datenew;\r\n\r\n    return yyyymmdd;\r\n}\r\n\r\nexport const datetoanydaysafter = (date, any) => {\r\n    const newDate = new Date(date);\r\n    const anydaysafter = newDate.getTime() + parseInt(any) * 24 * 60 * 60 * 1000\r\n    return anydaysafter\r\n}\r\n\r\nexport const isDateBeforeNow = date => {\r\n    const newDate = new Date(date)\r\n    const dateNow = new Date()\r\n    let now = new Date(dateNow.getTime())\r\n\r\n    if (newDate < now) return true\r\n    else return false\r\n}\r\n\r\nexport const converDateDDMMYY = (date) => {\r\n    const newDate = new Date(date);\r\n    const year = newDate.getFullYear();\r\n    const month = newDate.getMonth() + 1 < 10 ? \"0\" + Number(newDate.getMonth() + 1) : Number(newDate.getMonth() + 1);\r\n    const datenew = newDate.getDate() < 10 ? \"0\" + Number(newDate.getDate()) : Number(newDate.getDate());\r\n    const ddmmyy = datenew + \"-\" + month + \"-\" + year;\r\n\r\n    return ddmmyy;\r\n}\r\n\r\nexport const convertToMMYY = (date) => {\r\n    const newDate = new Date(date);\r\n    const year = String(newDate.getFullYear());\r\n    const month = newDate.getMonth() + 1 < 10 ? \"0\" + Number(newDate.getMonth() + 1) : Number(newDate.getMonth() + 1);\r\n\r\n    const mmyy = month + \"/\" + year.substr(2, 4);\r\n    return mmyy;\r\n}\r\n\r\nexport const dateTimeConverter = (data) => {\r\n    const date = new Date(data);\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1 < 10 ? \"0\" + Number(date.getMonth() + 1) : Number(date.getMonth() + 1);\r\n    const datenew = date.getDate() < 10 ? \"0\" + Number(date.getDate()) : Number(date.getDate());\r\n\r\n    const hour = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const hourText = parseInt(hour) < 10 ? \"0\" + hour.toString() : hour.toString()\r\n    const minutesText = parseInt(minutes) < 10 ? \"0\" + minutes.toString() : minutes.toString()\r\n\r\n    const dateTime = datenew + \"-\" + month + \"-\" + year + \", \" + hourText + \":\" + minutesText;\r\n\r\n    return dateTime;\r\n}\r\n\r\nexport const timeConverter = (data) => {\r\n    const date = new Date(data);\r\n    const hour = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const hourText = parseInt(hour) < 10 ? \"0\" + hour.toString() : hour.toString()\r\n    const minutesText = parseInt(minutes) < 10 ? \"0\" + minutes.toString() : minutes.toString()\r\n    const dateTime = hourText + \":\" + minutesText\r\n    return dateTime;\r\n}\r\n\r\nexport const yyyymmddWithParams = params => {\r\n    // eslint-disable-next-line\r\n    let date\r\n    const dateNow = new Date()\r\n    let now = new Date(dateNow.getTime())\r\n    let nextWeek = new Date(dateNow.getTime() + 7 * 24 * 60 * 60 * 1000)\r\n    let lastWeek = new Date(dateNow.getTime() - 7 * 24 * 60 * 60 * 1000)\r\n    let nextYear = new Date(dateNow.getTime() + 366 * 24 * 60 * 60 * 1000)\r\n    switch (params) {\r\n        case 'now':\r\n            return date = convertDateyyyymmdd(now)\r\n        case 'nextWeek':\r\n            return date = convertDateyyyymmdd(nextWeek)\r\n        case 'lastWeek':\r\n            return date = convertDateyyyymmdd(lastWeek)\r\n        case 'nextYear':\r\n            return date = convertDateyyyymmdd(nextYear)\r\n        default:\r\n            return date = 'params not defined'\r\n    }\r\n}\r\n\r\nexport const createUserTypes = types => {\r\n    let result = [\r\n        { value: 'root', label: 'Root' },\r\n        { value: 'admin', label: 'Admin' },\r\n        { value: \"end-user\", label: 'End-User' },\r\n    ]\r\n    if (types === 'AUTHENTICATION_USER') {\r\n        result = [\r\n            { value: \"end-user\", label: 'End-User' },\r\n        ]\r\n    }\r\n    else if (types === 'AUTHENTICATION_ADMIN') {\r\n        result = [\r\n            { value: 'admin', label: 'Admin' },\r\n            { value: \"end-user\", label: 'End-User' },\r\n        ]\r\n    }\r\n    return result\r\n}\r\n\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n    // convert base64 to raw binary data held in a string\r\n    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\r\n    var byteString = atob(dataURI.split(',')[1]);\r\n\r\n    // separate out the mime component\r\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\r\n\r\n    // write the bytes of the string to an ArrayBuffer\r\n    var ab = new ArrayBuffer(byteString.length);\r\n\r\n    // create a view into the buffer\r\n    var ia = new Uint8Array(ab);\r\n\r\n    // set the bytes of the buffer to the correct values\r\n    for (var i = 0; i < byteString.length; i++) {\r\n        ia[i] = byteString.charCodeAt(i);\r\n    }\r\n\r\n    // write the ArrayBuffer to a blob, and you're done\r\n    var blob = new Blob([ab], { type: mimeString });\r\n    return blob;\r\n\r\n}\r\n\r\nexport const resizeImage = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n        var fileLoader = new FileReader(),\r\n            canvas = document.createElement('canvas'),\r\n            context = null,\r\n            imageObj = new Image(),\r\n            blob = null;\r\n\r\n        const max_width = 250;\r\n        const max_height = 200;\r\n\r\n        //create a hidden canvas object we can use to create the new resized image data\r\n        canvas.id = \"hiddenCanvas\";\r\n        canvas.style.visibility = \"hidden\";\r\n        document.body.appendChild(canvas);\r\n\r\n        //get the context to use \r\n        context = canvas.getContext('2d');\r\n\r\n        // check for an image then\r\n        //trigger the file loader to get the data from the image         \r\n        if (file.type.match('image.*')) {\r\n            fileLoader.readAsDataURL(file);\r\n        } else {\r\n            resolve({ message: 'File is not an image' })\r\n            // alert('File is not an image');\r\n        }\r\n\r\n        // setup the file loader onload function\r\n        // once the file loader has the data it passes it to the \r\n        // image object which, once the image has loaded, \r\n        // triggers the images onload function\r\n        fileLoader.onload = function () {\r\n            var data = this.result;\r\n            imageObj.src = data;\r\n        };\r\n\r\n        fileLoader.onabort = function () {\r\n            // alert(\"The upload was aborted.\");\r\n            resolve({ message: 'The upload was aborted.' })\r\n        };\r\n\r\n        fileLoader.onerror = function () {\r\n            // alert(\"An error occured while reading the file.\");\r\n            resolve({ message: 'An error occured while reading the file.' })\r\n        };\r\n\r\n\r\n        // set up the images onload function which clears the hidden canvas context, \r\n        // draws the new image then gets the blob data from it\r\n        imageObj.onload = function () {\r\n\r\n            // Check for empty images\r\n            if (this.width === 0 || this.height === 0) {\r\n                \r\n                // alert('Image is empty');\r\n                resolve({ message: 'Image is empty.' })\r\n            } else {\r\n\r\n                var iw = this.width;\r\n                var ih = this.height;\r\n                var scale = Math.min((max_width / iw), (max_height / ih));\r\n                var iwScaled = iw * scale;\r\n                var ihScaled = ih * scale;\r\n                canvas.width = iwScaled;\r\n                canvas.height = ihScaled;\r\n                //         ctx.drawImage(img, 0, 0, iwScaled, ihScaled);\r\n\r\n                context.clearRect(0, 0, iwScaled, ihScaled);\r\n                context.drawImage(imageObj, 0, 0, this.width, this.height, 0, 0, iwScaled, ihScaled);\r\n\r\n                //dataURItoBlob function available here:\r\n                // http://stackoverflow.com/questions/12168909/blob-from-dataurl\r\n                // add ')' at the end of this function SO dont allow to update it without a 6 character edit\r\n                blob = dataURItoBlob(canvas.toDataURL(imageObj));\r\n\r\n                //pass this blob to your upload function\r\n                // upload(blob);\r\n                resolve({\r\n                    // binary: byteArr,\r\n                    // type: fileType,\r\n                    message: null,\r\n                    blobUrl: createBlobFromBase64(canvas.toDataURL(imageObj)),\r\n                    file: blob\r\n                });\r\n            }\r\n        };\r\n\r\n        imageObj.onabort = function () {\r\n            // alert(\"Image load was aborted.\");\r\n            resolve({ message: 'The upload was aborted.' })\r\n        };\r\n\r\n        imageObj.onerror = function () {\r\n            // alert(\"An error occured while loading image.\");\r\n            resolve({ message: 'An error occured while loading image.' })\r\n        };\r\n    })\r\n}\r\n\r\n\r\n// export const base64ToBinary = (base64) => {\r\n//     const data = base64.split(',')[1];\r\n//     // console.log(\"ISIS DARA\", data);\r\n//     var binArray = []\r\n//     let datEncode = \"\";\r\n\r\n//     for (let i = 0; i < data.length; i++) {\r\n//         binArray.push(data[i].charCodeAt(0).toString(2));\r\n//     }\r\n//     for (let j = 0; j < binArray.length; j++) {\r\n//         var pad = padding_left(binArray[j], '0', 8);\r\n//         datEncode += pad + ' ';\r\n//     }\r\n//     function padding_left(s, c, n) {\r\n//         if (!s || !c || s.length >= n) {\r\n//             return s;\r\n//         }\r\n//         var max = (n - s.length) / c.length;\r\n//         for (var i = 0; i < max; i++) {\r\n//             s = c + s;\r\n//         } return s;\r\n//     }\r\n//     // console.log(binArray);\r\n\r\n//     return binArray;\r\n// }\r\n\r\nexport const createBlobFromBase64 = (file) => {\r\n    var byteString = atob(file.split(',')[1]);\r\n    var ab = new ArrayBuffer(byteString.length);\r\n    var ia = new Uint8Array(ab);\r\n\r\n    for (var i = 0; i < byteString.length; i++) {\r\n        ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    const fileType = (file.split(',')[0]).split(';')[0].split(':')[1];\r\n    const data = new Blob([ab], { type: fileType });\r\n    var blobUrl = URL.createObjectURL(data);\r\n    return blobUrl;\r\n}\r\n","import React from 'react'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n// import ListItemText from '@material-ui/core/ListItemText'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport propTypes from 'prop-types'\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        // width: '100%',\r\n        // maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n})\r\n\r\nconst ListTableMobile = (props) => {\r\n    const { classes } = props\r\n    let data = []\r\n    data = props.data ? props.data : []\r\n    const column = props.column ? props.column : []\r\n    return (\r\n        <div className={classes.root}>\r\n            {data.length !== 0 ?\r\n                <List disablePadding={true}>\r\n                    {\r\n                        data.map((item, index) => (\r\n                            <div key={index}>\r\n                                {\r\n                                    props.action ? <ListItem >\r\n                                        <Grid container justify='space-between'>\r\n                                            <Grid item sm={5} xs={5}>\r\n                                                {column.map((items, i) => (\r\n                                                    <Grid item sm={12} xs={12} key={i + 8}>\r\n                                                        <Typography style={{ color: 'grey', fontSize: 11, marginBottom: 5, fontFamily: 'Arial, Helvetica, sans-serif' }} noWrap={true}>\r\n                                                            {items.title}\r\n                                                        </Typography>\r\n\r\n                                                    </Grid>\r\n                                                ))}\r\n                                                {\r\n                                                    props.action ? <Grid item sm={12} xs={12}>\r\n                                                        <Typography style={{ color: 'grey', fontSize: 11, marginBottom: 5, fontFamily: 'Arial, Helvetica, sans-serif' }} noWrap={true}>\r\n                                                            {'Actions'}\r\n                                                        </Typography>\r\n\r\n                                                    </Grid> : ''\r\n                                                }\r\n                                            </Grid>\r\n                                            <Grid item sm={!props.arrow ? 7 : 5} xs={!props.arrow ? 7 : 5}>\r\n                                                {column.map((items, idx) => (\r\n                                                    <Grid item sm={12} xs={12} key={idx + 12}>\r\n                                                        <Typography style={{ fontSize: 11, marginBottom: 5, fontFamily: 'Arial, Helvetica, sans-serif' }} noWrap={true}>\r\n                                                            {items.title ? item[items.field] ? item[items.field] : '-' : null}\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n\r\n                                                ))}\r\n                                                {\r\n                                                    props.action ? <Grid container item sm={12} xs={12}>\r\n                                                        <IconButton style={{ padding: 0 }} onClick={() => props.onClickUpdate(item)}>\r\n                                                            <Tooltip title={props.titleTooltipUpdate ? props.titleTooltipUpdate : 'Update'}>\r\n                                                                {props.IconUpdateCustomize}\r\n                                                            </Tooltip>\r\n                                                        </IconButton>\r\n                                                        <IconButton style={{ padding: 0, marginLeft: 5 }} onClick={() => props.onClickDelete(item)}>\r\n                                                            <Tooltip title={props.titleTooltipDelete ? props.titleTooltipDelete : 'Delete'}>\r\n                                                                {props.IconDeleteCustomize}\r\n                                                            </Tooltip>\r\n                                                        </IconButton>\r\n                                                    </Grid> : \"\"\r\n                                                }\r\n                                            </Grid>\r\n                                            {props.arrow ? <Grid item sm={2} xs={2} align='right'>\r\n                                                <IconButton style={{ padding: 0 }} onClick={() => props.onClickList(item)}>\r\n                                                    {/* <Tooltip title={'Detail'}> */}\r\n                                                    <Tooltip title={'Detail'}>\r\n                                                        <ChevronRightIcon style={{ padding: 0 }} />\r\n                                                    </Tooltip>\r\n                                                    {/* </Tooltip> */}\r\n                                                </IconButton>\r\n                                            </Grid> : null}\r\n\r\n                                        </Grid>\r\n                                    </ListItem> : <ListItem button={props.button ? true : false} onClick={props.button ? () => props.onClickList(item) : null}>\r\n                                            <Grid container justify='space-between'>\r\n                                                <Grid item sm={5} xs={5}>\r\n                                                    {column.map((items, i) => (\r\n                                                        <Grid item sm={12} xs={12} key={i + 8}>\r\n                                                            <Typography style={{ color: 'grey', fontSize: 11, marginBottom: 5, fontFamily: 'Arial, Helvetica, sans-serif' }} noWrap={true}>\r\n                                                                {items.title}\r\n                                                            </Typography>\r\n\r\n                                                        </Grid>\r\n                                                    ))}\r\n                                                    {\r\n                                                        props.action ? <Grid item sm={12} xs={12}>\r\n                                                            <Typography style={{ color: 'grey', fontSize: 11, marginBottom: 5, fontFamily: 'Arial, Helvetica, sans-serif' }} noWrap={true}>\r\n                                                                {'Actions'}\r\n                                                            </Typography>\r\n\r\n                                                        </Grid> : ''\r\n                                                    }\r\n                                                </Grid>\r\n                                                <Grid item sm={!props.arrow ? 7 : 5} xs={!props.arrow ? 7 : 5}>\r\n                                                    {column.map((items, idx) => (\r\n                                                        <Grid item sm={12} xs={12} key={idx + 12}>\r\n                                                            <Typography style={{ fontSize: 11, marginBottom: 5, fontFamily: 'Arial, Helvetica, sans-serif' }} noWrap={true}>\r\n                                                                {items.title ? item[items.field] ? item[items.field] : '-' : null}\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n\r\n                                                    ))}\r\n                                                    {\r\n                                                        props.action ? <Grid container item sm={12} xs={12}>\r\n                                                            <IconButton style={{ padding: 0 }} onClick={() => props.onClickUpdate(item)}>\r\n                                                                <Tooltip title={props.titleTooltipUpdate ? props.titleTooltipUpdate : 'Update'}>\r\n                                                                    {props.IconUpdateCustomize}\r\n                                                                </Tooltip>\r\n                                                            </IconButton>\r\n                                                            <IconButton style={{ padding: 0 }} onClick={() => props.onClickDelete(item)}>\r\n                                                                <Tooltip title={props.titleTooltipDelete ? props.titleTooltipDelete : 'Delete'}>\r\n                                                                    {props.IconDeleteCustomize}\r\n                                                                </Tooltip>\r\n                                                            </IconButton>\r\n                                                        </Grid> : \"\"\r\n                                                    }\r\n                                                </Grid>\r\n                                                {props.arrow ? <Grid item sm={2} xs={2} align='right'>\r\n                                                    <ChevronRightIcon style={{ padding: 0 }} />\r\n                                                </Grid> : null}\r\n\r\n                                            </Grid>\r\n                                        </ListItem>\r\n                                }\r\n\r\n                                <Divider />\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </List> :\r\n                <Typography style={{ textAlign: 'center', paddingTop: 30, paddingBottom: 30, fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey' }}>\r\n                    No Record\r\n                </Typography>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nListTableMobile.propTypes = {\r\n    arrow: propTypes.bool,\r\n    button: propTypes.bool,\r\n    column: propTypes.array.isRequired,\r\n    data: propTypes.array.isRequired,\r\n    onClickList: propTypes.func,\r\n    action: propTypes.bool,\r\n    onClickDelete: propTypes.func,\r\n    onClickUpdate: propTypes.func,\r\n    IconDeleteCustomize: propTypes.element,\r\n    IconUpdateCustomize: propTypes.element,\r\n    titleTooltipDelete: propTypes.string,\r\n    titleTooltipUpdate: propTypes.string\r\n}\r\n\r\nexport default withStyles(styles)(ListTableMobile)","\r\nimport React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, } from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ReactExport from 'react-data-export';\r\n// import { yyyymmddWithParams, convertDateyyyymmdd } from \"../../../utils/utils\";\r\nimport FormatText from '../../../i18n';\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n\r\n// let from = yyyymmddWithParams('lastWeek')\r\n// let to = yyyymmddWithParams('nextWeek')\r\n\r\n// const dateNow = new Date()\r\n// let lastWeek = new Date(dateNow.getTime() - 7 * 24 * 60 * 60 * 1000)\r\n// let nextWeek = new Date(dateNow.getTime() + 7 * 24 * 60 * 60 * 1000)\r\n// let nextYear = new Date(dateNow.getTime() + 366 * 24 * 60 * 60 * 1000)\r\n\r\nconst FilterDesktop = ({ ...props }) => {\r\n  const { handleSubmitFilter, handleChange, handleDateChange, state, userInfo } = props\r\n\r\n\r\n  return (\r\n    <Grid container direction='row' justify='flex-start' alignItems='flex-start' style={{ marginBottom: 10, marginTop: 5 }} >\r\n      {/* <Grid item sm={4} >\r\n                <Grid item>\r\n                  <Typography variant=\"subtitle2\">Name:</Typography>\r\n                  <FormControl style={{ width: 300 }}  >\r\n                    <FormGroup >\r\n                      <Input\r\n                        error={state.emailErrorMessage ? true : false}\r\n                        id=\"standard-full-width\"\r\n                        type='text'\r\n                        placeholder='Name'\r\n                        onChange={handleChange('name')}\r\n                        endAdornment={\r\n                          <InputAdornment position=\"end\">\r\n                            <AccountBoxRounded />\r\n                          </InputAdornment>\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item> <br />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Typography style={{ marginBottom: 7 }} variant=\"subtitle2\">Klinik Name:</Typography>\r\n                  {\r\n                    paxList.klinikList.length === 1\r\n                      ? <TextField id=\"basic-klinik\" value={paxList.klinikList[0].name} style={{ width: 300 }} />\r\n                      : paxList.klinikList.length === 0\r\n                        ? <TextField id=\"basic-klinik\" disabled style={{ width: 300 }} />\r\n                        : <SimpleAutocomplete\r\n                          options={paxList.klinikList[0] ? paxList.klinikList : [{ name: '' }]}\r\n                          onPick={v => console.log(v)}\r\n                          width={300}\r\n                          optionItem={'name'}\r\n                        />\r\n                  }\r\n\r\n                </Grid>\r\n              </Grid> */}\r\n      <Grid item sm={state['Booking Date'] || state['Test Date'] || state['Redeem Date'] ? 6 : 3} >\r\n        <Grid container direction=\"row\" >\r\n          <Typography variant='subtitle1'  >\r\n            Filter:\r\n                  </Typography>\r\n\r\n          <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n            <FormControl style={{ marginLeft: 25, marginTop: 2 }}  >\r\n              <Typography variant=\"subtitle2\">Date:</Typography>\r\n              {\r\n                // ['Test Date', 'Booking Date', 'Redeem Date'].map((item, i) => {\r\n                ['Test Date', 'Redeem Date'].map((item, i) => {\r\n                  return (\r\n                    <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" key={i} >\r\n                      <Grid item style={{ width: 150, marginRight: 15 }}>\r\n                        <FormControlLabel\r\n                          control={<Checkbox size='small' checked={state[item]} onChange={handleChange(item)} name={item} />}   //{<Radio />} \r\n                          label={item}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item style={{ display: state[item] ? \"\" : 'none' }} >\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                          <Grid container >\r\n                            <KeyboardDatePicker\r\n                              style={{ width: 150, marginRight: 15 }}\r\n                              size=\"small\"\r\n                              clearable\r\n                              format=\"yyyy/MM/dd\"\r\n                              margin=\"dense\"\r\n                              id={\"date-picker-from\" + item}\r\n                              label={FormatText('app_from')}\r\n                              value={state[item + 'fromdate']}\r\n                              onChange={handleDateChange(item + 'fromdate')}\r\n                              KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                        </MuiPickersUtilsProvider>\r\n                      </Grid>\r\n                      <Grid item style={{ display: state[item] ? \"\" : 'none' }}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <Grid container >\r\n                            <KeyboardDatePicker\r\n                              style={{ width: 150, marginRight: 15 }}\r\n                              clearable\r\n                              size=\"small\"\r\n                              format=\"yyyy/MM/dd\"\r\n                              margin=\"dense\"\r\n                              id={\"date-picker-to\" + item}\r\n                              label={FormatText('app_to')}\r\n                              value={state[item + 'todate']}\r\n                              onChange={handleDateChange(item + 'todate')}\r\n                              KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                        </MuiPickersUtilsProvider>\r\n                      </Grid>\r\n\r\n                    </Grid>\r\n                  )\r\n                })\r\n              }\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item sm={2} >\r\n        <FormControl style={{ marginLeft: 15, marginTop: 30 }} fullWidth>\r\n          <Typography variant=\"subtitle2\">Status:</Typography>\r\n          <FormControl>\r\n            <FormControlLabel\r\n              control={<Checkbox size='small' checked={state.Paid} onChange={handleChange('Paid')} name=\"Paid\" />}\r\n              label={FormatText('app_paid')}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox size='small' checked={state.finish} onChange={handleChange('finish')} name=\"finish\" />}\r\n              label=\"Redeemed\"    //{FormatText('app_finish')}\r\n            />\r\n            <FormControlLabel\r\n              style={{ display: userInfo.roleUsed === 'voltras.admin' ? '' : 'none' }}\r\n              control={<Checkbox size='small' checked={state.New} onChange={handleChange('New')} name=\"New\" />}\r\n              label=\"New\"    //{FormatText('app_finish')}\r\n            />\r\n          </FormControl>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item sm={2} >\r\n        <Grid\r\n          style={{ marginTop: 40 }}\r\n          container\r\n          direction=\"column\"\r\n          justify='center'\r\n          alignItems=\"center\">\r\n          <Grid item>\r\n            <ExcelFile\r\n              filename={`OrderReport`}\r\n              element={\r\n                <Button size='small' variant=\"outlined\" color=\"primary\">\r\n                  {FormatText('app_export_xls')}\r\n                </Button>}\r\n            >\r\n              <ExcelSheet dataSet={state.dataset} name=\"Order Report\" />\r\n            </ExcelFile>\r\n          </Grid>\r\n          <Grid item><br /></Grid>\r\n          <Grid item>\r\n            <Button size='small' variant=\"contained\" onClick={handleSubmitFilter} color=\"primary\">\r\n              {FormatText('app_submit_filter')}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {/* <Grid item sm={2} ></Grid> */}\r\n\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FilterDesktop","\r\nimport React, { useState, useEffect } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from '@material-ui/core/Card';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport MaterialTable from 'material-table';\r\nimport ReactExport from 'react-data-export';\r\nimport { yyyymmddWithParams, convertDateyyyymmdd } from \"../../../utils/utils\";\r\nimport FormatText from '../../../i18n';\r\nimport ListTableMobile from '../../../components/list/ListTableMobile'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport FilterDesktop from './FilterDesktop'\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n\r\nlet from = yyyymmddWithParams('lastWeek')\r\nlet to = yyyymmddWithParams('nextWeek')\r\n\r\nconst dateNow = new Date()\r\nlet lastWeek = new Date(dateNow.getTime() - 7 * 24 * 60 * 60 * 1000)\r\nlet nextWeek = new Date(dateNow.getTime() + 7 * 24 * 60 * 60 * 1000)\r\n// let nextYear = new Date(dateNow.getTime() + 366 * 24 * 60 * 60 * 1000)\r\n\r\nconst datasetCreator = (dataToProcess, roleUsed) => {\r\n  let columns = []\r\n  let rawColumns = [\r\n    { title: \"OrderID\", width: { wch: 7 } },\r\n    { title: \"Office Code\", width: { wch: 12 } },\r\n    { title: \"Test Date\", width: { wch: 12 } },\r\n    { title: \"Name\", width: { wch: 20 } },\r\n    { title: \"Birth Date\", width: { wch: 12 } },\r\n    { title: \"Status\", width: { wch: 12 } },\r\n    { title: \"Clinic\", width: { wch: 40 } },\r\n    { title: \"Redeem Date\", width: { wch: 12 } },\r\n    { title: \"Redeem By\", width: { wch: 12 } },\r\n  ]\r\n\r\n  let data = []\r\n  dataToProcess.forEach(item => {\r\n    let dataArr = []\r\n    dataArr.push({ value: item.id })\r\n    if (roleUsed === 'voltras.admin') dataArr.push({ value: item.office })\r\n    dataArr.push({ value: item.testdate })\r\n    dataArr.push({ value: item.name })\r\n    dataArr.push({ value: item.date_of_birth })\r\n    dataArr.push({ value: item.status })\r\n    dataArr.push({ value: item.klinikname })\r\n    dataArr.push({ value: item.redeem_on })\r\n    dataArr.push({ value: item.redeem_by })\r\n\r\n    data.push(dataArr)\r\n  })\r\n\r\n  if (roleUsed !== 'voltras.admin') {\r\n    columns = rawColumns.filter(item => item.title !== \"Office Code\")\r\n  }\r\n  else columns = rawColumns\r\n\r\n  let dataset = [{ ySteps: 1, columns, data }]\r\n  return dataset\r\n}\r\n\r\nconst tableCreator = data => {\r\n  let simpleTable = []\r\n  data && data.forEach(order => order.items && order.items.forEach(item => {\r\n    let rowTable = {\r\n      id: order.id,\r\n      office: order.user_info.officeCode ? order.user_info.officeCode : \"B2C\",\r\n      testdate: item.products[0].testdate,\r\n      name: item.name,\r\n      date_of_birth: item.date_of_birth,\r\n      status: item.status\r\n        ? item.status.toUpperCase() === \"FINISH\" ? \"REDEEMED\" : item.status.toUpperCase()\r\n        : \"\",\r\n      klinikname: item.products[0].klinik.name,\r\n      redeem_on: item.redeem ? convertDateyyyymmdd(item.redeem.redeem_on) : \"-\",\r\n      redeem_by: item.redeem ? item.redeem.redeem_by : \"-\"\r\n    }\r\n    simpleTable.push(rowTable)\r\n  }))\r\n  return simpleTable\r\n}\r\n\r\nconst SimpleTable = ({ ...props }) => {\r\n  let columnPush = []\r\n\r\n  const { paxList, history, _setPaxList, _setOpenScreen, userInfo, _setCompleteRequest, classes } = props\r\n\r\n  const [state, setState] = useState({\r\n    order: -1,\r\n    \"Booking Datefromdate\": lastWeek,\r\n    \"Booking Datetodate\": nextWeek,\r\n    \"Test Datefromdate\": lastWeek,\r\n    \"Test Datetodate\": nextWeek,\r\n    \"Redeem Datefromdate\": lastWeek,\r\n    \"Redeem Datetodate\": nextWeek,\r\n    fromdate: lastWeek,\r\n    todate: nextWeek,\r\n    open: false,\r\n    name: \"\",\r\n    'Test Date': true,\r\n    'Booking Date': false,\r\n    'Redeem Date': false,\r\n    Paid: false,\r\n    New: false,\r\n    finish: false,\r\n    unpaid: false,\r\n    dataset: [],\r\n    simpleTable: [],\r\n    currentList: [],\r\n    listLengthById: 0,\r\n  })\r\n\r\n  const tableColumns = [\r\n    { title: \"ID\", field: 'id', width: 5 },\r\n    { title: 'Office Code', field: 'office' },\r\n    { title: FormatText('clinic_test_date'), field: 'testdate', },\r\n    { title: FormatText('app_name'), field: 'name', },\r\n    { title: FormatText('clinic_birth_date'), field: 'date_of_birth', },\r\n    { title: 'Status', field: 'status', },\r\n    { title: FormatText('clinic'), field: 'klinikname', },\r\n    { title: FormatText('clinic_redeem_date'), field: 'redeem_on', },\r\n    { title: FormatText('clinic_redeem_by'), field: 'redeem_by', },\r\n  ]\r\n  tableColumns.forEach(item => {\r\n    if (item.field === 'date_of_birth' || item.field === 'redeem_by' || item.field === 'redeem_on' || item.field === 'klinikname') {\r\n\r\n    }\r\n    else {\r\n      columnPush.push(item)\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    let list = paxList.list\r\n    let accessToken = localStorage.getItem('accessToken')\r\n    if (accessToken) {\r\n      _setOpenScreen(FormatText('clinic_order_list'))\r\n      if (Array.isArray(list) && list.length > 0) {\r\n        let simpleList = userInfo.roleUsed === 'voltras.admin'\r\n          ? list.filter(item => (item.status !== \"CANCELED_BY_TIMELIMIT\"))\r\n          : list.filter(item => (item.status !== \"UNCONFIRMED\") && (item.payment))\r\n        let simpleTable = tableCreator(simpleList)\r\n        let dataset = datasetCreator(simpleTable, userInfo.roleUsed)\r\n        setState(state => ({\r\n          ...state,\r\n          simpleTable,\r\n          dataset,\r\n          listLengthById: simpleList.length\r\n        }))\r\n      }\r\n      else setState(state => ({\r\n        ...state,\r\n        simpleTable: [],\r\n        dataset: [],\r\n        listLengthById: 0\r\n      }))\r\n    }\r\n    else {\r\n      history.push('/')\r\n    }\r\n  }, [paxList.list, history, _setOpenScreen, userInfo.roleUsed])\r\n\r\n  useEffect(() => {\r\n    const infos = userInfo\r\n    let name = infos.info.name\r\n    let email = infos.info.email\r\n    let phone = infos.info.phone\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let healthOrderRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"healthOrder\",\r\n      params: `/list?&testdate_from=${from}&testdate_to=${to}`,\r\n      customHeaders\r\n    }\r\n\r\n    // let list = paxList.list\r\n    // if (state.currentList !== list) \r\n    _setCompleteRequest(healthOrderRequest)\r\n\r\n  }, [_setPaxList, _setCompleteRequest, userInfo])\r\n\r\n  const handleRowClick = rowData => {\r\n    const infos = userInfo\r\n    let name = infos.info.name\r\n    let email = infos.info.email\r\n    let phone = infos.info.phone\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let ID = rowData.id\r\n    let healthOrderDetailRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"HEALTH_ORDER_DETAIL\",\r\n      params: `/${ID}`,\r\n      customHeaders\r\n    }\r\n    _setCompleteRequest(healthOrderDetailRequest)\r\n\r\n    // let orderList = paxList.list\r\n    // let order = orderList.filter(item => item.id === rowData.id)\r\n    // props._setPaxDetail(order[0])\r\n    // console.log(order[0])\r\n    // history.push('/PaxDetail')\r\n  }\r\n\r\n  // const handleClick = row => (event) => {\r\n  //   let orderList = paxList.list\r\n  //   let order = orderList.filter(item => item.id === row)\r\n  //   props._setPaxDetail(order[0])\r\n  //   if (order.length > 0) history.push('/PaxDetail')\r\n  // }\r\n\r\n  const handleDateChange = prop => (date) => {\r\n    setState({\r\n      ...state,\r\n      [prop]: date,\r\n    })\r\n  };\r\n\r\n  // const handleFilterOpen = () => {\r\n  //   setState({\r\n  //     ...state,\r\n  //     order: 1,\r\n  //     fromdate: lastWeek,\r\n  //     todate: nextWeek,\r\n  //     open: true,\r\n  //     name: \"\",\r\n  //     New: false,\r\n  //     finish: false,\r\n  //   })\r\n  // };\r\n\r\n  // const handleClose = () => {\r\n  //   setState({\r\n  //     ...state,\r\n  //     open: false,\r\n  //   })\r\n  // };\r\n\r\n  // const handleReset = () => {\r\n  //   setState({\r\n  //     ...state,\r\n  //     order: 1,\r\n  //     fromdate: lastWeek,\r\n  //     todate: nextWeek,\r\n  //     open: false,\r\n  //     name: \"\",\r\n  //     New: false,\r\n  //     finish: false,\r\n  //     '4': false,\r\n  //     '5': false\r\n  //     // localList: paxList.list,\r\n  //   })\r\n  // };\r\n\r\n  const handleChange = prop => event => {\r\n    if (prop === 'Paid') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n        New: false,\r\n        finish: false,\r\n      })\r\n    }\r\n    else if (prop === 'New') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n        Paid: false,\r\n        finish: false,\r\n      })\r\n    }\r\n    else if (prop === 'finish') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n        New: false,\r\n        Paid: false,\r\n      })\r\n    }\r\n    else if (prop === 'Booking Date') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else if (prop === 'Test Date') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else if (prop === 'Redeem Date') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else {\r\n      setState({\r\n        ...state,\r\n        [prop]: event.target.value,\r\n      })\r\n    }\r\n  }\r\n\r\n  // const handleKlinik = prop => event => {\r\n  //   setState({\r\n  //     ...state,\r\n  //     [prop]: !state[prop],\r\n  //   })\r\n  // }\r\n\r\n  const handleSubmitFilter = () => {\r\n    const infos = props.userInfo\r\n\r\n    let name = infos.info.name ? infos.info.name : ''\r\n    let email = infos.info.email ? infos.info.email : ''\r\n    let phone = infos.info.phone ? infos.info.phone : ''\r\n\r\n    let payment_from = convertDateyyyymmdd(state['Booking Datefromdate'])\r\n    let payment_to = convertDateyyyymmdd(state['Booking Datetodate'])\r\n    let test_from = convertDateyyyymmdd(state['Test Datefromdate'])\r\n    let test_to = convertDateyyyymmdd(state['Test Datetodate'])\r\n    let redeem_from = convertDateyyyymmdd(state['Redeem Datefromdate'])\r\n    let redeem_to = convertDateyyyymmdd(state['Redeem Datetodate'])\r\n\r\n    let paymentParam = state['Booking Date'] ? `&paymentdate_from=${payment_from}&paymentdate_to=${payment_to}` : \"\"\r\n    let testParam = state['Test Date'] ? `&testdate_from=${test_from}&testdate_to=${test_to}` : \"\"\r\n    let redeemParam = state['Redeem Date'] ? `&redeemdate_from=${redeem_from}&redeemdate_to=${redeem_to}` : \"\"\r\n    let statusParam = (state.Paid)\r\n      ? '&status=PAID'\r\n      : (state.finish)\r\n        ? '&status=FINISH'\r\n        : (state.New)\r\n          ? '&status=NEW'\r\n          : \"\"\r\n    let nameParam = state.name ? `&name=${state.name}` : ''\r\n\r\n    let isParams = paymentParam || testParam || redeemParam || statusParam || nameParam\r\n\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    //  health/admin/orders?testdate_from=....&testdate_to=....redeem_status=NEW/REDEEMED\r\n    let healthOrderRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"healthOrder\",\r\n      params: isParams\r\n        ? `/list?`\r\n        + (paymentParam ? paymentParam : \"\")\r\n        + (testParam ? testParam : \"\")\r\n        + (redeemParam ? redeemParam : \"\")\r\n        + (statusParam ? statusParam : \"\")\r\n        + (nameParam ? nameParam : '')\r\n        : `/list?&paymentdate_from=${payment_from}&paymentdate_to=${payment_to}`,\r\n      customHeaders\r\n    }\r\n    props._setCompleteRequest(healthOrderRequest)\r\n    setState({\r\n      ...state,\r\n      open: false,\r\n    })\r\n  }\r\n\r\n  // const handleExport = () => {\r\n  //   // console.log(\"Export Clicked\")\r\n  // }\r\n\r\n  // const onRadioChange = e => {\r\n  //   e.preventDefault()\r\n  //   // console.log(e.target)\r\n  //   setState({\r\n  //     ...state,\r\n  //     parent_id: parseInt(e.target.name)\r\n  //   })\r\n  // }\r\n\r\n\r\n  // let orderList = paxList.list\r\n  // let filteredList = paxList.filteredList\r\n  // let listToMap = filteredList[0] ? filteredList : orderList\r\n\r\n  return (\r\n    <div>\r\n      <Hidden xsDown>\r\n        <Grid container style={{ marginTop: 5 }}>\r\n          <FilterDesktop\r\n            handleSubmitFilter={handleSubmitFilter}\r\n            handleChange={handleChange}\r\n            handleDateChange={handleDateChange}\r\n            state={state}\r\n            {...props}\r\n          />\r\n          {/* <Typography variant=\"subtitle1\"  ><b>Filters</b> </Typography> */}\r\n\r\n          <Grid item sm={12} container direction='row' justify='flex-start' alignItems='flex-start' style={{ marginBottom: 10, marginTop: 5 }} >\r\n\r\n            <MaterialTable\r\n              style={{ width: '100%' }}\r\n              title={`TOTAL ORDER BY ID: ${state.listLengthById.toString()} `}\r\n              columns={userInfo.roleUsed === 'voltras.admin' ? tableColumns : tableColumns.filter(item => item.field !== 'office')}\r\n              data={state.simpleTable}\r\n              onRowClick={(e, rowData) => handleRowClick(rowData)}\r\n              options={{\r\n                padding: 'dense',\r\n                // tableLayout: 'fixed'\r\n                // showTitle: false,\r\n\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid container>\r\n            <div style={{ height: 20 }} />\r\n          </Grid>\r\n        </Grid>\r\n      </Hidden>\r\n\r\n      <Hidden smUp>\r\n        <Card style={{ marginBottom: 15 }}>\r\n          <div style={{ backgroundColor: '#f4f0ec', padding: 5, width: '100%' }}>\r\n            <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              Filter By\r\n              </Typography>\r\n          </div>\r\n          <div style={{ marginLeft: 15, marginRight: 15 }}>\r\n\r\n            <Grid container>\r\n              <FormControl style={{ marginTop: 2 }}  >\r\n                <Typography style={{ marginTop: 8, fontSize: 12, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>Date</Typography>\r\n                {\r\n                  ['Test Date', 'Redeem Date'].map((item, i) => {\r\n                    return (\r\n                      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" key={i} >\r\n                        <Grid item xs={5} sm={5}>\r\n                          <FormControlLabel\r\n                            control={<Checkbox size='small' checked={state[item]} onChange={handleChange(item)} name={item} />}\r\n                            label={<Typography style={{ fontSize: 12, fontFamily: 'Arial, Helvetica, sans-serif' }}>{item}</Typography>}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={3} sm={3} style={{ visibility: state[item] ? \"visible\" : 'hidden' }} align='right'>\r\n                          <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                            <Grid container >\r\n                              <DatePicker\r\n                                style={{ width: 110 }}\r\n                                size=\"small\"\r\n                                clearable\r\n                                format=\"yyyy/MM/dd\"\r\n                                margin=\"dense\"\r\n                                id={\"date-picker-from\" + item}\r\n                                label={FormatText('app_from')}\r\n                                value={state[item + 'fromdate']}\r\n                                onChange={handleDateChange(item + 'fromdate')}\r\n                                InputLabelProps={{\r\n                                  shrink: true,\r\n                                  classes: {\r\n                                    root: classes.labelRoot\r\n                                  }\r\n                                }}\r\n                                InputProps={{\r\n                                  classes: {\r\n                                    root: classes.inputRoot\r\n                                  }\r\n                                }}\r\n                              />\r\n                            </Grid>\r\n                          </MuiPickersUtilsProvider>\r\n                        </Grid>\r\n                        <Grid item xs={1} sm={1} style={{ visibility: state[item] ? \"visible\" : 'hidden' }} align='right'>\r\n                        </Grid>\r\n                        <Grid item xs={3} sm={3} style={{ visibility: state[item] ? \"visible\" : 'hidden' }} align='right'>\r\n                          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <Grid container>\r\n                              <DatePicker\r\n                                style={{ width: 110 }}\r\n                                clearable\r\n                                size=\"small\"\r\n                                format=\"yyyy/MM/dd\"\r\n                                margin=\"dense\"\r\n                                id={\"date-picker-to\" + item}\r\n                                label={FormatText('app_to')}\r\n                                value={state[item + 'todate']}\r\n                                onChange={handleDateChange(item + 'todate')}\r\n                                InputLabelProps={{\r\n                                  shrink: true,\r\n                                  classes: {\r\n                                    root: classes.labelRoot\r\n                                  }\r\n                                }}\r\n                                InputProps={{\r\n                                  classes: {\r\n                                    root: classes.inputRoot\r\n                                  }\r\n                                }}\r\n                              />\r\n                            </Grid>\r\n                          </MuiPickersUtilsProvider>\r\n                        </Grid>\r\n                      </Grid>\r\n                    )\r\n                  })\r\n                }\r\n              </FormControl>\r\n\r\n              <Grid item xs={12} sm={12} style={{ marginBottom: 10 }} >\r\n                <FormControl fullWidth>\r\n                  <Grid item xs={12} sm={12} >\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={12}>\r\n                    <Typography style={{ marginTop: 8, fontSize: 12, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>Status</Typography>\r\n                  </Grid>\r\n                  <FormControl>\r\n                    <Grid container>\r\n                      <Grid item xs={3} sm={3}>\r\n                        <FormControlLabel\r\n                          control={<Checkbox size='small' checked={state.Paid} onChange={handleChange('Paid')} name=\"Paid\" />}\r\n                          label={<Typography style={{ fontSize: 13, fontFamily: 'Arial, Helvetica, sans-serif' }}>{FormatText('app_paid')}</Typography>}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={3} sm={3}>\r\n                        <FormControlLabel\r\n                          control={<Checkbox size='small' checked={state.finish} onChange={handleChange('finish')} name=\"finish\" />}\r\n                          label={<Typography style={{ fontSize: 13, fontFamily: 'Arial, Helvetica, sans-serif' }}>Redeemed</Typography>}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={6} sm={6} style={{ paddingLeft: 30 }}>\r\n                        <FormControlLabel\r\n                          style={{ display: userInfo.roleUsed === 'voltras.admin' ? '' : 'none' }}\r\n                          control={<Checkbox size='small' checked={state.New} onChange={handleChange('New')} name=\"New\" />}\r\n                          label={<Typography style={{ fontSize: 13, fontFamily: 'Arial, Helvetica, sans-serif' }}>New</Typography>}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </FormControl>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12} container justify='space-between' style={{ paddingLeft: 10, paddingBottom: 10, paddingRight: 10, marginBottom: 10 }}>\r\n                <ExcelFile\r\n                  filename={`OrderReport`} //</Grid></Grid>{`OrderReport ${ convertDateyyyymmdd(state.fromdate) } to ${convertDateyyyymmdd(state.todate)} `}\r\n                  element={\r\n                    <Button size='small' variant=\"outlined\" color=\"primary\" style={{\r\n                      textTransform: 'none', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                      fontWeight: 'bold', fontSize: 12\r\n                    }}>\r\n                      {FormatText('app_export_xls')}\r\n                    </Button>}\r\n                >\r\n                  <ExcelSheet dataSet={state.dataset} name=\"Order Report\" />\r\n                </ExcelFile>\r\n\r\n                <Button size='small' variant=\"contained\" onClick={handleSubmitFilter} color=\"primary\" style={{\r\n                  textTransform: 'none', color: 'white', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                  fontWeight: 'bold', fontSize: 12\r\n                }}>\r\n                  {FormatText('app_submit_filter')}\r\n                </Button>\r\n\r\n                {/* <Button onClick={handleSubmitFilter} color=\"primary\" variant='contained' style={{\r\n                  textTransform: 'none', color: 'white', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                  fontWeight: 'bold', fontSize: 12\r\n                }}>\r\n                  {FormatText('app_submit')}\r\n                </Button> */}\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Card>\r\n\r\n        <Card>\r\n          <div style={{ backgroundColor: '#f4f0ec', padding: 5, width: '100%' }}>\r\n            <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              {`TOTAL ORDER BY ID: ${state.listLengthById.toString()} `}\r\n            </Typography>\r\n          </div>\r\n          <ListTableMobile\r\n            data={state.simpleTable.map(item => item)} button={true} arrow={true}\r\n            column={columnPush} onClickList={handleRowClick} orderList={true}\r\n          />\r\n        </Card>\r\n      </Hidden>\r\n\r\n      <div style={{ height: window.screen.height - 700 }} />\r\n    </div >\r\n  )\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  labelRoot: {\r\n    fontSize: 12,\r\n    fontFamily: 'Arial, Helvetica, sans-serif',\r\n  },\r\n  inputRoot: {\r\n    fontSize: 12,\r\n    fontFamily: 'Arial, Helvetica, sans-serif',\r\n    height: 15\r\n  }\r\n})\r\n\r\nexport default withStyles(styles)(SimpleTable)\r\n","\r\nimport { connect } from 'react-redux'\r\nimport PaxListScreen from './PaxListScreen'\r\nimport { setPaxList, setPaxDetail, setFilteredList } from \"../../../actions/PaxListActions\";\r\nimport { setOpenScreen } from '../../../actions/SystemActions'\r\nimport { setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod, setServiceParams, \r\n  setServiceCustomHeaders, setServiceRole } from '../../../actions/ServiceActions'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    paxList : state.paxList,\r\n    userInfo: state.userInfo\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setPaxList : val => {\r\n      dispatch(setPaxList(val))\r\n    },\r\n    _setFilteredList: val => {\r\n      dispatch(setFilteredList(val))\r\n    },\r\n    _setPaxDetail: val => {\r\n      dispatch(setPaxDetail(val))\r\n    },\r\n    _setOpenScreen: val => {\r\n      dispatch(setOpenScreen(val))\r\n    },\r\n    _setRequest: val => {\r\n      dispatch(setServiceRequest(val))\r\n    },\r\n    _setServiceCode: val => {\r\n      dispatch(setServiceCode(val))\r\n    },\r\n    _setServiceStatus: val => {\r\n      dispatch(setServiceStatus(val))\r\n    },\r\n    _setServiceMethod: val => {\r\n      dispatch(setServiceMethod(val))\r\n    },\r\n    _setServiceParams: val => {\r\n      dispatch(setServiceParams(val))\r\n    },\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.params))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.role))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    }\r\n  }\r\n}\r\n\r\nconst PaxList = connect(mapStateToProps, mapDispatchToProps)(PaxListScreen)\r\n\r\nexport default PaxList","\r\nimport React, { useEffect, useState, } from 'react';\r\nimport { Grid, Typography, Button, TextField } from '@material-ui/core';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, } from '@material-ui/pickers';\r\nimport FormatText from '../../../i18n'\r\nimport { yyyymmddWithParams, convertDateyyyymmdd, datetoanydaysafter, isDateBeforeNow } from '../../../utils/utils';\r\nimport SimpleAutocomplete from '../../../components/autocomplete/SimpleAutocomplete';\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport { SendToService } from '../../../services/ServiceClient';\r\n\r\nlet now = yyyymmddWithParams('now')\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst AddClientDialog = ({ ...props }) => {\r\n  const { cityList, klinikList, _setCompleteRequest, _setSecondRequest, open, userInfo, item, roleUsed, classes,\r\n    setKlinikList, setCityList, system } = props\r\n\r\n  const [state, setState] = useState({\r\n    city: \"\",\r\n    product: {},\r\n    klinikList: [],\r\n    fromdate: now,\r\n    fromdateErrorMessage: \"\",\r\n    originDate: \"\",\r\n    minDate: \"\",\r\n    maxValidDate: \"\",\r\n    email: \"\",\r\n    emailErrorMessage: \"\",\r\n    reason: \"\",\r\n    reasonErrorMessage: \"\",\r\n    clinic_id: 0,\r\n    order_id: 0,\r\n    item_id: 0,\r\n    submitErrorMessage: \"\",\r\n    new_clinic_data: {},\r\n  })\r\n\r\n  useEffect(() => {\r\n    let input_date = state.fromdate\r\n    let date_off = state.product.clinic ? state.product.clinic.vendor_close.date : []\r\n    let day_off_resp = state.product.clinic ? state.product.clinic.vendor_close.day : []\r\n    let day_off = day_off_resp.map(item => {\r\n      if (item === 7) item = 0\r\n      return item\r\n    })\r\n    let d = new Date(input_date)\r\n    let n = d.getDay()\r\n    let newClinic = parseInt(state.clinic_id)\r\n    let new_clinic_data = state.new_clinic_data\r\n    let new_date_off = new_clinic_data.vendor_close ? new_clinic_data.vendor_close.date : []\r\n    let new_day_off_resp = new_clinic_data.vendor_close ? new_clinic_data.vendor_close.day : []\r\n    let new_day_off = new_day_off_resp.map(item => {\r\n      if (item === 7) item = 0\r\n      return item\r\n    })\r\n    let person_product = state.product.product_name ? state.product.product_name : \"\"\r\n    let new_product_list = new_clinic_data.product ? new_clinic_data.product.map(item => item.name) : []\r\n\r\n    if (newClinic) {\r\n      if (new_date_off.includes(input_date)) {\r\n        setState(state => ({ ...state, submitErrorMessage: \"New clinic close, please choose another date or clinic.\" }))\r\n      }\r\n      else if (new_day_off.includes(n)) {\r\n        setState(state => ({ ...state, submitErrorMessage: \"New clinic close, please choose another day or clinic.\" }))\r\n      }\r\n      else if (!new_product_list.includes(person_product)) {\r\n        setState(state => ({ ...state, submitErrorMessage: \"Product not available, please choose another clinic.\" }))\r\n      }\r\n      else setState(state => ({ ...state, submitErrorMessage: \"\" }))\r\n    }\r\n    else if (date_off.includes(input_date)) {\r\n      setState(state => ({ ...state, submitErrorMessage: \"Clinic close, please choose another date or clinic.\" }))\r\n    }\r\n    else if (day_off.includes(n)) {\r\n      setState(state => ({ ...state, submitErrorMessage: \"Clinic close, please choose another day or clinic.\" }))\r\n    }\r\n    else setState(state => ({ ...state, submitErrorMessage: \"\" }))\r\n  }, [state.fromdate, state.clinic_id, state.product, state.city, state.new_clinic_data])\r\n\r\n  useEffect(() => {\r\n    let product = item\r\n    if (product) {\r\n      const { order_id, item_id, valid_until, payment, testdate } = product\r\n      let minDate = isDateBeforeNow(payment.date)\r\n        ? convertDateyyyymmdd(datetoanydaysafter(now, 1))\r\n        : convertDateyyyymmdd(datetoanydaysafter(payment.date, 1))\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        // klinikList,\r\n        order_id,\r\n        item_id,\r\n        product,\r\n        minDate,\r\n        fromdate: minDate,  //   convertDateyyyymmdd(datetoanydaysafter(testdate, 1)),\r\n        originDate: testdate,\r\n        maxValidDate: valid_until\r\n      }))\r\n    }\r\n  }, [item])\r\n\r\n  useEffect(() => {\r\n    if (klinikList.length === 1) setState(prevState => ({\r\n      ...prevState,\r\n      klinikList,\r\n      clinic_id: klinikList[0].id\r\n    }))\r\n  }, [klinikList])\r\n\r\n\r\n  const handleClose = () => {\r\n    props.handleClose()\r\n  };\r\n\r\n  const handleChange = prop => e => {\r\n    e.preventDefault()\r\n    let val = e.target.value\r\n    let valid = FormValidation(prop, val)\r\n    setState({\r\n      ...state,\r\n      [prop]: val,\r\n      [prop + 'ErrorMessage']: val ? valid.errorMessage : \"\",\r\n      notComplete: false\r\n    })\r\n  }\r\n\r\n  const handleCancel = e => {\r\n    e.preventDefault()\r\n    let customHeaders = { name: userInfo.name, email: userInfo.email, }\r\n    if (userInfo.phone) customHeaders.phone = userInfo.phone\r\n    const cityRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CITY_LIST\",\r\n      params: `/cities?&citykey=a`,\r\n      customHeaders\r\n    }\r\n    let cityClinicRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CITY_CLINIC_LIST\",\r\n      urlParams: `/cities/none/clinics`,\r\n      customHeaders\r\n    }\r\n    _setCompleteRequest(cityRequest)\r\n    _setSecondRequest(cityClinicRequest)\r\n\r\n    const { payment } = item\r\n    let minDate = isDateBeforeNow(payment.date)\r\n      ? convertDateyyyymmdd(datetoanydaysafter(now, 1))\r\n      : convertDateyyyymmdd(datetoanydaysafter(payment.date, 1))\r\n    setState({\r\n      ...state,\r\n      // klinikList: [],\r\n      // product: {},\r\n      clinic_id: 0,\r\n      city: \"\",\r\n      submitErrorMessage: \"\",\r\n      minDate,\r\n      fromdate: minDate,\r\n    })\r\n    props.handleClose()\r\n  }\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault()\r\n    let customHeaders = { name: userInfo.name, email: userInfo.email, }\r\n    if (userInfo.phone) customHeaders.phone = userInfo.phone\r\n\r\n    let requestReschedule = {\r\n      testdate: state.fromdate,\r\n      email: state.email ? state.email : null,\r\n      clinic: state.clinic_id ? parseInt(state.clinic_id) : null,\r\n      reason: state.reason ? state.reason : null,\r\n    }\r\n\r\n    let rescheduleRequest = {\r\n      request: requestReschedule,\r\n      method: \"PATCH\",\r\n      serviceCode: \"RESCHEDULE_ORDER\",\r\n      params: `/${state.order_id}/${state.item_id}`,\r\n      customHeaders\r\n    }\r\n\r\n    if (state.fromdate && state.order_id && state.item_id) {\r\n      _setCompleteRequest(rescheduleRequest)\r\n      props.handleClose()\r\n    }\r\n    else setState({ ...state, submitErrorMessage: \"Form error, please check your form\" })\r\n\r\n  }\r\n\r\n  const handleDateChange = prop => date => {\r\n    const newDate = new Date(date);\r\n    if (newDate > datetoanydaysafter(item.valid_until, 0)) {\r\n      setState({\r\n        ...state,\r\n        [prop + 'ErrorMessage']: \"Reschedule date not valid\",\r\n        [prop]: convertDateyyyymmdd(date),\r\n      })\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        [prop + 'ErrorMessage']: \"\",\r\n        [prop]: convertDateyyyymmdd(date),\r\n      })\r\n    }\r\n  }\r\n\r\n  const handlePick = city => {\r\n    console.log(\"ON PICK CITY: \", city)\r\n    setKlinikList([])\r\n    let customHeaders = { name: userInfo.name, email: userInfo.email, }\r\n    if (userInfo.phone) customHeaders.phone = userInfo.phone\r\n\r\n    if (city && city.city) {\r\n      let cityRequest = {\r\n        request: {},\r\n        method: \"GET\",\r\n        serviceCode: \"GET_CITY_CLINIC_LIST\",\r\n        params: `/cities/${city.city}/clinics`,\r\n        customHeaders\r\n      }\r\n      console.log(cityRequest)\r\n      setState({\r\n        ...state,\r\n        city: city.city,\r\n        submitErrorMessage: '',\r\n      })\r\n      SendToService(\r\n        {}, \"GET\", \"GET_CITY_LIST\", `/cities?&citykey=${city.city}`, customHeaders, null, null,\r\n        response => {\r\n          let body = response.body\r\n          let newArr = []\r\n          if (Array.isArray(body)) {\r\n            if (body.length > 0) {\r\n              body.forEach(item => {\r\n                if (item.name) newArr.push(item)\r\n                else newArr.push({ city: item })\r\n              })\r\n              setCityList(newArr)\r\n            }\r\n          }\r\n\r\n          _setCompleteRequest(cityRequest)\r\n        }\r\n      )\r\n    } else {\r\n      let cityRequest = {\r\n        request: {},\r\n        method: \"GET\",\r\n        serviceCode: \"GET_CITY_CLINIC_LIST\",\r\n        params: `/cities/none/clinics`,\r\n        customHeaders\r\n      }\r\n      _setCompleteRequest(cityRequest)\r\n      setState({\r\n        ...state,\r\n        city: \"\",\r\n        clinic_id: 0,\r\n        submitErrorMessage: '',\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (val, index, enterPressed) => {\r\n    console.log(\"KOK BISA SEHH....? \", val)\r\n    let customHeaders = { name: userInfo.name, email: userInfo.email, }\r\n    if (userInfo.phone) customHeaders.phone = userInfo.phone\r\n\r\n    let cityRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CITY_LIST\",\r\n      params: `/cities?&citykey=${val}`,\r\n      customHeaders\r\n    }\r\n    if (val && !enterPressed) {\r\n      _setCompleteRequest(cityRequest)\r\n    }\r\n  }\r\n\r\n  const handlePickClinic = city => {\r\n    if (city && city.id) {\r\n      setState({\r\n        ...state,\r\n        clinic_id: city.id,\r\n        new_clinic_data: city,\r\n        submitErrorMessage: '',\r\n      })\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        clinic_id: 0,\r\n        new_clinic_data: {},\r\n        submitErrorMessage: '',\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleInputChangeClinic = val => {\r\n  }\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth={'xs'} open={open} onClose={handleClose} scroll={'paper'} >\r\n      <DialogTitle id=\"max-width-dialog-title\" onClose={handleClose}>{props.label}</DialogTitle>\r\n      <LinearProgress\r\n        style={{ display: system.serviceStart ? \"\" : \"none\" }}\r\n        color=\"secondary\"\r\n      />\r\n      <DialogContent dividers>\r\n        <Hidden smDown>\r\n          <Grid container direction=\"row\" justify=\"flex-start\" alignItems='flex-start' >\r\n            <Grid item sm={12}>\r\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n                <Grid item lg={5} sm={5} xs={5}>\r\n                  <Typography >Clinic</Typography>\r\n                </Grid>\r\n                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                  <Typography >:</Typography>\r\n                </Grid>\r\n                <Grid item lg={6} sm={6} xs={6}>\r\n                  <Typography ><b>{state.product.clinic ? state.product.clinic.name : \"\"}</b></Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n                <Grid item lg={5} sm={5} xs={5}>\r\n                  <Typography >Product Name</Typography>\r\n                </Grid>\r\n                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                  <Typography >:</Typography>\r\n                </Grid>\r\n                <Grid item lg={6} sm={6} xs={6}>\r\n                  <Typography ><b>{state.product.product_name}</b></Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n                <Grid item lg={5} sm={5} xs={5}>\r\n                  <Typography >Test Date</Typography>\r\n                </Grid>\r\n                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                  <Typography >:</Typography>\r\n                </Grid>\r\n                <Grid item lg={6} sm={6} xs={6}>\r\n                  <Typography ><b>{state.originDate}</b></Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                <Grid item lg={5} sm={5} xs={5}>\r\n                  <Typography >Reschedule valid until</Typography>\r\n                </Grid>\r\n                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                  <Typography >:</Typography>\r\n                </Grid>\r\n                <Grid item lg={6} sm={6} xs={6}>\r\n                  <Typography ><b>{state.maxValidDate}</b></Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                <Grid item lg={5} sm={5} xs={5}>\r\n                  <Typography >Reschedule Date</Typography>\r\n                </Grid>\r\n                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                  <Typography >:</Typography>\r\n                </Grid>\r\n                <Grid item lg={6} sm={6} xs={6}>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                    <Grid container >\r\n                      <KeyboardDatePicker\r\n                        autoOk\r\n                        // minDate={datetoanydaysafter(state.originDate, 1)}\r\n                        minDate={state.minDate}\r\n                        maxDate={state.maxValidDate}\r\n                        error={state.fromdateErrorMessage ? true : false}\r\n                        helperText={state.fromdateErrorMessage ? state.fromdateErrorMessage : \"\"}\r\n                        style={{ width: 150 }}\r\n                        size=\"small\"\r\n                        clearable\r\n                        format=\"yyyy/MM/dd\"\r\n                        margin=\"dense\"\r\n                        id=\"date-picker-from\"\r\n                        value={state.fromdate}\r\n                        onChange={handleDateChange('fromdate')}\r\n                        KeyboardButtonProps={{\r\n                          'aria-label': 'change date',\r\n                        }}\r\n                        disablePast={true}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                <Grid item lg={5} sm={5} xs={5}>\r\n                  <Typography >User Email</Typography>\r\n                </Grid>\r\n                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                  <Typography >:</Typography>\r\n                </Grid>\r\n                <Grid item lg={6} sm={6} xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    // size=\"small\"\r\n                    placeholder=\"Email\"\r\n                    onChange={handleChange('email')}\r\n                    value={state.email}\r\n                    error={state.emailErrorMessage ? true : false}\r\n                    helperText={state.emailErrorMessage ? state.emailErrorMessage : \"\"}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                <Grid item lg={5} sm={5} xs={5}>\r\n                  <Typography >Reschedule Reason</Typography>\r\n                </Grid>\r\n                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                  <Typography >:</Typography>\r\n                </Grid>\r\n                <Grid item lg={6} sm={6} xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    // size=\"small\"\r\n                    placeholder=\"Reschedule Reason\"\r\n                    multiline\r\n                    onChange={handleChange('reason')}\r\n                    value={state.reason}\r\n                    error={state.reasonErrorMessage ? true : false}\r\n                    helperText={state.reasonErrorMessage ? state.reasonErrorMessage : \"\"}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid style={{ visibility: roleUsed === 'voltras.admin' ? 'visible' : 'hidden' }}\r\n                container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                <Grid item lg={5} sm={5} xs={5}>\r\n                  <Typography >Change Clinic</Typography>\r\n                </Grid>\r\n                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                  <Typography >:</Typography>\r\n                </Grid>\r\n                <Grid item lg={6} sm={6} xs={6}>\r\n                  {}\r\n                  <SimpleAutocomplete\r\n                    id=\"changeClinicChooseCity\"\r\n                    options={cityList[0] ? cityList : []}\r\n                    optionItem={'city'}\r\n                    notShrink={true}\r\n                    handleInputChange={handleInputChange}\r\n                    onPick={handlePick}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid style={{ visibility: roleUsed === 'voltras.admin' ? 'visible' : 'hidden' }}\r\n                container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                <Grid item lg={5} sm={5} xs={5}>\r\n                </Grid>\r\n                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                </Grid>\r\n                <Grid item lg={6} sm={6} xs={6}>\r\n                  {\r\n                    (klinikList[0]) && (klinikList[0].name) && (klinikList.length > 1)\r\n                      ? <SimpleAutocomplete\r\n                        id=\"changeClinicChooseClinic\"\r\n                        options={klinikList}\r\n                        optionItem={'name'}\r\n                        notShrink={true}\r\n                        handleInputChange={handleInputChangeClinic}\r\n                        onPick={handlePickClinic}\r\n                      />\r\n                      : (klinikList[0]) && (klinikList[0].name) && (klinikList.length === 1)\r\n                        ? <TextField focused={false} value={klinikList[0].name} fullWidth />\r\n                        : null\r\n                  }\r\n                </Grid>\r\n\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </Hidden>\r\n        <Hidden smUp>\r\n          <Grid container direction=\"row\" justify=\"flex-start\" alignItems='flex-start' >\r\n            <Grid item sm={12}>\r\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n                <Grid item lg={5} sm={5} xs={5}>\r\n                  <Typography style={{ fontSize: 12, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }} >Clinic</Typography>\r\n                </Grid>\r\n                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                  <Typography style={{ fontSize: 12, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }} >:</Typography>\r\n                </Grid>\r\n                <Grid item lg={6} sm={6} xs={6}>\r\n                  <Typography style={{ fontSize: 12, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }} ><b>{state.product.clinic ? state.product.clinic.name : \"\"}</b></Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n                <Grid item lg={5} sm={5} xs={5}>\r\n                  <Typography style={{ fontSize: 12, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>Product Name</Typography>\r\n                </Grid>\r\n                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                  <Typography style={{ fontSize: 12, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>:</Typography>\r\n                </Grid>\r\n                <Grid item lg={6} sm={6} xs={6}>\r\n                  <Typography style={{ fontSize: 12, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}><b>{state.product.product_name}</b></Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n                <Grid item lg={5} sm={5} xs={5}>\r\n                  <Typography style={{ fontSize: 12, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }} >Test Date</Typography>\r\n                </Grid>\r\n                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                  <Typography style={{ fontSize: 12, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>:</Typography>\r\n                </Grid>\r\n                <Grid item lg={6} sm={6} xs={6}>\r\n                  <Typography style={{ fontSize: 12, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}><b>{state.originDate}</b></Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                <Grid item lg={5} sm={5} xs={5}>\r\n                  <Typography style={{ fontSize: 12, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>Reschedule valid until</Typography>\r\n                </Grid>\r\n                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                  <Typography style={{ fontSize: 12, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>:</Typography>\r\n                </Grid>\r\n                <Grid item lg={6} sm={6} xs={6}>\r\n                  <Typography style={{ fontSize: 12, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}><b>{state.maxValidDate}</b></Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                <Grid item lg={5} sm={5} xs={5}>\r\n                  <Typography style={{ fontSize: 12, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>Reschedule Date</Typography>\r\n                </Grid>\r\n                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                  <Typography style={{ fontSize: 12, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>:</Typography>\r\n                </Grid>\r\n                <Grid item lg={6} sm={6} xs={6}>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                    <Grid container >\r\n                      <KeyboardDatePicker\r\n                        autoOk\r\n                        // minDate={datetoanydaysafter(state.originDate, 1)}\r\n                        minDate={state.minDate}\r\n                        maxDate={state.maxValidDate}\r\n                        error={state.fromdateErrorMessage ? true : false}\r\n                        helperText={state.fromdateErrorMessage ? state.fromdateErrorMessage : \"\"}\r\n                        style={{ width: 150 }}\r\n                        size=\"small\"\r\n                        clearable\r\n                        format=\"yyyy/MM/dd\"\r\n                        margin=\"dense\"\r\n                        id=\"date-picker-from\"\r\n                        value={state.fromdate}\r\n                        onChange={handleDateChange('fromdate')}\r\n                        KeyboardButtonProps={{\r\n                          'aria-label': 'change date',\r\n                        }}\r\n                        disablePast={true}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                          classes: {\r\n                            root: classes.labelRoot\r\n                          }\r\n                        }}\r\n                        InputProps={{\r\n                          classes: {\r\n                            root: classes.inputRoot\r\n                          }\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                <Grid item lg={5} sm={5} xs={5}>\r\n                  <Typography style={{ fontSize: 12, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>User Email</Typography>\r\n                </Grid>\r\n                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                  <Typography style={{ fontSize: 12, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>:</Typography>\r\n                </Grid>\r\n                <Grid item lg={6} sm={6} xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    // size=\"small\"\r\n                    placeholder=\"Email\"\r\n                    onChange={handleChange('email')}\r\n                    value={state.email}\r\n                    error={state.emailErrorMessage ? true : false}\r\n                    helperText={state.emailErrorMessage ? state.emailErrorMessage : \"\"}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                      classes: {\r\n                        root: classes.labelRoot\r\n                      }\r\n                    }}\r\n                    InputProps={{\r\n                      classes: {\r\n                        root: classes.inputRoot\r\n                      }\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                <Grid item lg={5} sm={5} xs={5}>\r\n                  <Typography style={{ fontSize: 12, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>Reschedule Reason</Typography>\r\n                </Grid>\r\n                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                  <Typography style={{ fontSize: 12, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>:</Typography>\r\n                </Grid>\r\n                <Grid item lg={6} sm={6} xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    // size=\"small\"\r\n                    placeholder=\"Reschedule Reason\"\r\n                    multiline\r\n                    onChange={handleChange('reason')}\r\n                    value={state.reason}\r\n                    error={state.reasonErrorMessage ? true : false}\r\n                    helperText={state.reasonErrorMessage ? state.reasonErrorMessage : \"\"}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                      classes: {\r\n                        root: classes.labelRoot\r\n                      }\r\n                    }}\r\n                    InputProps={{\r\n                      classes: {\r\n                        root: classes.inputRoot\r\n                      }\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid style={{ visibility: roleUsed === 'voltras.admin' ? 'visible' : 'hidden' }}\r\n                container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                <Grid item lg={5} sm={5} xs={5}>\r\n                  <Typography >Change Clinic</Typography>\r\n                </Grid>\r\n                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                  <Typography >:</Typography>\r\n                </Grid>\r\n                <Grid item lg={6} sm={6} xs={6}>\r\n                  {}\r\n                  <SimpleAutocomplete\r\n                    id=\"changeClinicChooseCity\"\r\n                    options={cityList[0] ? cityList : []}\r\n                    optionItem={'city'}\r\n                    notShrink={true}\r\n                    handleInputChange={handleInputChange}\r\n                    onPick={handlePick}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid style={{ visibility: roleUsed === 'voltras.admin' ? 'visible' : 'hidden' }}\r\n                container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                <Grid item lg={5} sm={5} xs={5}>\r\n                </Grid>\r\n                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                </Grid>\r\n                <Grid item lg={6} sm={6} xs={6}>\r\n                  {\r\n                    (klinikList[0]) && (klinikList[0].name) && (klinikList.length > 1)\r\n                      ? <SimpleAutocomplete\r\n                        id=\"changeClinicChooseClinic\"\r\n                        options={klinikList}\r\n                        optionItem={'name'}\r\n                        notShrink={true}\r\n                        handleInputChange={handleInputChangeClinic}\r\n                        onPick={handlePickClinic}\r\n                      />\r\n                      : (klinikList[0]) && (klinikList[0].name) && (klinikList.length === 1)\r\n                        ? <TextField focused={false} value={klinikList[0].name} fullWidth />\r\n                        : null\r\n                  }\r\n                </Grid>\r\n\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </Hidden>\r\n\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Hidden smDown>\r\n          <Grid container direction=\"row\" justify='center' alignItems='center' style={{ marginTop: 5, marginBottom: 5 }}>\r\n            <Typography color=\"error\" style={{ visibility: state.submitErrorMessage ? 'visible' : 'hidden' }} variant='subtitle2' >\r\n              {state.submitErrorMessage}\r\n            </Typography>\r\n            <Grid container item direction=\"row\" justify='center' alignItems='center' >\r\n              <Button variant='outlined' color=\"primary\" onClick={handleCancel} style={{ marginRight: 5 }}>\r\n                {FormatText('app_cancel')}\r\n              </Button>\r\n              <Button\r\n                disabled={state.submitErrorMessage ? true : false}\r\n                variant='contained'\r\n                color=\"primary\"\r\n                onClick={handleSave}\r\n                style={{ marginLeft: 5 }}\r\n              >\r\n                Reschedule\r\n            </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Hidden>\r\n        <Hidden smUp>\r\n          {/* <Typography color=\"error\" style={{ visibility: state.submitErrorMessage ? 'visible' : 'hidden', marginTop: 5,marginBottom: 5 }} variant='subtitle2' >\r\n            {state.submitErrorMessage}\r\n          </Typography> */}\r\n          <Grid container>\r\n            <Grid container item xs={12} sm={12} direction=\"row\" justify='center' alignItems='center' style={{ paddingBottom: 5 }}>\r\n              <Typography color=\"error\" style={{ visibility: state.submitErrorMessage ? 'visible' : 'hidden', fontSize: 12, fontFamily: 'Arial, Helvetica, sans-serif', textAlign: 'center' }} variant='subtitle2' >\r\n                {state.submitErrorMessage}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={12} justify='space-between' style={{ paddingLeft: 50, marginTop: 5, marginBottom: 5, paddingRight: 50 }}>\r\n              <Button variant='outlined' color=\"primary\" onClick={handleCancel}\r\n                style={{\r\n                  textTransform: 'none', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                  fontWeight: 'bold', fontSize: 12, marginRight: 5\r\n                }}\r\n              >\r\n                {FormatText('app_cancel')}\r\n              </Button>\r\n              <Button\r\n                disabled={state.submitErrorMessage ? true : false}\r\n                style={{\r\n                  textTransform: 'none', color: 'white', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                  fontWeight: 'bold', fontSize: 12\r\n                }}\r\n                variant='contained'\r\n                color=\"primary\"\r\n                onClick={handleSave}\r\n              // style={{ marginLeft: 5 }}\r\n              >\r\n                Reschedule\r\n            </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Hidden>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nconst style = (theme) => ({\r\n  labelRoot: {\r\n    fontSize: 12,\r\n    fontFamily: 'Arial, Helvetica, sans-serif',\r\n  },\r\n  inputRoot: {\r\n    fontSize: 12,\r\n    fontFamily: 'Arial, Helvetica, sans-serif',\r\n    height: 25\r\n  }\r\n})\r\nexport default withStyles(style)(AddClientDialog)\r\n\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceCustomHeaders, setServiceMethod,\r\n  setServiceParams, setServiceRole, setSecondRequest\r\n} from '../../../actions/ServiceActions'\r\nimport { setOpenScreen, serviceStart, serviceEnd } from '../../../actions/SystemActions'\r\nimport { setDialog, setSnackbar } from '../../../actions/FeedbackActions'\r\nimport { setParentList, setPaxList, setKlinikList, setCityList } from \"../../../actions/PaxListActions\";\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\n// import { yyyymmddWithParams } from \"../../../utils/utils\";\r\nimport Config from '../../../config';\r\nimport FormatText from '../../../i18n'\r\nimport RescheduleDialog from './RescheduleDialog'\r\nimport SimpleAutocomplete from '../../../components/autocomplete/SimpleAutocomplete';\r\nimport { SendToService } from '../../../services/ServiceClient'\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n// import {FormHelperText} from '@material-ui/core'\r\n\r\n\r\nlet urlImage = Config.gatewayRepoFile\r\nlet regexNumberLetter = /^[0-9a-zA-Z]*$/\r\n\r\nconst PaxDetailScreen = ({ ...props }) => {\r\n\r\n  const { _setOpenScreen, detail, userInfo, _setCompleteRequest, history, _setServiceStatus, parentList,\r\n    _setSnackbar, _setParentList, classes } = props\r\n\r\n  const [state, setState] = useState({\r\n    submitErrorMessage: \"\",\r\n    open: false,\r\n    openRedeemDialog: false,\r\n    fullName: \"\",\r\n    redeemBy: \"\",\r\n    member: [],\r\n    memberStatus: [],\r\n    errorMessage: \"\",\r\n    clickedItem: 0,\r\n    fileSelected: [],\r\n    clickedFile: 0,\r\n    rescheduleDialog: false,\r\n    items: [],\r\n    item: null,\r\n    redeemArr: [],\r\n    errorArr: [],\r\n    onPick: false,\r\n    showAutoId: false\r\n  })\r\n\r\n  const initOne = () => {\r\n    window.scrollTo(0, 0)\r\n    _setOpenScreen(\"Details\")\r\n    let itemToState = detail ? detail : []\r\n    let globalInfo = detail ? detail[0] ? detail[0] : {} : {}\r\n    const { order_id, contact } = globalInfo\r\n    let member = []\r\n    let memberStatus = []\r\n    let fileSelected = []\r\n    if (itemToState.length > 0) {\r\n      itemToState.forEach(item => {\r\n        member.push(false)\r\n        memberStatus.push(item.status)\r\n        fileSelected.push(false)\r\n      })\r\n      setState({\r\n        ...state,\r\n        member,\r\n        memberStatus,\r\n        fileSelected,\r\n        order_id,\r\n        contact,\r\n        items: detail,\r\n      })\r\n    }\r\n\r\n    const { name, email, phone } = userInfo\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    const cityRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CITY_LIST\",\r\n      params: `/cities?&citykey=a`,\r\n      customHeaders\r\n    }\r\n    _setCompleteRequest(cityRequest)\r\n\r\n  }\r\n\r\n  useEffect(initOne, [])\r\n\r\n\r\n  const cancelSubmit = e => {\r\n    e.preventDefault()\r\n    history.push('/PaxList')\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    let memberToSubmit = []\r\n    state.member.filter((item, i) => item === true ? memberToSubmit.push(i) : null)\r\n\r\n    if (memberToSubmit.length === 0) setState({ ...state, errorMessage: FormatText('err_atleast_one_name_chosen') })\r\n    else setState({ ...state, openRedeemDialog: true, errorMessage: \"\", })\r\n  }\r\n\r\n  const handleInputRedeem = e => {\r\n    /**\r\n     *  member ; urutan person yang di redeem dalam suatu orderID\r\n     *  redeemArr ;  detail info person berdasar member\r\n     */\r\n    e.preventDefault()\r\n    // let from = yyyymmddWithParams('lastWeek')\r\n    // let to = yyyymmddWithParams('nextYear')\r\n    const { name, email, phone } = userInfo\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    // let responseName = []\r\n    // let successRedeem = []\r\n    let errorArr = state.errorArr\r\n    let items = detail\r\n    let orderId = detail[0].order_id\r\n    let fullName = items ? items.map(item => item.person_name) : []\r\n    let redeemBy = state.redeemBy\r\n    let redeemArr = state.redeemArr\r\n    let memberToSubmit = []\r\n    state.member.filter((item, i) => item === true ? memberToSubmit.push(i) : null)\r\n\r\n    if (memberToSubmit.length === 0) setState({ ...state, errorMessage: FormatText('err_atleast_one_name_chosen'), })\r\n    else if (redeemBy.length === 0) setState({ ...state, errorMessage: FormatText('err_redeemby_empty'), })\r\n    else {\r\n\r\n      const submitRedeem = (request, urlParam, method, customHeaders) => new Promise((resolve, reject) => {\r\n        // console.log(\"SATU_SATU: \", request, urlParam, method, customHeaders)\r\n        // resolve(\"OKEY\")\r\n        SendToService(request, method, \"healthOrder\", urlParam, customHeaders, null, null, response => resolve(response))\r\n      })\r\n      // const asyncSubmitRedeem = async (request, urlParam, method, customHeaders) =>\r\n      //   await submitRedeem(request, urlParam, method, customHeaders)\r\n      // const submitRedeemAll = async memberToSubmit => {\r\n      //   let request = memberToSubmit.map(item => {\r\n      //     return asyncSubmitRedeem({ ...redeemArr[item], \"redeem_by\": redeemBy }, `/${orderId.toString()}/${fullName[item]}`, \"POST\", customHeaders)\r\n      //   })\r\n      //   return Promise.all(request)\r\n      // }\r\n\r\n      let isError = []\r\n      let itemError = []\r\n\r\n      // redeemArr.forEach((item, i) => {\r\n      //   let index = memberToSubmit[i]\r\n      //   console.log(fullName[index])\r\n      //   let person_id_name = redeemArr[index] ? redeemArr[index].kinship !== 'SELF' ? fullName[index] : redeemArr[index].person_id_name : \"\"\r\n      //   if (item === false) isError.push(false)\r\n      //   else if (item && (!item.person_id_no || !item.person_id_type || !item.kinship || ((index === i) && !person_id_name))) {\r\n      //     isError.push(true)\r\n      //   }\r\n      //   else isError.push(false)\r\n      // })\r\n\r\n      let arrToDefineErr = redeemArr.map((item, i) => {\r\n        // let index = memberToSubmit[i]\r\n        // console.log(fullName[index])\r\n        // let person_id_name = redeemArr[index] ? redeemArr[index].kinship !== 'SELF' ? fullName[index] : redeemArr[index].person_id_name : \"\"\r\n        if (item === false) item = false\r\n        else {\r\n          if (item.kinship === 'SELF') item.person_id_name = fullName[i]\r\n        }\r\n        return item\r\n      })\r\n\r\n      // console.log(\"ARR TO DEFINE: \", arrToDefineErr)\r\n      arrToDefineErr.forEach((item, i) => {\r\n        // let index = memberToSubmit[i]\r\n        // console.log(fullName[index])\r\n        // let person_id_name = redeemArr[index] ? redeemArr[index].kinship !== 'SELF' ? fullName[index] : redeemArr[index].person_id_name : \"\"\r\n        if (item === false) isError.push(false)\r\n        else if (item && (!item.person_id_no || !item.person_id_type || !item.kinship || !item.person_id_name)) {\r\n          isError.push(true)\r\n        }\r\n        else isError.push(false)\r\n      })\r\n\r\n\r\n      errorArr.forEach((item, i) => {\r\n        if (item.err_message) itemError.push(true)\r\n        else itemError.push(false)\r\n      })\r\n\r\n      const recurseRedeemSubmit = (i) => {\r\n        if (i > memberToSubmit.length - 1) { //recurse terminator\r\n          setState({ ...state, openRedeemDialog: false, redeemBy: \"\", errorMessage: \"\", })\r\n          // Snackbar \r\n          let successSnackbar = { open: true, severity: \"success\", message: FormatText('clinic_redeem_success'), action: false, actionLabel: \"\" }\r\n          _setSnackbar(successSnackbar)\r\n          _setServiceStatus('stop')\r\n          return history.push('/PaxList')\r\n        }\r\n\r\n        if (i < 0) {    // onFail Generator\r\n          // return onFail(msg)\r\n          console.log(\"ONFAIL\")\r\n        }\r\n\r\n        // _setServiceStatus('active')\r\n        let item = memberToSubmit[i]\r\n        let person_id_name = redeemArr[item] ? redeemArr[item].kinship === 'SELF' ? fullName[item] : redeemArr[item].person_id_name : \"\"\r\n        let product_name = items[item].product_name\r\n        submitRedeem(\r\n          { ...redeemArr[item], \"redeem_by\": redeemBy, person_id_name, product_name },\r\n          `/${orderId.toString()}/${fullName[item]}`,\r\n          \"POST\",\r\n          customHeaders\r\n        ).then((resolve, reject) => {\r\n          if (resolve) {\r\n            let newMember = state.member\r\n            newMember[i] = false\r\n            setState({ ...state, member: newMember, })\r\n\r\n            recurseRedeemSubmit(i + 1)\r\n          }\r\n          else {\r\n            console.log(\"END\")\r\n          }\r\n        })\r\n      }\r\n\r\n      // console.log(\"IS ERROR? \", isError, itemError, redeemArr, fullName)\r\n      if (isError.includes(true) || itemError.includes(true)) setState({ ...state, errorMessage: \"Error in form\" })\r\n      else {\r\n        _setServiceStatus('active')\r\n        recurseRedeemSubmit(0)\r\n        // _setServiceStatus('active')\r\n        // submitRedeemAll(memberToSubmit).then(result => {\r\n        //   result.forEach((singleResp, i) => {\r\n        //     if (singleResp.body[0].status === \"FINISH\") responseName.push(singleResp.body[0].person_name)\r\n        //     else responseName.push(fullName[i] + \" Failed\")\r\n        //   })\r\n\r\n        //   asyncSubmitRedeem({}, `/list?&testdate_from=${from}&testdate_to=${to}`, \"GET\", customHeaders).then(response => {\r\n        //     // reset local state\r\n        //     let member = []\r\n        //     result.map(item => member.push(false))\r\n        //     setState({ ...state, openRedeemDialog: false, member, redeemBy: \"\", errorMessage: \"\", })\r\n        //     // sorting and set response to state\r\n        //     if (Array.isArray(response.body) && response.body.length > 0) {\r\n        //       response.body.sort((a, b) => {\r\n        //         let x = a.id\r\n        //         let y = b.id\r\n        //         return y - x\r\n        //       })\r\n        //       _setPaxList(response.body)\r\n        //     }\r\n        //     else _setPaxList([])\r\n\r\n        //     // TO DO Show success dialog \r\n        //     // let successDialog = { open: true, severity: \"success\", message: [FormatText('clinic_redeem_success'), orderId, ...responseName], }\r\n        //     // _setDialog(successDialog)\r\n        //     // console.log(\"BUAT DIBIKIN DIALOG: \", successDialog)\r\n\r\n        //     // Snackbar sementara\r\n        //     let successSnackbar = { open: true, severity: \"success\", message: FormatText('clinic_redeem_success'), action: false, actionLabel: \"\" }\r\n        //     _setSnackbar(successSnackbar)\r\n        //     setTimeout(() => {\r\n        //       history.push('/PaxList')\r\n        //     }, 100);\r\n        //   })\r\n        // })\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleKtpOpen = i => event => setState({ ...state, open: true, clickedItem: i })\r\n\r\n  const handleClose = () => setState({ ...state, open: false, rescheduleDialog: false })\r\n\r\n  const handleRedeemClose = () => {\r\n    let itemToState = detail\r\n    let member = []\r\n    itemToState.map(item => member.push(false))\r\n    setState({ ...state, openRedeemDialog: false, member, redeemArr: [], redeemBy: \"\", errorMessage: \"\", })\r\n  }\r\n\r\n  const handleChange = (prop, i) => event => {\r\n    if (prop === \"redeemBy\") setState({ ...state, redeemBy: event.target.value, errorMessage: \"\", })\r\n    else if (prop === \"person_id_no\") {\r\n      let oldArr = [...state.redeemArr]\r\n      // oldArr[i] = { ...oldArr[i], [prop]: event.target.value }\r\n      // let redeemArr = oldArr\r\n      // setState({ ...state, redeemArr, errorMessage: \"\", showAutoId: true })\r\n      oldArr[i] = { ...oldArr[i], person_id_type: \"\", person_id_no: \"\", }\r\n      _setParentList([])\r\n      setState({ ...state, redeemArr: oldArr, errorMessage: \"\", onPick: false, showAutoId: true })\r\n    }\r\n    else {\r\n      let oldArr = [...state.redeemArr]\r\n      oldArr[i] = { ...oldArr[i], [prop]: event.target.value }\r\n      let redeemArr = oldArr\r\n      setState({ ...state, redeemArr, errorMessage: \"\", showAutoId: false })\r\n    }\r\n  }\r\n\r\n  const handleSelectPax = prop => event => {\r\n    let objRedeem = { person_id_type: \"\", person_id_no: 0, kinship: \"\", person_id_name: \"\" }\r\n    let newMember = state.member\r\n    newMember[prop] = !newMember[prop]\r\n    let redeemArr = newMember.map(item => {\r\n      if (item) return objRedeem\r\n      else return item\r\n    })\r\n    let objErr = { err_message: \"\" }\r\n    let errorArr = newMember.map(item => {\r\n      if (item) return objErr\r\n      else return item\r\n    })\r\n    setState({ ...state, member: newMember, errorMessage: \"\", redeemArr, errorArr })\r\n  }\r\n\r\n  // const handleClickUpload = i => e => {\r\n  //   setState({ ...state, clickedFile: i })\r\n  // }\r\n\r\n  // const fileSelected = e => {\r\n  //   let i = state.clickedFile\r\n  //   let newFile = fileSelected\r\n  //   newFile[i] = e.target.files[0]\r\n  //   setState({\r\n  //     ...state,\r\n  //     fileSelected: newFile,\r\n  //   })\r\n  // }\r\n\r\n  const openReschedule = item => prop => {\r\n    setState({ ...state, item, rescheduleDialog: !state.rescheduleDialog, })\r\n  }\r\n\r\n  const handlePick = (id_type, index) => {\r\n    let i = index\r\n    let oldArr = [...state.redeemArr]\r\n    if (id_type) {\r\n      let as = id_type.as\r\n      if (as === \"SELF\") {\r\n        const { name, email, phone } = userInfo\r\n        let customHeaders = { name, email }\r\n        if (phone) customHeaders.phone = phone\r\n        let selfName = state.items[i].person_name\r\n        let request = {}\r\n        let method = \"GET\"\r\n        let serviceCode = \"GET_PARENT_LIST\"\r\n        let params = `/list?&name=${selfName}`\r\n\r\n        SendToService(request, method, serviceCode, params, customHeaders, null, null, response => {\r\n          if (response.body.length > 0) {\r\n            const { id_type, id_no, name } = response.body[0]\r\n            oldArr[i] = { ...oldArr[i], kinship: as, person_id_name: name, person_id_no: id_no, person_id_type: id_type }\r\n            setState({ ...state, redeemArr: oldArr, errorMessage: \"\", onPick: true })\r\n            _setParentList(response.body)\r\n          }\r\n          else {\r\n            oldArr[i] = { ...oldArr[i], kinship: as, }\r\n            setState({ ...state, redeemArr: oldArr, errorMessage: \"\", onPick: true, showAutoId: true })\r\n          }\r\n        })\r\n      } else {\r\n        oldArr[i] = { ...oldArr[i], kinship: as }\r\n        setState({ ...state, redeemArr: oldArr, errorMessage: \"\" })\r\n      }\r\n\r\n\r\n    }\r\n    else {\r\n      oldArr[i] = { ...oldArr[i], kinship: \"\", person_id_type: \"\", person_id_no: \"\", person_id_name: \"\" }\r\n      setState({ ...state, redeemArr: oldArr, })\r\n    }\r\n  }\r\n\r\n  const handleInputChange = val => {\r\n    console.log(val)\r\n  }\r\n\r\n  const handleInputParentChange = (val, index) => {\r\n    const { name, email, phone } = userInfo\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let i = index\r\n    let selfName = state.items[i].person_name\r\n    let params = state.redeemArr[i].kinship === \"SELF\" ? `/list?&name=${selfName}&id_no=${val}` : `/list?&id_no=${val}`\r\n    let getParentRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_PARENT_LIST\",\r\n      params,\r\n      customHeaders\r\n    }\r\n    let oldArr = [...state.redeemArr]\r\n    let oldErr = [...state.errorArr]\r\n    if (val) {\r\n      if (val.length > 200) {\r\n        oldErr[i] = { ...oldErr[i], err_message: \"Max length 200 character\" }\r\n        setState({ ...state, errorArr: oldErr, errorMessage: \"Error in form\" })\r\n      }\r\n      else if (!regexNumberLetter.test(val)) {\r\n        oldErr[i] = { ...oldErr[i], err_message: \"Only numbers and letters allowed\" }\r\n        setState({ ...state, errorArr: oldErr, errorMessage: \"Error in form\" })\r\n      }\r\n      else {\r\n        oldErr[i] = { ...oldErr[i], err_message: \"\" }\r\n        oldArr[i] = { ...oldArr[i], person_id_no: val }\r\n        _setCompleteRequest(getParentRequest)\r\n        setState({ ...state, redeemArr: oldArr, errorMessage: \"\", errorArr: oldErr })\r\n      }\r\n    }\r\n    else {\r\n      oldErr[i] = { ...oldErr[i], err_message: \"\" }\r\n      oldArr[i] = { ...oldArr[i], person_id_type: \"\", person_id_no: \"\", person_id_name: \"\" }\r\n      _setParentList([])\r\n      setState({ ...state, redeemArr: oldArr, errorMessage: \"\", onPick: false, errorArr: oldErr })\r\n    }\r\n  }\r\n\r\n  const handlePickParent = (pick, index) => {\r\n    let i = index\r\n    let oldErr = [...state.errorArr]\r\n    let oldArr = [...state.redeemArr]\r\n    let oldItems = [...state.items]\r\n    if (pick) {\r\n      const { id_type, id_no, name } = pick\r\n      oldErr[i] = { ...oldErr[i], err_message: \"\" }\r\n      oldArr[i] = { ...oldArr[i], person_id_type: id_type, person_id_no: id_no, person_id_name: name }\r\n      if (oldArr[i].kinship === \"SELF\") {\r\n        if (oldItems[i] && (oldItems[i].person_name === name)) {\r\n          setState({ ...state, redeemArr: oldArr, errorMessage: \"\", onPick: true, errorArr: oldErr })\r\n          _setParentList([])\r\n        }\r\n        else {\r\n          oldErr[i] = { ...oldErr[i], err_message: \"ID Number dan Nama tidak sesuai.\" }\r\n          setState({ ...state, errorMessage: \"ID Number dan Nama tidak sesuai.\", errorArr: oldErr })\r\n        }\r\n      }\r\n      else {\r\n        oldErr[i] = { ...oldErr[i], err_message: \"\" }\r\n        setState({ ...state, redeemArr: oldArr, errorMessage: \"\", onPick: true, errorArr: oldErr })\r\n        _setParentList([])\r\n      }\r\n    }\r\n    else {\r\n      oldErr[i] = { ...oldErr[i], err_message: \"\" }\r\n      oldArr[i] = { ...oldArr[i], person_id_type: \"\", person_id_no: \"\", person_id_name: \"\" }\r\n      setState({ ...state, redeemArr: oldArr, errorMessage: \"\", onPick: false, errorArr: oldErr })\r\n      _setParentList([])\r\n    }\r\n  }\r\n\r\n  const handleParentFocus = () => {\r\n    // if (parentList.length > 1) _setParentList([])\r\n  }\r\n\r\n  const handlePickType = (id_type, index) => {\r\n    let i = index\r\n    let oldArr = [...state.redeemArr]\r\n    if (id_type) {\r\n      let val = id_type.val ? id_type.val : null\r\n      oldArr[i] = { ...oldArr[i], person_id_type: val }\r\n      setState({ ...state, redeemArr: oldArr, errorMessage: \"\" })\r\n    }\r\n    else {\r\n      oldArr[i] = { ...oldArr[i], person_id_type: \"\" }\r\n      setState({ ...state, redeemArr: oldArr, errorMessage: \"Error Type ID must be filled\" })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div  >\r\n      <RescheduleDialog\r\n        {...props}\r\n        item={state.item}\r\n        open={state.rescheduleDialog}\r\n        handleOpen={openReschedule}\r\n        handleClose={handleClose}\r\n        label=\"Reschedule\"\r\n      />\r\n      <Dialog\r\n        // fullScreen={fullScreen}\r\n        open={state.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Kartu Tanda Penduduk\"}</DialogTitle>\r\n        <DialogContent>\r\n          <Card >\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt=\"KTP\"\r\n              height=\"auto\"\r\n              width=\"auto\"\r\n              image={state.items.length > 0\r\n                ? urlImage + `/static-file-manager/retrieve?file=${state.items[state.clickedItem].person_id_image}`\r\n                : null}\r\n              title=\"KTP\"\r\n            />\r\n          </Card>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth={'xs'}\r\n        open={state.openRedeemDialog}\r\n        onClose={handleRedeemClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{FormatText('clinic_redeem_confirmation')}</DialogTitle>\r\n        <Hidden smDown>\r\n          <DialogContent >\r\n\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems='flex-start' >\r\n              {state.member ? state.member.map((item, i) => (\r\n                item && <Grid item sm={12} key={i}>\r\n                  <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ marginBottom: 10 }} >\r\n                    <Grid item lg={5} sm={5} xs={5}>\r\n                      <Typography >Name</Typography>\r\n                    </Grid>\r\n                    <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                      <Typography >:</Typography>\r\n                    </Grid>\r\n                    <Grid item lg={6} sm={6} xs={6}>\r\n                      <Typography ><b>{state.items[i].person_name}</b></Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ marginBottom: 10 }} >\r\n                    <Grid item lg={5} sm={5} xs={5}>\r\n                      <Typography >Redeem As</Typography>\r\n                    </Grid>\r\n                    <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                      <Typography >:</Typography>\r\n                    </Grid>\r\n                    <Grid item lg={6} sm={6} xs={6}>\r\n                      {}\r\n                      <SimpleAutocomplete\r\n                        id={\"redeemAs\" + i.toString()}\r\n                        // options={[{ as: \"SELF\", i }]}\r\n                        options={[{ as: \"CHILD\", i }, { as: \"SELF\", i }]}\r\n                        // width={300}\r\n                        optionItem={'as'}\r\n                        // label={FormatText('clinic_city')}\r\n                        notShrink={true}\r\n                        // onSelect={handleSelect}\r\n                        handleInputChange={handleInputChange}\r\n                        onPick={handlePick}\r\n                        setIndex={i}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n\r\n                  {  // NEW LOGIC TO SHOW REDEEM\r\n                    state.redeemArr[i].kinship === \"CHILD\"\r\n                      ? <>\r\n                        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ marginBottom: 10 }} >\r\n                          <Grid item lg={5} sm={5} xs={5}>\r\n                            <Typography >Parent ID Number</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={6} sm={6} xs={6}>\r\n                            <SimpleAutocomplete\r\n                              id={\"idParent\" + i.toString()}\r\n                              options={parentList}\r\n                              // width={300}\r\n                              optionItem={'id_no'}\r\n                              // label={FormatText('clinic_city')}\r\n                              notShrink={true}\r\n                              // onSelect={handleSelect}\r\n                              handleInputChange={handleInputParentChange}\r\n                              onPick={handlePickParent}\r\n                              setIndex={i}\r\n                              freeSolo\r\n                            />\r\n                            <Typography color=\"error\" variant=\"caption\" >{state.errorArr[i].err_message}</Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ marginBottom: 10 }} >\r\n                          <Grid item lg={5} sm={5} xs={5}>\r\n                            <Typography >Parent ID Type</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={6} sm={6} xs={6}>\r\n                            {\r\n                              state.redeemArr[i].person_id_type && state.onPick\r\n                                ? <Typography >{state.redeemArr[i].person_id_type}</Typography>\r\n                                : <SimpleAutocomplete\r\n                                  values={state.redeemArr[i].person_id_type === \"\" ? { val: \"\", i } : false}\r\n                                  clearOnBlur={true}\r\n                                  id={\"idType\" + i.toString()}\r\n                                  options={[{ val: \"KTP\", i }, { val: \"PASSPORT\", i }, { val: \"NIK\", i }]}\r\n                                  // width={300}\r\n                                  optionItem={'val'}\r\n                                  // label={FormatText('clinic_city')}\r\n                                  notShrink={true}\r\n                                  // onSelect={handleSelect}\r\n                                  handleInputChange={handleInputChange}\r\n                                  onPick={handlePickType}\r\n                                  setIndex={i}\r\n                                />\r\n                            }\r\n\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ marginBottom: 10 }} >\r\n                          <Grid item lg={5} sm={5} xs={5}>\r\n                            <Typography >Parent Name</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={6} sm={6} xs={6}>\r\n                            {\r\n                              state.redeemArr[i].person_id_name && state.onPick\r\n                                ? <Typography ><b>{state.redeemArr[i].person_id_name}</b></Typography>\r\n                                : <TextField\r\n                                  fullWidth\r\n                                  // size=\"small\"\r\n                                  placeholder=\"Parent Name\"\r\n                                  onChange={handleChange('person_id_name', i)}\r\n                                  value={state.redeemArr[i].person_id_name}\r\n                                // error={state.person_id_nameErrorMessage ? true : false}\r\n                                // helperText={state.person_id_nameErrorMessage ? state.person_id_nameErrorMessage : \"\"}\r\n                                />\r\n                            }\r\n\r\n                          </Grid>\r\n                        </Grid>\r\n                      </>\r\n\r\n\r\n                      : state.redeemArr[i].kinship === \"SELF\"\r\n                        ? <>\r\n                          <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                            <Grid item lg={5} sm={5} xs={5}>\r\n                              <Typography >ID Number</Typography>\r\n                            </Grid>\r\n                            <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                              <Typography >:</Typography>\r\n                            </Grid>\r\n                            <Grid item lg={6} sm={6} xs={6}>\r\n                              {\r\n                                state.showAutoId\r\n                                  ? <SimpleAutocomplete\r\n                                    autoFocus={state.showAutoId ? true : false}\r\n                                    handleFocus={handleParentFocus}\r\n                                    id={\"idSelf\" + i.toString()}\r\n                                    options={parentList}\r\n                                    // width={300}\r\n                                    optionItem={'id_no'}\r\n                                    // label={FormatText('clinic_city')}\r\n                                    notShrink={true}\r\n                                    // onSelect={handleSelect}\r\n                                    handleInputChange={handleInputParentChange}\r\n                                    onPick={handlePickParent}\r\n                                    setIndex={i}\r\n                                    freeSolo\r\n                                  />\r\n                                  : <TextField\r\n                                    fullWidth\r\n                                    // size=\"small\"\r\n                                    placeholder=\"Person ID Number\"\r\n                                    onChange={handleChange('person_id_no', i)}\r\n                                    value={state.redeemArr[i].person_id_no}\r\n                                    // error={state.person_id_nameErrorMessage ? true : false}\r\n                                    helperText={\r\n                                      state.person_id_nameErrorMessage\r\n                                        ? state.person_id_nameErrorMessage\r\n                                        : \"Pastikan nomor identitas benar\"\r\n                                    }\r\n                                  />\r\n                              }\r\n                              <Typography color=\"error\" variant=\"caption\" >{state.errorArr[i].err_message}</Typography>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                            <Grid item lg={5} sm={5} xs={5}>\r\n                              <Typography >ID Type</Typography>\r\n                            </Grid>\r\n                            <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                              <Typography >:</Typography>\r\n                            </Grid>\r\n                            <Grid item lg={6} sm={6} xs={6}>\r\n                              {\r\n                                state.redeemArr[i].person_id_type && state.onPick\r\n                                  ? <Typography >{state.redeemArr[i].person_id_type}</Typography>\r\n                                  : <SimpleAutocomplete\r\n                                    values={state.redeemArr[i].person_id_type === \"\" ? { val: \"\", i } : false}\r\n                                    clearOnBlur={true}\r\n                                    id={\"idType\" + i.toString()}\r\n                                    options={[{ val: \"KTP\", i }, { val: \"PASSPORT\", i }, { val: \"NIK\", i }]}\r\n                                    // width={300}\r\n                                    optionItem={'val'}\r\n                                    // label={FormatText('clinic_city')}\r\n                                    notShrink={true}\r\n                                    // onSelect={handleSelect}\r\n                                    handleInputChange={handleInputChange}\r\n                                    onPick={handlePickType}\r\n                                    setIndex={i}\r\n                                  />\r\n                              }\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                        </>\r\n                        : null\r\n                  }\r\n\r\n                  <Divider style={{ marginTop: 20, marginBottom: 10 }} />\r\n                </Grid>\r\n              ))\r\n                : null\r\n              }\r\n\r\n\r\n            </Grid>\r\n\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ marginBottom: 10 }} >\r\n              <Grid item lg={5} sm={5} xs={5}>\r\n                <Typography ><b>Redeem By</b></Typography>\r\n              </Grid>\r\n              <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                <Typography >:</Typography>\r\n              </Grid>\r\n              <Grid item lg={6} sm={6} xs={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  // size=\"small\"\r\n                  placeholder=\"Redeem By\"\r\n                  onChange={handleChange('redeemBy')}\r\n                  value={state.person_id_no}\r\n                  error={state.emailErrorMessage ? true : false}\r\n                  helperText={state.emailErrorMessage ? state.emailErrorMessage : \"\"}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <center>\r\n            <Typography color='error' style={{ display: state.errorMessage ? '' : 'none' }}>{state.errorMessage}</Typography>\r\n            <Button autoFocus onClick={handleRedeemClose} color=\"secondary\" variant='outlined' style={{ margin: 5, marginBottom: 15 }}>\r\n              {FormatText('app_cancel')}\r\n            </Button>\r\n            <Button\r\n              disabled={state.errorMessage ? true : false}\r\n              autoFocus\r\n              onClick={handleInputRedeem}\r\n              color=\"primary\"\r\n              variant='contained'\r\n              style={{ margin: 5, marginBottom: 15 }}\r\n            >\r\n              {FormatText('app_submit')}\r\n            </Button>\r\n          </center>\r\n        </Hidden>\r\n\r\n        <Hidden smUp>\r\n          <DialogContent >\r\n\r\n            <Grid container direction=\"row\" >\r\n              {state.member ? state.member.map((item, i) => (\r\n                item && <Grid item sm={12} key={i} xs={12}>\r\n                  <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\"  >\r\n                    <Grid item lg={5} sm={5} xs={5}>\r\n                      <Typography >Name</Typography>\r\n                    </Grid>\r\n                    <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                      <Typography >:</Typography>\r\n                    </Grid>\r\n                    <Grid item lg={6} sm={6} xs={6}>\r\n                      <Typography ><b>{state.items[i].person_name}</b></Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\"  >\r\n                    <Grid item lg={5} sm={5} xs={5}>\r\n                      <Typography  >Redeem As</Typography>\r\n                    </Grid>\r\n                    <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                      <Typography >:</Typography>\r\n                    </Grid>\r\n                    <Grid item lg={6} sm={6} xs={6}>\r\n                      {}\r\n                      <SimpleAutocomplete\r\n                        id={\"redeemAs\" + i.toString()}\r\n                        // options={[{ as: \"SELF\", i }]}\r\n                        options={[{ as: \"CHILD\", i }, { as: \"SELF\", i }]}\r\n                        // width={300}\r\n                        optionItem={'as'}\r\n                        // label={FormatText('clinic_city')}\r\n                        notShrink={true}\r\n                        // onSelect={handleSelect}\r\n                        handleInputChange={handleInputChange}\r\n                        onPick={handlePick}\r\n                        setIndex={i}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n\r\n                  {  // NEW LOGIC TO SHOW REDEEM\r\n                    state.redeemArr[i].kinship === \"CHILD\"\r\n                      ? <>\r\n                        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n                          <Grid item lg={5} sm={5} xs={5}>\r\n                            <Typography >Parent ID Number</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography className={classes.typo}>:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={6} sm={6} xs={6}>\r\n                            <SimpleAutocomplete\r\n                              id={\"idParent\" + i.toString()}\r\n                              options={parentList}\r\n                              // width={300}\r\n                              optionItem={'id_no'}\r\n                              // label={FormatText('clinic_city')}\r\n                              notShrink={true}\r\n                              // onSelect={handleSelect}\r\n                              handleInputChange={handleInputParentChange}\r\n                              onPick={handlePickParent}\r\n                              setIndex={i}\r\n                              freeSolo\r\n                            />\r\n                            <Typography color=\"error\" variant=\"caption\" >{state.errorArr[i].err_message}</Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\"  >\r\n                          <Grid item lg={5} sm={5} xs={5}>\r\n                            <Typography >Parent ID Type</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography className={classes.typo}>:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={6} sm={6} xs={6}>\r\n                            {\r\n                              state.redeemArr[i].person_id_type && state.onPick\r\n                                ? <Typography className={classes.typo}>{state.redeemArr[i].person_id_type}</Typography>\r\n                                : <SimpleAutocomplete\r\n                                  values={state.redeemArr[i].person_id_type === \"\" ? { val: \"\", i } : false}\r\n                                  clearOnBlur={true}\r\n                                  id={\"idType\" + i.toString()}\r\n                                  options={[{ val: \"KTP\", i }, { val: \"PASSPORT\", i }, { val: \"NIK\", i }]}\r\n                                  // width={300}\r\n                                  optionItem={'val'}\r\n                                  // label={FormatText('clinic_city')}\r\n                                  notShrink={true}\r\n                                  // onSelect={handleSelect}\r\n                                  handleInputChange={handleInputChange}\r\n                                  onPick={handlePickType}\r\n                                  setIndex={i}\r\n                                />\r\n                            }\r\n\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                          <Grid item lg={5} sm={5} xs={5}>\r\n                            <Typography >Parent Name</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={6} sm={6} xs={6}>\r\n                            {\r\n                              state.redeemArr[i].person_id_name && state.onPick\r\n                                ? <Typography ><b>{state.redeemArr[i].person_id_name}</b></Typography>\r\n                                : <TextField\r\n                                  fullWidth\r\n                                  // size=\"small\"\r\n                                  placeholder=\"Parent Name\"\r\n                                  onChange={handleChange('person_id_name', i)}\r\n                                  value={state.redeemArr[i].person_id_name}\r\n                                  // error={state.person_id_nameErrorMessage ? true : false}\r\n                                  // helperText={state.person_id_nameErrorMessage ? state.person_id_nameErrorMessage : \"\"}\r\n                                  InputLabelProps={{\r\n                                    shrink: true,\r\n                                    classes: {\r\n                                      root: classes.labelRoot\r\n                                    }\r\n                                  }}\r\n                                  InputProps={{\r\n                                    classes: {\r\n                                      root: classes.inputRoot\r\n                                    }\r\n                                  }}\r\n                                />\r\n                            }\r\n\r\n                          </Grid>\r\n                        </Grid>\r\n                      </>\r\n\r\n\r\n                      : state.redeemArr[i].kinship === \"SELF\"\r\n                        ? <>\r\n                          <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                            <Grid item lg={5} sm={5} xs={5}>\r\n                              <Typography >ID Number</Typography>\r\n                            </Grid>\r\n                            <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                              <Typography >:</Typography>\r\n                            </Grid>\r\n                            <Grid item lg={6} sm={6} xs={6}>\r\n                              {\r\n                                state.showAutoId\r\n                                  ? <SimpleAutocomplete\r\n                                    autoFocus={state.showAutoId ? true : false}\r\n                                    handleFocus={handleParentFocus}\r\n                                    id={\"idSelf\" + i.toString()}\r\n                                    options={parentList}\r\n                                    // width={300}\r\n                                    optionItem={'id_no'}\r\n                                    // label={FormatText('clinic_city')}\r\n                                    notShrink={true}\r\n                                    // onSelect={handleSelect}\r\n                                    handleInputChange={handleInputParentChange}\r\n                                    onPick={handlePickParent}\r\n                                    setIndex={i}\r\n                                    freeSolo\r\n                                  />\r\n                                  : <TextField\r\n                                    fullWidth\r\n                                    aria-describedby={'id-number-error'}\r\n                                    // size=\"small\"\r\n                                    id='id-number-error'\r\n                                    placeholder=\"Person ID Number\"\r\n                                    onChange={handleChange('person_id_no', i)}\r\n                                    value={state.redeemArr[i].person_id_no}\r\n                                    // error={state.person_id_nameErrorMessage ? true : false}\r\n                                    FormHelperTextProps={\r\n                                      {\r\n                                        style: {\r\n                                          fontSize: 10\r\n                                        }\r\n                                      }\r\n                                    }\r\n                                    helperText={\r\n                                      state.person_id_nameErrorMessage\r\n                                        ? state.person_id_nameErrorMessage\r\n                                        : \"Pastikan nomor identitas benar\"\r\n                                    }\r\n                                    InputLabelProps={{\r\n                                      shrink: true,\r\n                                      classes: {\r\n                                        root: classes.labelRoot\r\n                                      }\r\n                                    }}\r\n                                    InputProps={{\r\n                                      classes: {\r\n                                        root: classes.inputRoot\r\n                                      }\r\n                                    }}\r\n                                  />\r\n                              }\r\n                              <Typography color=\"error\" variant=\"caption\">{state.errorArr[i].err_message}</Typography>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\"  >\r\n                            <Grid item lg={5} sm={5} xs={5}>\r\n                              <Typography >ID Type</Typography>\r\n                            </Grid>\r\n                            <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                              <Typography >:</Typography>\r\n                            </Grid>\r\n                            <Grid item lg={6} sm={6} xs={6}>\r\n                              {\r\n                                state.redeemArr[i].person_id_type && state.onPick\r\n                                  ? <Typography  >{state.redeemArr[i].person_id_type}</Typography>\r\n                                  : <SimpleAutocomplete\r\n                                    values={state.redeemArr[i].person_id_type === \"\" ? { val: \"\", i } : false}\r\n                                    clearOnBlur={true}\r\n                                    id={\"idType\" + i.toString()}\r\n                                    options={[{ val: \"KTP\", i }, { val: \"PASSPORT\", i }, { val: \"NIK\", i }]}\r\n                                    // width={300}\r\n                                    optionItem={'val'}\r\n                                    // label={FormatText('clinic_city')}\r\n                                    notShrink={true}\r\n                                    // onSelect={handleSelect}\r\n                                    handleInputChange={handleInputChange}\r\n                                    onPick={handlePickType}\r\n                                    setIndex={i}\r\n                                  />\r\n                              }\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                        </>\r\n                        : null\r\n                  }\r\n\r\n                  <Divider style={{ marginTop: 20, marginBottom: 10 }} />\r\n                </Grid>\r\n              ))\r\n                : null\r\n              }\r\n\r\n\r\n            </Grid>\r\n\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n              <Grid item lg={5} sm={5} xs={5}>\r\n                <Typography ><b>Redeem By</b></Typography>\r\n              </Grid>\r\n              <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                <Typography >:</Typography>\r\n              </Grid>\r\n              <Grid item lg={6} sm={6} xs={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  // size=\"small\"\r\n                  placeholder=\"Redeem By\"\r\n                  onChange={handleChange('redeemBy')}\r\n                  value={state.person_id_no}\r\n                  error={state.emailErrorMessage ? true : false}\r\n                  helperText={state.emailErrorMessage ? state.emailErrorMessage : \"\"}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                    classes: {\r\n                      root: classes.labelRoot\r\n                    }\r\n                  }}\r\n                  InputProps={{\r\n                    classes: {\r\n                      root: classes.inputRoot\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          {/* <center> */}\r\n          <Grid container>\r\n            <Grid container item xs={12} sm={12} direction=\"row\" justify='center' alignItems='center' style={{ paddingBottom: 5 }}>\r\n              <Typography color='error' style={{ display: state.errorMessage ? '' : 'none' }}>{state.errorMessage}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} container justify='space-between' style={{ paddingLeft: 50, marginTop: 5, marginBottom: 10, paddingRight: 50 }}>\r\n            <Button autoFocus onClick={handleRedeemClose} color=\"secondary\" variant='outlined' style={{\r\n              textTransform: 'none', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n              fontWeight: 'bold', fontSize: 12\r\n            }}>\r\n              {FormatText('app_cancel')}\r\n            </Button>\r\n            <Button\r\n              disabled={state.errorMessage ? true : false}\r\n              autoFocus\r\n              onClick={handleInputRedeem}\r\n              color=\"primary\"\r\n              variant='contained'\r\n              style={{\r\n                textTransform: 'none', color: 'white', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                fontWeight: 'bold', fontSize: 12\r\n              }}\r\n            >\r\n              {FormatText('app_submit')}\r\n            </Button>\r\n          </Grid>\r\n          {/* </center> */}\r\n        </Hidden>\r\n      </Dialog>\r\n\r\n      <center>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n        // alignItems=\"center\"\r\n        >\r\n          <Grid item xs={10} sm={6} >\r\n            <Card variant=\"elevation\" >\r\n              <CardContent>\r\n                <Typography variant=\"h6\"><b>{FormatText('clinic_order_detail')}</b> </Typography>\r\n                <Typography variant=\"caption\" ><b>Order Id: {state.order_id ? state.order_id : \"\"}</b> </Typography>\r\n                <div style={{ marginTop: 15 }}>\r\n                  <Grid container align='left' style={{ marginLeft: 20, marginBottom: 5 }} >\r\n                    <Grid item lg={12} sm={12} xs={12}>\r\n                      <b>{FormatText('common_contact_person')}</b>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container align='left' >\r\n                    <Grid item xs={1} component='div'  >\r\n                      <Typography ></Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      Email\r\n                      </Grid>\r\n                    <Grid item xs={9}   >\r\n                      <Typography variant=\"caption\">: <b>{state.contact && state.contact.email}</b></Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container align='left' >\r\n                    <Grid item xs={1} component='div'  >\r\n                      <Typography ></Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      {FormatText('app_phone')}\r\n                    </Grid>\r\n                    <Grid item xs={5}   >\r\n                      <Typography variant=\"caption\">: <b>{state.contact && state.contact.phone}</b></Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Divider style={{ margin: 15 }} />\r\n\r\n                  {state.items.length > 0 ? state.items.map((item, i) => {\r\n                    return <div key={i}>\r\n                      <div style={{ marginLeft: 20 }}>\r\n                        <Grid container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={4}>\r\n                            <Typography variant=\"body2\" >{FormatText('app_name')}</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={7}   >\r\n                            <Typography variant=\"caption\"><b>{item.person_name}</b></Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={4}>\r\n                            <Typography variant=\"body2\">{FormatText('common_birth_date')}</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={7}   >\r\n                            <Typography variant=\"caption\">{item.person_date_of_birth}</Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={4}>\r\n                            <Typography variant=\"body2\">Status</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={7}   >\r\n                            <Typography variant=\"caption\">\r\n                              <b>{item.status ? item.status === \"FINISH\" ? \"REDEEMED\" : item.status : \"NEW\"}</b>\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={4}>\r\n                            <Typography variant=\"body2\">{FormatText('common_products')}</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={7} variant=\"caption\"  >\r\n                            <Typography variant=\"caption\"><b>{item.product_name}</b></Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={4}>\r\n                            <Typography variant=\"body2\">{FormatText('clinic_test_date')}</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={7} variant=\"caption\"  >\r\n                            <Typography variant=\"caption\">{item.testdate} </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={4}>\r\n                            <Typography variant=\"body2\">{FormatText('clinic_name')}</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={7} variant=\"caption\"  >\r\n                            <Typography variant=\"caption\">{item.clinic ? item.clinic.name : \"Klinik Name\"}</Typography> <br />\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid onClick={item.person_id_image ? handleKtpOpen(i) : null} container align='left'>\r\n                          <Grid item lg={4} sm={4} xs={4}>\r\n                            <Typography variant=\"body2\">KTP</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                            <Typography >:</Typography>\r\n                          </Grid>\r\n                          <Grid item lg={7} sm={7} xs={7}   >\r\n                            {\r\n                              item.person_id_image\r\n                                ? <Card style={{ width: 140, marginTop: 10 }}>\r\n                                  <CardMedia\r\n                                    component=\"img\"\r\n                                    alt=\"KTP\"\r\n                                    height=\"auto\"\r\n                                    width=\"200\"\r\n                                    image={item.person_id_image ? urlImage + `/static-file-manager/retrieve?file=${item.person_id_image}` : null}\r\n                                    title=\"KTP\"\r\n                                  />\r\n                                </Card>\r\n                                : <Typography variant=\"caption\"> - </Typography>\r\n                            }\r\n                          </Grid>\r\n                        </Grid>\r\n                        {/* {\r\n                            state.memberStatus[i] === \"FINISH\"\r\n                              ? null\r\n                              : <Grid style={{ marginTop: 10 }} container align='left'>\r\n                                <Grid item lg={4} sm={4} xs={4}>\r\n                                  <Typography variant=\"body2\">Upload Document</Typography>\r\n                                </Grid>\r\n                                <Grid item lg={1} sm={1} xs={1} component='div'  >\r\n                                  <Typography >:</Typography>\r\n                                </Grid>\r\n                                <Grid item lg={7} sm={7} xs={7}   >\r\n                                  {state.fileSelected[i]\r\n                                    ? <div>{state.fileSelected[i].name}</div>\r\n                                    : <div><input\r\n                                      // accept=\"image/*\"\r\n                                      onChange={fileSelected}\r\n                                      style={{ display: 'none' }}\r\n                                      id=\"raised-button-file\"\r\n                                      multiple\r\n                                      type=\"file\"\r\n                                    />\r\n                                      <label htmlFor=\"raised-button-file\">\r\n                                        <Button onClick={handleClickUpload(i)} variant='outlined' component=\"span\" size='small' color='primary' >\r\n                                          Upload\r\n                                    </Button>\r\n                                      </label></div>\r\n                                  }\r\n\r\n                                </Grid>\r\n                              </Grid>\r\n                          } */}\r\n                        {/* <Grid container >\r\n                          <Grid item lg={4} sm={4} xs={1}>\r\n                          </Grid>\r\n                          <Grid item lg={4} sm={4} xs={10} component='div'  >\r\n                          </Grid>\r\n                          <Grid item lg={4} sm={4} xs={1} variant=\"caption\"  >\r\n                          </Grid>\r\n                        </Grid> */}\r\n                        {/* <> */}\r\n                        <Hidden smUp>\r\n\r\n                          <Grid item xs={12} sm={12} container justify='space-between' style={{ paddingTop: 15, paddingRight: 15 }}>\r\n                            {\r\n                              state.member[i]\r\n                                ? <Button size='small' style={{ marginTop: 15 }} onClick={handleSelectPax(i)}\r\n                                  variant=\"outlined\" color=\"secondary\">\r\n                                  {FormatText('app_cancel')} Redeem\r\n                                    </Button>\r\n                                : state.memberStatus[i] === \"FINISH\"\r\n                                  ? null\r\n                                  : <>\r\n                                    <Button\r\n                                      size='small'\r\n                                      // style={{ marginTop: 15, marginRight: 5 }}\r\n                                      style={{\r\n                                        textTransform: 'none', color: 'white', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                                        fontWeight: 'bold', fontSize: 12\r\n                                      }}\r\n                                      onClick={openReschedule(item)}\r\n                                      variant='contained' color=\"secondary\"\r\n                                    >\r\n                                      Reschedule\r\n                                    </Button>\r\n                                    <Button\r\n                                      size='small'\r\n                                      // style={{ marginTop: 15, marginLeft: 5 }}\r\n                                      style={{\r\n                                        textTransform: 'none', color: 'white', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                                        fontWeight: 'bold', fontSize: 12, paddingLeft: 23, paddingRight: 23\r\n                                      }}\r\n                                      onClick={handleSelectPax(i)}\r\n                                      variant='contained' color=\"primary\"\r\n                                    >\r\n                                      Redeem\r\n                                  </Button>\r\n                                  </>\r\n                            }\r\n\r\n                          </Grid>\r\n                        </Hidden>\r\n                        <Hidden smDown>\r\n                          {\r\n                            state.member[i]\r\n                              ? <Button size='small' style={{ marginTop: 15 }} onClick={handleSelectPax(i)}\r\n                                variant=\"outlined\" color=\"secondary\">\r\n                                {FormatText('app_cancel')} Redeem\r\n                                    </Button>\r\n                              : state.memberStatus[i] === \"FINISH\"\r\n                                ? null\r\n                                : <>\r\n                                  <Button\r\n                                    size='small'\r\n                                    style={{ marginTop: 15, marginRight: 5 }}\r\n                                    // style={{\r\n                                    //   textTransform: 'none', color: 'white', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                                    //   fontWeight: 'bold', fontSize: 12\r\n                                    // }}\r\n                                    onClick={openReschedule(item)}\r\n                                    variant='contained' color=\"secondary\"\r\n                                  >\r\n                                    Reschedule\r\n                                    </Button>\r\n                                  <Button\r\n                                    size='small'\r\n                                    style={{ marginTop: 15, marginLeft: 5 }}\r\n                                    // style={{\r\n                                    //   textTransform: 'none', color: 'white', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                                    //   fontWeight: 'bold', fontSize: 12, paddingLeft: 23, paddingRight: 23\r\n                                    // }}\r\n                                    onClick={handleSelectPax(i)}\r\n                                    variant='contained' color=\"primary\"\r\n                                  >\r\n                                    Redeem\r\n                                  </Button>\r\n                                </>\r\n                          }\r\n                        </Hidden>\r\n\r\n                        {/* </> */}\r\n                      </div>\r\n                      <Divider style={{ margin: 15 }} />\r\n                    </div>\r\n                  }) : null}\r\n\r\n                  {state.errorMessage\r\n                    ? <Grid container justify='center'>\r\n                      <FormHelperText error id=\"email-helper-text\">{state.errorMessage}</FormHelperText>\r\n                    </Grid>\r\n                    : null}\r\n                  {state.submitErrorMessage\r\n                    ? <Grid container justify='center'>\r\n                      <FormHelperText error id=\"email-helper-text\">{state.submitErrorMessage}</FormHelperText>\r\n                    </Grid>\r\n                    : null}\r\n\r\n                  <Button\r\n                    style={{ marginRight: 2 }}\r\n                    size='small'\r\n                    onClick={cancelSubmit}\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\">\r\n                    {FormatText('app_back')}\r\n                  </Button>\r\n                  {\r\n                    state.memberStatus.includes(undefined) || state.memberStatus.includes(\"PAID\")\r\n                      ? <Button\r\n                        style={{ marginLeft: 2 }}\r\n                        size='small'\r\n                        onClick={handleSubmit}\r\n                        variant={state.member.includes(true) ? \"contained\" : 'outlined'}\r\n                        color='secondary'\r\n                      >\r\n                        {FormatText('clinic_redeem_confirmation')}\r\n                      </Button>\r\n                      : null\r\n                  }\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n            <div style={{ height: 100 }} ></div>\r\n          </Grid>\r\n        </Grid>\r\n      </center>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    parentList: state.paxList.parentList,\r\n    cityList: state.paxList.cityList,\r\n    klinikList: state.paxList.klinikList,\r\n    detail: state.paxList.detail,\r\n    product: state.paxList.product,\r\n    userInfo: state.userInfo.info,\r\n    roleUsed: state.userInfo.roleUsed,\r\n    system: state.system,\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setParentList: val => dispatch(setParentList(val)),\r\n    _setSnackbar: val => dispatch(setSnackbar(val)),\r\n    _setRequest: val => {\r\n      dispatch(setServiceRequest(val))\r\n    },\r\n    _setServiceCode: val => {\r\n      dispatch(setServiceCode(val))\r\n    },\r\n    _setServiceStatus: val => {\r\n      dispatch(setServiceStatus(val))\r\n    },\r\n    _setOpenScreen: val => {\r\n      dispatch(setOpenScreen(val))\r\n    },\r\n    _setServiceStart: () => {\r\n      dispatch(serviceStart())\r\n    },\r\n    _setServiceEnd: () => {\r\n      dispatch(serviceEnd())\r\n    },\r\n    _setDialog: val => {\r\n      dispatch(setDialog(val))\r\n    },\r\n    _setPaxList: val => {\r\n      dispatch(setPaxList(val))\r\n    },\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.params))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.role))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n    _setSecondRequest: val => dispatch(setSecondRequest(val)),\r\n    setKlinikList: val => dispatch(setKlinikList(val)),\r\n    setCityList: val => dispatch(setCityList(val)),\r\n  }\r\n}\r\nconst style = theme => ({\r\n  labelRoot: {\r\n    fontSize: 12,\r\n    fontFamily: 'Arial, Helvetica, sans-serif',\r\n  },\r\n  inputRoot: {\r\n    fontSize: 12,\r\n    fontFamily: 'Arial, Helvetica, sans-serif',\r\n    // height: 25\r\n  },\r\n})\r\n\r\nexport default withStyles(style)(connect(mapStateToProps, mapDispatchToProps)(PaxDetailScreen))","import React, { Component } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import QrReader from 'react-qr-reader'\r\nimport QrReader from 'react-qr-scanner'\r\n\r\nclass QrScreen extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isQrShow: false,\r\n      result: 'no result',\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props._setOpenScreen(\"QR Scan\")\r\n    this.props._serviceStart()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props._serviceEnd()\r\n  }\r\n\r\n  handleQrShow = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      isQrShow: !this.state.isQrShow\r\n    })\r\n  }\r\n\r\n  handleScan = data => {\r\n    let next = this.props.userInfo.info\r\n    let name = next.basicInformation ? next.basicInformation.name : ''\r\n    let email = next.email ? next.email : ''\r\n    let phone = next.phone ? next.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n\r\n    if (typeof (data) === 'string' || typeof (data) === 'number') {\r\n      let cekData = data.toString().replace(/\\s/g, '').length\r\n      // console.log(\"QR CEK DATA: \", cekData)\r\n      if (cekData > 0) {\r\n        this.props._serviceEnd()\r\n        // console.log(\"QR RESULT DATA: \", data)\r\n        // request by id to service\r\n        let healthOrderRequest = {\r\n          request: {},\r\n          method: \"GET\",\r\n          // serviceCode: \"healthOrder\",\r\n          // params: `/${data.toString()}`,\r\n          serviceCode: \"PURCHASE_VOUCHER_NUMBER\",\r\n          params: `/purchases/${data.toString()}`,\r\n          customHeaders\r\n        }\r\n        this.props._setCompleteRequest(healthOrderRequest)\r\n\r\n        // // find id from paxlist\r\n        // let list = this.props.paxList\r\n        // let pax = list.filter(item => item.id.toString() === data.toString())\r\n        // if (pax[0]) {\r\n        //   this.props._setPaxDetail(pax[0])\r\n        //   this.props.history.push('/PaxDetail')\r\n        // }\r\n        // else {\r\n        //   this.props.history.push('/Home')\r\n        // }\r\n\r\n      }\r\n      else {\r\n        // sent error message to snackbar\r\n        // back home\r\n        let responseErr = {\r\n          headers: {},\r\n          body: {\r\n            error: true,\r\n            errorDescription: {\r\n              id: \"QR Code anda tidak teridentifikasi\",\r\n              en: \"Unidentified QR Code\"\r\n            }\r\n          }\r\n        }\r\n        this.props._setResponse(responseErr)\r\n        this.props._serviceEnd()\r\n        this.props.history.push('/Home')\r\n      }\r\n    }\r\n  }\r\n\r\n  handleError = err => {\r\n    console.error(err)\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Grid container >\r\n          <Grid md={4} item>\r\n\r\n          </Grid>\r\n          <Grid xs={12} sm={12} md={4} item>\r\n            <Card>\r\n              <CardContent >\r\n                <div>\r\n                  <QrReader\r\n                    // delay={500}\r\n                    onError={this.handleError}\r\n                    onScan={this.handleScan}\r\n                    style={{ width: '100%', }}\r\n                    resolution={1200}\r\n                    // legacyMode={true}\r\n                    facingMode=\"rear\"\r\n                  />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid md={4} item>\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default QrScreen\r\n","\r\nimport { connect } from 'react-redux'\r\nimport QrScreen from './QrScreen'\r\n\r\n\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole,\r\n} from '../../../actions/ServiceActions'\r\nimport { setOpenScreen, serviceStart, serviceEnd } from '../../../actions/SystemActions'\r\nimport { setPaxDetail } from \"../../../actions/PaxListActions\";\r\nimport { setResponse } from '../../../actions/ResponseActions'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    paxList: state.paxList.list,\r\n    detail: state.paxList.detail,\r\n    system: state.system,\r\n    userInfo: state.userInfo,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setRequest: val => {\r\n      dispatch(setServiceRequest(val))\r\n    },\r\n    _setServiceCode: val => {\r\n      dispatch(setServiceCode(val))\r\n    },\r\n    _setServiceStatus: val => {\r\n      dispatch(setServiceStatus(val))\r\n    },\r\n    _setOpenScreen: val => {\r\n      dispatch(setOpenScreen(val))\r\n    },\r\n    _setPaxDetail: val => {\r\n      dispatch(setPaxDetail(val))\r\n    },\r\n    _serviceStart: () => {\r\n      dispatch(serviceStart())\r\n    },\r\n    _serviceEnd: () => {\r\n      dispatch(serviceEnd())\r\n    },\r\n    _setResponse: val => {\r\n      dispatch(setResponse(val))\r\n    },\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.params))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n\r\n  }\r\n}\r\n\r\nconst Qr = connect(mapStateToProps, mapDispatchToProps)(QrScreen)\r\n\r\nexport default Qr","\r\nimport React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Grid, MenuItem, InputAdornment, IconButton, } from '@material-ui/core';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { createUserTypes } from '../../../utils/utils';\r\n\r\nconst CreateUserForm = ({ ...props }) => {\r\n  const { handleChange, form, setFormFocus, formFocus, setShowPassword, showPassword,\r\n    setShowConfirmPassword, showConfirmPassword, serviceRole, } = props\r\n  const [userType, setUserType] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (serviceRole) setUserType(createUserTypes(serviceRole))\r\n  }, [serviceRole])\r\n\r\n  return (\r\n    <Grid item xs={12} md={6}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} md={8} style={{ marginLeft: 10, marginRight: 10 }} >\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('name')}\r\n            id=\"standard-name\"\r\n            label=\"Full Name\"\r\n            placeholder=\"Full Name\"\r\n            helperText={form.nameErrorMessage ? form.nameErrorMessage : \"\"}\r\n            error={form.nameErrorMessage ? true : false}\r\n            fullWidth\r\n            margin='dense'\r\n            value={form.name}\r\n            onFocus={() => setFormFocus({ ...formFocus, name: true })}\r\n            onBlur={() => form.name ? setFormFocus({ ...formFocus, name: true }) : setFormFocus({ ...formFocus, name: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.name ? true : false\r\n            }}\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('phone')}\r\n            id=\"standard-phone\"\r\n            label=\"Phone\"\r\n            placeholder=\"+6281234567890\"\r\n            helperText={form.phoneErrorMessage ? form.phoneErrorMessage : \"\"}\r\n            error={form.phoneErrorMessage ? true : false}\r\n            fullWidth\r\n            margin=\"dense\"\r\n            value={form.phone}\r\n            onFocus={() => setFormFocus({ ...formFocus, phone: true })}\r\n            onBlur={() => form.phone ? setFormFocus({ ...formFocus, phone: true }) : setFormFocus({ ...formFocus, phone: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.phone ? true : false\r\n            }}\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('email')}\r\n            id=\"standard-email\"\r\n            label=\"Email\"\r\n            placeholder=\"Email\"\r\n            helperText={form.emailErrorMessage ? form.emailErrorMessage : \"\"}\r\n            error={form.emailErrorMessage ? true : false}\r\n            fullWidth\r\n            margin=\"dense\"\r\n            value={form.email}\r\n            onFocus={() => setFormFocus({ ...formFocus, email: true })}\r\n            onBlur={() => form.email ? setFormFocus({ ...formFocus, email: true }) : setFormFocus({ ...formFocus, email: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.email ? true : false\r\n            }}\r\n          />\r\n          <TextField\r\n            type={showPassword ? 'text' : 'password'}\r\n            size=\"small\"\r\n            onChange={handleChange('password')}\r\n            id=\"standard-password\"\r\n            label=\"Password\"\r\n            // placeholder=\"Placeholder\"\r\n            helperText={form.passwordErrorMessage ? form.passwordErrorMessage : \"\"}\r\n            error={form.passwordErrorMessage ? true : false}\r\n            fullWidth\r\n            margin=\"dense\"\r\n            value={form.password}\r\n            onFocus={() => setFormFocus({ ...formFocus, password: true })}\r\n            onBlur={() => form.password ? setFormFocus({ ...formFocus, password: true }) : setFormFocus({ ...formFocus, password: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.password ? true : false\r\n            }}\r\n            InputProps={{\r\n              endAdornment: <InputAdornment position='end' >\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onMouseDown={e => e.preventDefault()}\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }}\r\n          />\r\n          <TextField\r\n            type={showConfirmPassword ? 'text' : 'password'}\r\n            size=\"small\"\r\n            onChange={handleChange('confirmPassword')}\r\n            id=\"standard-confirmPassword\"\r\n            label=\"Confirm Password\"\r\n            // placeholder=\"Placeholder\"\r\n            helperText={form.confirmPasswordErrorMessage ? form.confirmPasswordErrorMessage : \"\"}\r\n            error={form.confirmPasswordErrorMessage ? true : false}\r\n            fullWidth\r\n            margin=\"dense\"\r\n            value={form.confirmPassword}\r\n            onFocus={() => setFormFocus({ ...formFocus, confirmPassword: true })}\r\n            onBlur={() => form.confirmPassword ? setFormFocus({ ...formFocus, confirmPassword: true }) : setFormFocus({ ...formFocus, confirmPassword: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.confirmPassword ? true : false\r\n            }}\r\n            InputProps={{\r\n              endAdornment: <InputAdornment position='end' >\r\n                <IconButton\r\n                  aria-label=\"toggle confirmPassword visibility\"\r\n                  onMouseDown={e => e.preventDefault()}\r\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                >\r\n                  {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }}\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('userType')}\r\n            id=\"standard-userType\"\r\n            label=\"User Type\"\r\n            select\r\n            value={form.userType}\r\n            // placeholder=\"Placeholder\"\r\n            // helperText=\"Full width!\"\r\n            fullWidth\r\n            margin=\"dense\"\r\n          >\r\n            {userType.map((option, i) => (\r\n              <MenuItem value={option.value} key={i + 33}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CreateUserForm\r\n","\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {\r\n  Grid, Typography, Button, MenuItem, Card, CardContent,\r\n  CardActions, List, ListItemText, FormHelperText\r\n} from '@material-ui/core';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst AddUserClient = ({ ...props }) => {\r\n  const { form, showAddUserClient, setShowAddUserClient, handleChange,\r\n    chooseClientList, handleResource, handleAddClientRole, fullmd } = props\r\n\r\n  return (\r\n    <Grid item xs={12} md={fullmd ? 12 : 6} style={{ marginTop: 10 }}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" >\r\n        <Typography color='primary' variant='subtitle2' >User Client</Typography>\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" style={{ marginTop: 10 }} >\r\n          <Grid item xs={6}>\r\n            <Grid container direction=\"column\" justify='flex-start' alignItems='center' >\r\n              <Grid item>\r\n                Client Id\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container direction=\"row\" justify='flex-start' alignItems='flex-start' >\r\n              <Grid item>\r\n                <List>\r\n                  {form.assignedUserRole[0]\r\n                    ? form.assignedUserRole.map((item, i) => (<ListItemText key={i} secondary={'- ' + item.clientId} />))\r\n                    : <ListItemText secondary={'- none'} />}\r\n                </List>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Grid container direction=\"column\" justify='flex-start' alignItems='center' >\r\n              <Grid item>\r\n                Resources Allowed\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container direction=\"row\" justify='flex-start' alignItems='flex-start' >\r\n              <Grid item>\r\n                <List>\r\n                  {form.assignedUserRole[0]\r\n                    ? form.assignedUserRole[0].resourcesAllowedList.map((item, i) => (\r\n                      <ListItemText key={i} secondary={'- ' + item} />\r\n                    ))\r\n                    : <ListItemText secondary={'- none'} />\r\n                  }\r\n                </List>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container direction=\"column\" justify='flex-start' alignItems='flex-start' style={{ margin: 20 }}>\r\n            {\r\n              !showAddUserClient\r\n                ? <div>\r\n                  {form.assignedUserRole[0]\r\n                    ? null\r\n                    : <div>\r\n                      <Button\r\n                        // disabled={form.assignedUserRole[0] ? true : false}\r\n                        size='small'\r\n                        variant='outlined'\r\n                        color='secondary'\r\n                        onClick={() => setShowAddUserClient(true)}\r\n                      >\r\n                        Choose Client for User\r\n                      </Button>\r\n                      <FormHelperText>Only one client allowed on Create User.</FormHelperText>\r\n                      <FormHelperText>Update the User on User List to add more client.</FormHelperText>\r\n                    </div>\r\n                  }\r\n                </div>\r\n                : <Card >\r\n                  <CardContent>\r\n                    <Grid>\r\n                      <Typography variant='subtitle2'> Add Client and Resources </Typography>\r\n                    </Grid>\r\n                    <Grid>\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        size=\"small\"\r\n                        onChange={handleChange('clientId')}\r\n                        id=\"standard-clientId\"\r\n                        label=\"ClientId\"\r\n                        placeholder=\"ClientId\"\r\n                        select\r\n                        fullWidth\r\n                        error={form.roleIdErrorMessage ? true : false}\r\n                        value={form.clientId}\r\n                      >\r\n                        {chooseClientList.map((option, i) => (\r\n                          <MenuItem  value={option.value} key={i+21}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    </Grid>\r\n                    <Grid >\r\n                      {form.resourcelist[0]\r\n                        ? <FormControl component=\"fieldset\" style={{ marginTop: 10 }} >\r\n                          <FormLabel component=\"legend\">Resources</FormLabel>\r\n                          <FormGroup>\r\n                            {form.resourcelist.map((item, i) => (\r\n                              <FormControlLabel\r\n                                control={\r\n                                  <Checkbox\r\n                                    onChange={handleResource}\r\n                                    id={item.roleId}\r\n                                    name={item.roleId}\r\n                                  />\r\n                                }\r\n                                label={item.roleId}\r\n                                key={i}\r\n                              />\r\n                            ))}\r\n                          </FormGroup>\r\n                        </FormControl>\r\n                        : null\r\n                      }\r\n                    </Grid>\r\n                  </CardContent>\r\n\r\n                  <CardActions>\r\n                    <Button size=\"small\" color=\"primary\" onClick={() => setShowAddUserClient(false)} >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"secondary\" onClick={handleAddClientRole} >\r\n                      Add\r\n                    </Button>\r\n                  </CardActions>\r\n\r\n                </Card>\r\n            }\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default AddUserClient\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Grid, Paper, Typography, Button, Divider, FormHelperText } from '@material-ui/core';\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus,\r\n  setServiceMethod, setServiceParams, setServiceCustomHeaders, setServiceRole,\r\n} from '../../../actions/ServiceActions'\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\nimport CreateUserForm from './CreateUserForm'\r\nimport AddUserClient from './AddUserClient'\r\n\r\nconst CreateUser = ({ ...props }) => {\r\n\r\n  const { _setOpenScreen, _setCompleteRequest, userInfo, roleAuth, clientList, } = props\r\n  // const [serviceRole, setServiceRole] = useState('')\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\r\n  const [showAddUserClient, setShowAddUserClient] = useState(false)\r\n  const [formFocus, setFormFocus] = useState({\r\n    name: false,\r\n    phone: false,\r\n    email: false,\r\n    password: false,\r\n    confirmPassword: false,\r\n\r\n  })\r\n  const [form, setForm] = useState({\r\n    resource: [],\r\n    assignedUserRole: [],\r\n    resourcelist: [],\r\n    userType: '',\r\n    profile: '',\r\n    submitNotError: true\r\n  })\r\n\r\n  useEffect(() => {\r\n    _setOpenScreen(\"Create User\")\r\n    // let aud = ''\r\n    // if (userInfo.aud) aud = userInfo.aud\r\n    // else if (localStorage.getItem('aud')) aud = localStorage.getItem('aud')\r\n    // if (aud === 'authentication-backoffice') aud = ''\r\n\r\n    // let role = ''\r\n    // if (userInfo.role && userInfo.role.includes(roleAuth.endUser)) role = roleAuth.endUser\r\n    // if (userInfo.role && userInfo.role.includes(roleAuth.admin)) role = roleAuth.admin\r\n    // if (userInfo.role && userInfo.role.includes(roleAuth.root)) role = roleAuth.root\r\n    // console.log(\"GOMBAL...\")\r\n    let name = userInfo.name\r\n    let email = userInfo.email\r\n    let phone = userInfo.phone\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let requestAllClient = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"SELECT_ALL_CLIENT\",\r\n      // params: '/clients' + (aud ? '/' + aud : ''),\r\n      customHeaders\r\n    }\r\n    // setServiceRole(role)\r\n    if (clientList.length < 1 && userInfo.roleUsed) _setCompleteRequest(requestAllClient)\r\n    // if (clientList[0]) clientList.map(item => item.clientRoles = item.roleDetails)\r\n  }, [_setOpenScreen, _setCompleteRequest, clientList, userInfo.email, userInfo.name, userInfo.phone, userInfo.roleUsed])\r\n\r\n  // useEffect(() => {\r\n  //   if (clientList[0]) clientList.map(item => item.clientRoles = item.roleDetails)\r\n  // }, [clientList])\r\n\r\n  const handleChange = prop => e => {\r\n    e.preventDefault()\r\n    let valid = FormValidation(prop, e.target.value)\r\n\r\n    if (prop === 'confirmPassword') {\r\n      if (form.password !== e.target.value) {\r\n        setForm({\r\n          ...form,\r\n          [prop]: e.target.value,\r\n          [prop + 'ErrorMessage']: 'password confirmation not match',\r\n          submitNotError: true,\r\n        });\r\n      }\r\n      else {\r\n        setForm({\r\n          ...form,\r\n          [prop]: e.target.value,\r\n          [prop + 'ErrorMessage']: '',\r\n          submitNotError: true,\r\n        });\r\n      }\r\n    }\r\n    else if (prop === 'clientId') {\r\n      let newResourcelist = []\r\n      clientList.forEach(item => {\r\n        if (item.clientId === e.target.value) {\r\n          return newResourcelist = Array.isArray(item.clientRoles)\r\n            ? item.clientRoles\r\n            : item.clientRoles\r\n              ? item.clientRoles.split(', ').map(item => ({ roleId: item }))\r\n              : [{ roleId: 'client jadul jgn dipake' }]\r\n        }\r\n      })\r\n      setForm({\r\n        ...form,\r\n        resourcelist: newResourcelist,\r\n        [prop]: e.target.value,\r\n        [prop + 'ErrorMessage']: valid.errorMessage,\r\n        submitNotError: true,\r\n      })\r\n    }\r\n    else if (prop === 'userType') {\r\n      let val = e.target.value\r\n      let role = ''\r\n      if (val === \"end-user\") role = roleAuth.endUser\r\n      if (val === \"admin\") role = roleAuth.admin\r\n      if (val === \"root\") role = roleAuth.root\r\n      setForm({\r\n        ...form,\r\n        [prop]: e.target.value,\r\n        [prop + 'ErrorMessage']: valid.errorMessage,\r\n        resource: [...form.resource, role],\r\n        submitNotError: true,\r\n      })\r\n\r\n    }\r\n    else {\r\n      setForm({\r\n        ...form,\r\n        [prop]: e.target.value,\r\n        [prop + 'ErrorMessage']: valid.errorMessage,\r\n        submitNotError: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    setForm({ ...form, submitNotError: true })\r\n    const { name, phone, email, password, confirmPassword,\r\n      userType, assignedUserRole, submitNotError } = form\r\n\r\n    let request = {\r\n      assignedUserRole, confirmPassword, email, emailVerified: false, name, password,\r\n      phone: phone[0] === '0' ? '+62' + phone.slice(1) : phone, phoneVerified: false, userType\r\n    }\r\n    let header_name = userInfo.name\r\n    let header_email = userInfo.email\r\n    let header_phone = userInfo.phone\r\n    let customHeaders = { name: header_name, email: header_email }\r\n    if (header_phone) customHeaders.phone = header_phone\r\n\r\n    if (assignedUserRole && name && phone && email && password && confirmPassword && userType && submitNotError) {\r\n      let submitRequest = {\r\n        request,\r\n        method: \"POST\",\r\n        serviceCode: \"CREATE_BO_USER\",\r\n        customHeaders\r\n        // customHeaders: {\r\n        //   email: userInfo.email,\r\n        //   phone: userInfo.phone,\r\n        //   name: userInfo.name ? userInfo.name : \"\",\r\n        //   serviceRole,\r\n        // },\r\n      }\r\n      // console.log(submitRequest)\r\n      _setCompleteRequest(submitRequest)\r\n    }\r\n    else {\r\n      setForm({ ...form, submitNotError: false })\r\n    }\r\n  }\r\n\r\n  const handleAddClientRole = e => {\r\n    e.preventDefault()\r\n    setForm({\r\n      ...form,\r\n      roleId: '',\r\n      roleDescription: '',\r\n      assignedUserRole: [...form.assignedUserRole, { clientId: form.clientId, resourcesAllowedList: form.resource }]\r\n    })\r\n    setShowAddUserClient(false)\r\n  }\r\n\r\n  const handleCancel = e => {\r\n    e.preventDefault()\r\n    setFormFocus({\r\n      name: false,\r\n      phone: false,\r\n      email: false,\r\n      confirmPassword: false,\r\n      password: false,\r\n    })\r\n    setForm({\r\n      resource: [],\r\n      name: '',\r\n      phone: '',\r\n      email: '',\r\n      confirmPassword: '',\r\n      password: '',\r\n      assignedUserRole: [],\r\n      resourcelist: [],\r\n      clientRoles: [],\r\n      userType: '',\r\n      clientGroupId: \"7ff9bf27-23bd-4253-a015-b2ffbe067f04\",\r\n      submitNotError: true,\r\n    })\r\n  }\r\n\r\n  let chooseClientList = clientList.map(item => {\r\n    return {\r\n      value: item.clientId,\r\n      label: item.clientName\r\n    }\r\n  })\r\n\r\n  const handleResource = e => {\r\n    let newResource = form.resource\r\n    if (e.target.name && e.target.checked) {\r\n      newResource.push(e.target.name)\r\n      setForm({\r\n        ...form,\r\n        resource: newResource\r\n      })\r\n    }\r\n    else if (e.target.name && !e.target.checked) {\r\n      let filteredResource = []\r\n      filteredResource = newResource.filter(item => item !== e.target.name)\r\n      setForm({\r\n        ...form,\r\n        resource: filteredResource\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid item xs={12} md={9}>\r\n        <Paper>\r\n          <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n            <Typography variant='h6' color='primary' style={{ marginTop: 20 }} >Create User</Typography>\r\n          </Grid>\r\n\r\n          <Grid container direction=\"row\"  >\r\n            <CreateUserForm\r\n              handleChange={handleChange}\r\n              form={form}\r\n              setFormFocus={setFormFocus}\r\n              formFocus={formFocus}\r\n              setShowPassword={setShowPassword}\r\n              showPassword={showPassword}\r\n              setShowConfirmPassword={setShowConfirmPassword}\r\n              showConfirmPassword={showConfirmPassword}\r\n              // serviceRole={serviceRole}\r\n              roleAuth={roleAuth}\r\n            />\r\n\r\n            <AddUserClient\r\n              form={form}\r\n              showAddUserClient={showAddUserClient}\r\n              setShowAddUserClient={setShowAddUserClient}\r\n              handleChange={handleChange}\r\n              chooseClientList={chooseClientList}\r\n              handleResource={handleResource}\r\n              handleAddClientRole={handleAddClientRole}\r\n            />\r\n\r\n          </Grid>\r\n\r\n          <Divider style={{ margin: 20 }} />\r\n\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ margin: 10 }} >\r\n            {\r\n              form.submitNotError\r\n                ? null\r\n                : <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n                  <FormHelperText error >Form not complete</FormHelperText>\r\n                </Grid>\r\n            }\r\n\r\n            <Grid item>\r\n              <Button onClick={handleCancel} variant=\"outlined\" color=\"primary\">Reset</Button>\r\n            </Grid>\r\n            <Grid style={{ margin: 10 }} item>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">Create</Button>\r\n            </Grid>\r\n          </Grid> <br />\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    userList: store.userList.list,\r\n    userDetail: store.userList.detail,\r\n    userFiltered: store.userList.filteredList,\r\n    userInfo: store.userInfo.info,\r\n    clientList: store.clientList.list,\r\n    roleAuth: store.system.roleAuth,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)),\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.params))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateUser)","\r\nimport React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nexport default function MaterialTableCRUD({ ...props }) {\r\n  // console.log(\"TABLE PROPS: \", props)\r\n  const { columns, data, updatedata, deletedata, rowClicked, confirmdeletetext, title, action, update, roleUsed } = props\r\n\r\n  // const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = useState({\r\n    columns: [],\r\n    data: [],\r\n    rowData: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      columns: columns,\r\n      data: data\r\n    }))\r\n  }, [columns, data])\r\n\r\n  const handleUpdate = (oldData) => updatedata(oldData)\r\n\r\n  const handleDelete = async oldData => await deletedata(oldData)\r\n\r\n  // const handleClickOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  // const handleClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n\r\n  const handleRowClick = rowData => {\r\n    setState({ ...state, rowData })\r\n    // console.log(rowData)\r\n    rowClicked(rowData)\r\n  }\r\n\r\n  return (\r\n    <Grid container item xs={12} >\r\n      <MaterialTable\r\n        localization={{\r\n          body: {\r\n            editRow: {\r\n              deleteText: confirmdeletetext\r\n            }\r\n          }\r\n        }}\r\n        style={{ width: '100%' }}\r\n        title={title}\r\n        columns={state.columns}\r\n        data={state.data}\r\n        actions={[update && roleUsed !== 'member' ? {\r\n          icon: 'check',\r\n          tooltip: 'Activate Clinic',\r\n          onClick: (event, rowData) => handleUpdate(rowData)\r\n        } : null\r\n        ]}\r\n        editable={action ? {\r\n          // onRowAdd: (newData) =>\r\n          //   new Promise((resolve) => {\r\n          //     setTimeout(() => {\r\n          //       resolve();\r\n          //       setState((prevState) => {\r\n          //         const data = [...prevState.data];\r\n          //         data.push(newData);\r\n          //         return { ...prevState, data };\r\n          //       });\r\n          //     }, 600);\r\n          //   }),\r\n          // onRowUpdate: (newData, oldData) =>\r\n          //   new Promise((resolve) => {\r\n          //     handleUpdate(newData, oldData).then(result => resolve())\r\n          //   }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve) => {\r\n              handleDelete(oldData).then(result => resolve())\r\n            }),\r\n        } : null}\r\n        onRowClick={(e, rowData) => handleRowClick(rowData)}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          search: roleUsed === 'member' ? false : true,\r\n          rowStyle: rowData => ({\r\n            color: (rowData.status === \"inactive\") ? 'grey' : (rowData.status === \"register\") ? '#00f100' : 'black',\r\n          })\r\n        }}\r\n      />\r\n    </Grid >\r\n  );\r\n}\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst UpdateUserDialog = ({ ...props }) => {\r\n  const [roleList, setRoleList] = useState([])\r\n  const [available, setAvailable] = useState([])\r\n  const [newRoleList, setNewRoleList] = useState([])\r\n\r\n  const handleClose = () => {\r\n    props.handleOpen(false)\r\n  };\r\n\r\n  let clientDetail = props.clientList && props.dataToUpdate ? props.clientList.filter(item => item.client === props.dataToUpdate.client) : []\r\n  let clientName = clientDetail[0] ? clientDetail[0].client : ''\r\n\r\n  const callbackUseEffect = () => {\r\n    setRoleList([])\r\n    setAvailable([])\r\n    setNewRoleList([])\r\n    let newList = []\r\n\r\n    let propRoleList = props.dataToUpdate ? props.dataToUpdate.resourcesAllowedList ? props.dataToUpdate.resourcesAllowedList : ['none'] : ['none']\r\n    if (!Array.isArray(propRoleList)) propRoleList = [propRoleList]\r\n    setRoleList(propRoleList)\r\n    if (props.dataToUpdate && !props.dataToUpdate.roleList) {\r\n      let insertAvailable = props.clientList.filter(item => item.client === props.dataToUpdate.client)\r\n      newList = insertAvailable[0].roleList\r\n    }\r\n    if (propRoleList[0] && clientDetail[0]) {\r\n      clientDetail[0].roleList.map(item => {\r\n        if (!propRoleList.includes(item)) newList.push(item)\r\n        return null\r\n      })\r\n    }\r\n    setAvailable(newList)\r\n  }\r\n  useEffect(callbackUseEffect, [props.dataToUpdate])\r\n \r\n  const handleAddItemRole = item => value => {\r\n    setNewRoleList([...newRoleList, item])\r\n    let newList = available.filter(items => items !== item)\r\n    setAvailable(newList)\r\n  }\r\n\r\n  const handleRemoveItemRole = item => value => {\r\n    setAvailable([...available, item])\r\n    let newList = newRoleList.filter(items => items !== item)\r\n    setNewRoleList(newList)\r\n  }\r\n\r\n  const handleRemoveRole = item => value => {\r\n    setAvailable([...available, item])\r\n    let newList = roleList.filter(items => items !== item)\r\n    setRoleList(newList)\r\n  }\r\n\r\n  const handleSave = () => {\r\n    let saveRoleList = roleList.concat(newRoleList)\r\n    let dataToSave = props.dataToUpdate\r\n    dataToSave.roleList = saveRoleList.join(', ')\r\n    dataToSave.resourcesAllowedList = saveRoleList\r\n    props.handleSave(dataToSave)\r\n    props.handleOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth={'sm'} open={props.open} onClose={handleClose} scroll={'paper'} >\r\n      <DialogTitle id=\"max-width-dialog-title\" onClose={handleClose}>Client: {clientName}</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems='flex-start' >\r\n          <Grid item md={6}>\r\n            <Typography variant='subtitle2'>Role Name</Typography>\r\n            <Typography variant='caption' color='textSecondary'>Click to remove role</Typography>\r\n            <List dense >\r\n              {\r\n                roleList.map((item, i) => {\r\n                  if (item === 'none') {\r\n                    return <ListItemText primary={'- none'} key={i} />\r\n                  }\r\n                  else {\r\n                    return <Grid container direction=\"row\" justify=\"flex-start\" alignItems='center' key={i} >\r\n                      <ListItemIcon>\r\n                        <Checkbox\r\n                          edge=\"start\"\r\n                          id={item}\r\n                          value={item}\r\n                          checked\r\n                          onChange={handleRemoveRole(item)}\r\n                        />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={item} />\r\n                    </Grid >\r\n                  }\r\n                })\r\n              }\r\n              {\r\n                newRoleList[0] ? newRoleList.map((item, i) => (\r\n                  <Grid container direction=\"row\" justify=\"flex-start\" alignItems='center' key={i} >\r\n                    <ListItemIcon>\r\n                      <Checkbox\r\n                        edge=\"start\"\r\n                        id={item}\r\n                        value={item}\r\n                        checked\r\n                        onChange={handleRemoveItemRole(item)}\r\n                      />\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary={item} />\r\n                  </Grid >\r\n                ))\r\n                  : roleList[0]\r\n                    ? <div></div>\r\n                    : <ListItemText primary={'- none'} />\r\n              }\r\n            </List>\r\n          </Grid>\r\n\r\n          <Grid item md={6}>\r\n            <Typography variant='subtitle2' >Available Role</Typography>\r\n            <Typography variant='caption' color='textSecondary'>Click to add role</Typography>\r\n            <List dense >\r\n              {available[0] ? available.map((item, i) => (\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems='center' key={i} >\r\n                  <ListItemIcon>\r\n                    <Checkbox\r\n                      edge=\"start\"\r\n                      onChange={handleAddItemRole(item)}\r\n                      checked={false}\r\n                    />\r\n                  </ListItemIcon>\r\n                  <ListItemText secondary={item} />\r\n                </Grid >\r\n              )) : <ListItemText primary={'- none'} />}\r\n            </List>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button onClick={handleClose} variant='outlined' color=\"primary\">\r\n              Cancel\r\n          </Button>\r\n          </Grid>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button onClick={handleSave} variant='contained' color=\"primary\">\r\n              Save\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default UpdateUserDialog\r\n","\r\nimport React, { useState } from 'react';\r\nimport { Grid, Typography, Button, } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\n// import AddUserClient from '../createuser/AddUserClient'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {\r\n  MenuItem,\r\n  \r\n} from '@material-ui/core';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import FormGroup from '@material-ui/core/FormGroup';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst AddClientDialog = ({ ...props }) => {\r\n  const { handleAddClient, handleOpen, clientData, open, clientList, } = props\r\n  // const [showAddUserClient, setShowAddUserClient] = useState(false)\r\n  const [form, setForm] = useState({\r\n    resource: ['member'],\r\n    assignedUserRole: [],\r\n    resourcelist: [],\r\n  })\r\n\r\n  const handleClose = () => {\r\n    handleOpen(false)\r\n    setForm({\r\n      resource: [],\r\n      assignedUserRole: [],\r\n      resourcelist: [],\r\n      clientRoles: [],\r\n    })\r\n  };\r\n\r\n  const handleChange = prop => e => {\r\n    e.preventDefault()\r\n    let valid = FormValidation(prop, e.target.value)\r\n    if (prop === 'clientId') {\r\n      let newResourcelist = []\r\n      clientList.map(item => {\r\n        if (item.clientId === e.target.value) {\r\n          return newResourcelist = Array.isArray(item.clientRoles)\r\n            ? item.clientRoles\r\n            : item.clientRoles\r\n              ? item.clientRoles.split(', ').map(item => ({ roleId: item }))\r\n              : [{ roleId: 'client jadul jgn dipake' }]\r\n        }\r\n        return null\r\n      })\r\n      setForm({\r\n        ...form,\r\n        resourcelist: newResourcelist,\r\n        [prop]: e.target.value,\r\n        [prop + 'ErrorMessage']: valid.errorMessage,\r\n        submitNotError: true,\r\n      })\r\n    }\r\n    else {\r\n      setForm({\r\n        ...form,\r\n        [prop]: e.target.value,\r\n        [prop + 'ErrorMessage']: valid.errorMessage,\r\n        submitNotError: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  // const handleAddClientRole = e => {\r\n  //   e.preventDefault()\r\n  //   setForm({\r\n  //     ...form,\r\n  //     roleId: '',\r\n  //     roleDescription: '',\r\n  //     assignedUserRole: [...form.assignedUserRole, { clientId: form.clientId, resourcesAllowedList: form.resource }]\r\n  //   })\r\n  //   setShowAddUserClient(false)\r\n  // }\r\n\r\n  const handleCancel = e => {\r\n    handleOpen(false)\r\n    e.preventDefault()\r\n    setForm({\r\n      resource: [],\r\n      assignedUserRole: [],\r\n      resourcelist: [],\r\n      clientRoles: [],\r\n    })\r\n  }\r\n\r\n  let clientDataToFilter = clientData ? clientData.userRole ? clientData.userRole.map(item => item.client) : [] : []\r\n\r\n  let chooseClientList = clientList\r\n    ? clientList.filter(({ clientId }) => (!clientDataToFilter.includes(clientId))).map(item => {\r\n      return {\r\n        value: item.clientId,\r\n        label: item.clientName\r\n      }\r\n    })\r\n    : [{ value: '', label: '' }]\r\n\r\n  // const handleResource = e => {\r\n  //   let newResource = form.resource\r\n  //   if (e.target.name && e.target.checked) {\r\n  //     newResource.push(e.target.name)\r\n  //     setForm({\r\n  //       ...form,\r\n  //       resource: newResource\r\n  //     })\r\n  //   }\r\n  //   else if (e.target.name && !e.target.checked) {\r\n  //     let filteredResource = []\r\n  //     filteredResource = newResource.filter(item => item !== e.target.name)\r\n  //     setForm({\r\n  //       ...form,\r\n  //       resource: filteredResource\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault()\r\n    let clientId = form.clientId\r\n    let resourcesAllowedList = form.resource\r\n    let request = { \"userRoleToUpdate\": [{ clientId, resourcesAllowedList }] }\r\n    let method = 'PATCH'\r\n    let serviceCode = 'UPDATE_USER_ROLE'\r\n    let urlParams = `/users/${clientData.userId}/roles`\r\n\r\n    let completeRequest = { request, method, serviceCode, urlParams }\r\n    handleAddClient(completeRequest)\r\n    handleOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth={'xs'} open={open} onClose={handleClose} scroll={'paper'} >\r\n      <DialogTitle id=\"max-width-dialog-title\" onClose={handleClose}>Add Client</DialogTitle>\r\n      <DialogContent dividers>\r\n        <center>\r\n          <Grid container >\r\n            <Grid item sm={12}>\r\n              <TextField\r\n                style={{width: 300}}\r\n                onChange={handleChange('clientId')}\r\n                id=\"standard-clientId\"\r\n                label=\"ClientId\"\r\n                placeholder=\"ClientId\"\r\n                select\r\n                // fullWidth\r\n                error={form.roleIdErrorMessage ? true : false}\r\n                // value={form.clientId}\r\n              >\r\n                {chooseClientList\r\n                  ? chooseClientList.map((option, i) => (\r\n                    <MenuItem value={option.value} key={i+66}>\r\n                      {option.value}\r\n                    </MenuItem>\r\n                  ))\r\n                  : <MenuItem >\r\n                    None\r\n                  </MenuItem>\r\n                }\r\n              </TextField>\r\n\r\n              {/* <AddUserClient\r\n                form={form}\r\n                showAddUserClient={showAddUserClient}\r\n                setShowAddUserClient={setShowAddUserClient}\r\n                handleChange={handleChange}\r\n                chooseClientList={chooseClientList}\r\n                handleResource={handleResource}\r\n                handleAddClientRole={handleAddClientRole}\r\n                fullmd\r\n              /> */}\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </center>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button variant='outlined' color=\"primary\" onClick={handleCancel}>\r\n              Cancel\r\n          </Button>\r\n          </Grid>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button variant='contained' color=\"primary\" onClick={handleSave}>\r\n              Add\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddClientDialog\r\n","import React, { useState, useEffect } from 'react'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar'\r\n\r\n\r\n\r\nconst BasicUserInfomation = ({ ...props }) => {\r\n    const [capture, setCapture] = useState({\r\n        data: \"\"\r\n    })\r\n    const [basicInfo, setBasicInfo] = useState([])\r\n    useEffect(() => {\r\n        let data = props.clientData\r\n        setBasicInfo([\r\n            {\r\n                title: 'Email',\r\n                field: data.email,\r\n                verified: data.emailVerified && data.email ? 'Verified' : 'Not Verified'\r\n            },\r\n            {\r\n                title: 'Phone',\r\n                field: data.phone,\r\n                verified: data.phoneVerified && data.phone ? 'Verified' : 'Not Verified'\r\n            },\r\n            {\r\n                title: 'Name',\r\n                field: data.basicInformation ? data.basicInformation.name : \"\"\r\n            },\r\n            {\r\n                title: 'Profile URL',\r\n                field: data.basicInformation ? data.basicInformation.profile : \"\"\r\n            },\r\n            {\r\n                title: 'Gender',\r\n                field: data.basicInformation ? data.basicInformation.gender : \"\"\r\n            },\r\n            {\r\n                title: 'Address',\r\n                field: data.basicInformation ? data.basicInformation.address : \"\"\r\n            }\r\n        ])\r\n        setCapture({\r\n            data: data.basicInformation ? data.basicInformation.picture : \"\"\r\n        })\r\n    }, [props.clientData])\r\n    const handleOpenEdit = () => {\r\n        props.handleOpenEdit(true)\r\n    }\r\n    return (\r\n        <Grid style={{ marginTop: 20 }} container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n            <Grid item xs={8} style={{ marginTop: 10, marginBottom: 10 }}>\r\n                <Paper style={{ paddingLeft: 20 }}>\r\n                    <Grid container>\r\n                        <Grid item xs={10}>\r\n                            <Typography variant='h6' style={{ paddingBottom: 20 }}>\r\n                                Basic Information\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid container item xs={2} justify='flex-end' style={{ paddingRight: 15 }}>\r\n                            <Tooltip title='Edit'>\r\n                                <EditIcon onClick={handleOpenEdit} />\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {\r\n                        basicInfo.map(item =>\r\n                            (\r\n                                <div>\r\n                                    <Grid container style={{ marginBottom: 8 }}>\r\n                                        <Grid item xs={2}>\r\n                                            <Typography style={{fontSize:13,fontWeight:'bold',fontStyle:'Times New Roman'}}>\r\n                                                {item.title}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={8}>\r\n                                            {item.title === 'Profile URL' ? <a href={item.field}  target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                {item.field}\r\n                                            </a> : <Typography style={{ fontSize: 14 }}>\r\n                                                    {item.field}\r\n                                                </Typography>}\r\n\r\n                                        </Grid>\r\n                                        <Grid>\r\n                                            <Typography style={{\r\n                                                color: item.verified === 'Verified' ? '#79d70f' : '#d32626',\r\n                                                fontSize: 14\r\n                                            }}>\r\n                                                {(item.title === 'phone' || item.title === 'email') && !item.field ? \"\" : item.verified}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Divider />\r\n                                </div>\r\n                            ))\r\n                    }\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={4} align='center' style={{ padding: 50 }}>\r\n                <Avatar style={{ width: 160, height: 160, borderWidth: '4px', borderColor: 'black', borderStyle: 'solid' }} src={capture.data} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default BasicUserInfomation","import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport { FormValidation } from '../../../utils/FormValidation'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Dialog, DialogActions, DialogContent } from '@material-ui/core'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\n\r\nconst styles = (theme) => ({\r\n    rootForm: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            // width: '25ch',\r\n        },\r\n    },\r\n    rootUpload: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    asterisk: {\r\n        color: 'red'\r\n    },\r\n    addButton: {\r\n        color: 'white'\r\n    },\r\n    inputUpload: {\r\n        display: 'none',\r\n    },\r\n});\r\n\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n    const { children, onClose, classes, ...other } = props\r\n\r\n\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n})\r\n\r\n\r\nconst UpdateUserBasicInfoDialog = ({ ...props }) => {\r\n    const { classes } = props\r\n    const [data, setData] = useState({\r\n        basicInformation: {}\r\n    })\r\n    const [capture, setCapture] = useState({\r\n        images: [],\r\n        data: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (props.clientData) {\r\n            setData({\r\n                // ...data,\r\n                ...props.clientData,\r\n                emailVerified: props.clientData.emailVerified ? \"Verified\" : \"Not Verified\",\r\n                phoneVerified: props.clientData.phoneVerified ? 'Verified' : \"Not Verified\"\r\n            })\r\n        }\r\n    }, [props.clientData])\r\n\r\n    const handleClose = () => {\r\n        setCapture({\r\n            ...capture,\r\n            images: []\r\n        })\r\n        setData({\r\n            ...data,\r\n            basicInformation: {}\r\n        })\r\n        props.handleClose(false)\r\n    }\r\n\r\n    const handleChange = id => (event) => {\r\n        const value = event.target.value\r\n        let valid = FormValidation(id === 'profile' ? 'urlDestination' : id, event.target.value)\r\n        // console.log('ID', id)\r\n        // console.log('value',value)\r\n        if (id === 'address' || id === 'gender' || id === 'profile' || id === 'name') {\r\n            setData({\r\n                ...data,\r\n                basicInformation: {\r\n                    ...data.basicInformation,\r\n                    [id]: value,\r\n                    [id + 'Edit']: value,\r\n                    // [id + 'ErrorMessage']: valid.errorMessage,\r\n                },\r\n                [id]: value,\r\n                [id + 'Edit']: value,\r\n                [id === 'profile' ? 'urlDestinationErrorMessage' : id + 'ErrorMessage']: valid.errorMessage,\r\n            })\r\n        }\r\n        else {\r\n            setData({\r\n                ...data,\r\n                basicInformation: {\r\n                    ...data.basicInformation,\r\n                    [id]: value,\r\n                    [id + 'Edit']: value,\r\n                },\r\n                [id]: value,\r\n                [id + 'Edit']: value,\r\n                [id + 'ErrorMessage']: valid.errorMessage,\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleCapture = ({ target }) => {\r\n        const fileReader = new FileReader();\r\n        // console.log('targets',target.files)\r\n        fileReader.readAsDataURL(target.files[0]);\r\n        fileReader.onload = (e) => {\r\n            // console.log('target',e.target)\r\n            setCapture({\r\n                ...capture,\r\n                data: e.target.result,\r\n                images: target.files\r\n            })\r\n        };\r\n    }\r\n    const handleEditRequest = () => {\r\n        props.handleClose(false)\r\n        props.completeRequest(data, capture)\r\n    }\r\n    \r\n    return (\r\n        <Dialog fullWidth maxWidth={'sm'} open={props.open} onClose={handleClose} scroll='paper'>\r\n            <DialogTitle id=\"max-width-dialog-title\"\r\n                onClose={handleClose}>\r\n                {props.title}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <form className={classes.rootForm} noValidate autoComplete=\"off\">\r\n                    {/* <TextField\r\n                        fullWidth\r\n                        label='Photo'\r\n                        placeholder='Update Your Photo Here'\r\n                        id='photo'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                    /> */}\r\n                    <div className={classes.rootUpload}>\r\n                        <Grid container>\r\n                            <Grid item sm={8}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    value={capture.images[0] ? capture.images[0].name : \"\"}\r\n                                    variant='outlined'\r\n                                    disabled={true}\r\n                                    label='Photo'\r\n                                    id='photo'\r\n                                    InputLabelProps={{\r\n                                        shrink: true\r\n                                    }} />\r\n                            </Grid>\r\n                            <Grid item sm={4} align='center'>\r\n                                <input\r\n                                    accept=\"image/*\"\r\n                                    className={classes.inputUpload}\r\n                                    id=\"contained-button-file\"\r\n                                    onChange={handleCapture}\r\n                                    multiple\r\n                                    type=\"file\"\r\n                                />\r\n                                <label htmlFor=\"contained-button-file\">\r\n                                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                        Upload\r\n                                    </Button>\r\n                                </label>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </div>\r\n                    <TextField\r\n                        fullWidth\r\n                        label='Email'\r\n                        // placeholder='Update Your Photo Here'\r\n                        value={data.email}\r\n                        onChange={handleChange('email')}\r\n                        id='email'\r\n                        error={data.emailErrorMessage ? true : false}\r\n                        helperText={data.emailErrorMessage ? data.emailErrorMessage : \"\"}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        select\r\n                        disabled={props.userInfo ? props.userInfo.roleUsed === 'root' ? false : true : true}\r\n                        label='Email Status'\r\n                        value={data.emailVerified}\r\n                        onChange={handleChange('emailVerified')}\r\n                        // onChange={handleChange}\r\n                        // placeholder='Update Your Photo Here'\r\n                        id='emailStatus'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                    >\r\n                        <MenuItem value='Verified'>\r\n                            Verified\r\n                        </MenuItem>\r\n                        <MenuItem value='Not Verified'>\r\n                            Not Verified\r\n                        </MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        fullWidth\r\n                        label='Phone'\r\n                        id='phone'\r\n                        onChange={handleChange('phone')}\r\n                        value={data.phone}\r\n                        error={data.phoneErrorMessage ? true : false}\r\n                        helperText={data.phoneErrorMessage ? data.phoneErrorMessage : \"\"}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        select\r\n                        disabled={props.userInfo ? props.userInfo.roleUsed === 'root' ? false : true : true}\r\n                        label='Phone Status'\r\n                        value={data.phoneVerified}\r\n                        onChange={handleChange('phoneVerified')}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                    >\r\n                        <MenuItem value='Verified'>\r\n                            Verified\r\n                        </MenuItem>\r\n                        <MenuItem value='Not Verified'>\r\n                            Not Verified\r\n                        </MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        fullWidth\r\n                        label='Name'\r\n                        id='name'\r\n                        onChange={handleChange('name')}\r\n                        value={data.basicInformation ? data.basicInformation.name : \"\"}\r\n                        // error={data.nameErrorMessage?true:false}\r\n                        // helperText={data.nameErrorMessage?data.nameErrorMessage:\"\"}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        label='Profile URL'\r\n                        id='profile'\r\n                        onChange={handleChange('profile')}\r\n                        value={data.basicInformation ? data.basicInformation.profile : \"\"}\r\n                        error={data.urlDestinationErrorMessage ? true : false}\r\n                        helperText={data.urlDestinationErrorMessage ? data.urlDestinationErrorMessage : \"\"}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        select\r\n                        label='Gender'\r\n                        onChange={handleChange('gender')}\r\n                        id='gender'\r\n                        value={data.basicInformation ? data.basicInformation.gender : \"\"}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                    >\r\n                        <MenuItem key={'male'} value={'male'}>\r\n                            Male\r\n                        </MenuItem>\r\n                        <MenuItem key={'female'} value={'female'}>\r\n                            Female\r\n                        </MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        fullWidth\r\n                        label='Address'\r\n                        id='address'\r\n                        onChange={handleChange('address')}\r\n                        value={data.basicInformation ? data.basicInformation.address : \"\"}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n                    <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                        <Button color='primary' variant='contained' onClick={handleEditRequest}\r\n                            className={classes.addButton}>\r\n                            Edit\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                        <Button onClick={handleClose} color='secondary' variant='contained' className={classes.addButton}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(UpdateUserBasicInfoDialog)","\r\nimport React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { connect } from 'react-redux'\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport BackIcon from '@material-ui/icons/ArrowBack';\r\nimport Button from '@material-ui/core/Button';\r\nimport UpdateUserDialog from './UpdateUserDialog'\r\nimport AddClientDialog from './AddClientDialog'\r\nimport BasicUserInfomation from './BasicUserInformation';\r\nimport UpdateUserBasicInfoDialog from './UpdateUserBasicInfoDialog';\r\nimport { sendImageToService } from '../../../services/ServiceClient'\r\n// import { ca } from 'date-fns/locale';\r\nimport Config from '../../../config'\r\n\r\n\r\nconst FormDialog = ({ ...props }) => {\r\n\r\n  const { userList ,userInfo} = props\r\n  const [saveDisabled, setSaveDisabled] = useState(true)\r\n  const [data, setData] = useState([])\r\n  const [clientData, setClientData] = useState({})\r\n  const [state, setState] = useState({ clientList: [], dataToUpdate: null, open: false, addClientOpen: false, openEditBasicInfo: false })\r\n  const [saveRequest, setSaveRequest] = useState(null)\r\n  const [updateUser, setUpdateUser] = useState(false)\r\n\r\n  // console.log('userList', userList)\r\n\r\n  useEffect(() => {\r\n    if (updateUser) {\r\n      // console.log('update user is click')\r\n      let userIsId = userList.filter(item => item.userId === clientData.userId)\r\n      setClientData(userIsId[0])\r\n    }\r\n  }, [clientData, updateUser, userList])\r\n\r\n  const callbackUseEffect = () =>{\r\n    let oldData = props.data ? props.data.userRole : []\r\n    let data = []\r\n    let newList = []\r\n    if (oldData.length !== 0) {\r\n      oldData.forEach(item => {\r\n        let roleList = item.resourcesAllowedList\r\n          ? Array.isArray(item.resourcesAllowedList)\r\n            ? item.resourcesAllowedList.join(', ')\r\n            : item.resourcesAllowedList\r\n          : '-'\r\n        item.roleList = roleList\r\n        data.push(item)\r\n      })\r\n      setData(data)\r\n      setClientData(props.data)\r\n    }\r\n\r\n    props.clientList && props.clientList.forEach(item => {\r\n      let obj = {}\r\n      let newRoleList = Array.isArray(item.clientRoles)\r\n        ? item.clientRoles.map(child => child.roleId)\r\n        : item.clientRoles ? item.clientRoles\r\n          : ['client jadul jgn dipake']\r\n      obj.client = item.clientId\r\n      obj.roleList = newRoleList\r\n      newList.push(obj)\r\n    })\r\n    setState({\r\n      ...state,\r\n      clientList: newList,\r\n    })\r\n  }\r\n\r\n  useEffect(callbackUseEffect, [])\r\n\r\n  useEffect(() => {\r\n    if (props.updateUser && props.updateUser.length === 1) {\r\n      let oldData = props.updateUser[0].userRole\r\n      let data = []\r\n\r\n      oldData.forEach(item => {\r\n        let roleList = item.resourcesAllowedList\r\n          ? Array.isArray(item.resourcesAllowedList)\r\n            ? item.resourcesAllowedList.join(', ')\r\n            : item.resourcesAllowedList\r\n          : '-'\r\n        item.roleList = roleList\r\n        data.push(item)\r\n      })\r\n      setData(data)\r\n      setClientData(props.updateUser[0])\r\n\r\n\r\n      ////\r\n      // setData(props.updateUser[0].userRole)\r\n      // setClientData(props.updateUser[0])\r\n    }\r\n  }, [props.updateUser])\r\n\r\n  const handleClose = () => {\r\n    setData([])\r\n    setClientData({})\r\n    props._setUserFilteredList([])\r\n    props.handleClose()\r\n  };\r\n\r\n  const handleUpdate = dataToUpdate => {\r\n    setState({\r\n      ...state,\r\n      dataToUpdate,\r\n      open: true,\r\n    })\r\n  }\r\n\r\n  const handleDeleteClient = oldData => new Promise((resolve, reject) => {\r\n    // console.log(\"Data to Delete: \", oldData)\r\n    // console.log(\"Data to Delete: \", data)\r\n    resolve()\r\n  })\r\n\r\n  const handleOpenEditCLient = val => {\r\n    setState({\r\n      ...state,\r\n      open: val\r\n    })\r\n  }\r\n\r\n  const handleSaveRole = val => {\r\n    setSaveDisabled(false)\r\n    let userRoleToUpdate = []\r\n    data.forEach(item => {\r\n      let dataToPush = {\r\n        clientId: item.client,\r\n        resourcesAllowedList: item.resourcesAllowedList\r\n      }\r\n      userRoleToUpdate.push(dataToPush)\r\n    })\r\n\r\n    let request = { userRoleToUpdate, }\r\n    let method = 'PATCH'\r\n    let serviceCode = 'UPDATE_USER_ROLE'\r\n    let urlParams = `/users/${clientData.userId}/roles`\r\n\r\n    let completeRequest = { request, method, serviceCode, urlParams }\r\n    setSaveRequest(completeRequest)\r\n  }\r\n\r\n  const sendUpdateRoleRequest = () => {\r\n    props.sendUpdateRequest(saveRequest)\r\n    setSaveDisabled(true)\r\n    // props.handleClose()\r\n  }\r\n\r\n  const handleAddClient = (addClientRequest) => {\r\n    props.sendUpdateRequest(addClientRequest)\r\n    // props.handleClose()\r\n  }\r\n\r\n\r\n  const handleOpenAddClient = val => {\r\n    setState({\r\n      ...state,\r\n      addClientOpen: val\r\n    })\r\n  }\r\n\r\n  const handleOpenEditBasic = val => {\r\n    setState({\r\n      ...state,\r\n      openEditBasicInfo: val\r\n    })\r\n  }\r\n  const backToTable = () => {\r\n    props.handleClose(false)\r\n  }\r\n  const handleEditBasicRequest = (state, capture) => {\r\n    let id = state.userId\r\n    let emailVerified = state.basicInformation.emailVerifiedEdit ?\r\n      state.basicInformation.emailVerifiedEdit === 'Verified' ? true : false : null\r\n    let phoneVerified = state.basicInformation.phoneVerifiedEdit ?\r\n      state.basicInformation.phoneVerifiedEdit === 'Verified' ? true : false : null\r\n    let request = {\r\n      attributeToUpdate: {\r\n        email: state.emailEdit,\r\n        phone: state.phoneEdit,\r\n        gender: state.basicInformation.genderEdit,\r\n        address: state.basicInformation.addressEdit,\r\n        profile: state.basicInformation.profileEdit,\r\n        name: state.basicInformation.nameEdit,\r\n        picture: capture.data,\r\n        emailVerified: emailVerified,\r\n        phoneVerified: phoneVerified\r\n      },\r\n      id: state.userId\r\n    }\r\n    Object.keys(request.attributeToUpdate).forEach(item => {\r\n      if (request.attributeToUpdate[item] === null || request.attributeToUpdate[item] === undefined || request.attributeToUpdate[item] === '') {\r\n        delete request.attributeToUpdate[item]\r\n      }\r\n    })\r\n    // console.log('useerId',id)\r\n    let requestAllUser = {\r\n      request,\r\n      method: \"PATCH\",\r\n      serviceCode: \"UPDATE_BASIC_USER\",\r\n      urlParams: `/users/${id}`\r\n    }\r\n    \r\n    if (capture.data) {\r\n      const promise1 = () => new Promise((resolve, reject) => {\r\n\r\n        resolve('next-promise')\r\n      })\r\n      sendImageToService(capture.images[0], capture.images[0].type)\r\n        .then(result => {\r\n          if (result.type === 'error') {\r\n            return Promise.reject()\r\n          }\r\n          else {\r\n            let body = result\r\n            let uuid = body.ID\r\n            requestAllUser.request.attributeToUpdate.picture = `${Config.gatewayRepoFile}/static-file-manager/retrieve?file=${uuid}`\r\n            props.sendUpdateRequest(requestAllUser)\r\n            return promise1()\r\n          }\r\n        }).then(res => {\r\n          setUpdateUser(true)\r\n        })\r\n        .catch(e => {\r\n          console.log(e)\r\n        })\r\n    }\r\n    else {\r\n      const promise = () => new Promise((resolve, reject) => {\r\n        props.sendUpdateRequest(requestAllUser)\r\n        resolve('next-promise')\r\n      })\r\n      promise()\r\n        .then(res => {\r\n          setUpdateUser(true)\r\n        })\r\n    }\r\n    handleOpenEditBasic(false)\r\n  }\r\n  return (\r\n    <Card style={{ display: 'flex', flexWrap: 'wrap', }}>\r\n\r\n      <UpdateUserDialog\r\n        handleSave={handleSaveRole}\r\n        dataToUpdate={state.dataToUpdate}\r\n        data={clientData}\r\n        clientList={state.clientList}\r\n        open={state.open}\r\n        handleOpen={handleOpenEditCLient}\r\n\r\n      />\r\n\r\n      <AddClientDialog\r\n        open={state.addClientOpen}\r\n        handleOpen={handleOpenAddClient}\r\n        clientList={props.clientList}\r\n        clientData={clientData}\r\n        handleAddClient={handleAddClient}\r\n      />\r\n      <UpdateUserBasicInfoDialog\r\n        open={state.openEditBasicInfo}\r\n        handleClose={handleOpenEditBasic}\r\n        clientData={clientData}\r\n        userInfo ={userInfo}\r\n        title={'Edit Basic Information'}\r\n        completeRequest={handleEditBasicRequest}\r\n        backToTable={backToTable}\r\n      />\r\n\r\n      <Grid style={{ margin: 35, marginTop: 15 }} container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n          <Button onClick={handleClose} color=\"secondary\" startIcon={<BackIcon />} size='large' variant='outlined' >\r\n            Back\r\n          </Button>\r\n        </Grid>\r\n        <BasicUserInfomation\r\n          clientData={clientData}\r\n          handleOpenEdit={handleOpenEditBasic}\r\n        // handleClose ={handleClose}\r\n        />\r\n        {/* <Grid style={{ marginTop: 15 }} container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={2} >\r\n          <Grid item xs={2}><Typography >Name</Typography></Grid>\r\n          <Grid item xs={10}><Typography >: {clientData ? clientData.name : \"\"}</Typography></Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={2} >\r\n          <Grid item xs={2}><Typography >Email</Typography></Grid>\r\n          <Grid item xs={10} > <Typography >: {clientData ? clientData.email : \"\"}</Typography></Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={2} >\r\n          <Grid item xs={2}><Typography >Phone</Typography></Grid>\r\n          <Grid item xs={10} > <Typography >: {clientData ? clientData.phone : \"\"}</Typography></Grid>\r\n        </Grid> */}\r\n        <Grid style={{ marginTop: 20 }} container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n          <Grid item xs={12} >\r\n            <MaterialTable\r\n              style={{ width: '100%' }}\r\n              title=\"User Role List\"\r\n              columns={[\r\n                { title: 'Client', field: 'client', width: 300 },\r\n                { title: 'Role', field: 'roleList' },\r\n              ]}\r\n              data={data}\r\n              editable={{\r\n                // onRowAdd: (newData) =>\r\n                //   new Promise((resolve) => {\r\n                //     setTimeout(() => {\r\n                //       resolve();\r\n                //       setState((prevState) => {\r\n                //         const data = [...prevState.data];\r\n                //         data.push(newData);\r\n                //         return { ...prevState, data };\r\n                //       });\r\n                //     }, 600);\r\n                //   }),\r\n                // onRowUpdate: (newData, oldData) =>\r\n                //   new Promise((resolve) => {\r\n                //     handleUpdate(newData, oldData).then(result => resolve())\r\n                //   }),\r\n                onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                    handleDeleteClient(oldData).then(result => resolve())\r\n                  }),\r\n              }}\r\n              actions={[\r\n                {\r\n                  icon: 'edit',\r\n                  tooltip: 'Update Role',\r\n                  onClick: (event, rowData) => handleUpdate(rowData)\r\n                },\r\n                // {\r\n                //   icon: 'delete',\r\n                //   tooltip: 'Delete Client',\r\n                //   onClick: (event, rowData) => handleDeleteClient(rowData)\r\n                // }\r\n              ]}\r\n              options={{\r\n                actionsColumnIndex: -1,\r\n                padding: 'dense'\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid style={{ marginTop: 20 }} container direction=\"row\" justify='space-evenly' alignItems=\"flex-start\" >\r\n          {\r\n            state.clientList.length > 1\r\n              ? <Button onClick={() => setState({ ...state, addClientOpen: true })} variant='contained' color=\"primary\"\r\n                startIcon={<AddIcon />}\r\n              >\r\n                Add Client to User\r\n              </Button>\r\n              : null\r\n          }\r\n\r\n          <Button onClick={sendUpdateRoleRequest} variant='contained' color=\"primary\" disabled={saveDisabled}\r\n            startIcon={<EditIcon />}\r\n          >\r\n            Save Role\r\n        </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  userList: store.userList.list,\r\n  userInfo: store.userInfo\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog)\r\n","\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst options = [\r\n  'Soft Delete',\r\n  'Force Delete',\r\n];\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n  const { userName, onClose, value: valueProp, open, handleChoose, header, content, ...other } = props;\r\n  const [value, setValue] = React.useState(valueProp);\r\n  const radioGroupRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setValue(valueProp);\r\n    }\r\n  }, [valueProp, open]);\r\n\r\n  const handleEntering = () => {\r\n    if (radioGroupRef.current != null) {\r\n      radioGroupRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    onClose();\r\n  };\r\n\r\n  const handleOk = () => {\r\n    handleChoose(value)\r\n    onClose(value);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      maxWidth=\"sm\"\r\n      onEntering={handleEntering}\r\n      aria-labelledby=\"confirmation-dialog-title\"\r\n      open={open}\r\n      {...other}\r\n    >\r\n      {\r\n        header\r\n          ? <DialogTitle id=\"confirmation-dialog-title\">{header}</DialogTitle>\r\n          : <DialogTitle id=\"confirmation-dialog-title\">Deleting: {userName}</DialogTitle>\r\n      }\r\n\r\n      <DialogContent dividers>\r\n        {\r\n          content\r\n            ? <Typography variant=\"subtitle2\">{content}</Typography>\r\n            : <RadioGroup\r\n              ref={radioGroupRef}\r\n              aria-label=\"ringtone\"\r\n              name=\"ringtone\"\r\n              value={value}\r\n              onChange={handleChange}\r\n            >\r\n              {options.map((option, i) => (\r\n                <FormControlLabel value={option}  control={<Radio />} label={option} key={i + 3} />\r\n              ))}\r\n            </RadioGroup>\r\n        }\r\n\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button autoFocus onClick={handleCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleOk} color=\"primary\">\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default ConfirmationDialogRaw","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Grid } from '@material-ui/core';\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole,\r\n} from '../../../actions/ServiceActions'\r\n\r\nimport UserRUDTable from './UserRUDTable'\r\nimport UserDetail from './UserDetail'\r\nimport ConfirmationDialogRaw from './ConfirmationDIalog'\r\nimport { setUserFilteredList } from '../../../actions/UserListActions';\r\n\r\nconst UserList = ({ ...props }) => {\r\n  const { _setOpenScreen, _setCompleteRequest, _setUserFilteredList, clientList,\r\n    userInfo, userList, updateUser } = props\r\n  const [open, setOpen] = useState(false);\r\n  const value = 'Soft Delete'\r\n  const [requestDeleteUser, setRequestDeleteUser] = useState({})\r\n  const [userName, setUserName] = useState('')\r\n\r\n  useEffect(() => {\r\n    // console.log(\"KOK DUA KALI: \", userList)\r\n    const { name, email, phone } = userInfo\r\n    // let name = userInfo.name\r\n    // let email = userInfo.email\r\n    // let phone = userInfo.phone\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    _setOpenScreen(\"User List\")\r\n    let requestAllUser = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"SELECT_ALL_USER\",\r\n      customHeaders\r\n    }\r\n    if (userList.length < 1) _setCompleteRequest(requestAllUser)\r\n  }, [_setOpenScreen, userList.length, _setCompleteRequest, userInfo])\r\n\r\n  const [values, setValues] = useState({\r\n    columns: [\r\n      { title: 'Name', field: 'name', },\r\n      { title: 'Email', field: 'email', },\r\n      { title: 'Phone', field: 'phone', },\r\n      { title: 'isVerified', field: 'isverified', lookup: { '01': 'False', '02': 'True' } },\r\n    ],\r\n    data: [],\r\n    dataToProcess: null,\r\n  });\r\n\r\n  const [states, setStates] = useState({\r\n    open: false,\r\n\r\n  })\r\n\r\n  useEffect(() => {\r\n    // let aud = ''\r\n    // if (userInfo.aud) aud = userInfo.aud\r\n    // else if (localStorage.getItem('aud')) aud = localStorage.getItem('aud')\r\n    // if (aud === 'authentication-backoffice') aud = ''\r\n\r\n    // let role = ''\r\n    // if (userInfo.role && userInfo.role.includes(roleAuth.endUser)) role = roleAuth.endUser\r\n    // if (userInfo.role && userInfo.role.includes(roleAuth.admin)) role = roleAuth.admin\r\n    // if (userInfo.role && userInfo.role.includes(roleAuth.root)) role = roleAuth.root\r\n    // console.log(\"DISINIKAH\")\r\n    const {name, email, phone} = userInfo\r\n    // let name = userInfo.name\r\n    // let email = userInfo.email\r\n    // let phone = userInfo.phone\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let requestAllClient = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"SELECT_ALL_CLIENT\",\r\n      // urlParams: '/clients' + (aud ? '/' + aud : ''),\r\n      customHeaders\r\n    }\r\n    if (clientList.length < 1 && userInfo.email) {\r\n      setTimeout(() => {\r\n        _setCompleteRequest(requestAllClient)\r\n      }, 100);\r\n    }\r\n    let newList = [...userList]\r\n    newList.forEach(item => {\r\n      item.name = item.basicInformation.name\r\n      item.isverified = (item.phoneVerified || item.emailVerified) ? '02' : '01'\r\n    })\r\n    setValues(oldVal => ({\r\n      ...oldVal,\r\n      data: newList\r\n    }))\r\n  }, [userList, userInfo, _setCompleteRequest, clientList.length])\r\n\r\n  useEffect(() => {\r\n    if (clientList[0]) {\r\n      clientList.forEach(item => {\r\n        item.originURIs = Array.isArray(item.originURIs) ? item.originURIs.join(', ') : item.originURIs\r\n        item.roleDetails = item.roleDetails ? item.roleDetails : Array.isArray(item.clientRoles) ? item.clientRoles : \"\"\r\n        item.clientRoles = item.roleDetails\r\n      })\r\n    }\r\n  }, [clientList])\r\n\r\n  useEffect(() => {\r\n    let newList = [...userList]\r\n    newList.forEach(item => {\r\n      item.name = item.basicInformation.name\r\n      item.isverified = (item.phoneVerified || item.emailVerified) ? '02' : '01'\r\n    })\r\n    setValues(oldVal => ({\r\n      ...oldVal,\r\n      data: newList\r\n    }))\r\n\r\n  }, [updateUser, userList])\r\n\r\n  const handleUpdate = (newData, oldData) => new Promise((resolve, reject) => {\r\n    if (oldData) {\r\n      setValues((prevState) => {\r\n        const data = [...prevState.data];\r\n        data[data.indexOf(oldData)] = newData;\r\n        return { ...prevState, data };\r\n      })\r\n      resolve()\r\n    }\r\n  })\r\n\r\n  const handleDelete = oldData => new Promise((resolve, reject) => {\r\n    let userId = oldData.userId\r\n    let request = {}\r\n    let method = 'DELETE'\r\n    let serviceCode = 'DELETE_USER'\r\n    let urlParams = `/users/${userId}`\r\n\r\n    let completeRequest = { request, method, serviceCode, urlParams }\r\n    setRequestDeleteUser(completeRequest)\r\n    setUserName(oldData.name)\r\n    setOpen(true)\r\n    resolve()\r\n  })\r\n\r\n  const handleChoose = (val) => {\r\n    if (val === 'Soft Delete') {\r\n      props._setCompleteRequest(requestDeleteUser)\r\n    }\r\n    else {\r\n      requestDeleteUser.request.isForceDelete = true\r\n      props._setCompleteRequest(requestDeleteUser)\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleRowClicked = rowData => {\r\n    setValues({ ...values, dataToProcess: rowData })\r\n    setStates({ ...states, open: true })\r\n  }\r\n\r\n  const sendUpdateRequest = completeRequest => {\r\n    _setCompleteRequest(completeRequest)\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      {states.open\r\n        ? <UserDetail\r\n          clientList={clientList}\r\n          open={states.open}\r\n          handleClose={() => setStates({ ...states, open: false })}\r\n          data={values.dataToProcess}\r\n          sendUpdateRequest={sendUpdateRequest}\r\n          updateUser={updateUser}\r\n          _setUserFilteredList={_setUserFilteredList}\r\n        />\r\n        : <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" >\r\n          <UserRUDTable\r\n            confirmdeletetext=\"Apakah anda yakin menghapus data ini?\"\r\n            title=\"Backoffice User List\"\r\n            columns={values.columns}\r\n            data={values.data}\r\n            updatedata={handleUpdate}\r\n            deletedata={handleDelete}\r\n            rowClicked={handleRowClicked}\r\n            action\r\n          />\r\n\r\n          < ConfirmationDialogRaw\r\n            id=\"ringtone-menu\"\r\n            keepMounted\r\n            open={open}\r\n            onClose={handleClose}\r\n            value={value}\r\n            handleChoose={handleChoose}\r\n            userName={userName}\r\n          />\r\n        </Grid>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  userList: store.userList.list,\r\n  userDetail: store.userList.detail,\r\n  userFiltered: store.userList.filteredList,\r\n  userInfo: store.userInfo.info,\r\n  clientList: store.clientList.list,\r\n  roleAuth: store.system.roleAuth,\r\n  updateUser: store.userList.filteredList\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  _setOpenScreen: val => dispatch(setOpenScreen(val)),\r\n  _setUserFilteredList: val => dispatch(setUserFilteredList(val)),\r\n  _setCompleteRequest: (val) => {\r\n    dispatch(setServiceRequest(val.request))\r\n    dispatch(setServiceMethod(val.method))\r\n    dispatch(setServiceCode(val.serviceCode))\r\n    dispatch(setServiceParams(val.urlParams))\r\n    dispatch(setServiceCustomHeaders(val.customHeaders))\r\n    dispatch(setServiceRole(val.serviceRole))\r\n    dispatch(setServiceStatus(\"active\"))\r\n  },\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList)\r\n","\r\nimport React, { useState, } from 'react';\r\nimport { Grid, Typography, Button, } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { FormHelperText } from '@material-ui/core';\r\nimport FormatText from '../../../i18n'\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst AddClientDialog = ({ ...props }) => {\r\n  const { handleAddUser, handleOpen, open, userInfo, paxList } = props\r\n  const [form, setForm] = useState({\r\n    // resource: [],\r\n    // assignedUserRole: [],\r\n    // resourcelist: [],\r\n    nameErrorMessage: false,\r\n    emailErrorMessage: false,\r\n    phoneErrorMessage: false,\r\n    notComplete: false\r\n  })\r\n\r\n  const handleClose = () => {\r\n    handleOpen(false)\r\n    setForm({\r\n      // resource: [],\r\n      // assignedUserRole: [],\r\n      // resourcelist: [],\r\n      clientRoles: [],\r\n      nameErrorMessage: false,\r\n      emailErrorMessage: false,\r\n      phoneErrorMessage: false,\r\n      notComplete: false\r\n    })\r\n  };\r\n\r\n  const handleChange = prop => e => {\r\n    e.preventDefault()\r\n    let val = e.target.value\r\n    let valid = FormValidation(prop, val)\r\n    // console.log(val)\r\n\r\n    if (val[0] === \"0\") console.log(\"+62\" + val.slice(1))\r\n\r\n    setForm({\r\n      ...form,\r\n      [prop]: val,\r\n      [prop + 'ErrorMessage']: valid.errorMessage,\r\n      notComplete: false\r\n    })\r\n  }\r\n\r\n  const handleCancel = e => {\r\n    handleOpen(false)\r\n    e.preventDefault()\r\n    setForm({\r\n      // resource: [],\r\n      // assignedUserRole: [],\r\n      // resourcelist: [],\r\n      clientRoles: [],\r\n    })\r\n  }\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault()\r\n    const { emailErrorMessage, nameErrorMessage, phoneErrorMessage } = form\r\n    if (!emailErrorMessage && !nameErrorMessage && !phoneErrorMessage) {\r\n      const id = paxList.clinicDetail.id ? paxList.clinicDetail.id : paxList.clinicUser.id ? paxList.clinicUser.id : 0\r\n      const { email, } = form\r\n      let customHeaders = { name: userInfo.name, email: userInfo.email, }\r\n      if (userInfo.phone) customHeaders.phone = userInfo.phone\r\n\r\n      let objReq = { email }\r\n      // if (phone) objReq.phone = phone\r\n\r\n      let addClinicUserRequest = {\r\n        request: [objReq],\r\n        method: \"POST\",\r\n        serviceCode: \"ADD_CLINIC_USER\",\r\n        urlParams: `/${id}/users`,\r\n        customHeaders,\r\n      }\r\n\r\n      let getClinicUserRequest = {\r\n        request: {},\r\n        method: \"GET\",\r\n        serviceCode: \"GET_CLINIC_USER\",\r\n        urlParams: `/${id}`,\r\n        customHeaders,\r\n      }\r\n      // console.log(\"HALAH: \", addClinicUserRequest, getClinicUserRequest)\r\n      handleAddUser(addClinicUserRequest, getClinicUserRequest)\r\n    }\r\n    else {\r\n      setForm({\r\n        ...form,\r\n        notComplete: true\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth={'xs'} open={open} onClose={handleClose} scroll={'paper'} >\r\n      <DialogTitle id=\"max-width-dialog-title\" onClose={handleClose}>{props.label}</DialogTitle>\r\n      <DialogContent dividers>\r\n        <center>\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems='center' >\r\n            <Grid item sm={12}>\r\n              {/* <TextField\r\n                size=\"small\"\r\n                onChange={handleChange('name')}\r\n                id=\"standard-name\"\r\n                label={FormatText('app_name')}\r\n                placeholder=\"Full Name\"\r\n                helperText={form.nameErrorMessage ? form.nameErrorMessage : \"\"}\r\n                error={form.nameErrorMessage ? true : false}\r\n                fullWidth\r\n                margin='dense'\r\n                value={form.name}\r\n              /> */}\r\n              <TextField\r\n                size=\"small\"\r\n                onChange={handleChange('email')}\r\n                id=\"standard-email\"\r\n                label={FormatText('app_email')}\r\n                placeholder=\"Email\"\r\n                helperText={form.emailErrorMessage ? form.emailErrorMessage : \"\"}\r\n                error={form.emailErrorMessage ? true : false}\r\n                fullWidth\r\n                margin='dense'\r\n                value={form.email}\r\n              />\r\n              {/* <TextField\r\n                size=\"small\"\r\n                onChange={handleChange('phone')}\r\n                id=\"standard-phone\"\r\n                label={FormatText('app_phone')}\r\n                placeholder=\"081234567890\"\r\n                helperText={form.phoneErrorMessage ? form.phoneErrorMessage : \"\"}\r\n                error={form.phoneErrorMessage ? true : false}\r\n                fullWidth\r\n                margin='dense'\r\n                value={form.phone}\r\n              /> */}\r\n\r\n            </Grid>\r\n          </Grid>\r\n          {form.notComplete\r\n            ? <Grid container direction=\"row\" justify=\"center\" alignItems='center' >\r\n              <FormHelperText error >{FormatText('err_submit')}</FormHelperText>\r\n            </Grid>\r\n            : null\r\n          }\r\n        </center>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6} sm={6} xs={6}>\r\n            <Button variant='outlined' color=\"primary\" onClick={handleCancel}>\r\n              {FormatText('app_cancel')}\r\n            </Button>\r\n          </Grid>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6} sm={6} xs={6}>\r\n            <Button variant='contained' color=\"primary\" onClick={handleSave}>\r\n              {FormatText('common_add')}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddClientDialog\r\n","\r\nimport React, { useState, useEffect, } from 'react';\r\nimport { Grid, Typography, Button, Avatar, } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// import { FormValidation } from '../../../utils/FormValidation';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import { FormHelperText } from '@material-ui/core';\r\nimport FormatText from '../../../i18n'\r\nimport { resizeImage } from \"../../../utils/utils\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst LogoPreviewDialog = ({ ...props }) => {\r\n  const { handleOpen, imgPreview, setImgPreview, open, setImageFile, handleSaveImage, _setSnackbar } = props\r\n  const [validation, setValidation] = useState({ error: false, errorMessage: \"\" })\r\n  const [ownPreview, setOwnPreview] = useState(null)\r\n  const [changeDisabled, setChangeDisabled] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (open && !ownPreview) setOwnPreview(imgPreview)\r\n  }, [open, ownPreview, imgPreview])\r\n\r\n  const handleClose = () => {\r\n    handleOpen(false)\r\n  };\r\n\r\n  const handleCancel = e => {\r\n    setOwnPreview(imgPreview)\r\n    handleOpen(false)\r\n    e.preventDefault()\r\n  }\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault()\r\n    setImgPreview(ownPreview)\r\n    setOwnPreview(null)\r\n    handleOpen(false)\r\n    handleSaveImage()\r\n  }\r\n\r\n  const fileSelected = async e => {\r\n    setValidation({ error: false, errorMessage: '', })\r\n\r\n    let errorSnackbar = { open: true, severity: \"warning\", }\r\n\r\n    let file = e.target.files[0]\r\n    if (file) {\r\n      if (!file.type.includes('image')) setValidation({ error: true, errorMessage: 'Must be image file', })\r\n      else if (file.size > 2000000) setValidation({ error: true, errorMessage: 'Image is bigger than 2 MB', })\r\n      else {\r\n        const data = await resizeImage(file);\r\n        if (data.message) {\r\n          errorSnackbar.message = data.message\r\n          _setSnackbar(errorSnackbar)\r\n        }\r\n        setOwnPreview(data.blobUrl)\r\n        setImageFile(data.file)\r\n        // setImageType(data.type)\r\n        setChangeDisabled(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog fullWidth open={open} onClose={handleClose} scroll={'paper'} >\r\n      <DialogTitle id=\"max-width-dialog-title\" onClose={handleClose}>{props.label}</DialogTitle>\r\n      <DialogContent dividers>\r\n        <center>\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems='center' >\r\n            <Grid item sm={12}>\r\n\r\n              <Avatar\r\n                src={ownPreview}\r\n                variant='rounded'\r\n                style={{ width: 150, height: 150 }}\r\n              />\r\n\r\n              <div>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  onChange={fileSelected}\r\n                  style={{ display: 'none' }}\r\n                  id=\"raised-button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                />\r\n                <div style={{ marginTop: 10 }} >\r\n                  <label htmlFor=\"raised-button-file\">\r\n                    <Typography color='error' variant='caption' >{validation.errorMessage}</Typography>\r\n                    <Button variant='outlined' component=\"span\" size='small' color='primary' >\r\n                      {FormatText('app_select_photo')}\r\n                    </Button>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </center>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button variant='outlined' color=\"primary\" onClick={handleCancel}>\r\n              {FormatText('app_cancel')}\r\n            </Button>\r\n          </Grid>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button disabled={changeDisabled} variant='contained' color=\"primary\" onClick={handleSave}>\r\n              {FormatText('common_change')}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default LogoPreviewDialog\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, TimePicker } from '@material-ui/pickers';\r\nimport { convertDateyyyymmdd, timeConverter } from '../../../utils/utils';\r\n\r\nconst styles = (theme) => ({\r\n  labelRoot: {\r\n    fontSize: 15,\r\n    fontFamily: 'Arial, Helvetica, sans-serif',\r\n    marginLeft: 20\r\n  },\r\n  inputRoot: {\r\n    fontSize: 15,\r\n    fontFamily: 'Arial, Helvetica, sans-serif',\r\n    height: 20,\r\n    width: 60,\r\n    marginLeft: 20\r\n  },\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst EditWithReplaceDialog = ({ ...props }) => {\r\n\r\n  const { existingList, availableList, dialogTitle, availTitle, existingTitle, datePicker, timePicker, dialogWidth, open, classes } = props\r\n\r\n  const [availableItemInState, setAvailableItemInState] = useState([])\r\n  const [existingListInState, setExistingListInState] = useState([])\r\n  const [newExistingListInState, setNewExistingListInState] = useState([])\r\n  const [operational, setOperational] = useState({\r\n    openMonday: new Date('2020-10-30T08:00:00'), closeMonday: new Date('2020-10-30T17:00:00'),\r\n    openTuesday: new Date('2020-10-30T08:00:00'), closeTuesday: new Date('2020-10-30T17:00:00'),\r\n    openWednesday: new Date('2020-10-30T08:00:00'), closeWednesday: new Date('2020-10-30T17:00:00'),\r\n    openThursday: new Date('2020-10-30T08:00:00'), closeThursday: new Date('2020-10-30T17:00:00'),\r\n    openFriday: new Date('2020-10-30T08:00:00'), closeFriday: new Date('2020-10-30T17:00:00'),\r\n    openSaturday: new Date('2020-10-30T08:00:00'), closeSaturday: new Date('2020-10-30T17:00:00'),\r\n    openSunday: new Date('2020-10-30T08:00:00'), closeSunday: new Date('2020-10-30T17:00:00')\r\n  })\r\n  const days = [\"Haha\", 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\r\n\r\n  const handleClose = () => {\r\n    setAvailableItemInState([])\r\n    setExistingListInState([])\r\n    setNewExistingListInState([])\r\n    props.handleOpen(false)\r\n  };\r\n\r\n  useEffect(() => {\r\n    let exisListToState = []\r\n    let availableToState = []\r\n    if (datePicker) {\r\n      existingList && existingList.forEach(item => {\r\n        exisListToState.push(item)\r\n      })\r\n    }\r\n    else if (timePicker) {\r\n      existingList && existingList.forEach(item => {\r\n        let clinicOpen = `${days[item.day]}, ${item.hour}`\r\n        exisListToState.push(clinicOpen)\r\n      })\r\n    }\r\n    else {\r\n      existingList && existingList.forEach(item => {\r\n        [...availableList].forEach(prod => {\r\n          if (prod.id === item) exisListToState.push(prod.name)\r\n        })\r\n      })\r\n    }\r\n\r\n    if (exisListToState) {\r\n      if (timePicker) {\r\n        let dayList = existingList.map(item => item.day)\r\n        setExistingListInState(exisListToState)\r\n        availableToState = [...availableList].map(item => item.day)\r\n        let filteredAvail = availableToState.filter(el => !dayList.includes(el));\r\n\r\n        setAvailableItemInState(filteredAvail)\r\n      }\r\n      else {\r\n        setExistingListInState(exisListToState)\r\n        availableToState = [...availableList].map(item => item.name)\r\n        let filteredAvail = availableToState.filter(el => !exisListToState.includes(el));\r\n        setAvailableItemInState(filteredAvail)\r\n\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [availableList, existingList, open])\r\n\r\n  const handleAddItemExisting = item => event => {\r\n    if (event.target.name === 'timepicker') {\r\n      let opDay = days[item]\r\n      let opOpen = timeConverter(operational[`open${opDay}`])\r\n      let opClose = timeConverter(operational[`close${opDay}`])\r\n      let opText = `${opDay}, ${opOpen}-${opClose}`\r\n\r\n      setNewExistingListInState([...newExistingListInState, opText])\r\n      let newList = availableItemInState.filter(items => items !== item)\r\n      setAvailableItemInState(newList)\r\n    }\r\n    else {\r\n      setNewExistingListInState([...newExistingListInState, item])\r\n      let newList = availableItemInState.filter(items => items !== item)\r\n      setAvailableItemInState(newList)\r\n    }\r\n  }\r\n\r\n  const handleRemoveItemExisting = item => event => {\r\n    let removeDay = item.slice(0, item.length - 13)\r\n    let dayId = []\r\n    days.forEach((day, i) => {\r\n      if (day === removeDay) {\r\n        dayId.push(i)\r\n      }\r\n    })\r\n\r\n    if (dayId[0]) {\r\n      setAvailableItemInState([...availableItemInState, dayId[0]])\r\n      let newList = existingListInState.filter(items => items !== item)\r\n      setExistingListInState(newList)\r\n    }\r\n    else {\r\n      setAvailableItemInState([...availableItemInState, item])\r\n      let newList = existingListInState.filter(items => items !== item)\r\n      setExistingListInState(newList)\r\n    }\r\n  }\r\n\r\n  const handleRemoveExisting = item => event => {\r\n    let removeDay = item.slice(0, item.length - 13)\r\n    let dayId = []\r\n    days.forEach((day, i) => {\r\n      if (day === removeDay) {\r\n        dayId.push(i)\r\n      }\r\n    })\r\n    if (dayId[0]) {\r\n      setAvailableItemInState([...availableItemInState, dayId[0]])\r\n      let newList = newExistingListInState.filter(items => items !== item)\r\n      setNewExistingListInState(newList)\r\n    }\r\n    else {\r\n      setAvailableItemInState([...availableItemInState, item])\r\n      let newList = newExistingListInState.filter(items => items !== item)\r\n      setNewExistingListInState(newList)\r\n    }\r\n  }\r\n\r\n  const handleSave = () => {\r\n    let itemToSave = existingListInState.concat(newExistingListInState)\r\n    setAvailableItemInState([])\r\n    setExistingListInState([])\r\n    setNewExistingListInState([])\r\n    props.handleSave(itemToSave)\r\n    props.handleOpen(false)\r\n  }\r\n\r\n  const handleDateChange = prop => date => {\r\n    // const newDate = new Date(date);\r\n    let item = convertDateyyyymmdd(date)\r\n    if ((item !== \"NaN-NaN-NaN\") && (item !== \"1970-01-01\")) {\r\n      setNewExistingListInState([...newExistingListInState, item])\r\n      let newList = availableItemInState.filter(items => items !== item)\r\n      setAvailableItemInState(newList)\r\n    }\r\n  }\r\n\r\n  const handleDayHourChange = prop => date => {\r\n    if (prop.props === 'openTime') {\r\n      let openattr = `open${days[prop.day]}`\r\n      setOperational({\r\n        ...operational,\r\n        [openattr]: date\r\n      })\r\n    }\r\n    else {\r\n      let textattr = `close${days[prop.day]}`\r\n      setOperational({\r\n        ...operational,\r\n        [textattr]: date\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog id={props.id} fullWidth maxWidth={dialogWidth ? dialogWidth : 'sm'} open={props.open} onClose={handleClose} scroll={'paper'} >\r\n      <Hidden smDown>\r\n        <DialogTitle id=\"dialog-title\" onClose={handleClose}>{dialogTitle}</DialogTitle>\r\n\r\n        <DialogContent dividers>\r\n          <Grid container direction=\"row\" justify=\"flex-start\" alignItems='flex-start' >\r\n            <Grid item md={6}>\r\n              <Typography variant='subtitle2'>{existingTitle}</Typography>\r\n              <Typography variant='caption' color='textSecondary'>Click to remove/edit {existingTitle}</Typography>\r\n              <List dense >\r\n                {\r\n                  existingListInState.map((item, i) => {\r\n                    if (item === 'none') {\r\n                      return <ListItemText primary={'- none'} key={i} />\r\n                    }\r\n                    else {\r\n                      return <Grid container direction=\"row\" justify=\"flex-start\" alignItems='center' key={i} >\r\n                        <ListItemIcon>\r\n                          <Checkbox\r\n                            edge=\"start\"\r\n                            id={item}\r\n                            value={item}\r\n                            checked\r\n                            onChange={handleRemoveItemExisting(item)}\r\n                          />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={item} />\r\n                      </Grid >\r\n                    }\r\n                  })\r\n                }\r\n                {\r\n                  newExistingListInState[0] ? newExistingListInState.map((item, i) => (\r\n                    <Grid container direction=\"row\" justify=\"flex-start\" alignItems='center' key={i} >\r\n                      <ListItemIcon>\r\n                        <Checkbox\r\n                          edge=\"start\"\r\n                          id={item.toString()}\r\n                          value={item}\r\n                          checked\r\n                          onChange={handleRemoveExisting(item)}\r\n                        />\r\n                      </ListItemIcon>\r\n                      <ListItemText secondary={item} />\r\n                    </Grid >\r\n                  ))\r\n                    : existingListInState[0]\r\n                      ? <div></div>\r\n                      : <ListItemText primary={'- none'} />\r\n                }\r\n              </List>\r\n            </Grid>\r\n\r\n            {\r\n              datePicker\r\n                ? <Grid item md={6}>\r\n                  <Typography variant='subtitle2' >{availTitle}</Typography>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                    <Grid container >\r\n                      <KeyboardDatePicker\r\n                        // style={{ width: 150, marginRight: 15 }}\r\n                        size=\"small\"\r\n                        clearable\r\n                        format=\"yyyy/MM/dd\"\r\n                        margin=\"dense\"\r\n                        id={\"date-picker-edit\"}\r\n                        placeholder=\"2018/12/25\"\r\n                        // label={FormatText('app_from')}\r\n                        // value={state[item + 'fromdate']}\r\n                        onChange={handleDateChange('close_date')}\r\n                        KeyboardButtonProps={{\r\n                          'aria-label': 'change date',\r\n                        }}\r\n                        disablePast={true}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Grid>\r\n                : timePicker\r\n                  ? <Grid item md={6}>\r\n                    <Typography variant='subtitle2' >{availTitle}</Typography>\r\n                    <Typography variant='caption' color='textSecondary'>Click to add {existingTitle}</Typography>\r\n                    <List dense >\r\n                      {availableItemInState[0] ? availableItemInState.map((item, i) => (\r\n                        <Grid container direction=\"row\" justify=\"flex-start\" alignItems='center' key={i} >\r\n                          <Grid item sm={1}  >\r\n                            <ListItemIcon>\r\n                              <Checkbox\r\n                                name=\"timepicker\"\r\n                                edge=\"start\"\r\n                                onChange={handleAddItemExisting(item)}\r\n                                checked={false}\r\n                              />\r\n                            </ListItemIcon>\r\n                          </Grid>\r\n                          <Grid item sm={2} style={{ marginLeft: 5 }}  >\r\n                            <ListItemText secondary={days[item]} />\r\n                          </Grid>\r\n                          <Grid item sm={3} style={{ marginLeft: 25 }}  >\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                              <TimePicker\r\n                                size=\"small\"\r\n                                ampm={false}\r\n                                margin=\"normal\"\r\n                                id={`openTime${i}`}\r\n                                label=\"Open\"\r\n                                value={operational[`open${days[item]}`]}\r\n                                onChange={handleDayHourChange({ day: item, props: \"openTime\" })}\r\n                                InputLabelProps={{\r\n                                  shrink: true,\r\n                                  classes: {\r\n                                    root: classes.labelRoot\r\n                                  }\r\n                                }}\r\n                                InputProps={{\r\n                                  classes: {\r\n                                    root: classes.inputRoot\r\n                                  }\r\n                                }}\r\n                              />\r\n                            </MuiPickersUtilsProvider>\r\n                          </Grid>\r\n                          <Grid item sm={3} style={{ marginLeft: 15 }}  >\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                              <TimePicker\r\n                                size=\"small\"\r\n                                ampm={false}\r\n                                margin=\"normal\"\r\n                                id={`closeTime${i}`}\r\n                                label=\"Close\"\r\n                                value={operational[`close${days[item]}`]}\r\n                                onChange={handleDayHourChange({ day: item, props: \"closeTime\" })}\r\n                                InputLabelProps={{\r\n                                  shrink: true,\r\n                                  classes: {\r\n                                    root: classes.labelRoot\r\n                                  }\r\n                                }}\r\n                                InputProps={{\r\n                                  classes: {\r\n                                    root: classes.inputRoot\r\n                                  }\r\n                                }}\r\n                              />\r\n                            </MuiPickersUtilsProvider>\r\n                          </Grid>\r\n                        </Grid >\r\n                      )) : <ListItemText primary={'- none'} />}\r\n                    </List>\r\n                  </Grid>\r\n\r\n                  : <Grid item md={6}>\r\n                    <Typography variant='subtitle2' >{availTitle}</Typography>\r\n                    <Typography variant='caption' color='textSecondary'>Click to add {existingTitle}</Typography>\r\n                    <List dense >\r\n                      {availableItemInState[0] ? availableItemInState.map((item, i) => (\r\n                        <Grid container direction=\"row\" justify=\"flex-start\" alignItems='center' key={i} >\r\n                          <ListItemIcon>\r\n                            <Checkbox\r\n                              edge=\"start\"\r\n                              onChange={handleAddItemExisting(item)}\r\n                              checked={false}\r\n                            />\r\n                          </ListItemIcon>\r\n                          <ListItemText secondary={item} />\r\n                        </Grid >\r\n                      )) : <ListItemText primary={'- none'} />}\r\n                    </List>\r\n                  </Grid>\r\n            }\r\n\r\n\r\n          </Grid>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n            <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n              <Button onClick={handleClose} variant='outlined' color=\"primary\">\r\n                Cancel\r\n          </Button>\r\n            </Grid>\r\n            <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n              <Button onClick={handleSave} variant='contained' color=\"primary\">\r\n                Save\r\n          </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogActions>\r\n      </Hidden>\r\n      <Hidden smUp>\r\n        <DialogTitle id=\"dialog-title\" onClose={handleClose}>{dialogTitle}</DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography variant='subtitle2'>{existingTitle}</Typography>\r\n          <Typography variant='caption' color='textSecondary'>Click to remove/edit {existingTitle}</Typography>\r\n          <Grid container>\r\n            <List dense >\r\n              {\r\n                existingListInState.map((item, i) => {\r\n                  if (item === 'none') {\r\n                    return <ListItemText primary={'- none'} key={i} />\r\n                  }\r\n                  else {\r\n                    return <Grid container direction=\"row\" justify=\"flex-start\" alignItems='center' key={i} >\r\n                      <ListItemIcon>\r\n                        <Checkbox\r\n                          edge=\"start\"\r\n                          id={item}\r\n                          value={item}\r\n                          checked\r\n                          onChange={handleRemoveItemExisting(item)}\r\n                        />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={item} />\r\n                    </Grid >\r\n                  }\r\n                })\r\n              }\r\n              {\r\n                newExistingListInState[0] ? newExistingListInState.map((item, i) => (\r\n                  <Grid container direction=\"row\" justify=\"flex-start\" alignItems='center' key={i} >\r\n                    <ListItemIcon>\r\n                      <Checkbox\r\n                        edge=\"start\"\r\n                        id={item.toString()}\r\n                        value={item}\r\n                        checked\r\n                        onChange={handleRemoveExisting(item)}\r\n                      />\r\n                    </ListItemIcon>\r\n                    <ListItemText secondary={item} />\r\n                  </Grid >\r\n                ))\r\n                  : existingListInState[0]\r\n                    ? <div></div>\r\n                    : <ListItemText primary={'- none'} />\r\n              }\r\n              {\r\n                datePicker\r\n                  ? <Grid item md={6}>\r\n                    <Typography variant='subtitle2' >{availTitle}</Typography>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                      <Grid container >\r\n                        <KeyboardDatePicker\r\n                          // style={{ width: 150, marginRight: 15 }}\r\n                          size=\"small\"\r\n                          clearable\r\n                          format=\"yyyy/MM/dd\"\r\n                          margin=\"dense\"\r\n                          id={\"date-picker-edit\"}\r\n                          placeholder=\"2018/12/25\"\r\n                          // label={FormatText('app_from')}\r\n                          // value={state[item + 'fromdate']}\r\n                          onChange={handleDateChange('close_date')}\r\n                          KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                          }}\r\n                          disablePast={true}\r\n                        />\r\n                      </Grid>\r\n                    </MuiPickersUtilsProvider>\r\n                  </Grid>\r\n                  : timePicker\r\n                    ? <Grid>\r\n                      <Typography variant='subtitle2' >{availTitle}</Typography>\r\n                      <Typography variant='caption' color='textSecondary'>Click to add {existingTitle}</Typography>\r\n                      <List dense >\r\n                        {availableItemInState[0] ? availableItemInState.map((item, i) => (\r\n                          <Grid container direction=\"row\" justify=\"flex-start\" alignItems='center' key={i} >\r\n                            <Grid item sm={1} xs={1} >\r\n                              <ListItemIcon>\r\n                                <Checkbox\r\n                                  name=\"timepicker\"\r\n                                  edge=\"start\"\r\n                                  onChange={handleAddItemExisting(item)}\r\n                                  checked={false}\r\n                                />\r\n                              </ListItemIcon>\r\n                            </Grid>\r\n                            <Grid item sm={2} xs={2} style={{ marginLeft: 5 }}  >\r\n                              <ListItemText secondary={days[item]} />\r\n                            </Grid>\r\n                            <Grid item sm={3} xs={3} style={{ marginLeft: 25 }}  >\r\n                              <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                                <TimePicker\r\n                                  size=\"small\"\r\n                                  ampm={false}\r\n                                  margin=\"normal\"\r\n                                  id={`openTime${i}`}\r\n                                  label=\"Open\"\r\n                                  value={operational[`open${days[item]}`]}\r\n                                  onChange={handleDayHourChange({ day: item, props: \"openTime\" })}\r\n                                  InputLabelProps={{\r\n                                    shrink: true,\r\n                                    classes: {\r\n                                      root: classes.labelRoot\r\n                                    }\r\n                                  }}\r\n                                  InputProps={{\r\n                                    classes: {\r\n                                      root: classes.inputRoot\r\n                                    }\r\n                                  }}\r\n                                />\r\n                              </MuiPickersUtilsProvider>\r\n                            </Grid>\r\n                            <Grid item sm={3} xs={3} style={{ marginLeft: 15 }}  >\r\n                              <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                                <TimePicker\r\n                                  size=\"small\"\r\n                                  ampm={false}\r\n                                  margin=\"normal\"\r\n                                  id={`closeTime${i}`}\r\n                                  label=\"Close\"\r\n                                  value={operational[`close${days[item]}`]}\r\n                                  onChange={handleDayHourChange({ day: item, props: \"closeTime\" })}\r\n                                  InputLabelProps={{\r\n                                    shrink: true,\r\n                                    classes: {\r\n                                      root: classes.labelRoot\r\n                                    }\r\n                                  }}\r\n                                  InputProps={{\r\n                                    classes: {\r\n                                      root: classes.inputRoot\r\n                                    }\r\n                                  }}\r\n                                />\r\n                              </MuiPickersUtilsProvider>\r\n                            </Grid>\r\n                          </Grid >\r\n                        )) : <ListItemText primary={'- none'} />}\r\n                      </List>\r\n                    </Grid>\r\n\r\n                    : <Grid item md={6}>\r\n                      <Typography variant='subtitle2' >{availTitle}</Typography>\r\n                      <Typography variant='caption' color='textSecondary'>Click to add {existingTitle}</Typography>\r\n                      <List dense >\r\n                        {availableItemInState[0] ? availableItemInState.map((item, i) => (\r\n                          <Grid container direction=\"row\" justify=\"flex-start\" alignItems='center' key={i} >\r\n                            <ListItemIcon>\r\n                              <Checkbox\r\n                                edge=\"start\"\r\n                                onChange={handleAddItemExisting(item)}\r\n                                checked={false}\r\n                              />\r\n                            </ListItemIcon>\r\n                            <ListItemText secondary={item} />\r\n                          </Grid >\r\n                        )) : <ListItemText primary={'- none'} />}\r\n                      </List>\r\n                    </Grid>\r\n              }\r\n            </List>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid container direction=\"row\" justify='space-between' item xs={12} sm={12}\r\n            style={{\r\n              paddingLeft: 50, marginTop: 5,\r\n              marginBottom: 5, paddingRight: 50\r\n            }}>\r\n            <Button onClick={handleClose} variant='outlined' color=\"primary\" style={{\r\n              textTransform: 'none', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n              fontWeight: 'bold', fontSize: 12\r\n            }}>\r\n              Cancel\r\n          </Button>\r\n            <Button onClick={handleSave} variant='contained' color=\"primary\" style={{\r\n              textTransform: 'none', color: 'white', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n              fontWeight: 'bold', fontSize: 12\r\n            }}>\r\n              Save\r\n          </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n      </Hidden>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\n\r\nexport default withStyles(styles)(EditWithReplaceDialog)\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Grid, Card, Typography, Button, Tooltip, Paper, IconButton } from '@material-ui/core'\r\nimport MaterialTable from 'material-table'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack'\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n// import Divider from '@material-ui/core/Divider'\r\n\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole, setSecondRequest,\r\n} from '../../../actions/ServiceActions'\r\n\r\nimport { setUserFilteredList } from '../../../actions/UserListActions';\r\nimport AddUserDialog from './AddUserDialog'\r\nimport ConfirmationDialogRaw from '../../voltrasadmin/userlist/ConfirmationDIalog';\r\nimport FormatText from '../../../i18n'\r\nimport LogoPreviewDialog from './LogoPreviewDialog';\r\nimport { sendImageToService, SendToService } from '../../../services/ServiceClient';\r\nimport Config from '../../../config';\r\nimport { setSnackbar } from '../../../actions/FeedbackActions';\r\nimport ListTableMobile from '../../../components/list/ListTableMobile'\r\nimport { setPaxProduct } from '../../../actions/PaxListActions';\r\nimport EditDialog from './EditWithReplaceDialog'\r\n\r\nconst ClinicSetting = ({ ...props }) => {\r\n  const { _setPaxProduct, _setOpenScreen, _setCompleteRequest, _setSecondRequest,\r\n    userInfo, roleUsed, paxList, _setSnackbar, history } = props\r\n  const [clinic, setClinic] = useState({})\r\n  const [clinicUser, setClinicUser] = useState([])\r\n  const [clinicProduct, setCLinicProduct] = useState([])\r\n  const [state, setState] = useState({ clientList: [], dataToUpdate: null, open: false, addClientOpen: false })\r\n  // const [image, setImage] = useState(null)\r\n  const [imgPreview, setImgPreview] = useState(null)\r\n  const [imageFile, setImageFile] = useState(null)\r\n  const [imageType, setImageType] = useState(null)\r\n  const [popUpPreview, setPopUpPreview] = useState(false)\r\n  const [open, setOpen] = useState(false);\r\n  const [userToDelete, setUserToDelete] = useState(null)\r\n  const [openProductEdit, setOpenProductEdit] = useState(false)\r\n  const [openDaysEdit, setOpenDaysEdit] = useState(false)\r\n  const [openDateEdit, setOpenDateEdit] = useState(false)\r\n  const days = [\"Haha\", 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\r\n  const daysAvailable = [\r\n    { day: 1, name: \"Monday\", open: new Date('2020-10-30T08:00:00'), close: new Date('2020-10-30T17:00:00') },\r\n    { day: 2, name: \"Tuesday\", open: new Date('2020-10-30T08:00:00'), close: new Date('2020-10-30T17:00:00') },\r\n    { day: 3, name: \"Wednesday\", open: new Date('2020-10-30T08:00:00'), close: new Date('2020-10-30T17:00:00') },\r\n    { day: 4, name: \"Thursday\", open: new Date('2020-10-30T08:00:00'), close: new Date('2020-10-30T17:00:00') },\r\n    { day: 5, name: \"Friday\", open: new Date('2020-10-30T08:00:00'), close: new Date('2020-10-30T17:00:00') },\r\n    { day: 6, name: \"Saturday\", open: new Date('2020-10-30T08:00:00'), close: new Date('2020-10-30T17:00:00') },\r\n    { day: 7, name: \"Sunday\", open: new Date('2020-10-30T08:00:00'), close: new Date('2020-10-30T17:00:00') },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    const { name, email, phone } = userInfo\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    if (name && email) {\r\n      SendToService(\r\n        {},\r\n        \"GET\",\r\n        \"healthProduct\",\r\n        null,\r\n        customHeaders,\r\n        null,\r\n        null,\r\n        product => {\r\n          _setPaxProduct(product.body)\r\n          if ((roleUsed === 'biofarma.admin') || (roleUsed === 'voltras.admin')) {\r\n            let clinicClickedId = paxList.clinicDetail.id\r\n            let getClinicUserRequest = {\r\n              request: {},\r\n              method: \"GET\",\r\n              serviceCode: \"GET_CLINIC_USER\",\r\n              urlParams: `/${clinicClickedId}`,\r\n              customHeaders,\r\n            }\r\n            _setCompleteRequest(getClinicUserRequest)\r\n          }\r\n          else if ((roleUsed === 'clinic.admin') || (roleUsed === 'clinic.operator')) {\r\n\r\n            let myClinicRequest = {\r\n              request: {},\r\n              method: \"GET\",\r\n              serviceCode: \"GET_MY_CLINIC\",\r\n              customHeaders,\r\n            }\r\n            _setCompleteRequest(myClinicRequest)\r\n            _setSecondRequest(true)\r\n\r\n          }\r\n          else {\r\n            console.log(\"NO ROLE\", userInfo)\r\n          }\r\n        }\r\n      )\r\n    }\r\n    _setOpenScreen(\"Clinic Setting\")\r\n  }, [userInfo, roleUsed, _setOpenScreen, paxList.clinicDetail, _setCompleteRequest, _setSecondRequest, _setPaxProduct])\r\n\r\n  useEffect(() => {\r\n    let clinicToSet = {}\r\n    if (paxList) {\r\n      if (paxList.clinicDetail && paxList.clinicDetail.id) clinicToSet = paxList.clinicDetail\r\n      else if (paxList.clinicUser && paxList.clinicUser.id) clinicToSet = paxList.clinicUser\r\n      else clinicToSet = {}\r\n    }\r\n    else clinicToSet = {}\r\n    setClinic(clinicToSet)\r\n    if (clinicToSet.logo_url) setImgPreview(clinicToSet.logo_url)\r\n    if (paxList.clinicUser && paxList.clinicUser.users.length > 0) {\r\n      let oldUsers = paxList.clinicUser.users\r\n      let newUsers = oldUsers.map(item => {\r\n        let rolesStr = Array.isArray(item.roles) ? item.roles.join(', ').replace('member, ', '') : \"\"\r\n        item.roles = rolesStr\r\n        return item\r\n      })\r\n      setClinicUser(newUsers)\r\n    }\r\n\r\n    let availableProducts = clinicToSet.available_products_id\r\n    let productList = paxList.product\r\n    let clinicProduct = []\r\n    if (availableProducts && availableProducts.length > 0 && productList.length > 0) {\r\n      availableProducts.forEach(item => {\r\n        productList.forEach(prod => {\r\n          if (prod.id === item) clinicProduct.push(prod.name)\r\n        })\r\n      })\r\n      setCLinicProduct(clinicProduct)\r\n    }\r\n  }, [paxList])\r\n\r\n  const handleOpenAddClient = val => {\r\n    setState({\r\n      ...state,\r\n      addClientOpen: val\r\n    })\r\n  }\r\n\r\n  const handleAddUser = (request, secondRequest) => {\r\n    _setCompleteRequest(request)\r\n    _setSecondRequest(secondRequest)\r\n    handleOpenAddClient(false)\r\n  }\r\n\r\n  const handleDeleteUser = oldData => new Promise((resolve, reject) => {\r\n    let creatorEmail = paxList.clinicDetail.creation\r\n      ? paxList.clinicDetail.creation.email\r\n      : paxList.clinicUser.creation\r\n        ? paxList.clinicUser.creation.email\r\n        : null\r\n    let errorSnackbar = { open: true, severity: \"warning\", message: \"Cannot delete clinic creator\", }\r\n\r\n    if (creatorEmail && (creatorEmail !== oldData.email)) {\r\n      setUserToDelete(oldData)\r\n      setOpen(true)\r\n    }\r\n    else _setSnackbar(errorSnackbar)\r\n    resolve()\r\n  })\r\n\r\n  const handleOpenLogoPreview = val => {\r\n    setPopUpPreview(val)\r\n  }\r\n\r\n  const handleSaveImage = () => {\r\n    let clinic_id = paxList.clinicUser.id || paxList.myClinic.clinic_id\r\n    let name = userInfo.name ? userInfo.name : ''\r\n    let email = userInfo.email ? userInfo.email : ''\r\n    let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    sendImageToService(imageFile, imageType, imageFile).then(response => {\r\n      if (response.ID) {\r\n        let imgUrl = Config.gatewayRepoFile + `/static-file-manager/retrieve?file=${response.ID}`\r\n\r\n        // POST /health/admin/clinic/{id}/logo_url\r\n        let addClinicLogoRequest = {\r\n          request: { url: imgUrl },\r\n          method: \"POST\",\r\n          serviceCode: \"ADD_CLINIC_LOGO\",\r\n          urlParams: `/${clinic_id}/logo_url`,\r\n          customHeaders,\r\n        }\r\n        _setCompleteRequest(addClinicLogoRequest)\r\n\r\n\r\n      }\r\n      else {\r\n        // setImgPreview(image)\r\n        console.log('wrong response')\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChoose = () => {\r\n    // DELETE /health/admin/clinics/{id}/users/{userid}\r\n    let oldData = userToDelete\r\n    let id = oldData.clinic_id\r\n    let userid = oldData.id\r\n    let customHeaders = { name: userInfo.name, email: userInfo.email }\r\n    if (userInfo.phone) customHeaders.phone = userInfo.phone\r\n    let deleteRequest = {\r\n      request: {},\r\n      method: \"DELETE\",\r\n      serviceCode: \"DELETE_CLINIC_USER\",\r\n      urlParams: `/${id}/users/${userid}`,\r\n      customHeaders,\r\n    }\r\n    let getClinicUserRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CLINIC_USER\",\r\n      urlParams: `/${id}`,\r\n      customHeaders,\r\n    }\r\n    _setCompleteRequest(deleteRequest)\r\n    _setSecondRequest(getClinicUserRequest)\r\n\r\n  }\r\n\r\n  const handleOpenProductEdit = val => setOpenProductEdit(val)\r\n\r\n  const handleProductEditSave = val => {\r\n    const { name, email, phone } = userInfo\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    let clinic_id = paxList.clinicUser.id || paxList.myClinic.clinic_id\r\n    let urlParams = `/${clinic_id}`\r\n    let available_products_id = []\r\n    val.forEach(item => {\r\n      paxList.product.forEach(prod => {\r\n        if (prod.name === item) available_products_id.push(prod.id)\r\n      })\r\n    })\r\n    let editRequest = {\r\n      request: { available_products_id },\r\n      method: \"PATCH\",\r\n      serviceCode: \"EDIT_CLINIC_SETTING\",\r\n      urlParams,\r\n      customHeaders,\r\n    }\r\n    _setCompleteRequest(editRequest)\r\n  }\r\n\r\n  const handleOpenDaysEdit = val => setOpenDaysEdit(val)\r\n\r\n  const handleDaysEditSave = val => {\r\n    let operational = []\r\n    val.forEach(item => {\r\n      let dayId = []\r\n      days.forEach((el, i) => {\r\n        if (el === item.slice(0, item.length - 13)) {\r\n          dayId.push(i)\r\n        }\r\n      })\r\n      let obj = {\r\n        day: dayId[0],\r\n        hour: item.slice(item.length - 11, item.length)\r\n      }\r\n      operational.push(obj)\r\n    })\r\n\r\n    let oldVendorClose = clinic.vendor_close\r\n    let clinic_id = paxList.clinicUser.id || paxList.myClinic.clinic_id\r\n    let urlParams = `/${clinic_id}`\r\n    const { name, email, phone } = userInfo\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let arrDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\r\n    let valueDays = val.map(item => {\r\n      let text = item.slice(0, item.length - 13)\r\n      return text\r\n    })\r\n\r\n    let day = []\r\n    let arrOffDay = arrDays.filter(el => !valueDays.includes(el))\r\n    days.forEach((item, i) => { if (arrOffDay.includes(item)) day.push(i) })\r\n\r\n    let vendor_close = {\r\n      date: oldVendorClose.date,\r\n      day\r\n    }\r\n\r\n    let editRequest = {\r\n      request: { vendor_close, operational },\r\n      method: \"PATCH\",\r\n      serviceCode: \"EDIT_CLINIC_SETTING\",\r\n      urlParams,\r\n      customHeaders,\r\n    }\r\n    _setCompleteRequest(editRequest)\r\n  }\r\n\r\n  const handleOpenDateEdit = val => setOpenDateEdit(val)\r\n\r\n  const handleDateEditSave = val => {\r\n    let oldVendorClose = clinic.vendor_close\r\n    let clinic_id = paxList.clinicUser.id || paxList.myClinic.clinic_id\r\n    let urlParams = `/${clinic_id}`\r\n    const { name, email, phone } = userInfo\r\n    let customHeaders = { name, email }\r\n    // let day = []\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let vendor_close = {\r\n      date: val,\r\n      day: oldVendorClose.day\r\n    }\r\n\r\n    let editRequest = {\r\n      request: { vendor_close },\r\n      method: \"PATCH\",\r\n      serviceCode: \"EDIT_CLINIC_SETTING\",\r\n      urlParams,\r\n      customHeaders,\r\n    }\r\n    _setCompleteRequest(editRequest)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <AddUserDialog\r\n        label={FormatText('clinic_add_user')}\r\n        handleOpen={handleOpenAddClient}\r\n        open={state.addClientOpen}\r\n        clinicInfo={clinic}\r\n        userInfo={userInfo}\r\n        handleAddUser={handleAddUser}\r\n        paxList={paxList}\r\n      />\r\n      <LogoPreviewDialog\r\n        label={FormatText('clinic_logo')}\r\n        handleOpen={handleOpenLogoPreview}\r\n        open={popUpPreview}\r\n        imgPreview={imgPreview}\r\n        setImgPreview={setImgPreview}\r\n        setImageFile={setImageFile}\r\n        setImageType={setImageType}\r\n        handleSaveImage={handleSaveImage}\r\n        _setSnackbar={_setSnackbar}\r\n      />\r\n      <ConfirmationDialogRaw\r\n        id=\"delete-client\"\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        header=\"Delete User\"\r\n        content={userToDelete ? userToDelete.email : ''}\r\n        handleChoose={handleChoose}\r\n      />\r\n      <EditDialog\r\n        id=\"ProductEditDialog\"\r\n        dialogTitle=\"Edit Product\"\r\n        availTitle=\"Product Available\"\r\n        existingTitle=\"Products\"\r\n        open={openProductEdit}\r\n        handleOpen={handleOpenProductEdit}\r\n        availableList={paxList.product}\r\n        existingList={clinic.available_products_id}\r\n        handleSave={handleProductEditSave}\r\n      />\r\n      <EditDialog\r\n        id=\"DaysEditDialog\"\r\n        dialogWidth=\"sm\"\r\n        dialogTitle=\"Edit Vendor Open Days\"\r\n        availTitle=\"Days Available\"\r\n        existingTitle=\"Days\"\r\n        open={openDaysEdit}\r\n        handleOpen={handleOpenDaysEdit}\r\n        availableList={daysAvailable}\r\n        existingList={clinic.operational ? clinic.operational : []}\r\n        handleSave={handleDaysEditSave}\r\n        timePicker\r\n      />\r\n      <EditDialog\r\n        id=\"DateEditDialog\"\r\n        dialogTitle=\"Edit Vendor Close Date\"\r\n        availTitle=\"Pick Date\"\r\n        existingTitle=\"Date\"\r\n        open={openDateEdit}\r\n        handleOpen={handleOpenDateEdit}\r\n        availableList={[]}\r\n        existingList={clinic.vendor_close ? clinic.vendor_close.date : []}\r\n        handleSave={handleDateEditSave}\r\n        datePicker\r\n      />\r\n\r\n      <Hidden xsDown>\r\n        <Card style={{ display: 'flex', flexWrap: 'wrap', }}>\r\n          <Grid style={{ margin: 40, marginTop: 1 }} container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n\r\n\r\n\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n              <Grid item xs={7}>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ marginTop: 5 }} >\r\n                  <Grid item xs={3}><Typography ><b>{FormatText('clinic_logo')}</b></Typography></Grid>\r\n                  <Grid item container xs={1} justify=\"flex-end\" alignItems=\"flex-end\" ><Typography >:</Typography></Grid>\r\n                  <Grid item xs={5} style={{ marginLeft: 15 }}>\r\n                    {\r\n                      imgPreview\r\n                        ? <Tooltip title={roleUsed === \"clinic.admin\" ? \"Click to change logo\" : \"Clinic Logo\"}>\r\n                          <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n                            <Grid item >\r\n                              <Paper elevation={1} onClick={() => roleUsed === \"clinic.admin\" ? handleOpenLogoPreview(true) : null}>\r\n                                <img\r\n                                  src={imgPreview}\r\n                                  style={{ height: 100 }}\r\n                                  alt=\"Logo\"\r\n                                />\r\n                              </Paper>\r\n                            </Grid>\r\n                            <Grid item style={{ marginLeft: 15, visibility: roleUsed === \"clinic.admin\" ? 'visible' : 'hidden' }} >\r\n                              <IconButton color='inherit' onClick={() => roleUsed === \"clinic.admin\" ? handleOpenLogoPreview(true) : null} >\r\n                                <EditIcon />\r\n                              </IconButton>\r\n                            </Grid>\r\n\r\n                          </Grid>\r\n                        </Tooltip>\r\n                        : roleUsed === \"clinic.admin\"\r\n                          ? <Button color='primary' variant='outlined' size='small' onClick={() => handleOpenLogoPreview(true)}>\r\n                            {FormatText('clinic_set_logo')}\r\n                          </Button>\r\n                          : null\r\n                    }\r\n\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid style={{ marginTop: 15 }} container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n                  <Grid item xs={3}><Typography ><b>{FormatText('clinic')} ID</b></Typography></Grid>\r\n                  <Grid item container xs={1} justify=\"flex-end\" alignItems=\"flex-end\" ><Typography >:</Typography></Grid>\r\n                  <Grid item xs={7} style={{ marginLeft: 15 }}><Typography >{clinic.id}</Typography></Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n                  <Grid item xs={3}><Typography ><b>{FormatText('clinic_name')}</b></Typography></Grid>\r\n                  <Grid item container xs={1} justify=\"flex-end\" alignItems=\"flex-end\" ><Typography >:</Typography></Grid>\r\n                  <Grid item xs={7} style={{ marginLeft: 15 }}><Typography >{clinic.name}</Typography></Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n                  <Grid item xs={3}><Typography ><b>{FormatText('common_address')}</b></Typography></Grid>\r\n                  <Grid item container xs={1} justify=\"flex-end\" alignItems=\"flex-end\" ><Typography >:</Typography></Grid>\r\n                  <Grid item xs={7} style={{ marginLeft: 15 }}><Typography >{clinic.address}</Typography></Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n              </Grid>\r\n            </Grid>\r\n\r\n\r\n\r\n\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" style={{ marginTop: 15 }} >\r\n              <Grid item xs={7}>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" style={{ marginTop: 5 }} >\r\n                  <Grid item xs={3}><Typography ><b>Vendor Open</b></Typography></Grid>\r\n                  <Grid item container xs={1} justify=\"flex-end\" alignItems=\"flex-end\" ><Typography >:</Typography></Grid>\r\n                  <Grid item xs={5} style={{ marginLeft: 15 }}>\r\n                    {\r\n                      clinic.operational && clinic.operational.length > 0\r\n                        ? clinic.operational.map((item, i) => {\r\n                          let day = [\"null\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\r\n                          return <Typography key={i} > - {day[item.day]}, {item.hour}</Typography>\r\n                        })\r\n                        : <Typography color='textSecondary' style={{ display: roleUsed === \"clinic.admin\" ? \"\" : \"none\" }} > Click button to add/edit days</Typography>\r\n                    }\r\n                  </Grid>\r\n                  <Grid xs={1} item style={{ display: roleUsed === \"clinic.admin\" ? \"\" : \"none\" }} >\r\n                    <Tooltip title={\"Add/Edit Days\"}>\r\n                      <IconButton color='inherit' onClick={() => roleUsed === \"clinic.admin\" ? handleOpenDaysEdit(true) : null} >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" style={{ marginTop: 5 }} >\r\n                  <Grid item xs={3}><Typography ><b>Vendor Close Day</b></Typography></Grid>\r\n                  <Grid item container xs={1} justify=\"flex-end\" alignItems=\"flex-end\" ><Typography >:</Typography></Grid>\r\n                  <Grid item xs={5} style={{ marginLeft: 15 }}>\r\n                    {\r\n                      clinic.vendor_close && clinic.vendor_close.day.length > 0\r\n                        ? clinic.vendor_close && clinic.vendor_close.day.map((item, i) => {\r\n                          let day = [\"null\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\r\n                          return <Typography key={i} > - {day[item]}</Typography>\r\n                        })\r\n                        : <Typography color='textSecondary' style={{ display: roleUsed === \"clinic.admin\" ? \"\" : \"none\" }} > Click button to add/edit days</Typography>\r\n                    }\r\n                  </Grid>\r\n                </Grid>\r\n\r\n\r\n\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={1} style={{ marginTop: 5 }} >\r\n                  <Grid item xs={3}><Typography ><b>Vendor Close Date</b></Typography></Grid>\r\n                  <Grid item container xs={1} justify=\"flex-end\" alignItems=\"flex-end\" ><Typography >:</Typography></Grid>\r\n                  <Grid item xs={5} style={{ marginLeft: 15 }}>\r\n                    {\r\n                      clinic.vendor_close && clinic.vendor_close.date.length > 0\r\n                        ? clinic.vendor_close && clinic.vendor_close.date.map((item, i) => {\r\n                          return <Typography key={i} > - {item}</Typography>\r\n                        })\r\n                        : <Typography color='textSecondary' style={{ display: roleUsed === \"clinic.admin\" ? \"\" : \"none\" }} > Click button to add/edit date</Typography>\r\n                    }\r\n                  </Grid>\r\n                  <Grid xs={1} item style={{ display: roleUsed === \"clinic.admin\" ? \"\" : \"none\" }} >\r\n                    <Tooltip title={\"Add/Edit Days\"}>\r\n                      <IconButton color='inherit' onClick={() => roleUsed === \"clinic.admin\" ? handleOpenDateEdit(true) : null} >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\"  >\r\n                  <Grid item xs={2}><Typography ><b>Products</b></Typography></Grid>\r\n                  <Grid item container xs={1} justify=\"flex-end\" alignItems=\"flex-end\" ><Typography >:</Typography></Grid>\r\n                  <Grid item xs={7} style={{ marginLeft: 15 }}>\r\n                    {\r\n                      clinicProduct.length > 0\r\n                        ? clinicProduct.map((item, i) => {\r\n                          return <Typography key={i} > - {item}</Typography>\r\n                        })\r\n                        : <Typography color='textSecondary' style={{ visibility: roleUsed === \"clinic.admin\" ? 'visible' : 'hidden' }} > Click button to add/edit products</Typography>\r\n                    }\r\n                  </Grid>\r\n                  <Grid xs={1} item style={{ display: roleUsed === \"clinic.admin\" ? \"\" : \"none\" }} >\r\n                    <Tooltip title={\"Add/Edit Product\"}>\r\n                      <IconButton color='inherit' onClick={() => roleUsed === \"clinic.admin\" ? handleOpenProductEdit(true) : null} >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid style={{ marginTop: 20 }} container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n              <Grid item xs={12} >\r\n                <MaterialTable\r\n                  style={{ width: '100%' }}\r\n                  title={FormatText('clinic_user_list')}\r\n                  columns={[\r\n                    { title: FormatText('app_name'), field: 'name' },\r\n                    { title: FormatText('app_email'), field: 'email' },\r\n                    { title: \"Role\", field: 'roles' },\r\n                    { title: FormatText('app_phone'), field: 'phone' },\r\n                    // { title: 'Role', field: 'role' },\r\n                  ]}\r\n                  data={clinicUser}\r\n                  actions={[\r\n                    {\r\n                      icon: 'delete',\r\n                      tooltip: 'Delete User',\r\n                      onClick: (event, rowData) => handleDeleteUser(rowData),\r\n                    }\r\n                  ]}\r\n                  options={{\r\n                    actionsColumnIndex: -1,\r\n                    padding: 'dense',\r\n                    paging: false,\r\n\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid style={{ marginTop: 25 }} container direction=\"row\" justify='center' alignItems=\"center\" >\r\n              <Button style={{ width: 150, marginRight: 10 }} variant='outlined' color=\"secondary\"\r\n                onClick={() => history.push('/KClinicList')}\r\n                startIcon={<ArrowBack />}\r\n              >\r\n                {FormatText('app_back')}\r\n              </Button>\r\n              <Button style={{ width: 150, marginLeft: 10 }} variant='contained' color=\"primary\"\r\n                onClick={() => handleOpenAddClient(true)}\r\n                startIcon={<AddIcon />}\r\n              >\r\n                {FormatText('clinic_add_user')}\r\n              </Button>\r\n\r\n              {/* <Button variant='contained' color=\"primary\"\r\n            startIcon={<EditIcon />}\r\n          >\r\n            Save Role\r\n        </Button> */}\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n      </Hidden>\r\n\r\n      <Hidden smUp>\r\n        <Card style={{ marginRight: 5 }}>\r\n          <Grid container >\r\n            <div style={{ backgroundColor: '#f4f0ec', padding: 5, width: '100%' }}>\r\n              <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n                Clinic Info\r\n              </Typography>\r\n            </div>\r\n            <Grid item xs={12} sm={12}>\r\n              {\r\n                imgPreview\r\n                  ?\r\n                  <div style={{ marginLeft: 11, marginBottom: 7 }}>\r\n                    <Grid container direction=\"row\">\r\n                      <Grid item sm={5} xs={5} align='left'>\r\n                        <Typography style={{ fontSize: 11, padding: 3, paddingTop: 15, color: 'grey', fontFamily: 'Arial, Helvetica, sans-serif' }}>{FormatText('clinic_logo')}</Typography>\r\n                      </Grid>\r\n                      <Grid item xs={7} sm={7} style={{ padding: 3 }}>\r\n                        <Tooltip title={roleUsed === \"clinic.admin\" ? \"Click to change logo\" : \"Clinic Logo\"}>\r\n                          <Avatar src={imgPreview ? imgPreview : '/broken-image.jpg'} style={{ height: 35, width: 35 }} onClick={() => roleUsed === \"clinic.admin\" ? handleOpenLogoPreview(true) : null} />\r\n                        </Tooltip>\r\n                      </Grid>\r\n                      {/* <Divider style={{ width: '100%' }} /> */}\r\n                      {/* <div style={{ borderStyle: 'solid', width: '100%', borderColor: 'grey' }} /> */}\r\n                      <Grid item sm={5} xs={5} align='left'>\r\n                        <Typography style={{ fontSize: 11, padding: 3, color: 'grey', fontFamily: 'Arial, Helvetica, sans-serif' }}>{FormatText('clinic')} ID</Typography>\r\n                      </Grid>\r\n                      <Grid item sm={7} xs={7}>\r\n                        <Typography style={{ fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>{clinic.id}</Typography>\r\n                      </Grid>\r\n                      {/* <Divider style={{ width: '100%' }} /> */}\r\n                      <Grid item sm={5} xs={5} align='left'>\r\n                        <Typography style={{ fontSize: 11, color: 'grey', padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>{FormatText('clinic_name')}</Typography>\r\n                      </Grid>\r\n                      <Grid item sm={7} xs={7}>\r\n                        <Typography style={{ fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }} >{clinic.name}</Typography>\r\n                      </Grid>\r\n                      {/* <Divider style={{ width: '100%' }} /> */}\r\n                      <Grid item sm={5} xs={5} align='left'>\r\n                        <Typography style={{ color: 'grey', fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>{FormatText('common_address')}</Typography>\r\n                      </Grid>\r\n                      <Grid item sm={7} xs={7}>\r\n                        <Typography style={{ fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>{clinic.address}</Typography>\r\n                      </Grid>\r\n                      {/* <Divider style={{ width: '100%' }} /> */}\r\n                      <Grid item sm={5} xs={5} align='left'>\r\n                        <Typography style={{ color: 'grey', fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>{FormatText('Clinic Status')}</Typography>\r\n                      </Grid>\r\n                      <Grid item sm={7} xs={7}>\r\n                        <Typography style={{ fontSize: 11, fontWeight: 'bold', padding: 3, color: '#00cb00', fontFamily: 'Arial, Helvetica, sans-serif' }}>{clinic.status}</Typography>\r\n                      </Grid>\r\n                      <Grid item sm={5} xs={5} align='left'>\r\n                        <Typography style={{ color: 'grey', fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>Vendor Open</Typography>\r\n                      </Grid>\r\n                      <Grid item sm={5} xs={5}>\r\n                        {\r\n                          clinic.operational && clinic.operational.length > 0\r\n                            ? clinic.operational.map((item, i) => {\r\n                              let day = [\"null\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\r\n                              return <Typography key={i} style={{ fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }} > - {day[item.day]}, {item.hour}</Typography>\r\n                            })\r\n                            : <Typography style={{ display: roleUsed === \"clinic.admin\" ? \"\" : \"none\", fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}> Click button to add/edit days</Typography>\r\n                        }\r\n                      </Grid>\r\n                      <Grid item sm={2} xs={2} style={{ display: roleUsed === \"clinic.admin\" ? \"\" : \"none\" }}>\r\n                        <Tooltip title={\"Add/Edit Days\"} style={{ padding: 0 }}>\r\n                          <IconButton color='inherit' onClick={() => roleUsed === \"clinic.admin\" ? handleOpenDaysEdit(true) : null} >\r\n                            <EditIcon style={{ fontSize: 18 }} />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </Grid>\r\n                      <Grid item sm={5} xs={5} align='left' style={{ marginTop: 5 }}>\r\n                        <Typography style={{ color: 'grey', fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>Vendor Close Day</Typography>\r\n                      </Grid>\r\n                      <Grid item sm={7} xs={7} style={{ marginTop: 5 }}>\r\n                        {\r\n                          clinic.vendor_close && clinic.vendor_close.day.length > 0\r\n                            ? clinic.vendor_close && clinic.vendor_close.day.map((item, i) => {\r\n                              let day = [\"null\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\r\n                              return <Typography style={{ fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }} key={i} > - {day[item]}</Typography>\r\n                            })\r\n                            : <Typography style={{ display: roleUsed === \"clinic.admin\" ? \"\" : \"none\", color: 'grey', fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }} > Click button to add/edit days</Typography>\r\n                        }\r\n                      </Grid>\r\n                      <Grid item sm={5} xs={5} align='left' style={{ marginTop: 5 }}>\r\n                        <Typography style={{ color: 'grey', fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>Vendor Close Date</Typography>\r\n                      </Grid>\r\n                      <Grid item sm={5} xs={5} style={{ marginTop: 5 }}>\r\n                        {\r\n                          clinic.vendor_close && clinic.vendor_close.date.length > 0\r\n                            ? clinic.vendor_close && clinic.vendor_close.date.map((item, i) => {\r\n                              return <Typography style={{ fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }} key={i} > - {item}</Typography>\r\n                            })\r\n                            : <Typography style={{ display: roleUsed === \"clinic.admin\" ? \"\" : \"none\", color: 'grey', fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }} > Click button to add/edit date</Typography>\r\n                        }\r\n                      </Grid>\r\n                      <Grid item sm={2} xs={2} style={{ marginTop: 5, display: roleUsed === \"clinic.admin\" ? \"\" : \"none\" }}>\r\n                        <Tooltip title={\"Add/Edit Days\"} style={{ padding: 0 }}>\r\n                          <IconButton color='inherit' onClick={() => roleUsed === \"clinic.admin\" ? handleOpenDateEdit(true) : null} >\r\n                            <EditIcon style={{ fontSize: 18 }} />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </Grid>\r\n                      <Grid item sm={5} xs={5} align='left' style={{ marginTop: 5 }}>\r\n                        <Typography style={{ color: 'grey', fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>Product</Typography>\r\n                      </Grid>\r\n                      <Grid item sm={5} xs={5} style={{ marginTop: 5 }}>\r\n                        {\r\n                          clinicProduct.length > 0\r\n                            ? clinicProduct.map((item, i) => {\r\n                              return <Typography style={{ fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }} key={i} > - {item}</Typography>\r\n                            })\r\n                            : <Typography color='textSecondary' style={{ visibility: roleUsed === \"clinic.admin\" ? 'visible' : 'hidden', color: 'grey', fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }} > Click button to add/edit products</Typography>\r\n                        }\r\n                      </Grid>\r\n                      <Grid item sm={2} xs={2} style={{ marginTop: 5, display: roleUsed === \"clinic.admin\" ? \"\" : \"none\" }}>\r\n                        <Tooltip title={\"Add/Edit Product\"} style={{ padding: 0 }}>\r\n                          <IconButton color='inherit' onClick={() => roleUsed === \"clinic.admin\" ? handleOpenProductEdit(true) : null} >\r\n                            <EditIcon style={{ fontSize: 18 }} />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                  </div>\r\n\r\n                  : roleUsed === \"clinic.admin\"\r\n                    ? <Button color='primary' variant='outlined' size='small' onClick={() => handleOpenLogoPreview(true)}>\r\n                      {FormatText('clinic_set_logo')}\r\n                    </Button>\r\n                    : null\r\n              }\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n        <Card style={{ marginRight: 5, marginTop: 15 }}>\r\n          <Grid container >\r\n            <div style={{ backgroundColor: '#f4f0ec', padding: 5, width: '100%' }}>\r\n              <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n                User List\r\n              </Typography>\r\n            </div>\r\n            <Grid item sm={12} xs={12}>\r\n              <ListTableMobile data={clinicUser} column={[\r\n                { title: FormatText('app_name'), field: 'name' },\r\n                { title: FormatText('app_email'), field: 'email' },\r\n                { title: \"Role\", field: 'roles' },\r\n                { title: FormatText('app_phone'), field: 'phone' },\r\n                // { title: 'Role', field: 'role' },\r\n              ]} button={false} />\r\n\r\n              {/* </div> */}\r\n            </Grid>\r\n            <Grid style={{ marginTop: 25, marginBottom: 25, marginRight: 15, marginLeft: 15 }} item sm={12} xs={12}>\r\n              <Button style={{\r\n                backgroundColor: '#00cb00', color: 'white', fontSize: 15, fontWeight: 'bold',\r\n                textTransform: 'none', width: '100%', borderRadius: 10, fontFamily: 'Arial, Helvetica, sans-serif'\r\n              }} variant='contained' color=\"primary\"\r\n                onClick={() => handleOpenAddClient(true)}\r\n              // startIcon={<AddIcon />}\r\n              >\r\n                {FormatText('clinic_add_user')}\r\n              </Button>\r\n\r\n              {/* <Button variant='contained' color=\"primary\"\r\n            startIcon={<EditIcon />}\r\n          >\r\n            Save Role\r\n        </Button> */}\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n        <div style={{ height: 100 }} />\r\n        <canvas id=\"canvas\" style={{ width: \"300\", display: 'none' }}></canvas>\r\n      </Hidden>\r\n      {/* <div style={{ height: 100 }} />\r\n      <canvas id=\"canvas\" style={{ width: \"300\", display: 'none' }}></canvas> */}\r\n    </div >\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  userList: store.userList.list,\r\n  userDetail: store.userList.detail,\r\n  userFiltered: store.userList.filteredList,\r\n  userInfo: store.userInfo.info,\r\n  clientList: store.clientList.list,\r\n  roleAuth: store.system.roleAuth,\r\n  updateUser: store.userList.filteredList,\r\n  paxlistStatus: store.menu.paxList,\r\n  paxList: store.paxList,\r\n  roleUsed: store.userInfo.roleUsed,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  _setOpenScreen: val => dispatch(setOpenScreen(val)), _setUserFilteredList: val => dispatch(setUserFilteredList(val)),\r\n  _setSecondRequest: val => dispatch(setSecondRequest(val)), _setSnackbar: val => dispatch(setSnackbar(val)),\r\n  _setCompleteRequest: (val) => {\r\n    dispatch(setServiceRequest(val.request))\r\n    dispatch(setServiceMethod(val.method))\r\n    dispatch(setServiceCode(val.serviceCode))\r\n    dispatch(setServiceParams(val.urlParams))\r\n    dispatch(setServiceCustomHeaders(val.customHeaders))\r\n    dispatch(setServiceRole(val.serviceRole))\r\n    dispatch(setServiceStatus(\"active\"))\r\n  },\r\n  _setPaxProduct: val => dispatch(setPaxProduct(val))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClinicSetting)\r\n","\r\nimport React from 'react'\r\n// import { connect } from 'react-redux'\r\n\r\nimport { Grid, Typography, Hidden, FormControlLabel, Radio, } from '@material-ui/core'\r\nimport 'date-fns';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\n// import {\r\n//   MuiPickersUtilsProvider,\r\n//   KeyboardDatePicker,\r\n// } from '@material-ui/pickers';\r\n// import FormControl from '@material-ui/core/FormControl';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import FormGroup from '@material-ui/core/FormGroup';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n// import AccountBoxRounded from '@material-ui/icons/AccountBoxRounded';\r\n\r\n// import { setOpenScreen } from \"../../../actions/SystemActions\";\r\n// import {\r\n//   setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n//   setServiceParams, setServiceCustomHeaders, setServiceRole,\r\n// } from '../../../actions/ServiceActions'\r\n\r\n// import SimpleAutocomplete from '../../../components/autocomplete/SimpleAutocomplete';\r\n// import ClinicRUDTable from '../../voltrasadmin/userlist/UserRUDTable'\r\n\r\n\r\nconst FilterHead = props => {\r\n  const [selectedValue, setSelectedValue] = React.useState('all')\r\n  // console.log(\"FORM PROPS: \", props)\r\n\r\n  const handleChange = (event) => {\r\n    let value = event.target.value\r\n    let userInfo = props.props.userInfo\r\n    let name = userInfo.name ? userInfo.name : ''\r\n    let email = userInfo.email ? userInfo.email : ''\r\n    let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email, }\r\n    if (phone) customHeaders.phone = phone\r\n    setSelectedValue(value)\r\n    let urlParams = `?&status=${value}`\r\n    let filterRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"healthKlinik\",\r\n      customHeaders,\r\n    }\r\n    if (value !== 'all') filterRequest.urlParams = urlParams\r\n    // props.props._setCompleteRequest(filterRequest)\r\n    props.setFilteredData(value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hidden smDown>\r\n        {\r\n          props.props.roleUsed !== 'member'\r\n            ? <Grid container style={{ marginTop: 5, }}>\r\n\r\n              <Grid container direction='row' justify='flex-start' alignItems='center' style={{ marginLeft: 20, marginTop: 5 }} >\r\n                {/* <Grid item sm={6} > */}\r\n                <Grid item>\r\n                  <Typography variant=\"subtitle1\"  ><b>Status:</b> </Typography>\r\n                </Grid>\r\n                <Grid item style={{ marginLeft: 10, }}>\r\n                  <FormControlLabel value=\"all\" control={\r\n                    <Radio size='small' checked={selectedValue === 'all'} onChange={handleChange} />\r\n                  } label=\"All\" />\r\n                  <FormControlLabel value=\"active\" control={\r\n                    <Radio size='small' checked={selectedValue === 'active'} onChange={handleChange} />\r\n                  } label=\"Active\" />\r\n                  <FormControlLabel value=\"register\" control={\r\n                    <Radio size='small' checked={selectedValue === 'register'} onChange={handleChange} />\r\n                  } label=\"Register\" />\r\n                </Grid>\r\n                <Grid item> <br />\r\n                </Grid>\r\n\r\n                {/* <Grid item>\r\n              <Typography style={{ marginBottom: 7 }} variant=\"subtitle2\">Klinik Name:</Typography>\r\n              {\r\n                  this.props.paxList.klinikList.length === 1\r\n                    ? <TextField id=\"basic-klinik\" value={this.props.paxList.klinikList[0].name} style={{ width: 300 }} />\r\n                    : this.props.paxList.klinikList.length === 0\r\n                      ? <TextField id=\"basic-klinik\" disabled style={{ width: 300 }} />\r\n                      : <SimpleAutocomplete\r\n                        options={this.props.paxList.klinikList[0] ? this.props.paxList.klinikList : [{ name: '' }]}\r\n                        onPick={v => console.log(v)}\r\n                        width={300}\r\n                        optionItem={'name'}\r\n                      />\r\n                }\r\n\r\n            </Grid> */}\r\n                {/* </Grid> */}\r\n                {/* <Grid item sm={3} >\r\n            <Typography variant=\"subtitle2\">Request Test Date:</Typography>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n              <Grid container >\r\n                <KeyboardDatePicker\r\n                  size=\"small\"\r\n                  clearable\r\n                  format=\"yyyy/MM/dd\"\r\n                  margin=\"dense\"\r\n                  id=\"date-picker-from\"\r\n                  label=\"From\"\r\n                  // value={this.state.fromdate}\r\n                  // onChange={this.handleDateChange('fromdate')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container >\r\n                <KeyboardDatePicker\r\n                  clearable\r\n                  size=\"small\"\r\n                  format=\"yyyy/MM/dd\"\r\n                  margin=\"dense\"\r\n                  id=\"date-picker-to\"\r\n                  label=\"To\"\r\n                  // value={this.state.todate}\r\n                  // onChange={this.handleDateChange('todate')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item sm={2} >\r\n            <FormControl style={{ marginLeft: 15 }} fullWidth>\r\n              <Typography variant=\"subtitle2\">Status:</Typography>\r\n              <FormControl>\r\n                  <FormControlLabel\r\n                    control={<Checkbox checked={this.state.New} onChange={this.handleChange('New')} name=\"New\" />}\r\n                    label=\"NEW\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={<Checkbox checked={this.state.finish} onChange={this.handleChange('finish')} name=\"finish\" />}\r\n                    label=\"FINISH\"\r\n                  />\r\n                </FormControl>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item sm={2} >\r\n            <Grid item><br /></Grid>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify='center'\r\n              alignItems=\"center\">\r\n              <Grid item>\r\n                <Button size='small' variant=\"outlined\" color=\"primary\">\r\n                  Export to Xls\r\n                    </Button>\r\n              </Grid>\r\n              <Grid item><br /></Grid>\r\n              <Grid item>\r\n                <Button size='small' variant=\"contained\" color=\"primary\">\r\n                  Submit Filter\r\n                    </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Typography style={{ marginLeft: 20 }} variant=\"subtitle2\">Export to xls:</Typography>\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\">\r\n                  <Grid item><br /><br /></Grid>\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" onClick={this.handleExport} color=\"primary\">\r\n                      Export\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item ><br /> <br /></Grid>\r\n                </Grid> \r\n          </Grid> */}\r\n              </Grid>\r\n\r\n            </Grid>\r\n            : null\r\n        }\r\n\r\n      </Hidden>\r\n      <Hidden smUp>\r\n        {\r\n          props.props.roleUsed !== 'member' ? <Grid  container direction='row' justify='flex-start' alignItems='center'>\r\n            <Grid item>\r\n              <Typography  style={{fontSize: 12, fontFamily: 'Arial, Helvetica, sans-serif'} } ><b>Status:</b> </Typography>\r\n            </Grid>\r\n            <Grid item style={{marginLeft:10}}>\r\n              <FormControlLabel value=\"all\" control={\r\n                <Radio size='small' checked={selectedValue === 'all'} onChange={handleChange} />\r\n              } label={<Typography style={{ fontSize: 13, fontFamily: 'Arial, Helvetica, sans-serif' }}>All </Typography>}/>\r\n              <FormControlLabel value=\"active\" control={\r\n                <Radio size='small' checked={selectedValue === 'active'} onChange={handleChange} />\r\n              } label={<Typography style={{ fontSize: 13, fontFamily: 'Arial, Helvetica, sans-serif' }}>Active </Typography>} />\r\n              <FormControlLabel value=\"register\" control={\r\n                <Radio size='small' checked={selectedValue === 'register'} onChange={handleChange} />\r\n              } label={<Typography style={{ fontSize: 13, fontFamily: 'Arial, Helvetica, sans-serif' }}>Register </Typography>} />\r\n            </Grid>\r\n          </Grid> : null\r\n        }\r\n      </Hidden>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default FilterHead\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Grid, Card,Typography } from '@material-ui/core'\r\nimport 'date-fns';\r\n\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole, setSecondRequest,\r\n} from '../../../actions/ServiceActions'\r\nimport { setClinikDetail } from \"../../../actions/PaxListActions\";\r\nimport { setSnackbar } from '../../../actions/FeedbackActions';\r\n\r\nimport ClinicRUDTable from '../../voltrasadmin/userlist/UserRUDTable'\r\nimport ConfirmationDialogRaw from '../../voltrasadmin/userlist/ConfirmationDIalog';\r\nimport FormatText from '../../../i18n'\r\nimport FilterForm from './FilterForm'\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport ListTableMobile from '../../../components/list/ListTableMobile'\r\nimport Delete from '@material-ui/icons/DeleteOutline'\r\nimport Check from '@material-ui/icons/Check'\r\n\r\nconst ClinicList = ({ ...props }) => {\r\n  const { _setOpenScreen, _setCompleteRequest, userInfo, _setSecondRequest, _setSnackbar,\r\n    paxList, _setClinicDetail, history, roleUsed } = props\r\n  const [columns, setColumns] = useState([])\r\n  const [data, setData] = useState([])\r\n  const [open, setOpen] = useState(false);\r\n  const [dataUpdate, setDataUpdate] = useState(null)\r\n\r\n  useEffect(() => {\r\n    _setOpenScreen(\"Clinic List\")\r\n    window.scrollTo(0, 0)\r\n    let columns = [\r\n      { title: \"ID\", field: 'id', width: 100 },\r\n      { title: FormatText('clinic_name'), field: 'name', width: 300 },\r\n      { title: FormatText('common_address'), field: 'address' },\r\n      { title: 'Status', field: 'status' },\r\n    ]\r\n    setColumns(columns)\r\n    const { name, email, phone } = userInfo\r\n    // let name = userInfo.name ? userInfo.name : ''\r\n    // let email = userInfo.email ? userInfo.email : ''\r\n    // let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email, }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    const healthKlinikREquest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"healthKlinik\",\r\n      urlParams: \"\",\r\n      customHeaders,\r\n      // serviceRole: 'health.admin',\r\n    }\r\n\r\n    // if (!paxList || (paxList && paxList.klinikList.length === 0)) {\r\n    _setCompleteRequest(healthKlinikREquest)\r\n    // }\r\n\r\n  }, [_setOpenScreen, _setCompleteRequest, userInfo])\r\n\r\n  useEffect(() => {\r\n    let orderedData = paxList.klinikList ? paxList.klinikList : []\r\n    if (Array.isArray(orderedData) && orderedData.length > 0) {\r\n      orderedData.sort((a, b) => {\r\n        let x = a.id\r\n        let y = b.id\r\n        return x - y\r\n      })\r\n      setData(orderedData)\r\n    }\r\n    else setData([])\r\n  }, [paxList])\r\n\r\n  const handleUpdate = data => {\r\n    // console.log(data)\r\n    if (data.status === 'active') {\r\n      let successSnackbar = { open: true, severity: \"success\", message: FormatText('clinic_active'), }\r\n      _setSnackbar(successSnackbar)\r\n    }\r\n    else {\r\n      setDataUpdate(data)\r\n      setOpen(true)\r\n    }\r\n  }\r\n\r\n  const handleDelete = data => {\r\n    // DELETE /health/admin/clinics/{id}/users/{userid}\r\n    let id = data.id\r\n    let name = userInfo.name ? userInfo.name : ''\r\n    let email = userInfo.email ? userInfo.email : ''\r\n    let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    let deleteRequest = {\r\n      request: {},\r\n      method: \"DELETE\",\r\n      serviceCode: \"DELETE_CLINIC\",\r\n      urlParams: `/${id}`,\r\n      customHeaders,\r\n    }\r\n\r\n    let getClinicRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"healthKlinik\",\r\n      urlParams: \"\",\r\n      customHeaders,\r\n    }\r\n\r\n    if (data.status === 'inactive') {\r\n      let successSnackbar = { open: true, severity: \"success\", message: FormatText('clinic_inactive'), }\r\n      _setSnackbar(successSnackbar)\r\n    } else {\r\n      _setCompleteRequest(deleteRequest)\r\n      _setSecondRequest(getClinicRequest)\r\n    }\r\n\r\n  }\r\n\r\n  const handleRowClicked = data => {\r\n    _setClinicDetail(data)\r\n    // history.push('/KSetting')\r\n    // console.log(\"DATA: \", data)\r\n    const id = data.id\r\n    const { name, email, phone } = userInfo\r\n\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    let getClinicUserRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CLINIC_USER\",\r\n      urlParams: `/${id}`,\r\n      customHeaders,\r\n    }\r\n    if (roleUsed === 'member') history.push('/KSetting')\r\n    else _setCompleteRequest(getClinicUserRequest)\r\n  }\r\n\r\n  const handleChoose = val => {\r\n    const { name, email, phone } = userInfo\r\n    const customHeaders = { name, email, }\r\n    if (phone) customHeaders.phone = phone\r\n    let regisClinicRequest = {\r\n      request: {},\r\n      method: \"POST\",\r\n      serviceCode: \"SEND_CLINIC_ACTIVATION\",\r\n      urlParams: `/${dataUpdate.id}/activation`,\r\n      customHeaders,\r\n    }\r\n    _setCompleteRequest(regisClinicRequest)\r\n\r\n    // let addClinicUserRequest = {\r\n    //   request: [\r\n    //     { \r\n    //     name: dataUpdate.created_by.name, \r\n    //     email: dataUpdate.created_by.email, \r\n    //     phone: dataUpdate.created_by.name.phone, \r\n    //     role: \"clinic.admin\" }\r\n    //   ],\r\n    //   method: \"POST\",\r\n    //   serviceCode: \"ADD_CLINIC_USER\",\r\n    //   urlParams: `/${dataUpdate.id}/users`,\r\n    //   customHeaders,\r\n    // }\r\n    // _setSecondRequest(addClinicUserRequest)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const setFilteredData = filter => {\r\n    // console.log(filter)\r\n    let orderedData = paxList.klinikList ? paxList.klinikList : []\r\n    let filteredData = []\r\n    if (filter === 'active') {\r\n      // console.log(orderedData)\r\n      filteredData = orderedData.filter(item => item.status === 'active')\r\n    }\r\n    else if (filter === 'register') {\r\n      // console.log(orderedData)\r\n      filteredData = orderedData.filter(item => item.status === 'register')\r\n    }\r\n    else filteredData = orderedData\r\n\r\n\r\n    setData(filteredData)\r\n  }\r\n\r\n  return (\r\n    <Grid>\r\n      <Hidden smDown>\r\n        <FilterForm props={props} setFilteredData={setFilteredData} />\r\n        <ClinicRUDTable\r\n          title={'Clinic List'}\r\n          columns={columns}\r\n          data={data}\r\n          parentProps={props}\r\n          updatedata={handleUpdate}\r\n          deletedata={handleDelete}\r\n          rowClicked={handleRowClicked}\r\n          confirmdeletetext={FormatText('clinic_inactive_confirmation')}\r\n          update\r\n          action={roleUsed === 'member' ? false : true}\r\n          roleUsed={roleUsed}\r\n        />\r\n        <ConfirmationDialogRaw\r\n          id=\"ringtone-menu\"\r\n          keepMounted\r\n          open={open}\r\n          onClose={handleClose}\r\n          header=\"Activate\"\r\n          content={dataUpdate && dataUpdate.name}\r\n          handleChoose={handleChoose}\r\n        />\r\n        <Grid container>\r\n          <div style={{ height: window.screen.height - 700 }} />\r\n        </Grid>\r\n\r\n      </Hidden>\r\n      <Hidden smUp>\r\n      <FilterForm props={props} setFilteredData={setFilteredData} />\r\n        <Card style={{ marginTop: 10 }}>\r\n          <div style={{ backgroundColor: '#f4f0ec', padding: 5, width: '100%' }}>\r\n            <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              Clinic List\r\n              </Typography>\r\n          </div>\r\n          <div style={{ marginLeft: 15, marginRight: 15 }}>\r\n            <ListTableMobile\r\n              data={data}\r\n              column={columns}\r\n              button={true}\r\n              arrow={true}\r\n              onClickList={handleRowClicked}\r\n              action={true}\r\n              IconDeleteCustomize={<Delete/>}\r\n              IconUpdateCustomize={<Check/>}\r\n              onClickDelete={handleDelete}\r\n              onClickUpdate={handleUpdate}\r\n              titleTooltipDelete='Delete'\r\n              titleTooltipUpdate='Active'\r\n            />\r\n          </div>\r\n        </Card>\r\n      </Hidden>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  clientList: store.clientList.list,\r\n  userDetail: store.clientList.detail,\r\n  userFiltered: store.clientList.filteredList,\r\n  userInfo: store.userInfo.info,\r\n  paxlistStatus: store.menu.paxList,\r\n  paxList: store.paxList,\r\n  roleUsed: store.userInfo.roleUsed,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)), _setSnackbar: val => dispatch(setSnackbar(val)),\r\n    _setSecondRequest: val => dispatch(setSecondRequest(val)),\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.urlParams))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n    _setClinicDetail: val => dispatch(setClinikDetail(val)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClinicList)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole, setSecondRequest\r\n} from '../../../actions/ServiceActions'\r\nimport { setClinikDetail, setCityList } from \"../../../actions/PaxListActions\";\r\n\r\nimport { Button, Typography, Card, Grid, FormHelperText, FormControl } from '@material-ui/core';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\nimport SimpleAutocomplete from '../../../components/autocomplete/SimpleAutocomplete';\r\nimport FormatText from '../../../i18n'\r\nimport Config from '../../../config'\r\n\r\nconst ClinicRegistration = props => {\r\n  const { paxList, _setCompleteRequest, userInfo, _setCityList, _setOpenScreen, } = props\r\n\r\n  const [state, setState] = useState({ city: '', submitErrorMessage: '', clinic_parents: [] })\r\n\r\n  useEffect(() => {\r\n    _setOpenScreen(\"Clinic Registration\")\r\n\r\n  }, [_setOpenScreen])\r\n\r\n  useEffect(() => {\r\n    // console.log(\"HMM\")\r\n    const { name, email, phone } = userInfo\r\n    // let name = userInfo.name ? userInfo.name : ''\r\n    // let email = userInfo.email ? userInfo.email : ''\r\n    // let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let cityRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CITY_LIST\",\r\n      urlParams: \"/cities?&citykey=a\",\r\n      customHeaders\r\n    }\r\n\r\n    // let clinic_parent_request = {\r\n    //   request: {},\r\n    //   method: \"GET\",\r\n    //   serviceCode: \"GET_CLINIC_PARENTS\",\r\n    //   // urlParams: \"/cities?&citykey=a\",\r\n    //   customHeaders\r\n    // }\r\n\r\n    _setCompleteRequest(cityRequest)\r\n    // _setCompleteRequest(clinic_parent_request)\r\n    // _setSecondRequest(cityRequest)\r\n  }, [_setCompleteRequest, userInfo])\r\n\r\n  useEffect(() => {\r\n    // console.log(\"DIPANGGIL BERAPA KALI???\")\r\n    // if (paxList.clinic_parents.length === 1) setState({ ...state, parent_id: parseInt(paxList.clinic_parents[0].id) })\r\n    setState(previousState => ({\r\n      ...previousState,\r\n      clinic_parents: paxList.clinic_parents,\r\n      parent_id: paxList.clinic_parents.length === 1 ? parseInt(paxList.clinic_parents[0].id) : 0\r\n    }))\r\n  }, [paxList.clinic_parents])\r\n\r\n  const handleChange = prop => event => {\r\n    let valid = FormValidation(prop, event.target.value)\r\n    setState({\r\n      ...state,\r\n      [prop]: event.target.value,\r\n      [prop + 'ErrorMessage']: valid.errorMessage,\r\n      isError: valid.error,\r\n      submitErrorMessage: ''\r\n    })\r\n  }\r\n\r\n  const handleInputChange = val => {\r\n    let name = userInfo.name ? userInfo.name : ''\r\n    let email = userInfo.email ? userInfo.email : ''\r\n    let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let cityRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CITY_LIST\",\r\n      urlParams: `/cities?&citykey=${val}`,\r\n      customHeaders\r\n    }\r\n\r\n    if (paxList.cityList && val) {\r\n      _setCompleteRequest(cityRequest)\r\n    }\r\n    else {\r\n      _setCityList([{ name: '' }])\r\n    }\r\n  }\r\n\r\n  const handlePick = city => {\r\n    // console.log(\"ONPICK: \", city)\r\n    setState({\r\n      ...state,\r\n      city: city ? city.city : '',\r\n      submitErrorMessage: '',\r\n    })\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    let name = userInfo.name ? userInfo.name : ''\r\n    let email = userInfo.email ? userInfo.email : ''\r\n    let phone = userInfo.phone ? userInfo.phone : ''\r\n    const { city, clinicName, address, } = state    // parent_id } = state\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    if (city && clinicName && address) {\r\n      // HARDCODED PARENT_ID\r\n      let regisClinicRequest = {\r\n        request: {\r\n          city,\r\n          name: clinicName,\r\n          address,\r\n          parent_id: Config.parentClinic,\r\n          vendor_close: { day: [], date: [] },\r\n          products: [],\r\n          operational: [\r\n            {\r\n              \"day\": 1,\r\n              \"hour\": \"08:00-17:00\"\r\n            },\r\n            {\r\n              \"day\": 2,\r\n              \"hour\": \"08:00-17:00\"\r\n            },\r\n            {\r\n              \"day\": 3,\r\n              \"hour\": \"08:00-17:00\"\r\n            },\r\n            {\r\n              \"day\": 4,\r\n              \"hour\": \"08:00-17:00\"\r\n            },\r\n            {\r\n              \"day\": 5,\r\n              \"hour\": \"08:00-17:00\"\r\n            },\r\n            {\r\n              \"day\": 6,\r\n              \"hour\": \"08:00-17:00\"\r\n            }\r\n          ]\r\n        },\r\n        method: \"POST\",\r\n        serviceCode: \"CLINIC_REGISTRATION\",\r\n        customHeaders\r\n      }\r\n      _setCompleteRequest(regisClinicRequest)\r\n      // console.log(regisClinicRequest)\r\n\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        submitErrorMessage: FormatText('err_submit'),\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n      <Card variant=\"elevation\" style={{ marginTop: 20 }} >\r\n        <CardContent style={{ width: 320, textAlign: 'center' }}>\r\n          <Typography variant=\"h5\" style={{ marginBottom: 15 }} ><b>{FormatText('app_register')}</b> </Typography>\r\n          <Grid container item direction=\"column\" >\r\n            <FormControl fullWidth style={{ marginBottom: 15 }} >\r\n              <InputLabel error={state.clinicNameErrorMessage ? true : false} htmlFor=\"nameClinic\">{FormatText('clinic_name')}</InputLabel>\r\n              <Input\r\n                error={state.clinicNameErrorMessage ? true : false}\r\n                id=\"standard-adornment-name\"\r\n                type='text'\r\n                onChange={handleChange('clinicName')}\r\n              />\r\n              {state.clinicNameErrorMessage ? <FormHelperText error id=\"name-helper\">{state.clinicNameErrorMessage}</FormHelperText> : null}\r\n            </FormControl>\r\n\r\n            <FormControl fullWidth style={{ marginBottom: 15, marginRight: 5 }} >\r\n              <SimpleAutocomplete\r\n                id=\"registerClinicChooseCity\"\r\n                options={props.paxList.cityList[0] ? props.paxList.cityList : []}\r\n                // width={300}\r\n                optionItem={'city'}\r\n                label={FormatText('clinic_city')}\r\n                notShrink={true}\r\n                // onSelect={handleSelect}\r\n                handleInputChange={handleInputChange}\r\n                onPick={handlePick}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl fullWidth style={{ marginBottom: 15 }} >\r\n              <InputLabel error={state.phoneErrorMessage ? true : false} htmlFor=\"standard-address\">{FormatText('clinic_address')}</InputLabel>\r\n              <Input\r\n                error={state.addressErrorMessage ? true : false}\r\n                id=\"standard-adornment-address\"\r\n                type='text'\r\n                onChange={handleChange('address')}\r\n              />\r\n              {state.addressErrorMessage ? <FormHelperText error id=\"address-helper-text\">{state.addressErrorMessage}</FormHelperText> : null}\r\n            </FormControl>\r\n            <br />\r\n            <br />\r\n\r\n\r\n            <Button onClick={handleSubmit} fullWidth variant=\"contained\" color=\"primary\">{FormatText('app_register')}</Button>\r\n            {state.submitErrorMessage ? <FormHelperText error id=\"email-helper-text\">{state.submitErrorMessage}</FormHelperText> : null}\r\n\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n      <Grid container>\r\n        <div style={{ height: window.screen.height - 550 }}></div>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  clientList: store.clientList.list,\r\n  userDetail: store.clientList.detail,\r\n  userFiltered: store.clientList.filteredList,\r\n  userInfo: store.userInfo.info,\r\n  paxlistStatus: store.menu.paxList,\r\n  paxList: store.paxList\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)),\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.urlParams))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n    _setClinicDetail: val => dispatch(setClinikDetail(val)),\r\n    _setCityList: val => dispatch(setCityList(val)),\r\n    _setSecondRequest: val => dispatch(setSecondRequest(val)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClinicRegistration)","\r\nimport React, { useState } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Grid, Typography, Button, Card, CardContent, CardActions } from '@material-ui/core'\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst UpdateUserDialog = ({ ...props }) => {\r\n  // const [roleList, setRoleList] = useState([])\r\n  // const [available, setAvailable] = useState([])\r\n  // const [newRoleList, setNewRoleList] = useState([])\r\n  const [showAdd, setShowAdd] = useState(true)\r\n  const [state, setState] = useState({\r\n    addRoleList: [],\r\n  })\r\n\r\n  const handleClose = () => {\r\n    setState({ addRoleList: [], })\r\n    props.handleOpen(false)\r\n    setShowAdd(true)\r\n  };\r\n\r\n  const handleChange = props => e => {\r\n    let valid = FormValidation(props, e.target.value)\r\n    setState({\r\n      ...state,\r\n      [props]: e.target.value,\r\n      [props + 'ErrorMessage']: valid.errorMessage,\r\n    })\r\n  }\r\n\r\n  const handleAddClientRole = () => {\r\n    let objRole = {}\r\n    if (state.roleId && state.roleDescription) {\r\n      objRole.roleId = state.roleId\r\n      objRole.roleDescription = state.roleDescription\r\n      setState({\r\n        ...state,\r\n        addRoleList: [...state.addRoleList, objRole],\r\n        roleId: '',\r\n        roleDescription: '',\r\n      })\r\n      setShowAdd(false)\r\n      objRole = {}\r\n    }\r\n  }\r\n\r\n  const handleSave = () => {\r\n    props.handleSave(state.addRoleList)\r\n    props.handleOpen(false)\r\n    setShowAdd(true)\r\n    setState({ ...state, addRoleList: [], })\r\n  }\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth={'sm'} open={props.open} onClose={handleClose} scroll={'paper'} >\r\n      <DialogTitle\r\n        id=\"max-width-dialog-title\"\r\n        onClose={handleClose}\r\n      >\r\n        Client: {props.data ? props.data.clientName : ''}\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems='flex-start' >\r\n          <Grid item md={6}>\r\n            <Typography variant='subtitle2'>Role Id</Typography>\r\n            <List dense >\r\n              {\r\n                state.addRoleList[0]\r\n                  ? state.addRoleList.map((item, i) => (\r\n                    <Grid container direction=\"row\" justify=\"flex-start\" alignItems='center' key={i} >\r\n                      <ListItemText primary={'- ' + item.roleId} />\r\n                    </Grid >\r\n                  ))\r\n                  : <ListItemText secondary={'- none'} />\r\n              }\r\n            </List>\r\n          </Grid>\r\n\r\n          <Grid item md={6}>\r\n            <Typography variant='subtitle2' >Description</Typography>\r\n            <List dense >\r\n              {\r\n                state.addRoleList[0]\r\n                  ? state.addRoleList.map((item, i) => (\r\n                    <Grid container direction=\"row\" justify=\"flex-start\" alignItems='center' key={i} >\r\n                      <ListItemText primary={'- ' + item.roleDescription} />\r\n                    </Grid >\r\n                  ))\r\n                  : <ListItemText secondary={'- none'} />\r\n              }\r\n            </List>\r\n          </Grid>\r\n          {\r\n            showAdd\r\n              ? <Card style={{ marginTop: 20 }} >\r\n                <CardContent>\r\n                  <Grid>\r\n                    <Typography variant='subtitle2'>\r\n                      Add RoleId and Description\r\n                </Typography>\r\n                  </Grid>\r\n                  <Grid>\r\n                    <TextField\r\n                      autoFocus\r\n                      margin=\"dense\"\r\n                      size=\"small\"\r\n                      onChange={handleChange('roleId')}\r\n                      id=\"standard-roleId\"\r\n                      label=\"RoleId\"\r\n                      placeholder=\"RoleId\"\r\n                      value={state.roleId}\r\n                      helperText={state.roleIdErrorMessage ? state.roleIdErrorMessage : ''}\r\n                      error={state.roleIdErrorMessage ? true : false}\r\n                    />\r\n                  </Grid>\r\n                  <Grid >\r\n                    <TextField\r\n                      size=\"small\"\r\n                      onChange={handleChange('roleDescription')}\r\n                      id=\"standard-roleDesc\"\r\n                      label=\"Description\"\r\n                      placeholder=\"Role description\"\r\n                      value={state.roleDescription}\r\n                      helperText={state.roleDescriptionErrorMessage ? state.roleDescriptionErrorMessage : ''}\r\n                      error={state.roleDescriptionErrorMessage ? true : false}\r\n                    />\r\n                  </Grid>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button\r\n                    disabled={state.roleId && state.roleDescription ? false : true}\r\n                    variant='outlined'\r\n                    size=\"small\"\r\n                    color=\"secondary\"\r\n                    onClick={handleAddClientRole}\r\n                  >\r\n                    Add\r\n              </Button>\r\n                </CardActions>\r\n              </Card>\r\n              : null\r\n          }\r\n\r\n        </Grid>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button onClick={handleClose} variant='outlined' color=\"primary\">\r\n              Cancel\r\n          </Button>\r\n          </Grid>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button onClick={handleSave} variant='contained' color=\"primary\">\r\n              Save\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default UpdateUserDialog\r\n","\r\nimport React, { useState ,useEffect} from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Grid, Typography, Button} from '@material-ui/core'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst UpdateBasicInfo = ({ ...props }) => {\r\n    // const [roleList, setRoleList] = useState([])\r\n    // const [available, setAvailable] = useState([])\r\n    // const [newRoleList, setNewRoleList] = useState([])\r\n    // console.log('data',{ [props.dataField.id]:props.dataField.field})\r\n    // const [showAdd, setShowAdd] = useState(true)\r\n    const [state, setState] = useState({\r\n        basicInfo:{},\r\n        [props.dataField.id]:props.dataField.field\r\n    })\r\n    const profile = [\r\n      \"Web Application\",\r\n      \"Android\",\r\n      \"IOS\"\r\n    ]\r\n    useEffect(() => {\r\n        setState({\r\n            [props.dataField.id]:props.dataField.field\r\n        })\r\n    },[props.dataField])\r\n    \r\n    const handleClose = () => {\r\n        setState({ addRoleList: [], })\r\n        props.handleOpen({open:false})\r\n        // setShowAdd(true)\r\n    };\r\n\r\n    const handleChange = val => e => {\r\n        let valid = FormValidation(val, e.target.value)\r\n        setState({\r\n            ...state,\r\n            basicInfo:{\r\n                ...state.basicInfo,\r\n                [props.dataField.id]: e.target.value,\r\n            },\r\n            [props.dataField.id]: e.target.value,\r\n            [val + 'ErrorMessage']: valid.errorMessage,\r\n        })\r\n    }\r\n\r\n    const handleSave = () => {\r\n        props.handleSave(state.basicInfo)\r\n        props.handleOpen(false)\r\n        // setShowAdd(true)\r\n        setState({ ...state, addRoleList: [], })\r\n    }\r\n\r\n    const disableButton = ()=>{\r\n        if (props.dataField.id==='emailSender'){\r\n            if(state[`${props.dataField.id}ErrorMessage`]){\r\n                return true\r\n            }\r\n            // else if (state[props.dataField.id]==\"\"){\r\n            //     return true\r\n            // }\r\n            else {\r\n               return false\r\n            }\r\n        }\r\n        else if (props.dataField.id==='emailSenderMaskingName'){\r\n            if(state[`${props.dataField.id}ErrorMessage`]){\r\n                return true\r\n            }\r\n            // else if (state[props.dataField.id]==\"\"){\r\n            //     return true\r\n            // }\r\n            else {\r\n                return false\r\n            }\r\n        }\r\n        else if (!state[props.dataField.id]){\r\n            return true\r\n        }\r\n        else if (state[`${props.dataField.id}ErrorMessage`]){\r\n            return true\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog fullWidth maxWidth={'sm'} open={props.open} onClose={handleClose} scroll={'paper'} >\r\n            <DialogTitle\r\n                id=\"max-width-dialog-title\"\r\n                onClose={handleClose}\r\n            >\r\n                Client: {props.data ? props.data.clientName : ''}\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n              {props.dataField.id==='initialUserRole' || props.dataField.id==='profile'?\r\n                <TextField\r\n                autoFocus\r\n                fullWidth\r\n                select\r\n                margin=\"dense\"\r\n                size=\"small\"\r\n                onChange={handleChange(props.dataField.id)}\r\n                id=\"standard-roleId\"\r\n                label={props.dataField.title}\r\n                placeholder={props.dataField.title}\r\n                value={state[props.dataField.id]}\r\n                \r\n            >\r\n              { props.dataField.id==='profile'? profile.map(item=>(\r\n                 <MenuItem key={item} value={item}>\r\n                 {item}\r\n                </MenuItem>\r\n              )):props.data.roleDetails.map(item=>\r\n                (\r\n                  <MenuItem key={item.roleId} value={item.roleId}>\r\n                      {item.roleId}\r\n                  </MenuItem>\r\n                )\r\n              )}\r\n            </TextField>:\r\n            <TextField\r\n                    autoFocus\r\n                    fullWidth\r\n                    margin=\"dense\"\r\n                    size=\"small\"\r\n                    onChange={handleChange(props.dataField.id)}\r\n                    id=\"standard-roleId\"\r\n                    label={props.dataField.title}\r\n                    placeholder={props.dataField.title}\r\n                    value={state[props.dataField.id]}\r\n                    helperText={state[`${props.dataField.id}ErrorMessage`] ? state[`${props.dataField.id}ErrorMessage`] : ''}\r\n                    error={state[`${props.dataField.id}ErrorMessage`] ? true : false}\r\n                />  \r\n            \r\n            }\r\n                {/* <TextField\r\n                    autoFocus\r\n                    fullWidth\r\n                    margin=\"dense\"\r\n                    size=\"small\"\r\n                    onChange={handleChange(props.dataField.id)}\r\n                    id=\"standard-roleId\"\r\n                    label={props.dataField.title}\r\n                    placeholder={props.dataField.title}\r\n                    value={state[props.dataField.id]}\r\n                    // helperText={state.roleIdErrorMessage ? state.roleIdErrorMessage : ''}\r\n                    // error={state.roleIdErrorMessage ? true : false}\r\n                /> */}\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n                    <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                        <Button onClick={handleClose} variant='outlined' color=\"primary\">\r\n                            Cancel\r\n          </Button>\r\n                    </Grid>\r\n                    <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                        <Button onClick={handleSave} variant='contained' color=\"primary\" disabled={disableButton()}>\r\n                            Edit\r\n          </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default UpdateBasicInfo\r\n","\r\nimport React, { useState } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Grid, Typography, Button } from '@material-ui/core'\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst AddUrlOriginDialog = ({ ...props }) => {\r\n  // const [roleList, setRoleList] = useState([])\r\n  // const [available, setAvailable] = useState([])\r\n  // const [newRoleList, setNewRoleList] = useState([])\r\n  // const [showAdd, setShowAdd] = useState(true)\r\n  const [state, setState] = useState({\r\n    originUris: [],\r\n    redirectUris: []\r\n  })\r\n  // console.log('redirect', props.redirect)\r\n  const handleClose = () => {\r\n    setState({ addRoleList: [], })\r\n    props.handleOpen(false)\r\n    // setShowAdd(true)\r\n  };\r\n\r\n  const handleChange = props => e => {\r\n    let valid = FormValidation(props, e.target.value)\r\n    setState({\r\n      ...state,\r\n      [props]: { uri: e.target.value },\r\n      [props + 'ErrorMessage']: valid.errorMessage,\r\n    })\r\n  }\r\n\r\n  const handleSave = () => {\r\n    if (!props.redirect) {\r\n      props.handleSave(state.originUris)\r\n    }\r\n    else {\r\n      props.handleSave(state.redirectUris)\r\n    }\r\n    props.handleOpen(false)\r\n    // setShowAdd(true)\r\n    setState({ ...state, addRoleList: [], })\r\n  }\r\n  const disabledButton = () => {\r\n    let origin = state.originUris ? state.originUris.uri : \"\"\r\n    let redirect = state.redirectUris ? state.redirectUris.uri : \"\"\r\n    if (state.originUrisErrorMessage) return true\r\n    else if (state.redirectUrisErrorMessage) return true\r\n    else if (origin) return false\r\n    else if (redirect) return false\r\n    else return true\r\n  }\r\n  return (\r\n    <Dialog fullWidth maxWidth={'sm'} open={props.open} onClose={handleClose} scroll={'paper'} >\r\n      <DialogTitle\r\n        id=\"max-width-dialog-title\"\r\n        onClose={handleClose}\r\n      >\r\n        Client: {props.data ? props.data.clientName : ''}\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        {!props.redirect ?\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            size=\"small\"\r\n            onChange={handleChange('originUris')}\r\n            id=\"standard-roleId\"\r\n            label=\"Origin URI\"\r\n            placeholder=\"Origin URI\"\r\n            value={state.originUris ? state.originUris.uri : \"\"}\r\n            helperText={state.originUrisErrorMessage ? state.originUrisErrorMessage : ''}\r\n            error={state.originUrisErrorMessage ? true : false}\r\n          /> :\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            size=\"small\"\r\n            onChange={handleChange('redirectUris')}\r\n            id=\"standard-roleId\"\r\n            label=\"Redirect URI\"\r\n            placeholder=\"Redirect URI\"\r\n            value={state.redirectUris ? state.redirectUris.uri : \"\"}\r\n            helperText={state.redirectUrisErrorMessage ? state.redirectUrisErrorMessage : ''}\r\n            error={state.redirectUrisErrorMessage ? true : false}\r\n          />\r\n        }\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button onClick={handleClose} variant='outlined' color=\"primary\">\r\n              Cancel\r\n          </Button>\r\n          </Grid>\r\n          <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n            <Button onClick={handleSave} variant='contained' color=\"primary\" disabled={disabledButton()}>\r\n              Save\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddUrlOriginDialog\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n// import TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // overflowX: 'auto',\r\n        // marginRight: 'auto',\r\n        // marginLeft: 'auto',\r\n        // marginTop: '50px',\r\n        // padding: '10px',\r\n        // margin: '10px',\r\n        width: '100%'\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n    },\r\n    table: {\r\n        minWidth: 500,\r\n        // whiteSpace:\"noWrap\"\r\n    },\r\n    rootToolbar: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst TableCustomize = ({ ...props }) => {\r\n    const column = props.column\r\n    let data = props.data\r\n    data.map(item => {\r\n        column.map(items => {\r\n            if (typeof item[items.field] === 'boolean') {\r\n                if (item[items.field]) item[items.field] = 'True'\r\n                else item[items.field] = 'False'\r\n            }\r\n            return null\r\n        })\r\n        return null\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        // let indexClient = 0\r\n        // data.map((item, index) => {\r\n        //     if (item.client) {\r\n        //         indexClient = index\r\n        //     }\r\n        //     return null\r\n        // })\r\n        // console.log('index',indexClient)\r\n        // data.splice(0, indexClient + 1)\r\n        setDataSearch(data)\r\n        return () => {\r\n            setFilterValue('')\r\n        }\r\n    }, [data])\r\n    const classes = useStyles();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    // const [search, setSearch] = useState()\r\n    const [dataSearch, setDataSearch] = useState([])\r\n    const [filterValue, setFilterValue] = useState('')\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, dataSearch.length - page * rowsPerPage);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleGetData = (item) => {\r\n        props.handleEditOpen(true, true, item)\r\n    }\r\n\r\n    const handleSearch = (e) => {\r\n        if (e.target.value) {\r\n            setDataSearch(\r\n                data.filter(item => item.clientId === e.target.value)\r\n            )\r\n            setFilterValue(e.target.value)\r\n            setPage(0);\r\n        }\r\n        else {\r\n            setDataSearch(\r\n                data\r\n            )\r\n            setFilterValue(e.target.value)\r\n        }\r\n    }\r\n    const findDuplicateClientId = (arrayOfObj, key) => {\r\n        return arrayOfObj.filter((item, index, array) => {\r\n            return array.map((mapItem) => mapItem[key]).indexOf(item[key]) === index\r\n        })\r\n    }\r\n    // data.filter(item=>item.clientId===search)\r\n    // console.log('datawkwkw',data)\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Toolbar>\r\n                <Grid container >\r\n                    <Grid item sm={10}>\r\n                        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                            {props.title}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={2}>\r\n                        {props.options ? props.options.filterClientId ?\r\n                            <form className={classes.rootForm} noValidate autoComplete=\"off\">\r\n\r\n                                <TextField\r\n                                    label='filter By Client Id'\r\n                                    fullWidth\r\n                                    placeholder='ClientId'\r\n                                    onChange={handleSearch}\r\n                                    value={filterValue}\r\n                                    select\r\n                                    InputLabelProps={{\r\n                                        shrink: true\r\n                                    }}\r\n                                >\r\n                                    <MenuItem key={null} value={null}>\r\n                                        All\r\n                                    </MenuItem>\r\n                                    {findDuplicateClientId(data, 'clientId').map(item =>\r\n                                        <MenuItem key={item.clientId} value={item.clientId}>\r\n                                            {item.clientId}\r\n                                        </MenuItem>\r\n                                    )}\r\n                                </TextField>\r\n                            </form> : '' : <form className={classes.rootForm} noValidate autoComplete=\"off\">\r\n\r\n                                <TextField\r\n                                    label='filter By Client Id'\r\n                                    fullWidth\r\n                                    placeholder='ClientId'\r\n                                    onChange={handleSearch}\r\n                                    value={filterValue}\r\n                                    select\r\n                                    InputLabelProps={{\r\n                                        shrink: true\r\n                                    }}\r\n                                >\r\n                                    <MenuItem key={null} value={null}>\r\n                                        All\r\n                                    </MenuItem>\r\n                                    {findDuplicateClientId(data, 'clientId').map(item =>\r\n                                        <MenuItem key={item.clientId} value={item.clientId}>\r\n                                            {item.clientId}\r\n                                        </MenuItem>\r\n                                    )}\r\n                                </TextField>\r\n                            </form>\r\n                        }\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Toolbar>\r\n            {/* <TableContainer component='paper'> */}\r\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        {column.map((item, index) =>\r\n                            (\r\n                                <TableCell key={index} align='left'>\r\n                                    {item.title}\r\n                                </TableCell>\r\n                            )\r\n                        )}\r\n                        <TableCell align='right'>\r\n                            Actions\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {(rowsPerPage > 0\r\n                        ? dataSearch.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        : dataSearch).map((item, index) =>\r\n                            (<TableRow key={index}>\r\n                                {column.map((item1, index1) =>\r\n                                    (<TableCell key={index1} align='left'>\r\n                                        {item[item1.field]}\r\n                                    </TableCell>)\r\n                                )}\r\n                                <TableCell align='right'>\r\n                                    <Tooltip title='Edit'>\r\n                                        <EditIcon onClick={() => handleGetData(item)} style={{cursor:'pointer'}}/>\r\n                                    </Tooltip>\r\n                                </TableCell>\r\n                            </TableRow>)\r\n                        )}\r\n                    {emptyRows > 0 && (\r\n                        <TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                        </TableRow>\r\n                    )}\r\n                </TableBody>\r\n                {props.options ? props.options.pagination ? <TableFooter>\r\n                    <TableRow>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                            colSpan={6}\r\n                            count={dataSearch.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            SelectProps={{\r\n                                inputProps: { 'aria-label': 'rows per page' },\r\n                                native: true,\r\n                            }}\r\n                            onChangePage={handleChangePage}\r\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                            ActionsComponent={TablePaginationActions}\r\n                        />\r\n                    </TableRow>\r\n                </TableFooter> : \"\" : <TableFooter>\r\n                        <TableRow>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                colSpan={6}\r\n                                count={dataSearch.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                SelectProps={{\r\n                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                    native: true,\r\n                                }}\r\n                                onChangePage={handleChangePage}\r\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                ActionsComponent={TablePaginationActions}\r\n                            />\r\n                        </TableRow>\r\n                    </TableFooter>}\r\n\r\n            </Table>\r\n            {/* </TableContainer> */}\r\n        </Paper>\r\n\r\n    )\r\n}\r\n\r\nexport default TableCustomize\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    root: {\r\n        flexShrink: 0,\r\n        marginLeft: theme.spacing(2.5),\r\n    },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n    const handleFirstPageButtonClick = (event) => {\r\n        onChangePage(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event) => {\r\n        onChangePage(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event) => {\r\n        onChangePage(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event) => {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n            </IconButton>\r\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n};","import React, { useState, useEffect } from 'react'\r\nimport { Dialog, DialogTitle, DialogActions, DialogContent } from '@material-ui/core'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button, MenuItem, TextField } from '@material-ui/core'\r\n\r\nconst styles = (theme) => ({\r\n    rootForm: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            // width: '25ch',\r\n        },\r\n    },\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    asterisk: {\r\n        color: 'red'\r\n    },\r\n    addButton: {\r\n        color: 'white'\r\n    }\r\n});\r\n\r\nconst MUIDialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (<DialogTitle disableTypography className={classes.root} {...other}>\r\n        <Typography variant=\"h6\">{children}</Typography>\r\n        {onClose ? (\r\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                <CloseIcon />\r\n            </IconButton>\r\n        ) : null}\r\n    </DialogTitle>)\r\n})\r\n\r\nconst EditMessagingTemplateDialog = ({ ...props }) => {\r\n    const { classes } = props\r\n    const dataToUpdt = props.dataToUpdate\r\n    // console.log('datadddd',props.data)\r\n    const [state, setState] = useState({\r\n        dataToUpdate: {}\r\n    })\r\n    // const [data, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (dataToUpdt) {\r\n            setState({\r\n                dataToUpdate: dataToUpdt\r\n            })\r\n            // setData(props.data ? props.data : [])\r\n        }\r\n    }, [dataToUpdt,props.data])\r\n    const handleClose = () => {\r\n        // setState({})\r\n        props.handleClose(false, true)\r\n    }\r\n\r\n    const handleChange = id => e => {\r\n        setState({\r\n            ...state,\r\n            dataToUpdate: {\r\n                ...state.dataToUpdate,\r\n                [id]: e.target.value,\r\n                [id + 'Edit']: e.target.value\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const handleEditRequest = () => {\r\n        delete state.dataToUpdate['messagingTemplateCodeEdit']\r\n        delete state.dataToUpdate['messagingTemplateLangEdit']\r\n        delete state.dataToUpdate['subjectTemplateEdit']\r\n        delete state.dataToUpdate['contentTemplateEdit']\r\n        props.handleClose(false)\r\n        props.handleSave(state.dataToUpdate)\r\n    }\r\n   \r\n    return <Dialog fullWidth maxWidth={'xs'} open={props.open} onClose={handleClose} scroll={'paper'}>\r\n        <MUIDialogTitle\r\n            id=\"max-width-dialog-title\"\r\n            onClose={handleClose}\r\n        >\r\n            Edit Messaging Template\r\n        </MUIDialogTitle>\r\n        <DialogContent>\r\n            <form className={classes.rootForm} noValidate autoComplete=\"off\">\r\n                <TextField\r\n                    fullWidth\r\n                    id='messagingTemplateCode'\r\n                    onChange={handleChange('messagingTemplateCode')}\r\n                    value={state.dataToUpdate ? state.dataToUpdate.messagingTemplateCode : ''}\r\n                    label='Code'\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n                <TextField\r\n                    fullWidth\r\n                    select\r\n                    onChange={handleChange('messagingTemplateLang')}\r\n                    id='messagingTemplateLang'\r\n                    value={state.dataToUpdate ? state.dataToUpdate.messagingTemplateLang : ''}\r\n                    label='Languange'\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                >\r\n                    <MenuItem value={'en'}>\r\n                        EN\r\n                    </MenuItem>\r\n                    <MenuItem value='id'>\r\n                        ID\r\n                    </MenuItem>\r\n                </TextField>\r\n                <TextField\r\n                    fullWidth\r\n                    label='Subject'\r\n                    id='subjectTemplate'\r\n                    onChange={handleChange('subjectTemplate')}\r\n                    value={state.dataToUpdate ? state.dataToUpdate.subjectTemplate : ''}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n                <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    rows={5}\r\n                    onChange={handleChange('contentTemplate')}\r\n                    id='contentTemplate'\r\n                    label='Content'\r\n                    value={state.dataToUpdate ? state.dataToUpdate.contentTemplate : ''}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n            </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n                <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                    <Button color='primary' variant='contained'\r\n                        className={classes.addButton} onClick={handleEditRequest}>\r\n                        Edit\r\n                        </Button>\r\n                </Grid>\r\n                <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                    <Button onClick={handleClose} color='secondary' variant='contained' className={classes.addButton}>\r\n                        Cancel\r\n                        </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </DialogActions>\r\n    </Dialog>\r\n}\r\n\r\nexport default withStyles(styles)(EditMessagingTemplateDialog)","\r\nimport React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport BackIcon from '@material-ui/icons/ArrowBack';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddClientDialog from './AddClientDialog'\r\nimport UpdateBasicInfo from './updateBasicInfo'\r\nimport AddUrlOriginDialog from './AddUrlOriginDialog'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { Divider } from '@material-ui/core';\r\nimport TableCustomize from '../../../components/table/TableCustomize'\r\nimport EditMessagingTemplateDialog from './EditMessagingTemplate'\r\nimport { connect } from 'react-redux'\r\nimport {setClientMessagingEdit} from '../../../actions/ClientListActions'\r\n\r\nconst mapStateToProps = store => ({\r\n  messagingList: store.clientList.messagingList,\r\n  userInfo: store.userInfo.info,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setClientMessagingEdit: val =>{\r\n      dispatch(setClientMessagingEdit(val))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function FormDialog({ ...props }) {\r\n\r\n  const { userInfo, messagingList, _setClientMessagingEdit, completeRequest, } = props\r\n  const [data, setData] = useState([])\r\n  const [originUri, setOriginUri] = useState([])\r\n  const [redirectUri, setRedirectUri] = useState([])\r\n  const [clientData, setClientData] = useState({})\r\n  const [basicInfoReq, setBasicInfoReq] = useState({})\r\n\r\n  const [basicInfo, setBasicInfo] = useState([])\r\n  const [messagingTemplate, setMessagingTemplate] = useState([])\r\n\r\n  const [state, setState] = useState({\r\n    clientList: [],\r\n    dataField: {},\r\n    dataToUpdate: null,\r\n    messageToUpdate: null,\r\n    open: false,\r\n    openBasicInfo: false,\r\n    openOriginOri: false,\r\n    openRedirectOri: false,\r\n    openTemplateMessage: false\r\n  })\r\n  const [disabledBtn, setDisabledBtn] = useState(true)\r\n  // console.log('client', props.data)\r\n\r\n  useEffect(() => {\r\n    const {name, email, phone} = userInfo\r\n    // let name = userInfo.name\r\n    // let email = userInfo.email\r\n    // let phone = userInfo.phone\r\n    let customHeaders = { name, email }\r\n    let clientId = props.data.clientId\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let requestAllClient = {\r\n      request: {\r\n        clientId\r\n      },\r\n      method: \"GET\",\r\n      serviceCode: \"SELECT_ALL_MESSAGE\",\r\n      // customHeaders,\r\n      urlParams: `/clients/${clientId}/messaging-templates/`\r\n    }\r\n\r\n    completeRequest(requestAllClient)\r\n\r\n  }, [userInfo, completeRequest, props.data.clientId])\r\n\r\n  useEffect(() => {\r\n    // let arrayOriginUri = []\r\n    let arrayObjOrigin = []\r\n    let arrayRedirectUri = []\r\n    const basicData = { ...props.data }\r\n    if (Array.isArray(props.data.originURIs)) {\r\n      props.data.originURIs.map((item, index) => {\r\n        arrayObjOrigin.push({ uri: item, id: index })\r\n        return null\r\n      })\r\n    }\r\n    if (Array.isArray(props.data.redirectURIs)) {\r\n      props.data.redirectURIs.map((item, index) => {\r\n        arrayRedirectUri.push({ uri: item, id: index })\r\n        return null\r\n      })\r\n    }\r\n    setOriginUri(arrayObjOrigin)\r\n    setRedirectUri(arrayRedirectUri)\r\n    setClientData(props.data)\r\n    setBasicInfo([\r\n      {\r\n        title: \"Client ID\",\r\n        id: \"clientId\",\r\n        field: basicData.clientId,\r\n        edit: false\r\n      },\r\n      {\r\n        title: \"Client Secret\",\r\n        field: basicData.clientSecret,\r\n        id: \"clientSecret\",\r\n        edit: false\r\n      },\r\n      {\r\n        title: \"Client Name\",\r\n        field: basicData.clientName,\r\n        id: \"clientName\",\r\n        edit: true\r\n      },\r\n      {\r\n        title: \"Initial Role\",\r\n        id: \"initialUserRole\",\r\n        field: basicData.initialUserRole,\r\n        edit: true\r\n      },\r\n      {\r\n        title: \"Profile\",\r\n        id: \"profile\",\r\n        field: basicData.profile,\r\n        edit: true\r\n      },\r\n      {\r\n        title: \"Email Sender\",\r\n        id: \"emailSender\",\r\n        field: basicData.emailSender,\r\n        edit: true\r\n      },\r\n      {\r\n        title: \"Email Masking Name\",\r\n        id: \"emailSenderMaskingName\",\r\n        field: basicData.emailSenderMaskingName,\r\n        edit: true\r\n      },\r\n      {\r\n        title: 'Client Domain',\r\n        id: 'clientDomain',\r\n        field: basicData.clientDomain,\r\n        edit: true\r\n      }\r\n    ])\r\n    setData(props.data.roleDetails ? props.data.roleDetails : [{ roleId: 'jadul', roleDescription: 'save to delete' }])\r\n    setMessagingTemplate(messagingList.length !== 0 ? messagingList : [{ messagingTemplateCode: '', messagingTemplateLang: '' }])\r\n  }, [props.data, messagingList])\r\n\r\n  const [updateMessageTemplate, setUpdateMessage] = useState(false)\r\n  const [messagingTemp, setMessagingTemp] = useState({})\r\n\r\n  const handleClose = () => {\r\n    props.handleClose()\r\n  }\r\n\r\n  const handleDeleteClientRole = oldData => new Promise((resolve, reject) => {\r\n    // let clientId = props.data.clientId\r\n    // let roleId = oldData.roleId\r\n    // let request = {}\r\n    // let method = 'DELETE'\r\n    // let serviceCode = 'DELETE_CLIENT_ROLE'\r\n    // let urlParams = `/clients/${clientId}/roles/${roleId}`\r\n\r\n    // let completeRequest = { request, method, serviceCode, urlParams }\r\n    // props.completeRequest(completeRequest)\r\n\r\n    let newData = data.filter(item => item.roleId !== oldData.roleId)\r\n    setData(newData)\r\n    setDisabledBtn(false)\r\n    // props.handleClose()\r\n    resolve()\r\n  })\r\n\r\n  const handleOpenEditCLient = val => {\r\n    setState({\r\n      ...state,\r\n      open: val\r\n    })\r\n  }\r\n  const handleOpenAddOriginUrl = val => {\r\n    setState({\r\n      ...state,\r\n      openOriginOri: val\r\n    })\r\n  }\r\n  const handleOpenAddRedirectUrl = val => {\r\n    setState({\r\n      ...state,\r\n      openRedirectOri: val\r\n    })\r\n  }\r\n  const handleOpenEditBasicInfo = val => {\r\n    setState({\r\n      ...state,\r\n      openBasicInfo: val.open,\r\n      dataField: val\r\n    })\r\n  }\r\n\r\n  const handleOpenEditMessageTemplate = (open, edit, data) => {\r\n    setState({\r\n      ...state,\r\n      openTemplateMessage: open,\r\n      messageToUpdate: data\r\n    })\r\n  }\r\n  const handleSaveBasicInfo = (val) => {\r\n    // basicData[state.dataField.id]=val[state.dataField.id]\r\n    basicInfo.map(item => {\r\n      if (item.id === state.dataField.id) {\r\n        item.field = val[state.dataField.id]\r\n      }\r\n      return null\r\n    })\r\n    delete val.emailSenderErrorMessage\r\n    delete val.emailSenderMaskingNameErrorMessage\r\n    if (state.dataField.id === 'emailSender') {\r\n      val[state.dataField.id] = null\r\n    }\r\n\r\n    if (state.dataField.id === 'emailSenderMaskingName') {\r\n      val[state.dataField.id] = null\r\n    }\r\n    setBasicInfo(basicInfo)\r\n    setBasicInfoReq(val)\r\n    setDisabledBtn(false)\r\n  }\r\n  const handleSaveRole = val => {\r\n    setData([...data, ...val])\r\n    setDisabledBtn(false)\r\n  }\r\n  const handleSaveOriginUris = val => {\r\n    setOriginUri([...originUri, val])\r\n    setDisabledBtn(false)\r\n  }\r\n  const handleSaveRedirectUris = val => {\r\n    setRedirectUri([...redirectUri, val])\r\n    setDisabledBtn(false)\r\n  }\r\n\r\n  const handleSaveMessageTemplate = (val) => {\r\n    // let tempMess = []\r\n\r\n    messagingList.forEach((item, index) => {\r\n      if (item.messagingTemplateId === val['messagingTemplateId']) {\r\n        messagingList[index] = val\r\n      }\r\n    })\r\n    // console.log('tempMess', tempMess)\r\n    setMessagingTemplate(messagingList)\r\n    setMessagingTemp(val)\r\n    setUpdateMessage(true)\r\n    setDisabledBtn(false)\r\n    // setState({\r\n    //   ...state,\r\n    //   openTemplateMessage: false\r\n    // })\r\n  }\r\n  // const sendUpdateRoleRequest = () => {\r\n  //   let clientId = props.data.clientId\r\n  //   let roleId = data.slice(data.length - 1)[0].roleId\r\n  //   let roleDescription = data.slice(data.length - 1)[0].roleDescription\r\n  //   let request = {\r\n  //     roleId,\r\n  //     roleDescription,\r\n  //   }\r\n  //   let method = 'POST'\r\n  //   let serviceCode = 'ADD_CLIENT_ROLE'\r\n  //   let urlParams = `/clients/${clientId}/roles`\r\n\r\n  //   let completeRequest = { request, method, serviceCode, urlParams }\r\n  //   props.completeRequest(completeRequest)\r\n  //   setDisabledBtn(!disabledBtn)\r\n  // }\r\n\r\n  const sendUpdateClientDetail = () => {\r\n    let clientRoles = data\r\n    let originURIs = []\r\n    let redirectURIs = []\r\n    // console.log('wkwkwkw',originUri)\r\n    originUri.map(item => {\r\n      originURIs.push(item.uri)\r\n      return null\r\n    })\r\n    redirectUri.map(item => {\r\n      redirectURIs.push(item.uri)\r\n      return null\r\n    })\r\n    let clientId = props.data.clientId\r\n\r\n    let method = \"PATCH\"\r\n    let serviceCode = \"UPDATE_CLIENT_DETAIL\"\r\n    let urlParams = `/clients/${clientId}/`\r\n    let request = {\r\n      ...basicInfoReq,\r\n      clientRoles,\r\n      originURIs,\r\n      redirectURIs,\r\n      clientId\r\n    }\r\n    let completeRequest = { request, method, serviceCode, urlParams }\r\n    let requestMessagetTemp = {\r\n      ...messagingTemp,\r\n      updateMessageTemplate,\r\n      clientId\r\n    }\r\n    // console.log('request',requestMessagetTemp)\r\n    _setClientMessagingEdit(requestMessagetTemp)\r\n    props.completeRequest(completeRequest)\r\n    props.handleClose()\r\n  }\r\n\r\n  return (\r\n    <Card style={{ display: 'flex', flexWrap: 'wrap', }}>\r\n      <Grid style={{ margin: 35, marginTop: 15 }} container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n          <Button size='large' onClick={handleClose} color=\"secondary\" startIcon={<BackIcon />} variant='outlined' >\r\n            Back\r\n          </Button>\r\n        </Grid>\r\n        {/* <Grid style={{ marginTop: 15 }} container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={2} >\r\n          <Grid item xs={2}><Typography >Client ID</Typography></Grid>\r\n          <Grid item xs={10}><Typography >: {clientData ? clientData.clientId : \"\"}</Typography></Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={2} >\r\n          <Grid item xs={2}><Typography >Client Name</Typography></Grid>\r\n          <Grid item xs={10} > <Typography >: {clientData ? clientData.clientName : \"\"}</Typography></Grid>\r\n        </Grid> */}\r\n        <Grid style={{ marginTop: 20 }} container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n          <Grid item xs={12} style={{ marginTop: 10, marginBottom: 10 }}>\r\n            <Paper style={{ paddingLeft: 20 }}>\r\n              <Typography variant='h6' style={{ paddingBottom: 20 }}>\r\n                Basic Information\r\n              </Typography>\r\n              <Grid container style={{ marginBottom: 15 }}>\r\n                <Grid item xs={6}>\r\n                  <Typography>\r\n                    Information\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography style={{ textAlign: \"right\", paddingRight: 5 }}>\r\n                    Actions\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              {\r\n                basicInfo.map(item => {\r\n                  return (\r\n                    <div>\r\n                      <Grid container style={{ marginBottom: 8 }}>\r\n                        <Grid item xs={2}>\r\n                          <Typography>\r\n                            {item.title}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                          <Typography style={{ fontSize: 14 }}>\r\n                            {item.field}\r\n                          </Typography>\r\n                        </Grid>\r\n                        {item.edit ? <Grid container item xs={2} justify='flex-end' style={{ paddingRight: 15 }}>\r\n                          <EditIcon onClick={() => handleOpenEditBasicInfo({ ...item, open: true })} />\r\n                        </Grid> : \"\"}\r\n                      </Grid>\r\n                      <Divider />\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} style={{ marginTop: 15 }} >\r\n            {/* <MaterialTable\r\n              title='Messaging Template'\r\n              columns={[\r\n                { title: 'Code', field: 'messagingTemplateCode' },\r\n                { title: 'Languange', field: 'messagingTemplateLang' },\r\n                { title: 'Subject', field: 'subjectTemplate' }\r\n              ]}\r\n              data={messagingTemplate}\r\n              options={{\r\n                actionsColumnIndex: -1,\r\n                padding: 'dense',\r\n                search: false,\r\n                paging: false\r\n                // pageSize: 10,\r\n              }}\r\n              editable={{\r\n                onRowUpdate:(newData, oldData)=>\r\n                  new Promise((resolve)=>{\r\n\r\n                  })\r\n              }}\r\n            /> */}\r\n            <TableCustomize\r\n              title='Messaging Template'\r\n              column={[\r\n                { title: 'Code', field: 'messagingTemplateCode' },\r\n                { title: 'Languange', field: 'messagingTemplateLang' },\r\n                { title: 'Subject', field: 'subjectTemplate' }\r\n              ]}\r\n              handleEditOpen={handleOpenEditMessageTemplate}\r\n              data={messagingList.length !== 0 ? messagingList : [{ messagingTemplateCode: '', messagingTemplateLang: '' }]}\r\n              options={{\r\n                pagination: true,\r\n                filterClientId: false\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} style={{ marginTop: 25 }} >\r\n            <MaterialTable\r\n              style={{ width: '100%' }}\r\n              title=\"Available Role\"\r\n              columns={[\r\n                { title: 'Role ID', field: 'roleId', width: 300 },\r\n                { title: 'Description', field: 'roleDescription' },\r\n              ]}\r\n              data={data}\r\n              editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                  new Promise((resolve) => {\r\n                    const dataUpdate = [...data]\r\n                    // const roleId = oldData.id\r\n                    dataUpdate.map(item => {\r\n                      if (item.roleId === oldData.roleId) {\r\n                        item.roleId = newData.roleId\r\n                        item.roleDescription = newData.roleDescription\r\n                      }\r\n                      return null\r\n                    })\r\n                    setData([...dataUpdate])\r\n                    setDisabledBtn(false)\r\n                    resolve()\r\n                  }),\r\n                onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                    handleDeleteClientRole(oldData).then(result => resolve())\r\n                  }),\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  editRow: {\r\n                    deleteText: 'Apakah anda yakin menghapus data ini?'\r\n                  }\r\n                }\r\n              }}\r\n              options={{\r\n                actionsColumnIndex: -1,\r\n                padding: 'dense',\r\n                search: false,\r\n                paging: false\r\n                // pageSize: 10,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid style={{ marginTop: 20 }} container direction=\"row\" alignItems=\"flex-start\" >\r\n          <Button style={{ fontSize: 12, fontWeight: 'bold' }} onClick={() => handleOpenEditCLient(true)} variant='outlined' color=\"secondary\"\r\n            startIcon={<AddIcon />}\r\n          >\r\n            Add New Role\r\n        </Button>\r\n          {/* <Button onClick={sendUpdateRoleRequest} variant='contained' color=\"primary\" disabled={!disabledBtn}\r\n            startIcon={<EditIcon />}\r\n          >\r\n            Save Role\r\n        </Button> */}\r\n          <Grid item xs={12} style={{ marginTop: 15 }} >\r\n            <MaterialTable\r\n              style={{ width: '100%' }}\r\n              title=\"Origin URI\"\r\n              columns={[\r\n                { title: 'URI', field: 'uri' },\r\n                // \r\n              ]}\r\n              data={originUri}\r\n              editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                  new Promise((resolve) => {\r\n                    const dataUpdate = [...originUri]\r\n                    const index = oldData.id\r\n                    dataUpdate[index].uri = newData.uri\r\n                    setOriginUri([...dataUpdate])\r\n                    setDisabledBtn(false)\r\n                    resolve()\r\n                  }),\r\n                onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                    const dataUpdate = [...originUri]\r\n                    const index = oldData.id\r\n                    dataUpdate.splice(index, 1)\r\n                    setOriginUri([...dataUpdate])\r\n                    setDisabledBtn(false)\r\n                    resolve()\r\n                  }),\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  editRow: {\r\n                    deleteText: 'Apakah anda yakin menghapus data ini?'\r\n                  }\r\n                }\r\n              }}\r\n              options={{\r\n                actionsColumnIndex: -1,\r\n                padding: 'dense',\r\n                search: false,\r\n                paging: false\r\n                // pageSize: 10,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid style={{ marginTop: 20 }} container direction=\"row\" alignItems=\"flex-start\" >\r\n            <Button style={{ fontSize: 12, fontWeight: 'bold' }} onClick={() => handleOpenAddOriginUrl(true)} variant='outlined' color=\"secondary\"\r\n              startIcon={<AddIcon />}\r\n            >\r\n              Add Origin URI\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} style={{ marginTop: 15 }} >\r\n            <MaterialTable\r\n              style={{ width: '100%' }}\r\n              title=\"Redirect URI\"\r\n              columns={[\r\n                { title: 'URI', field: 'uri' },\r\n                // \r\n              ]}\r\n              data={redirectUri}\r\n              editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                  new Promise((resolve) => {\r\n                    const dataUpdate = [...redirectUri]\r\n                    const index = oldData.id\r\n                    dataUpdate[index].uri = newData.uri\r\n                    setOriginUri([...dataUpdate])\r\n                    setDisabledBtn(false)\r\n                    resolve()\r\n                  }),\r\n                onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                    const dataUpdate = [...redirectUri]\r\n                    const index = oldData.id\r\n                    dataUpdate.splice(index, 1)\r\n                    setRedirectUri([...dataUpdate])\r\n                    setDisabledBtn(false)\r\n                    resolve()\r\n                  }),\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  editRow: {\r\n                    deleteText: 'Apakah anda yakin menghapus data ini?'\r\n                  }\r\n                }\r\n              }}\r\n              options={{\r\n                actionsColumnIndex: -1,\r\n                padding: 'dense',\r\n                // pageSize: 10,\r\n                search: false,\r\n                paging: false\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid style={{ marginTop: 20 }} container direction=\"row\" alignItems=\"flex-start\" >\r\n            <Button style={{ fontSize: 12, fontWeight: 'bold' }} onClick={() => handleOpenAddRedirectUrl(true)} variant='outlined' color=\"secondary\"\r\n              startIcon={<AddIcon />}\r\n            >\r\n              Add Redirect URI\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid style={{ marginTop: 30 }} container direction=\"row\" alignItems=\"flex-start\" >\r\n            <Button onClick={sendUpdateClientDetail} style={{\r\n              marginRight: '15px',\r\n              paddingLeft: \"50px\",\r\n              paddingRight: \"50px\",\r\n              color: \"white\",\r\n              // marginRight: 10,\r\n              fontSize: 18,\r\n              lineHeight: 2.1,\r\n\r\n            }} variant='contained' color=\"primary\" disabled={disabledBtn}\r\n            // startIcon={<AddIcon />}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button variant='contained' color=\"secondary\" style={{\r\n              marginRight: '15px',\r\n              paddingLeft: \"50px\",\r\n              paddingRight: \"50px\",\r\n              // marginRight: 10,\r\n              color: 'white',\r\n              fontSize: 18,\r\n              lineHeight: 2.1,\r\n\r\n            }} onClick={handleClose}\r\n            // startIcon={<EditIcon />}\r\n            >\r\n              Cancel\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <AddClientDialog\r\n        handleSave={handleSaveRole}\r\n        dataToUpdate={state.dataToUpdate}\r\n        data={clientData}\r\n        clientList={state.clientList}\r\n        open={state.open}\r\n        handleOpen={handleOpenEditCLient}\r\n      />\r\n      <UpdateBasicInfo\r\n        handleSave={handleSaveBasicInfo}\r\n        open={state.openBasicInfo}\r\n        dataToUpdate={state.dataToUpdate}\r\n        data={clientData}\r\n        dataField={state.dataField}\r\n        clientList={state.clientList}\r\n        handleOpen={handleOpenEditBasicInfo}\r\n      />\r\n      <AddUrlOriginDialog\r\n        open={state.openOriginOri}\r\n        handleOpen={handleOpenAddOriginUrl}\r\n        handleSave={handleSaveOriginUris}\r\n        data={clientData}\r\n        redirect={false}\r\n      />\r\n      <AddUrlOriginDialog\r\n        open={state.openRedirectOri}\r\n        handleOpen={handleOpenAddRedirectUrl}\r\n        handleSave={handleSaveRedirectUris}\r\n        data={clientData}\r\n        redirect={true}\r\n      />\r\n      <EditMessagingTemplateDialog\r\n        open={state.openTemplateMessage}\r\n        handleClose={handleOpenEditMessageTemplate}\r\n        dataToUpdate={state.messageToUpdate}\r\n        data={messagingTemplate}\r\n        handleSave={handleSaveMessageTemplate}\r\n      />\r\n    </Card>\r\n  );\r\n})\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Grid } from '@material-ui/core';\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole,\r\n} from '../../../actions/ServiceActions'\r\nimport ClientRUDTable from '../userlist/UserRUDTable'\r\nimport ClientDetail from './ClientDetail'\r\nimport ConfirmationDialogRaw from '../userlist/ConfirmationDIalog'\r\n\r\n\r\nconst ClientList = ({ ...props }) => {\r\n  const { _setOpenScreen, _setCompleteRequest, userInfo, clientList} = props\r\n  const [open, setOpen] = useState(false);\r\n  const value = 'Soft Delete'\r\n  const [requestDeleteUser, setRequestDeleteUser] = useState({})\r\n  const [userName, setUserName] = useState('')\r\n\r\n  const callbackRequest = () => {\r\n    let name = userInfo.name\r\n    let email = userInfo.email\r\n    let phone = userInfo.phone\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let requestAllClient = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"SELECT_ALL_CLIENT\",\r\n      customHeaders\r\n    }\r\n    if (clientList.length === 0) _setCompleteRequest(requestAllClient)\r\n  }\r\n\r\n  useEffect(() => {\r\n    _setOpenScreen(\"Client List\")\r\n  }, [_setOpenScreen])\r\n\r\n  useEffect(callbackRequest, [])\r\n\r\n  const [values, setValues] = useState({\r\n    columns: [\r\n      { title: 'Name', field: 'clientName', },\r\n      // { title: 'Origin URI', field: 'originURIs', },\r\n      { title: 'Client Id', field: 'clientId', },\r\n      { title: 'Type', field: 'type', },\r\n    ],\r\n    data: [],\r\n    dataToProcess: null,\r\n  });\r\n\r\n  const [states, setStates] = useState({\r\n    open: false,\r\n\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (clientList[0]) {\r\n      clientList.forEach(item => {\r\n        // item.originURIs = Array.isArray(item.originURIs) ? item.originURIs.join(', ') : item.originURIs\r\n        item.roleDetails = item.roleDetails ? item.roleDetails : Array.isArray(item.clientRoles) ? item.clientRoles : \"\"\r\n        item.clientRoles = Array.isArray(item.clientRoles) ? (item.clientRoles.map(item => item.roleId)).join(', ') : item.clientRoles\r\n      })\r\n\r\n      setValues(prevVal => ({\r\n        ...prevVal,\r\n        data: clientList\r\n      }))\r\n    }\r\n  }, [clientList])\r\n\r\n  // const handleChange = (prop) => (event) => {\r\n  //   setValues({ ...values, [prop]: event.target.value });\r\n  // };\r\n\r\n  const handleUpdate = (newData, oldData) => new Promise((resolve, reject) => {\r\n    if (oldData) {\r\n      setValues((prevState) => {\r\n        const data = [...prevState.data];\r\n        data[data.indexOf(oldData)] = newData;\r\n        return { ...prevState, data };\r\n      })\r\n      resolve()\r\n    }\r\n  })\r\n\r\n  const handleDelete = oldData => new Promise((resolve, reject) => {\r\n    let clientId = oldData.clientId\r\n    let request = {}\r\n    let method = 'DELETE'\r\n    let serviceCode = 'DELETE_CLIENT'\r\n    let urlParams = `/clients/${clientId}`\r\n\r\n    let completeRequest = { request, method, serviceCode, urlParams }\r\n    setRequestDeleteUser(completeRequest)\r\n    setUserName(oldData.clientName)\r\n    setOpen(true)\r\n    resolve()\r\n  })\r\n\r\n  const handleChoose = (val) => {\r\n    if (val === 'Soft Delete') {\r\n      requestDeleteUser.request.isForceDelete = false\r\n      props._setCompleteRequest(requestDeleteUser)\r\n    }\r\n    else {\r\n      requestDeleteUser.request.isForceDelete = true\r\n      props._setCompleteRequest(requestDeleteUser)\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleRowClicked = rowData => {\r\n    setValues({ ...values, dataToProcess: rowData })\r\n    setStates({ ...states, open: true })\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      {states.open\r\n        ? <ClientDetail\r\n          completeRequest={_setCompleteRequest}\r\n          open={states.open}\r\n          handleClose={() => setStates({ ...states, open: false })}\r\n          data={values.dataToProcess}\r\n        />\r\n        : <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" >\r\n          <ClientRUDTable\r\n            confirmdeletetext=\"Apakah anda yakin menghapus data ini?\"\r\n            title=\"Backoffice Client List\"\r\n            columns={values.columns}\r\n            data={values.data}\r\n            updatedata={handleUpdate}\r\n            deletedata={handleDelete}\r\n            rowClicked={handleRowClicked}\r\n            action\r\n          />\r\n        </Grid>}\r\n      < ConfirmationDialogRaw\r\n        id=\"ringtone-menu\"\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        value={value}\r\n        handleChoose={handleChoose}\r\n        userName={userName}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  clientList: store.clientList.list,\r\n  userDetail: store.clientList.detail,\r\n  userFiltered: store.clientList.filteredList,\r\n  userInfo: store.userInfo.info,\r\n  messagingList: store.clientList.messagingList\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)),\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.urlParams))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientList)\r\n","\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Grid, Typography, Button, Card, CardContent, CardActions } from '@material-ui/core'\r\n\r\n\r\nconst AddCLientRole = ({ ...props }) => {\r\n  const { form, handleChange, setShowAddRoles, handleAddClientRole } = props\r\n  \r\n  return (\r\n    <Card >\r\n      <CardContent>\r\n        <Grid>\r\n          <Typography variant='subtitle2'>\r\n            Add RoleId and Description\r\n          </Typography>\r\n        </Grid>\r\n        <Grid>\r\n          <TextField\r\n            margin=\"dense\"\r\n            size=\"small\"\r\n            onChange={handleChange('roleId')}\r\n            id=\"standard-roleId\"\r\n            label=\"RoleId\"\r\n            placeholder=\"RoleId\"\r\n            // onFocus={() => setHelpTextRoleId(true)}\r\n            // onBlur={form.blur ? true : false}\r\n            // helperText={helpTextRoleId ? \"Go to Client List to add more Roles!\" : form.roleIdErrorMessage ? form.roleIdErrorMessage : ''}\r\n            error={form.roleIdErrorMessage ? true : false}\r\n            value={form.roleId}\r\n          />\r\n        </Grid>\r\n        <Grid >\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('roleDescription')}\r\n            id=\"standard-roleDesc\"\r\n            label=\"Description\"\r\n            placeholder=\"Role description\"\r\n            helperText={form.roleDescriptionErrorMessage ? form.roleDescriptionErrorMessage : ''}\r\n            error={form.roleDescriptionErrorMessage ? true : false}\r\n            value={form.roleDescription}\r\n          // onBlur={form.blur ? true : false}\r\n          />\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={() => setShowAddRoles(false)} >\r\n          Cancel\r\n        </Button>\r\n        <Button size=\"small\" color=\"secondary\" onClick={handleAddClientRole} >\r\n          Add\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AddCLientRole","\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Grid, MenuItem, } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst style = theme => ({\r\n  asterisk: {\r\n    color: 'red'\r\n  }\r\n})\r\n\r\nconst clientType = [\r\n  { value: 'public', label: 'Public' },\r\n  { value: \"confidential\", label: 'Confidential' },\r\n]\r\nconst clientProfile = [\r\n  { value: 'Web Application', label: 'Web Application' },\r\n  { value: 'iOS', label: 'iOS' },\r\n  { value: 'Android', label: 'Android' },\r\n]\r\n\r\nconst CreateClientForm = ({ ...props }) => {\r\n  const { form, handleChange, setFormFocus, formFocus,\r\n    helpTextOrigin, setHelpTextOrigin, helpTextRedirect, setHelpTextRedirect,classes } = props\r\n\r\n  return (\r\n    <Grid item xs={12} md={6}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} md={8} style={{ marginLeft: 15, marginRight: 15 }} >\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('clientId')}\r\n            id=\"standard-clientId\"\r\n            label=\"Client Id\"\r\n            required\r\n            // placeholder=\"Placeholder\"\r\n            helperText={form.clientIdErrorMessage ? form.clientIdErrorMessage : \"\"}\r\n            error={form.clientIdErrorMessage ? true : false}\r\n            fullWidth\r\n            margin='dense'\r\n            value={form.clientId}\r\n            onFocus={() => setFormFocus({ ...formFocus, clientId: true })}\r\n            onBlur={() => form.clientId ? setFormFocus({ ...formFocus, clientId: true }) : setFormFocus({ ...formFocus, clientId: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.clientId ? true : false,\r\n              classes: {\r\n                asterisk: classes.asterisk\r\n              }\r\n            }}\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('clientName')}\r\n            id=\"standard-clientName\"\r\n            label=\"Client Name\"\r\n            required\r\n            // placeholder=\"Placeholder\"\r\n            // helperText=\"Full width!\"\r\n            helperText={form.clientNameErrorMessage ? form.clientNameErrorMessage : \"\"}\r\n            error={form.clientNameErrorMessage ? true : false}\r\n            fullWidth\r\n            margin=\"dense\"\r\n            value={form.clientName}\r\n            onFocus={() => setFormFocus({ ...formFocus, clientName: true })}\r\n            onBlur={() => form.clientName ? setFormFocus({ ...formFocus, clientName: true }) : setFormFocus({ ...formFocus, clientName: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.clientName ? true : false,\r\n              classes: {\r\n                asterisk: classes.asterisk\r\n              }\r\n            }}\r\n          />\r\n\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('clientType')}\r\n            id=\"standard-clientType\"\r\n            required\r\n            label=\"Client Type\"\r\n            select\r\n            value={form.clientType}\r\n            // placeholder=\"Placeholder\"\r\n            // helperText=\"Full width!\"\r\n            InputLabelProps={{\r\n              classes: {\r\n                asterisk: classes.asterisk\r\n              }\r\n            }}\r\n            fullWidth\r\n            margin=\"dense\"\r\n          >\r\n            {clientType.map((option, i) => (\r\n              <MenuItem value={option.value} key={i + 2}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('profile')}\r\n            id=\"standard-clientProfile\"\r\n            required\r\n            label=\"Client Profile\"\r\n            select\r\n            value={form.profile}\r\n            // placeholder=\"Placeholder\"\r\n            // helperText=\"Full width!\"\r\n            fullWidth\r\n            margin=\"dense\"\r\n            InputLabelProps={{\r\n              classes: {\r\n                asterisk: classes.asterisk\r\n              }\r\n            }}\r\n          >\r\n            {clientProfile.map((option, i) => (\r\n              <MenuItem value={option.value} key={i + 11}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('clientDomain')}\r\n            id=\"standard-clientName\"\r\n            label=\"Client Domain\"\r\n            // placeholder=\"Placeholder\"\r\n            // helperText=\"Full width!\"\r\n            helperText={form.clientDomainErrorMessage ? form.clientDomainErrorMessage : \"\"}\r\n            error={form.clientDomainErrorMessage ? true : false}\r\n            fullWidth\r\n            margin=\"dense\"\r\n            value={form.clientDomain}\r\n            onFocus={() => setFormFocus({ ...formFocus, clientDomain: true })}\r\n            onBlur={() => form.clientDomain ? setFormFocus({ ...formFocus, clientDomain: true }) : setFormFocus({ ...formFocus, clientDomain: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.clientDomain ? true : false\r\n            }}\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('emailSender')}\r\n            id=\"standard-clientId\"\r\n\r\n            label=\"Email Sender\"\r\n            // placeholder=\"Placeholder\"\r\n            helperText={form.emailSenderErrorMessage ? form.emailSenderErrorMessage : \"\"}\r\n            error={form.emailSenderErrorMessage ? true : false}\r\n            fullWidth\r\n            margin='dense'\r\n            value={form.emailSender}\r\n            onFocus={() => setFormFocus({ ...formFocus, emailSender: true })}\r\n            onBlur={() => form.emailSender ? setFormFocus({ ...formFocus, emailSender: true }) : setFormFocus({ ...formFocus, emailSender: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.emailSender ? true : false\r\n            }}\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('emailSenderMaskingName')}\r\n            id=\"standard-clientId\"\r\n            label=\"Email Sender Masking Name\"\r\n            // placeholder=\"Placeholder\"\r\n            helperText={form.emailSenderMaskingNameErrorMessage ? form.emailSenderMaskingNameErrorMessage : \"\"}\r\n            error={form.emailSenderMaskingNameErrorMessage ? true : false}\r\n            fullWidth\r\n            margin='dense'\r\n            value={form.emailSenderMaskingName}\r\n            onFocus={() => setFormFocus({ ...formFocus, emailSenderMaskingName: true })}\r\n            onBlur={() => form.emailSenderMaskingName ? setFormFocus({ ...formFocus, emailSenderMaskingName: true }) : setFormFocus({ ...formFocus, emailSenderMaskingName: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.emailSenderMaskingName ? true : false\r\n            }}\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('originURIs')}\r\n            id=\"standard-originURIs\"\r\n            label=\"Origin URI\"\r\n            required\r\n            placeholder=\"http://example.com\"\r\n            helperText={helpTextOrigin ? \"Press Enter to add more URI!\" : ''}\r\n            fullWidth\r\n            multiline\r\n            margin=\"dense\"\r\n            value={form.originURIs}\r\n            onFocus={() => { setFormFocus({ ...formFocus, originURIs: true }); setHelpTextOrigin(true) }}\r\n            onBlur={() => form.originURIs ? setFormFocus({ ...formFocus, originURIs: true }) : setFormFocus({ ...formFocus, originURIs: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.originURIs ? true : false,\r\n              classes: {\r\n                asterisk: classes.asterisk\r\n              }\r\n            }}\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('redirectURIs')}\r\n            id=\"standard-redirectURIs\"\r\n            required\r\n            label=\"Redirect URI\"\r\n            placeholder=\"http://example.com/home\"\r\n            helperText={helpTextRedirect ? \"Press Enter to add more URI!\" : \"\"}\r\n            fullWidth\r\n            multiline\r\n            margin='dense'\r\n            value={form.redirectURIs}\r\n            onFocus={() => { setFormFocus({ ...formFocus, redirectURIs: true }); setHelpTextRedirect(true) }}\r\n            onBlur={() => form.redirectURIs ? setFormFocus({ ...formFocus, redirectURIs: true }) : setFormFocus({ ...formFocus, redirectURIs: false })}\r\n            InputLabelProps={{\r\n              shrink: formFocus.redirectURIs ? true : false,\r\n              classes: {\r\n                asterisk: classes.asterisk\r\n              }\r\n            }}\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            onChange={handleChange('initialRole')}\r\n            id=\"standard-initialRole\"\r\n            required\r\n            label=\"Initial Role\"\r\n            // placeholder=\"\"\r\n            helperText={form.initialRoleErrorMessage ? form.initialRoleErrorMessage : \"\"}\r\n            error={form.initialRoleErrorMessage ? true : false}\r\n            fullWidth\r\n            multiline\r\n            margin='dense'\r\n            value={form.initialRole}\r\n            InputLabelProps={{\r\n              classes: {\r\n                asterisk: classes.asterisk\r\n              }\r\n            }}\r\n          // onFocus={() => { setFormFocus({ ...formFocus, initialRole: true }); setHelpTextRedirect(true) }}\r\n          // onBlur={() => form.initialRole ? setFormFocus({ ...formFocus, initialRole: true }) : setFormFocus({ ...formFocus, initialRole: false })}\r\n          // InputLabelProps={{\r\n          //   shrink: formFocus.initialRole ? true : false\r\n          // }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n\r\n}\r\n\r\nexport default withStyles(style)(CreateClientForm)\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Grid, Paper, Typography, Button, Divider, List, ListItemText, FormHelperText } from '@material-ui/core';\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus,\r\n  setServiceMethod, setServiceParams, setServiceCustomHeaders, setServiceRole,\r\n} from '../../../actions/ServiceActions'\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\nimport AddCLientRole from './AddClientRole'\r\nimport CreateClientForm from './CreateClientForm'\r\n\r\n\r\nconst CreateClient = ({ ...props }) => {\r\n  const { _setOpenScreen, _setCompleteRequest, userInfo, } = props\r\n  const [showAddRoles, setShowAddRoles] = useState(false)\r\n  const [helpTextOrigin, setHelpTextOrigin] = useState(false)\r\n  const [helpTextRedirect, setHelpTextRedirect] = useState(false)\r\n  // const [helpTextRoleId, setHelpTextRoleId] = useState(false)\r\n  const [formFocus, setFormFocus] = useState({\r\n    clientId: false,\r\n    clientName: false,\r\n\r\n  })\r\n  const [form, setForm] = useState({\r\n    clientRoles: [],\r\n    clientType: '',\r\n    // clientGroupId: \"7ff9bf27-23bd-4253-a015-b2ffbe067f04\",\r\n    clientGroupId: '',\r\n    clientGroup: '7ff9bf27-23bd-4253-a015-b2ffbe067f04',\r\n    clientDomain: null,\r\n    profile: '',\r\n    emailSender:null,\r\n    emailSenderMaskingName:null\r\n  })\r\n  const [, setIsRoleAdded] = useState(false)\r\n  const [submitError, setSubmitError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    _setOpenScreen(\"Create Client\")\r\n  }, [_setOpenScreen])\r\n\r\n  const handleChange = prop => e => {\r\n    e.preventDefault()\r\n    setSubmitError(false)\r\n    let valid = FormValidation(prop, e.target.value)\r\n\r\n    if ((prop === 'originURIs' || prop === 'redirectURIs')) {\r\n      setForm({\r\n        ...form,\r\n        [prop]: e.target.value\r\n      })\r\n    }\r\n    else if (prop === 'initialRole') {\r\n      // let newClientRole = form.clientRoles.splice(0, 0, { roleId: e.target.value, roleDescription: \"Initial role\" })\r\n      setForm({\r\n        ...form,\r\n        [prop]: e.target.value,\r\n        [prop + 'ErrorMessage']: valid.errorMessage,\r\n        clientRoles: [{ roleId: e.target.value, roleDescription: \"Initial role\" }],\r\n      })\r\n    }\r\n    else {\r\n      setForm({\r\n        ...form,\r\n        [prop]: e.target.value,\r\n        [prop + 'ErrorMessage']: valid.errorMessage,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    setSubmitError(false)\r\n    const { clientGroupId, clientId, clientName, clientRoles,\r\n      clientType, originURIs, profile, redirectURIs, initialRole, clientGroup, clientDomain, emailSender, emailSenderMaskingName } = form\r\n\r\n    if (clientId && clientName && clientRoles && clientType && originURIs && profile && redirectURIs && initialRole) {\r\n      let request = {\r\n        clientGroupId, clientId, clientName, clientRoles, originURIs: originURIs.split(/\\r?\\n/), clientGroup, clientDomain, emailSender, emailSenderMaskingName,\r\n        profile, redirectURIs: redirectURIs.split(/\\r?\\n/), 'type': clientType, initialUserRole: initialRole\r\n      }\r\n      let name = userInfo.name\r\n      let email = userInfo.email\r\n      let phone = userInfo.phone\r\n      let customHeaders = { name, email }\r\n      if (phone) customHeaders.phone = phone\r\n\r\n      let submitRequest = {\r\n        request,\r\n        method: \"POST\",\r\n        serviceCode: \"CREATE_CLIENT\",\r\n        customHeaders\r\n      }\r\n      _setCompleteRequest(submitRequest)\r\n      setIsRoleAdded(false)\r\n    }\r\n    else {\r\n      setSubmitError(true)\r\n    }\r\n  }\r\n\r\n  const handleAddClientRole = e => {\r\n    e.preventDefault()\r\n    setForm({\r\n      ...form,\r\n      clientRoles: [...form.clientRoles, { roleId: form.roleId, roleDescription: form.roleDescription }],\r\n      roleId: '',\r\n      roleDescription: '',\r\n    })\r\n    setShowAddRoles(false)\r\n    setIsRoleAdded(true)\r\n  }\r\n\r\n  const handleCancel = e => {\r\n    e.preventDefault()\r\n    setHelpTextOrigin(false)\r\n    setHelpTextRedirect(false)\r\n    setIsRoleAdded(false)\r\n    setSubmitError(false)\r\n    setForm({\r\n      ...form,\r\n      clientId: '',\r\n      clientName: '',\r\n      clientType: '',\r\n      clientRoles: [],\r\n      originURIs: '',\r\n      profile: '',\r\n      redirectURIs: '',\r\n      initialRole: '',\r\n    })\r\n    setFormFocus({\r\n      clientId: false,\r\n      clientName: false,\r\n      clientRoles: [],\r\n      clientType: false,\r\n      originURIs: false,\r\n      profile: false,\r\n      redirectURIs: false,\r\n      initialRole: false,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid item xs={12} md={9}>\r\n        <Paper>\r\n          <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n            <Typography variant='h6' color='primary' style={{ marginTop: 20 }} >Create Client</Typography>\r\n          </Grid>\r\n\r\n          <Grid container direction=\"row\"  >\r\n            <CreateClientForm\r\n              setFormFocus={setFormFocus}\r\n              formFocus={formFocus}\r\n              helpTextOrigin={helpTextOrigin}\r\n              setHelpTextOrigin={setHelpTextOrigin}\r\n              helpTextRedirect={helpTextRedirect}\r\n              setHelpTextRedirect={setHelpTextRedirect}\r\n              handleChange={handleChange}\r\n              form={form}\r\n            />\r\n            <Grid item xs={12} md={6} style={{ marginTop: 10 }}>\r\n              <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" >\r\n                <Typography color='primary' variant='subtitle2' >Client Roles:</Typography>\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ marginTop: 10 }} >\r\n                  <Grid item xs={6}>\r\n                    <Grid container direction=\"column\" justify='center' alignItems='center' >\r\n                      <Grid item>\r\n                        Role Id\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container direction=\"row\" justify='flex-start' alignItems='flex-start' >\r\n                      <Grid item>\r\n                        <List>\r\n                          {form.clientRoles[0]\r\n                            ? form.clientRoles.map((item, i) => (<ListItemText key={i} secondary={'- ' + item.roleId} />))\r\n                            : <ListItemText secondary={'- none'} />}\r\n                        </List>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Grid container direction=\"column\" justify='center' alignItems='center' >\r\n                      <Grid item>\r\n                        Description\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid container direction=\"row\" justify='flex-start' alignItems='flex-start' >\r\n                      <Grid item>\r\n                        <List>\r\n                          {form.clientRoles[0]\r\n                            ? form.clientRoles.map((item, i) => (<ListItemText key={i} secondary={'- ' + item.roleDescription} />))\r\n                            : <ListItemText secondary={'- none'} />}\r\n                        </List>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container direction=\"column\" justify='flex-start' alignItems='flex-start' style={{ margin: 20 }}>\r\n                    {\r\n                      !showAddRoles\r\n                        ? <Button disabled={form.initialRole ? false : true} size='small' variant='outlined' color='secondary' onClick={() => setShowAddRoles(true)} >\r\n                          Add Client Roles\r\n                          </Button>\r\n                        : <AddCLientRole\r\n                          form={form}\r\n                          setForm={setForm}\r\n                          handleChange={handleChange}\r\n                          setShowAddRoles={setShowAddRoles}\r\n                          handleAddClientRole={handleAddClientRole} />\r\n                    }\r\n\r\n                    {/* {\r\n                      isRoleAdded\r\n                        ? null\r\n                        : !showAddRoles\r\n                          ? <Button size='small' variant='outlined' color='secondary' onClick={() => setShowAddRoles(true)} >\r\n                            Add Client Roles\r\n                          </Button>\r\n                          : <AddCLientRole\r\n                            form={form}\r\n                            setForm={setForm}\r\n                            handleChange={handleChange}\r\n                            setShowAddRoles={setShowAddRoles}\r\n                            handleAddClientRole={handleAddClientRole}\r\n                          />\r\n                    } */}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Divider style={{ margin: 20 }} />\r\n\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n            <Grid item>\r\n              <Button onClick={handleCancel} variant=\"outlined\" color=\"primary\">Cancel</Button>\r\n            </Grid>\r\n            <Grid style={{ margin: 10 }} item>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">Create</Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n            <FormHelperText error >{submitError ? 'Form not complete' : null}</FormHelperText>\r\n          </Grid>\r\n          <br />\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    userList: store.userList.list,\r\n    userDetail: store.userList.detail,\r\n    userFiltered: store.userList.filteredList,\r\n    userInfo: store.userInfo.info,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)),\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.params))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateClient)\r\n","import React, { useState } from 'react'\r\nimport { Dialog, DialogActions, DialogContent } from '@material-ui/core'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Grid, Typography, Button, MenuItem, TextField } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\n\r\nconst styles = (theme) => ({\r\n    rootForm: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            // width: '25ch',\r\n        },\r\n    },\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    asterisk: {\r\n        color: 'red'\r\n    },\r\n    addButton: {\r\n        color: 'white'\r\n    }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n    const { children, onClose, classes, ...other } = props\r\n\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n})\r\n\r\nconst AddRequestSpesificationDialog = ({ ...props }) => {\r\n    const { classes, dataClient } = props\r\n    const [state, setState] = useState({\r\n        clientId: \"\",\r\n\r\n    })\r\n    let dataRoles = []\r\n    const handleClose = () => {\r\n        setState({})\r\n        props.handleClose(false, false)\r\n    }\r\n    // console.log('dataCliet', dataClient)\r\n    const findDuplicateClientId = (arrayOfObj, key) => {\r\n        return arrayOfObj.filter((item, index, array) => {\r\n            return array.map((mapItem) => mapItem[key]).indexOf(item[key]) === index\r\n        })\r\n    }\r\n    // console.log('dupkcate', findDuplicateClientId())\r\n\r\n    const handleAddRequest = () => {\r\n        // let request = {\r\n        //     ...state,\r\n        // }\r\n        // let requestAllClient = {\r\n        //     request,\r\n        //     method:\"POST\",\r\n        //     serviceCode:\"ADD_REQUEST_SPESIFICATION\",\r\n        //     urlParams:'/request-spesifications'\r\n        // }\r\n        // console.log('Request',request)\r\n        delete state.clientIdErrorMessage\r\n        delete state.defaultRoleErrorMessage\r\n        delete state.pathErrorMessage\r\n        delete state.urlDestinationErrorMessage\r\n        delete state.isNeedLoginErrorMessage\r\n\r\n        props.completeRequest(state)\r\n        // props.handleClose(false)\r\n    }\r\n\r\n    const handleChange = id => e => {\r\n        let valid = FormValidation(id, e.target.value)\r\n        setState({\r\n            ...state,\r\n            [id]: e.target.value,\r\n            [id + 'ErrorMessage']: valid.errorMessage,\r\n\r\n            // dataRoles : dataClient.filter(item=> item.clientId===e.target.value)[0]\r\n        })\r\n    }\r\n    const setDataRoles = () => {\r\n        dataRoles = dataClient.filter(item => item.clientId === state.clientId)[0]\r\n        if (!dataRoles) return []\r\n        else {\r\n            return dataRoles.clientRoles\r\n        }\r\n        // return []\r\n    }\r\n    const needRole = [{ label: \"Yes\", boolean: true }, { label: \"No\", boolean: false }]\r\n\r\n    const disableButton = () => {\r\n        let isNeedLog = state.isNeedLogin === '' || state.isNeedLogin === null || state.isNeedLogin === undefined ? false : true\r\n        if (state.clientId && state.path && state.urlDestination && isNeedLog) return false\r\n        else return true\r\n    }\r\n    return (\r\n        <Dialog fullWidth maxWidth={'xs'} open={props.open} onClose={handleClose} scroll={'paper'}>\r\n            <DialogTitle\r\n                id=\"max-width-dialog-title\"\r\n                onClose={handleClose}\r\n            >\r\n                Add Request Specification\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <form className={classes.rootForm} noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        fullWidth\r\n                        placeholder='Contoh : authentication-backoffice'\r\n                        required\r\n                        select\r\n                        id='clientId'\r\n                        label='Client Id'\r\n                        value={state.clientId}\r\n                        onChange={handleChange('clientId')}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                            classes: {\r\n                                asterisk: classes.asterisk\r\n                            }\r\n                        }}\r\n                    >\r\n                        {findDuplicateClientId(dataClient, 'clientId').map(item =>\r\n                            <MenuItem key={item.clientId} value={item.clientId}>\r\n                                {item.clientId}\r\n                            </MenuItem>\r\n                        )}\r\n                    </TextField>\r\n                    <TextField\r\n                        fullWidth\r\n                        required\r\n                        placeholder='Contoh : /users/*/orders/**'\r\n                        label='Path'\r\n                        onChange={handleChange('path')}\r\n                        error={state.pathErrorMessage ? true : false}\r\n                        value={state.path ? state.path : ''}\r\n                        helperText={state.pathErrorMessage ? state.pathErrorMessage : ''}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                            classes: {\r\n                                asterisk: classes.asterisk\r\n                            }\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        required\r\n                        placeholder='Contoh : http//172.16.10.51:32170/users/*/orders/**'\r\n                        label='URL Destination'\r\n                        onChange={handleChange('urlDestination')}\r\n                        error={state.urlDestinationErrorMessage ? true : false}\r\n                        helperText={state.urlDestinationErrorMessage ? state.urlDestinationErrorMessage : ''}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                            classes: {\r\n                                asterisk: classes.asterisk\r\n                            }\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        required\r\n                        select\r\n                        label='Need Login'\r\n                        onChange={handleChange('isNeedLogin')}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                            classes: {\r\n                                asterisk: classes.asterisk\r\n                            }\r\n                        }}\r\n                    >\r\n                        {needRole.map(item =>\r\n                            <MenuItem key={item.label} value={item.boolean}>\r\n                                {item.label}\r\n                            </MenuItem>\r\n                        )}\r\n                    </TextField>\r\n                    <TextField\r\n                        fullWidth\r\n                        select\r\n                        label='Default Role'\r\n                        onChange={handleChange('defaultRole')}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    >\r\n                        <MenuItem key={'null'} value={null}>\r\n                            Null\r\n                        </MenuItem>\r\n                        {setDataRoles().map(item => <MenuItem key={item.roleId} value={item.roleId}>{item.roleId}</MenuItem>)}\r\n                    </TextField>\r\n                    <TextField\r\n                        fullWidth\r\n                        placeholder='Contoh: 100'\r\n                        label='Priority Value'\r\n                        onChange={handleChange('priorityValue')}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n                    <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                        <Button color='primary' variant='contained'\r\n                            className={classes.addButton} onClick={handleAddRequest} disabled={disableButton()}>\r\n                            Add\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                        <Button onClick={handleClose} color='secondary' variant='contained' className={classes.addButton}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(AddRequestSpesificationDialog)","import React, { useState, useEffect } from 'react'\r\nimport { Dialog, DialogActions, DialogContent } from '@material-ui/core'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Grid, Typography, Button, MenuItem, TextField } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { FormValidation } from '../../../utils/FormValidation';\r\n\r\nconst styles = (theme) => ({\r\n    rootForm: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            // width: '25ch',\r\n        },\r\n    },\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    asterisk: {\r\n        color: 'red'\r\n    },\r\n    addButton: {\r\n        color: 'white'\r\n    }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n    const { children, onClose, classes, ...other } = props\r\n\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n})\r\n\r\nconst EditRequestSpesificationDialog = ({ ...props }) => {\r\n    const { classes, dataClient } = props\r\n    const dataToUpdt = props.dataToUpdate\r\n    const [state, setState] = useState({\r\n        dataToUpdate: {\r\n            clientId: \"\",\r\n            path: \"\",\r\n            urlDestination: \"\",\r\n            isNeedLogin: \"\"\r\n        },\r\n\r\n    })\r\n    useEffect(() => {\r\n        setState({\r\n            dataToUpdate: dataToUpdt\r\n        })\r\n    }, [dataToUpdt])\r\n    let dataRoles = []\r\n    const handleClose = () => {\r\n        setState({})\r\n        props.handleClose(false, true)\r\n    }\r\n    const findDuplicateClientId = (arrayOfObj, key) => {\r\n        return arrayOfObj.filter((item, index, array) => {\r\n            return array.map((mapItem) => mapItem[key]).indexOf(item[key]) === index\r\n        })\r\n    }\r\n    // console.log('dupkcate', findDuplicateClientId())\r\n\r\n    const handleAddRequest = () => {\r\n        let isPriortyValueUpdate = true\r\n        if (state.dataToUpdate['priorityValue'] === dataToUpdt['priorityValue']) {\r\n            isPriortyValueUpdate = false\r\n        }\r\n        delete state.dataToUpdate.clientIdErrorMessage\r\n        delete state.dataToUpdate.isNeedLoginErrorMessage\r\n        delete state.dataToUpdate.pathErrorMessage\r\n        delete state.dataToUpdate.priorityValueErrorMessage\r\n        delete state.dataToUpdate.urlDestinationErrorMessage\r\n        props.completeRequest(state.dataToUpdate, isPriortyValueUpdate)\r\n    }\r\n\r\n    const handleChange = id => e => {\r\n        let valid = FormValidation(id, e.target.value)\r\n        setState({\r\n            ...state,\r\n            dataToUpdate: {\r\n                ...state.dataToUpdate,\r\n                [id]: e.target.value,\r\n            },\r\n            [id + 'ErrorMessage']: valid.errorMessage,\r\n        })\r\n    }\r\n    const setDataRoles = () => {\r\n        let clientId = state.dataToUpdate ? state.dataToUpdate.clientId : ''\r\n        dataRoles = dataClient.filter(item => item.clientId === clientId)[0]\r\n        if (!dataRoles) return []\r\n        else {\r\n            return dataRoles.clientRoles\r\n        }\r\n        // return []\r\n    }\r\n    const needRole = [{ label: \"Yes\", boolean: true }, { label: \"No\", boolean: false }]\r\n\r\n    const disableButton = () => {\r\n        let isNeedLog = state.dataToUpdate ?\r\n            state.dataToUpdate.isNeedLogin === '' || state.dataToUpdate.isNeedLogin === null || state.dataToUpdate.isNeedLogin === undefined ? false : true : \"\"\r\n        let clientId = state.dataToUpdate ? state.dataToUpdate.clientId : \"\"\r\n        let path = state.dataToUpdate ? state.dataToUpdate.path : \"\"\r\n        let urlDestination = state.dataToUpdate ? state.dataToUpdate.urlDestination : \"\"\r\n        // let isNeedLogin = state.dataToUpdate ? state.dataToUpdate.isNeedLogin : \"\"\r\n        if (clientId && path && urlDestination && isNeedLog) return false\r\n        else return true\r\n    }\r\n    // console.log('state',state)\r\n    return (\r\n        <Dialog fullWidth maxWidth={'xs'} open={props.open} onClose={handleClose} scroll={'paper'}>\r\n            <DialogTitle\r\n                id=\"max-width-dialog-title\"\r\n                onClose={handleClose}\r\n            >\r\n                Edit Request Specification\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <form className={classes.rootForm} noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        fullWidth\r\n                        placeholder='Contoh : authentication-backoffice'\r\n                        required\r\n                        select\r\n                        id='clientId'\r\n                        label='Client Id'\r\n                        value={state.dataToUpdate ? state.dataToUpdate.clientId : \"\"}\r\n                        onChange={handleChange('clientId')}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                            classes: {\r\n                                asterisk: classes.asterisk\r\n                            }\r\n                        }}\r\n                    >\r\n                        {findDuplicateClientId(dataClient, 'clientId').map(item =>\r\n                            <MenuItem key={item.clientId} value={item.clientId}>\r\n                                {item.clientId}\r\n                            </MenuItem>\r\n                        )}\r\n                    </TextField>\r\n                    <TextField\r\n                        fullWidth\r\n                        required\r\n                        placeholder='Contoh : /users/*/orders/**'\r\n                        label='Path'\r\n                        onChange={handleChange('path')}\r\n                        error={state.pathErrorMessage ? true : false}\r\n                        value={state.dataToUpdate ? state.dataToUpdate.path : \"\"}\r\n                        helperText={state.pathErrorMessage ? state.pathErrorMessage : ''}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                            classes: {\r\n                                asterisk: classes.asterisk\r\n                            }\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        required\r\n                        placeholder='Contoh : http//172.16.10.51:32170/users/*/orders/**'\r\n                        label='URL Destination'\r\n                        onChange={handleChange('urlDestination')}\r\n                        value={state.dataToUpdate ? state.dataToUpdate.urlDestination : \"\"}\r\n                        error={state.urlDestinationErrorMessage ? true : false}\r\n                        helperText={state.urlDestinationErrorMessage ? state.urlDestinationErrorMessage : ''}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                            classes: {\r\n                                asterisk: classes.asterisk\r\n                            }\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        required\r\n                        select\r\n                        label='Need Login'\r\n                        value={state.dataToUpdate ? state.dataToUpdate.isNeedLogin === 'True' || state.dataToUpdate.isNeedLogin === true ? true : false : \"\"}\r\n                        onChange={handleChange('isNeedLogin')}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                            classes: {\r\n                                asterisk: classes.asterisk\r\n                            }\r\n                        }}\r\n                    >\r\n                        {needRole.map(item =>\r\n                            <MenuItem key={item.label} value={item.boolean}>\r\n                                {item.label}\r\n                            </MenuItem>\r\n                        )}\r\n                    </TextField>\r\n                    <TextField\r\n                        fullWidth\r\n                        select\r\n                        label='Default Role'\r\n                        value={state.dataToUpdate ? state.dataToUpdate.defaultRole : \"\"}\r\n                        onChange={handleChange('defaultRole')}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    >\r\n                        <MenuItem key={'null'} value={null}>\r\n                            Null\r\n                        </MenuItem>\r\n                        {setDataRoles().map(item => <MenuItem key={item.roleId} value={item.roleId}>{item.roleId}</MenuItem>)}\r\n                    </TextField>\r\n                    <TextField\r\n                        fullWidth\r\n                        placeholder='Contoh: 100'\r\n                        label='Priority Value'\r\n                        onChange={handleChange('priorityValue')}\r\n                        value={state.dataToUpdate ? state.dataToUpdate.priorityValue : \"\"}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Grid container direction=\"row\" justify='center' alignItems='center' style={{ margin: 5 }}>\r\n                    <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                        <Button color='primary' variant='contained'\r\n                            className={classes.addButton} onClick={handleAddRequest} disabled={disableButton()}>\r\n                            Edit\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid container item direction=\"row\" justify='center' alignItems='center' md={6}>\r\n                        <Button onClick={handleClose} color='secondary' variant='contained' className={classes.addButton}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(EditRequestSpesificationDialog)","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Grid } from '@material-ui/core';\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n    setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n    setServiceParams, setServiceCustomHeaders, setServiceRole,\r\n} from '../../../actions/ServiceActions'\r\n// import ClientRUDTable from '../userlist/UserRUDTable'\r\nimport TableCustomize from '../../../components/table/TableCustomize'\r\nimport RequestDetail from './RequestDetail'\r\n// import ConfirmationDialogRaw from '../userlist/ConfirmationDIalog'\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddRequestSpesificationDialog from './AddRequestSpesificationDialog'\r\nimport EditRequestSpesificationDialog from './EditRequestSpesificationDialog'\r\n\r\nconst RequestList = ({ ...props }) => {\r\n\r\n    const { _setOpenScreen, _setCompleteRequest, userInfo, requestList, clientList } = props\r\n    // const [updateRequest, setUpdateRequest] = useState(false)\r\n\r\n    useEffect(() => {\r\n        _setOpenScreen(\"Request List\")\r\n    }, [_setOpenScreen])\r\n\r\n    const callbackRequest = () => {\r\n        let name = userInfo.name\r\n        let email = userInfo.email\r\n        let phone = userInfo.phone\r\n        let customHeaders = { name, email }\r\n        if (phone) customHeaders.phone = phone\r\n\r\n        let requestAllClient = {\r\n            request: {},\r\n            method: \"GET\",\r\n            serviceCode: \"SELECT_ALL_REQUEST\",\r\n            customHeaders\r\n        }\r\n        if (requestList.length === 0) { _setCompleteRequest(requestAllClient) }\r\n        // callback('client')\r\n    }\r\n\r\n    useEffect(callbackRequest, [])\r\n\r\n    const [values, setValues] = useState({\r\n        columns: [\r\n            { title: 'Client Id', field: 'clientId', },\r\n            // { title: 'Origin URI', field: 'originURIs', },\r\n            { title: 'Path', field: 'path', },\r\n            { title: 'URL Destination', field: 'urlDestination' },\r\n            { title: \"Need Login\", field: \"isNeedLogin\" },\r\n            { title: \"Priority Value\", field: \"priorityValue\" },\r\n            { title: \"Default Role\", field: \"defaultRole\" },\r\n            // { title: \"Actions\"}\r\n        ],\r\n        data: [],\r\n        dataClient: [],\r\n        dataToProcess: null,\r\n        dataToUpdate: null\r\n    });\r\n\r\n    useEffect(() => {\r\n        setValues(values => ({\r\n            ...values,\r\n            data: requestList,\r\n            dataClient: clientList\r\n        }))\r\n    }, [requestList, clientList])\r\n\r\n    const [states, setStates] = useState({\r\n        openDialogRequest: false,\r\n        editDialogRequest: false\r\n\r\n    })\r\n    const handleOpenDialogRequest = (open, edit, data) => {\r\n        // console.log(edit)\r\n        if (edit) {\r\n            setStates({\r\n                ...states,\r\n                editDialogRequest: open\r\n            })\r\n            setValues({\r\n                ...values,\r\n                dataToUpdate: data\r\n            })\r\n        } else {\r\n\r\n            setStates({\r\n                ...states,\r\n                openDialogRequest: open\r\n            })\r\n        }\r\n    }\r\n\r\n    // const handleDelete = () => {\r\n\r\n    // }\r\n\r\n    const handleUpdateRequest = (state, isPriorityValueUpdate) => {\r\n        let requestSpecificationId = state.requestSpecificationId\r\n        delete state.method\r\n\r\n        if (state.isNeedLogin === 'True' || state.isNeedLogin === true) {\r\n            state.isNeedLogin = true\r\n        }\r\n        else {\r\n            state.isNeedLogin = false\r\n        }\r\n        let request = {\r\n            ...state,\r\n            priorityValue: state.priorityValue ? Number(state.priorityValue) : null\r\n        }\r\n\r\n        // delete request.requestSpecificationId\r\n        if (!state.priorityValue) {\r\n            delete request.priorityValue\r\n        }\r\n\r\n        if (!isPriorityValueUpdate) {\r\n            delete request.priorityValue\r\n        }\r\n\r\n        delete request.isPriorityValueUpdate\r\n        let requestUpdate = {\r\n            request,\r\n            method: \"PATCH\",\r\n            serviceCode: \"UPDATE_REQUEST_SPESIFICATIONS\",\r\n            urlParams: `/request-specifications/${requestSpecificationId}`\r\n        }\r\n        // console.log('Request', request)\r\n        _setCompleteRequest(requestUpdate)\r\n        handleOpenDialogRequest(false, true)\r\n    }\r\n    // const handleRowClicked = () => {\r\n\r\n    // }\r\n\r\n    // const handleChoose = () => {\r\n\r\n    // }\r\n\r\n    const handleAddRequest = (state) => {\r\n        let request = {\r\n            ...state,\r\n            priorityValue: state.priorityValue ? Number(state.priorityValue) : null\r\n        }\r\n        let requestAllClient = {\r\n            request,\r\n            method: \"POST\",\r\n            serviceCode: \"ADD_REQUEST_SPESIFICATIONS\",\r\n            urlParams: '/request-specifications'\r\n        }\r\n        // console.log('Request', request)\r\n        _setCompleteRequest(requestAllClient)\r\n        handleOpenDialogRequest(false, false)\r\n    }\r\n    const findDuplicateClientId = (arrayOfObj, key) => {\r\n        return arrayOfObj.filter((item, index, array) => {\r\n            return array.map((mapItem) => mapItem[key]).indexOf(item[key]) === index\r\n        })\r\n    }\r\n    return (\r\n        <div >\r\n            {states.open\r\n                ? <RequestDetail\r\n                    completeRequest={_setCompleteRequest}\r\n                    open={states.open}\r\n                    handleClose={() => setStates({ ...states, open: false })}\r\n                    data={values.dataToProcess}\r\n                />\r\n                : <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" >\r\n                    {/* <ClientRUDTable\r\n                        confirmdeletetext=\"Apakah anda yakin menghapus data ini?\"\r\n                        title=\"Backoffice Request List\"\r\n                        columns={values.columns}\r\n                        data={values.data}\r\n                        // updatedata={handleUpdate}\r\n                        deletedata={handleDelete}\r\n                        rowClicked={handleRowClicked}\r\n                        action\r\n                    /> */}\r\n                    <TableCustomize\r\n                        title='Backoffice Request List'\r\n                        column={values.columns}\r\n                        data={values.data}\r\n                        handleEditOpen={handleOpenDialogRequest}\r\n                        filterById={findDuplicateClientId}\r\n                        options={{\r\n                            pagination: true,\r\n                            filterClientId: true\r\n                        }}\r\n                    />\r\n                </Grid>}\r\n            <Grid style={{ marginTop: 20 }} container direction=\"row\" alignItems=\"flex-start\" >\r\n                <Button style={{ fontSize: 12, fontWeight: 'bold' }} onClick={() => handleOpenDialogRequest(true, false)} variant='outlined' color=\"secondary\"\r\n                    startIcon={<AddIcon />}\r\n                >\r\n                    Add Request Specification\r\n                </Button>\r\n            </Grid>\r\n\r\n            <AddRequestSpesificationDialog\r\n                open={states.openDialogRequest}\r\n                handleClose={handleOpenDialogRequest}\r\n                completeRequest={handleAddRequest}\r\n                data={values.data}\r\n                dataClient={values.dataClient}\r\n            />\r\n            <EditRequestSpesificationDialog\r\n                open={states.editDialogRequest}\r\n                handleClose={handleOpenDialogRequest}\r\n                data={values.data}\r\n                dataClient={values.dataClient}\r\n                dataToUpdate={values.dataToUpdate}\r\n                completeRequest={handleUpdateRequest}\r\n\r\n            />\r\n            {/* < ConfirmationDialogRaw\r\n                id=\"ringtone-menu\"\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                value={value}\r\n                handleChoose={handleChoose}\r\n                userName={userName}\r\n            /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n    requestList: store.requestList.list,\r\n    clientList: store.clientList.list,\r\n    userDetail: store.clientList.detail,\r\n    userFiltered: store.clientList.filteredList,\r\n    userInfo: store.userInfo.info,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        _setOpenScreen: val => dispatch(setOpenScreen(val)),\r\n        _setCompleteRequest: (val) => {\r\n            dispatch(setServiceRequest(val.request))\r\n            dispatch(setServiceMethod(val.method))\r\n            dispatch(setServiceCode(val.serviceCode))\r\n            dispatch(setServiceParams(val.urlParams))\r\n            dispatch(setServiceCustomHeaders(val.customHeaders))\r\n            dispatch(setServiceRole(val.serviceRole))\r\n            dispatch(setServiceStatus(\"active\"))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestList)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MaterialTable from 'material-table';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReactExport from 'react-data-export';\r\n\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole, setSecondRequest,\r\n} from '../../../actions/ServiceActions'\r\nimport { setClinicRecapt, setClinikDetail } from \"../../../actions/PaxListActions\";\r\nimport { setSnackbar } from '../../../actions/FeedbackActions';\r\n\r\nimport { yyyymmddWithParams, convertDateyyyymmdd, RupiahFormat } from '../../../utils/utils';\r\nimport FormatText from '../../../i18n'\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport Card from '@material-ui/core/Card'\r\nimport ListTableMobile from '../../../components/list/ListTableMobile'\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n// const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nlet from = yyyymmddWithParams('lastWeek')\r\nlet dateto = yyyymmddWithParams('nextWeek')\r\n\r\nconst ClinicReport = props => {\r\n  const { _setOpenScreen, _setCompleteRequest, userInfo, paxList, roleUsed, _setClinicRecapt } = props\r\n\r\n  const [columns, setColumns] = useState([])\r\n\r\n  const [state, setState] = useState({\r\n    fromdate: from,\r\n    todate: dateto,\r\n    simpleTable: [],\r\n    totalPax: 0,\r\n    agentPrice: 0,\r\n    price: 0,\r\n    dataset: []\r\n  })\r\n\r\n  const initOne = () => {\r\n    _setClinicRecapt([])\r\n    const { name, email, phone } = userInfo\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    const submitFormRequest = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CLINIC_REPORT\",\r\n      urlParams: `/recapt?&from_date=${state.fromdate}&to_date=${state.todate}`,\r\n      customHeaders\r\n    }\r\n    _setCompleteRequest(submitFormRequest)\r\n    _setOpenScreen(\"Redeemed Order\")\r\n  }\r\n\r\n  useEffect(initOne, [])\r\n\r\n  useEffect(() => {\r\n    const tableColumn = [\r\n      { title: \"ID\", field: 'id', width: 50 },\r\n      { title: FormatText('app_name'), field: 'name', },   //   width: 300 },\r\n      { title: FormatText('clinic'), field: 'clinic' },\r\n      { title: FormatText('clinic_redeem_on'), field: 'redeem_on' },\r\n      { title: FormatText('clinic_payment_date'), field: 'payment_on' },\r\n      { title: \"NTA\", field: 'nta' },\r\n      { title: \"NTSA\", field: 'ntsa' },\r\n      { title: FormatText('clinic_price'), field: 'agentprice' },\r\n    ]\r\n\r\n    let newColumn = [...tableColumn]\r\n    if (roleUsed === 'voltras.admin') setColumns(newColumn)\r\n    else setColumns(newColumn.filter(column => column.field !== \"agentprice\" && column.field !== \"ntsa\"))\r\n  }, [roleUsed])\r\n\r\n  useEffect(() => {\r\n    let simpleTable = []\r\n    let dataToProcess = paxList.clinicRecapt.filter(order => order.status === \"FINISH\")\r\n    dataToProcess.forEach(order => order.items.forEach(item => item.products.forEach(product => {\r\n      let rowTable = {\r\n        id: order.id,\r\n        name: product.name,\r\n        clinic: product.klinik.name,\r\n        redeem_on: item.redeem && item.redeem.redeem_on ? convertDateyyyymmdd(item.redeem.redeem_on) : \"\",\r\n        payment_on: order.payment && order.payment.date ? convertDateyyyymmdd(order.payment && order.payment.date) : \"\",\r\n        nta: product.price.nta,\r\n        ntsa: product.price.ntsa,\r\n        agentprice: product.price.price,\r\n      }\r\n      simpleTable.push(rowTable)\r\n    })))\r\n\r\n    let totalPax = simpleTable.length\r\n    let totalAgentPrice = simpleTable.reduce(function (val, element) {\r\n      return val + parseInt(element.nta)\r\n    }, 0)\r\n\r\n    let doneTabel = []\r\n    simpleTable.forEach(item => {\r\n      let obj = {\r\n        ...item,\r\n        nta: RupiahFormat(item.nta),\r\n        ntsa: RupiahFormat(item.ntsa),\r\n        agentprice: RupiahFormat(item.agentprice),\r\n      }\r\n      doneTabel.push(obj)\r\n    })\r\n\r\n    let columns = [\r\n      { title: \"ID\", width: { wch: 5 } },\r\n      { title: FormatText('app_name'), width: { wch: 30 }, style: { font: { bold: true }, alignment: { horizontal: 'center' } }, },\r\n      { title: FormatText('clinic'), width: { wch: 30 }, style: { font: { bold: true }, alignment: { horizontal: 'center' } }, },\r\n      { title: FormatText('clinic_redeem_on'), width: { wch: 20 }, style: { font: { bold: true }, alignment: { horizontal: 'center' } }, },\r\n      { title: FormatText('clinic_payment_date'), width: { wch: 20 }, style: { font: { bold: true }, alignment: { horizontal: 'center' } }, },\r\n      { title: 'NTA', width: { wch: 12 }, style: { font: { bold: true }, alignment: { horizontal: 'center' } }, },\r\n      { title: 'NTSA', width: { wch: 12 }, style: { font: { bold: true }, alignment: { horizontal: 'center' } }, },\r\n      { title: FormatText('clinic_price'), width: { wch: 12 }, style: { font: { bold: true }, alignment: { horizontal: 'center' } }, },\r\n    ]\r\n    let newColumns = []\r\n    if (roleUsed !== 'voltras.admin') newColumns = columns.filter(column => column.title !== FormatText('clinic_price') && column.title !== \"NTSA\")\r\n    else newColumns = columns\r\n    let data = []\r\n    simpleTable.forEach(item => {\r\n      let dataArr = []\r\n      dataArr.push({ value: item.id })\r\n      dataArr.push({ value: item.name })\r\n      dataArr.push({ value: item.clinic })\r\n      dataArr.push({ value: item.redeem_on })\r\n      dataArr.push({ value: item.payment_on })\r\n      dataArr.push({ value: parseInt(item.nta) })\r\n      if (roleUsed === 'voltras.admin') {\r\n        dataArr.push({ value: parseInt(item.ntsa) })\r\n        dataArr.push({ value: parseInt(item.agentprice) })\r\n      }\r\n      data.push(dataArr)\r\n    })\r\n    let dataset = [{ ySteps: 1, columns: newColumns, data }]\r\n\r\n    setState(prevState => ({ ...prevState, dataset, simpleTable: doneTabel, totalPax, agentPrice: RupiahFormat(totalAgentPrice) }))\r\n  }, [paxList.clinicRecapt, roleUsed])\r\n\r\n  const handleDateChange = prop => date => {\r\n    // console.log('DateCgange: ', convertDateyyyymmdd(date))\r\n    setState({\r\n      ...state,\r\n      [prop]: convertDateyyyymmdd(date),\r\n    })\r\n  }\r\n\r\n  // const handleChange = prop => event => {\r\n  //   console.log('Change: ', prop)\r\n  // }\r\n\r\n  const handleExport = prop => {\r\n    // console.log('Change: ', prop)\r\n    // history.push('/KExcelReport')\r\n    let name = userInfo.name ? userInfo.name : ''\r\n    let email = userInfo.email ? userInfo.email : ''\r\n    let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    const submitXlsForm = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CLINIC_XLS_REPORT\",\r\n      urlParams: `/recapt?&from_date=${state.fromdate}&to_date=${state.todate}`,\r\n      customHeaders\r\n    }\r\n    _setCompleteRequest(submitXlsForm)\r\n  }\r\n\r\n  const handleSubmitFilter = () => {\r\n    //GET health/admin/report/recapt?from_date=2020-01-01&to_date=2020-09-01\r\n    let name = userInfo.name ? userInfo.name : ''\r\n    let email = userInfo.email ? userInfo.email : ''\r\n    let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    const submitForm = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CLINIC_REPORT\",\r\n      urlParams: `/recapt?&from_date=${state.fromdate}&to_date=${state.todate}`,\r\n      customHeaders\r\n    }\r\n    _setCompleteRequest(submitForm)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Hidden smDown>\r\n        <Grid container direction='row' justify='flex-start' alignItems='flex-start' style={{ marginBottom: 10, marginTop: 20 }} >\r\n          {/* {console.log(\"TABLE DONE: \", state.simpleTable)} */}\r\n          {/* <Grid item sm={4} >\r\n                <Grid item>\r\n                  <Typography variant=\"subtitle2\">Name:</Typography>\r\n                  <FormControl style={{ width: 300 }}  >\r\n                    <FormGroup >\r\n                      <Input\r\n                        error={state.emailErrorMessage ? true : false}\r\n                        id=\"standard-full-width\"\r\n                        type='text'\r\n                        placeholder='Name'\r\n                        onChange={handleChange('name')}\r\n                        endAdornment={\r\n                          <InputAdornment position=\"end\">\r\n                            <AccountBoxRounded />\r\n                          </InputAdornment>\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item> <br />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Typography style={{ marginBottom: 7 }} variant=\"subtitle2\">Klinik Name:</Typography>\r\n                  {\r\n                    this.props.paxList.klinikList.length === 1\r\n                      ? <TextField id=\"basic-klinik\" value={this.props.paxList.klinikList[0].name} style={{ width: 300 }} />\r\n                      : this.props.paxList.klinikList.length === 0\r\n                        ? <TextField id=\"basic-klinik\" disabled style={{ width: 300 }} />\r\n                        : <SimpleAutocomplete\r\n                          options={this.props.paxList.klinikList[0] ? this.props.paxList.klinikList : [{ name: '' }]}\r\n                          onPick={v => console.log(v)}\r\n                          width={300}\r\n                          optionItem={'name'}\r\n                        />\r\n                  }\r\n\r\n                </Grid>\r\n              </Grid> */}\r\n\r\n          <Grid item sm={4} >\r\n            <Typography variant=\"subtitle2\">{FormatText('clinic_payment_date')}:</Typography>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n              <Grid container style={{ marginLeft: 20 }} >\r\n                <KeyboardDatePicker\r\n                  size=\"small\"\r\n                  clearable\r\n                  format=\"yyyy/MM/dd\"\r\n                  margin=\"dense\"\r\n                  id=\"date-picker-from\"\r\n                  label=\"From\"\r\n                  value={state.fromdate}\r\n                  onChange={handleDateChange('fromdate')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container style={{ marginLeft: 20 }}>\r\n                <KeyboardDatePicker\r\n                  clearable\r\n                  size=\"small\"\r\n                  format=\"yyyy/MM/dd\"\r\n                  margin=\"dense\"\r\n                  id=\"date-picker-to\"\r\n                  label=\"To\"\r\n                  value={state.todate}\r\n                  onChange={handleDateChange('todate')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          {/* <Grid item sm={3} >\r\n        <FormControl style={{ marginLeft: 15 }} fullWidth>\r\n          <Typography variant=\"subtitle2\">Status:</Typography>\r\n          <FormControl>\r\n            <FormControlLabel\r\n              control={<Checkbox checked={state.New} onChange={handleChange('New')} name=\"New\" />}\r\n              label=\"NEW\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox checked={state.finish} onChange={handleChange('finish')} name=\"finish\" />}\r\n              label=\"FINISH\"\r\n            />\r\n          </FormControl>\r\n        </FormControl>\r\n      </Grid> */}\r\n          <Grid item sm={2} style={{ marginTop: 10 }}  >\r\n            <Grid item><br /></Grid>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify='center'\r\n              alignItems=\"center\">\r\n              {state.simpleTable.length < 1\r\n                ? <Grid item>\r\n                  <Button disabled={state.simpleTable.length < 1 ? true : false} size='small' variant=\"outlined\" onClick={() => handleExport(state.simpleTable)} color=\"primary\">\r\n                    {FormatText('app_export_xls')}\r\n                  </Button>\r\n                </Grid>\r\n                : <Grid item>\r\n                  <ExcelFile\r\n                    filename={`OrderReport ${state.fromdate} to ${state.todate}`}\r\n                    element={\r\n                      <Button size='small' variant=\"outlined\" color=\"primary\">\r\n                        {FormatText('app_export_xls')}\r\n                      </Button>}\r\n                  >\r\n                    <ExcelSheet dataSet={state.dataset} name=\"Order Report\" />\r\n                  </ExcelFile>\r\n                </Grid>}\r\n\r\n\r\n              <Grid> <br /></Grid>\r\n              <Grid item>\r\n                <Button size='small' variant=\"contained\" onClick={handleSubmitFilter} color=\"primary\">\r\n                  {FormatText('app_show_report')}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            {/* <Typography style={{ marginLeft: 20 }} variant=\"subtitle2\">Export to xls:</Typography>\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\">\r\n                  <Grid item><br /><br /></Grid>\r\n                  <Grid item>\r\n                    <Button variant=\"contained\" onClick={handleExport} color=\"primary\">\r\n                      Export\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item ><br /> <br /></Grid>\r\n                </Grid> */}\r\n          </Grid>\r\n\r\n          <Grid item sm={1} ></Grid>\r\n\r\n          <Grid item sm={5}  >\r\n            <Typography variant=\"subtitle2\">{FormatText('app_report_summary')}:</Typography>\r\n            <Grid container item style={{ marginLeft: 20, marginTop: 15 }}  >\r\n              <Grid item sm={3}> <Typography variant='caption' >Total Order</Typography></Grid>\r\n              <Grid item sm={3}>: {state.totalPax}</Grid>\r\n            </Grid>\r\n            <Grid container item style={{ marginLeft: 20 }} >\r\n              <Grid item sm={3}><Typography variant='caption' >{FormatText('clinic_agent_price')}</Typography></Grid>\r\n              <Grid item sm={3}>: {state.agentPrice}</Grid>\r\n            </Grid>\r\n            {/* <Grid container item style={{ marginLeft: 20 }} >\r\n          <Grid item sm={3}><Typography variant='caption' >Price</Typography></Grid>\r\n          <Grid item sm={3}>: \"3434\"</Grid>\r\n        </Grid> */}\r\n\r\n\r\n          </Grid>\r\n\r\n\r\n\r\n          <Grid item sm={12} style={{ marginTop: 20 }}>\r\n            <MaterialTable\r\n              title={FormatText('clinic_order_report')}\r\n              columns={columns}\r\n              data={state.simpleTable}\r\n            />\r\n          </Grid>\r\n          <Grid container>\r\n            {/* <div style={{ height: window.screen.height - 700 }} /> */}\r\n          </Grid>\r\n\r\n\r\n        </Grid>\r\n      </Hidden>\r\n      <Hidden smUp>\r\n        <Card>\r\n          <div style={{ backgroundColor: '#f4f0ec', padding: 5, width: '100%' }}>\r\n            <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              Filter By\r\n              </Typography>\r\n          </div>\r\n          <div style={{ marginLeft: 15, marginRight: 15 }}>\r\n            <Typography style={{ marginTop: 10, fontSize: 12, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              Payment Date\r\n            </Typography>\r\n            <Grid container>\r\n              <Grid item sm={6} xs={6}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                  <KeyboardDatePicker\r\n                    style={{ width: '90%' }}\r\n                    size=\"small\"\r\n                    clearable\r\n                    format=\"yyyy/MM/dd\"\r\n                    margin=\"dense\"\r\n                    id=\"date-picker-from\"\r\n                    label=\"From\"\r\n                    value={state.fromdate}\r\n                    onChange={handleDateChange('fromdate')}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                    InputLabelProps={{\r\n                      style: {\r\n                        fontSize: 12,\r\n                        fontFamily: 'Arial, Helvetica, sans-serif',\r\n                      }\r\n                    }}\r\n                    InputProps={{\r\n                      style: {\r\n                        fontSize: 12,\r\n                        fontFamily: 'Arial, Helvetica, sans-serif',\r\n                      }\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n\r\n              </Grid>\r\n              <Grid item sm={6} xs={6} align='right'>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                  <KeyboardDatePicker\r\n                    style={{ width: '90%' }}\r\n                    clearable\r\n                    size=\"small\"\r\n                    format=\"yyyy/MM/dd\"\r\n                    margin=\"dense\"\r\n                    id=\"date-picker-to\"\r\n                    label=\"To\"\r\n                    value={state.todate}\r\n                    onChange={handleDateChange('todate')}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                    InputLabelProps={{\r\n                      style: {\r\n                        fontSize: 12,\r\n                        fontFamily: 'Arial, Helvetica, sans-serif',\r\n                      }\r\n                    }}\r\n                    InputProps={{\r\n                      style: {\r\n                        fontSize: 12,\r\n                        fontFamily: 'Arial, Helvetica, sans-serif',\r\n                      }\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} container justify='space-between' style={{ paddingTop: 10, paddingLeft: 15, paddingBottom: 10, paddingRight: 15, marginBottom: 10 }}>\r\n                {state.simpleTable.length < 1\r\n                  ? <Grid item>\r\n                    <Button style={{\r\n                      textTransform: 'none', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                      fontWeight: 'bold', fontSize: 12\r\n                    }}\r\n                      disabled={state.simpleTable.length < 1 ? true : false} size='small' variant=\"outlined\" onClick={() => handleExport(state.simpleTable)} color=\"primary\">\r\n                      {FormatText('app_export_xls')}\r\n                    </Button>\r\n                  </Grid>\r\n                  : <Grid item>\r\n                    <ExcelFile\r\n                      filename={`OrderReport ${state.fromdate} to ${state.todate}`}\r\n                      element={\r\n                        <Button size='small' variant=\"outlined\" color=\"primary\" style={{\r\n                          textTransform: 'none', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                          fontWeight: 'bold', fontSize: 12\r\n                        }}>\r\n                          {FormatText('app_export_xls')}\r\n                        </Button>}\r\n                    >\r\n                      <ExcelSheet dataSet={state.dataset} name=\"Order Report\" />\r\n                    </ExcelFile>\r\n                  </Grid>}\r\n                <Grid item>\r\n                  <Button size='small' variant=\"contained\" onClick={handleSubmitFilter} color=\"primary\" style={{\r\n                    textTransform: 'none', color: 'white', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                    fontWeight: 'bold', fontSize: 12\r\n                  }}>\r\n                    {FormatText('app_show_report')}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Card>\r\n        <Card style={{ marginTop: 10 }}>\r\n          <div style={{ backgroundColor: '#f4f0ec', padding: 5, width: '100%' }}>\r\n            <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              Report Summary\r\n              </Typography>\r\n          </div>\r\n          <div style={{ marginLeft: 15, marginRight: 15 }}>\r\n            <Grid container style={{ paddingTop: 5, paddingBottom: 5 }}>\r\n              <Grid item sm={5} xs={5} align='left'>\r\n                <Typography style={{ fontSize: 13, padding: 3, color: 'grey', fontFamily: 'Arial, Helvetica, sans-serif' }}>Total Order</Typography>\r\n              </Grid>\r\n              <Grid item sm={7} xs={7}>\r\n                <Typography style={{ fontSize: 13, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>{state.totalPax}</Typography>\r\n              </Grid>\r\n              <Grid item sm={5} xs={5} align='left'>\r\n                <Typography style={{ fontSize: 13, padding: 3, color: 'grey', fontFamily: 'Arial, Helvetica, sans-serif' }}>{FormatText('clinic_agent_price')}</Typography>\r\n              </Grid>\r\n              <Grid item sm={7} xs={7}>\r\n                <Typography style={{ fontSize: 13, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>{state.agentPrice}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Card>\r\n        <Card style={{ marginTop: 10 }}>\r\n          <div style={{ backgroundColor: '#f4f0ec', padding: 5, width: '100%' }}>\r\n            <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              Order Report\r\n              </Typography>\r\n          </div>\r\n          <div style={{ marginLeft: 15, marginRight: 15 }}>\r\n            <ListTableMobile\r\n              column={columns}\r\n              data={state.simpleTable}\r\n            />\r\n          </div>\r\n        </Card>\r\n      </Hidden>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  clientList: store.clientList.list,\r\n  userDetail: store.clientList.detail,\r\n  userFiltered: store.clientList.filteredList,\r\n  userInfo: store.userInfo.info,\r\n  paxlistStatus: store.menu.paxList,\r\n  paxList: store.paxList,\r\n  roleUsed: store.userInfo.roleUsed,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)), _setSnackbar: val => dispatch(setSnackbar(val)),\r\n    _setSecondRequest: val => dispatch(setSecondRequest(val)),\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.urlParams))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n    _setClinicDetail: val => dispatch(setClinikDetail(val)),\r\n    _setClinicRecapt: val => dispatch(setClinicRecapt(val)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClinicReport)\r\n","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MaterialTable from 'material-table';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Card from '@material-ui/core/Card'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReactExport from 'react-data-export';\r\nimport SimpleAutocomplete from '../../../components/autocomplete/SimpleAutocomplete'\r\n\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole, setSecondRequest, setThirdRequest\r\n} from '../../../actions/ServiceActions'\r\nimport { setClinicRecapt, setClinikDetail, setKlinikList, setPaxProduct } from \"../../../actions/PaxListActions\";\r\nimport { setSnackbar } from '../../../actions/FeedbackActions';\r\n\r\nimport { yyyymmddWithParams, convertDateyyyymmdd, RupiahFormat } from '../../../utils/utils';\r\nimport FormatText from '../../../i18n'\r\nimport { SendToService } from '../../../services/ServiceClient';\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport ListTableMobile from '../../../components/list/ListTableMobile'\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n// const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nlet from = yyyymmddWithParams('lastWeek')\r\nlet dateto = yyyymmddWithParams('nextWeek')\r\n\r\nconst AllClinicReport = props => {\r\n  const { _setOpenScreen, _setCompleteRequest, userInfo, paxList,\r\n    _setClinicRecapt, _setPaxProduct, _setKlinikList } = props\r\n\r\n  const columns = [\r\n    { title: \"ID\", field: 'id', width: 50 },\r\n    { title: FormatText('app_name'), field: 'name', },\r\n    { title: \"Product\", field: 'product', width: 200 },\r\n    { title: FormatText('clinic'), field: 'clinic', width: 200 },\r\n    { title: \"Status\", field: 'status' },\r\n    { title: FormatText('clinic_redeem_on'), field: 'redeem_on' },\r\n    { title: FormatText('clinic_payment_date'), field: 'payment_on' },\r\n    { title: FormatText('clinic_agent_price'), field: 'agentprice' },\r\n    // { title: 'Pax Price', field: 'paxprice' },\r\n  ]\r\n\r\n  const [state, setState] = useState({\r\n    fromdate: from,\r\n    todate: dateto,\r\n    simpleTable: [],\r\n    totalPax: 0,\r\n    agentPrice: 0,\r\n    price: 0,\r\n    dataset: [],\r\n    Paid: false,\r\n    New: false,\r\n    finish: false,\r\n    clinicname: \"\",\r\n    productname: \"\",\r\n  })\r\n\r\n  useEffect(() => {\r\n    // console.log(\"EFFECT DIPANGGIL!!! \")\r\n    // console.log(paxList.clinicRecapt)\r\n    let simpleTable = []\r\n    let dataToProcess = paxList.clinicRecapt\r\n    dataToProcess.forEach(order => order.items.map(item => item.products.forEach(product => {\r\n      let rowTable = {\r\n        id: order.id,\r\n        // name: product.name,\r\n        name: item.name,\r\n        product: product.name,\r\n        clinic: product.klinik.name,\r\n        status: item.status,\r\n        redeem_on: item.redeem && item.redeem.redeem_on ? convertDateyyyymmdd(item.redeem.redeem_on) : \"\",// convertDateyyyymmdd(order.redeem.redeem_on),\r\n        payment_on: order.payment && order.payment.date ? convertDateyyyymmdd(order.payment && order.payment.date) : \"\",// convertDateyyyymmdd(order.payment && order.payment.date),\r\n        agentprice: product.price.nta,\r\n        paxprice: product.price.price,\r\n      }\r\n      simpleTable.push(rowTable)\r\n    })))\r\n\r\n\r\n    // let totalPax = simpleTable.length\r\n    let totalAgentPrice = simpleTable.reduce(function (val, element) {\r\n      return val + parseInt(element.agentprice)\r\n    }, 0)\r\n\r\n    let doneTabel = []\r\n    simpleTable.forEach(item => {\r\n      let obj = {\r\n        ...item,\r\n        status: item.status === \"FINISH\" ? item.status = \"REDEEMED\" : item.status,\r\n        agentprice: RupiahFormat(item.agentprice)\r\n      }\r\n      doneTabel.push(obj)\r\n    })\r\n\r\n    // console.log(totalAgentPrice)\r\n\r\n    let columns = [\r\n      { title: \"ID\", width: { wch: 5 } },\r\n      { title: FormatText('app_name'), width: { wch: 30 } },\r\n      { title: \"Product\", width: { wch: 30 } },\r\n      { title: FormatText('clinic'), width: { wch: 30 } },\r\n      { title: \"Status\", width: { wch: 12 } },\r\n      { title: FormatText('clinic_redeem_on'), width: { wch: 12 } },\r\n      { title: FormatText('clinic_payment_date'), width: { wch: 12 } },\r\n      { title: FormatText('clinic_agent_price'), width: { wch: 12 } },\r\n    ]\r\n    let data = []\r\n    simpleTable.forEach(item => {\r\n      let dataArr = []\r\n      dataArr.push({ value: item.id })\r\n      dataArr.push({ value: item.name })\r\n      dataArr.push({ value: item.product })\r\n      dataArr.push({ value: item.clinic })\r\n      dataArr.push({ value: item.status })\r\n      dataArr.push({ value: item.redeem_on })\r\n      dataArr.push({ value: item.payment_on })\r\n      dataArr.push({ value: parseInt(item.agentprice) })\r\n      // dataArr.push(item.paxprice)\r\n\r\n      data.push(dataArr)\r\n    })\r\n    let dataset = [{ ySteps: 1, columns, data }]\r\n\r\n    let fixedTable = doneTabel.filter(item => (item.status !== \"UNCONFIRMED\") && (item.payment_on))\r\n    let totalPax = fixedTable.length\r\n\r\n    setState(previousState => ({ ...previousState, dataset, simpleTable: fixedTable, totalPax, agentPrice: RupiahFormat(totalAgentPrice) }))\r\n    // console.log(\"DATASET: \", fixedTable)\r\n    _setOpenScreen(\"All Order Report\")\r\n  }, [paxList.clinicRecapt, _setOpenScreen])\r\n\r\n  useEffect(() => {\r\n    setState(previousState => ({ ...previousState, simpleTable: [], totalPax: 0, agentPrice: 0, }))\r\n    const { name, email, phone } = userInfo\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    if (name && email) {\r\n      SendToService(\r\n        {},\r\n        \"GET\",\r\n        \"GET_ALL_ORDER\",\r\n        `/list?&paymentdate_from=${from}&paymentdate_to=${dateto}`,\r\n        customHeaders,\r\n        null,\r\n        null,\r\n        response => {\r\n          _setClinicRecapt(response.body)\r\n          SendToService(\r\n            {},\r\n            \"GET\",\r\n            \"healthProduct\",\r\n            null,\r\n            customHeaders,\r\n            null,\r\n            null,\r\n            product => {\r\n              _setPaxProduct(product.body)\r\n              SendToService(\r\n                {},\r\n                \"GET\",\r\n                \"healthKlinik\",\r\n                null,\r\n                customHeaders,\r\n                null,\r\n                null,\r\n                clinic => {\r\n                  _setKlinikList(clinic.body)\r\n                }\r\n              )\r\n            }\r\n          )\r\n        })\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n\r\n  const handleDateChange = prop => date => {\r\n    // console.log('DateCgange: ', convertDateyyyymmdd(date))\r\n    setState({\r\n      ...state,\r\n      [prop]: convertDateyyyymmdd(date),\r\n    })\r\n  }\r\n\r\n  const handleExport = prop => {\r\n    let name = userInfo.name ? userInfo.name : ''\r\n    let email = userInfo.email ? userInfo.email : ''\r\n    let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    const submitXlsForm = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_CLINIC_XLS_REPORT\",\r\n      urlParams: `/recapt?&from_date=${state.fromdate}&to_date=${state.todate}`,\r\n      customHeaders\r\n    }\r\n    _setCompleteRequest(submitXlsForm)\r\n  }\r\n\r\n  const handleSubmitFilter = () => {\r\n    let name = userInfo.name ? userInfo.name : ''\r\n    let email = userInfo.email ? userInfo.email : ''\r\n    let phone = userInfo.phone ? userInfo.phone : ''\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let paymentParam = `&paymentdate_from=${state.fromdate}&paymentdate_to=${state.todate}`\r\n    let statusParam = (state.Paid && !state.finish)\r\n      ? '&status=PAID' //'&redeem_status=NEW'\r\n      : (!state.Paid && state.finish)\r\n        ? '&status=FINISH'   // '&redeem_status=REDEEMED'\r\n        : (state.Paid && state.finish)\r\n          ? \"\"\r\n          : \"\"\r\n    let productParam = state.productname ? `&productname=${state.productname}` : \"\"\r\n    let clinicParam = state.clinicname ? `&clinicname=${state.clinicname}` : \"\"\r\n    const submitForm = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode: \"GET_ALL_ORDER\",\r\n      urlParams: \"/list?\" + paymentParam + (statusParam ? statusParam : \"\") + productParam + clinicParam,\r\n      customHeaders\r\n    }\r\n    _setCompleteRequest(submitForm)\r\n  }\r\n\r\n  const handleChange = prop => event => {\r\n    if (prop === 'Paid') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else if (prop === 'New') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else if (prop === 'finish') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else if (prop === 'Booking Date') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else if (prop === 'Test Date') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else if (prop === 'Redeem Date') {\r\n      setState({\r\n        ...state,\r\n        [prop]: !state[prop],\r\n      })\r\n    }\r\n    else {\r\n      setState({\r\n        ...state,\r\n        [prop]: event.target.value,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handlePickProduct = item => {\r\n    if (item) setState({ ...state, productname: item.name })\r\n    else setState({ ...state, productname: \"\" })\r\n  }\r\n\r\n  const handlePickClinic = item => {\r\n    if (item) setState({ ...state, clinicname: item.name })\r\n    else setState({ ...state, clinicname: \"\" })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Hidden smDown>\r\n        <Grid container direction='row' justify='flex-start' alignItems='flex-start' style={{ marginBottom: 10, marginTop: 20 }} >\r\n          <Grid item sm={2} >\r\n            <Typography variant=\"subtitle2\">{FormatText('clinic_payment_date')}:</Typography>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n              <Grid container style={{ marginLeft: 20 }} >\r\n                <KeyboardDatePicker\r\n                  style={{ width: 150 }}\r\n                  size=\"small\"\r\n                  clearable\r\n                  format=\"yyyy/MM/dd\"\r\n                  margin=\"dense\"\r\n                  id=\"date-picker-from\"\r\n                  label=\"From\"\r\n                  value={state.fromdate}\r\n                  onChange={handleDateChange('fromdate')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container style={{ marginLeft: 20 }}>\r\n                <KeyboardDatePicker\r\n                  style={{ width: 150 }}\r\n                  clearable\r\n                  size=\"small\"\r\n                  format=\"yyyy/MM/dd\"\r\n                  margin=\"dense\"\r\n                  id=\"date-picker-to\"\r\n                  label=\"To\"\r\n                  value={state.todate}\r\n                  onChange={handleDateChange('todate')}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item sm={4} style={{ marginLeft: 20 }}  >\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"flex-start\"\r\n            >\r\n              <Typography variant=\"subtitle2\" style={{ marginTop: 25 }} >Product:</Typography>\r\n              <SimpleAutocomplete\r\n                small\r\n                id=\"productAutocomplete\"\r\n                options={paxList.product[0] ? paxList.product : []}\r\n                width={320}\r\n                optionItem={'name'}\r\n                // label=\"Product\"\r\n                // notShrink={true}\r\n                // onSelect={handleSelect}\r\n                // handleInputChange={handleInputChange}\r\n                onPick={handlePickProduct}\r\n              />\r\n\r\n              <Typography variant=\"subtitle2\" style={{ marginTop: 5 }} >Clinic:</Typography>\r\n              <SimpleAutocomplete\r\n                small\r\n                id=\"clinicAutocomplete\"\r\n                options={paxList.klinikList[0] ? paxList.klinikList : []}\r\n                width={320}\r\n                optionItem={'name'}\r\n                // label=\"Clinic\"\r\n                // notShrink={true}\r\n                // onSelect={handleSelect}\r\n                // handleInputChange={handleInputChange}\r\n                onPick={handlePickClinic}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item sm={3} >\r\n            <Typography variant=\"subtitle2\" style={{ marginTop: 25 }}>Status:</Typography>\r\n            <FormControl size=\"small\" style={{ marginLeft: 15 }} fullWidth>\r\n              <FormControlLabel\r\n                control={<Checkbox size=\"small\" checked={state.Paid} onChange={handleChange('Paid')} name=\"Paid\" />}\r\n                label=\"Paid\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox size=\"small\" checked={state.finish} onChange={handleChange('finish')} name=\"finish\" />}\r\n                label=\"Redeemed\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item sm={2}  >\r\n            <Typography variant=\"subtitle2\">{FormatText('app_report_summary')}:</Typography>\r\n            <Grid container direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"flex-start\" item style={{ marginLeft: 5, marginTop: 15 }}  >\r\n              <Grid item sm={5}> <Typography variant='caption' >Total Order</Typography></Grid>\r\n              <Grid item >: {state.totalPax}</Grid>\r\n            </Grid>\r\n            <Grid container direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"flex-start\" item style={{ marginLeft: 5 }} >\r\n              <Grid item sm={5}><Typography variant='caption' >{FormatText('clinic_agent_price')}</Typography></Grid>\r\n              <Grid item >: {state.agentPrice}</Grid>\r\n            </Grid>\r\n            {state.simpleTable.length < 1\r\n              ? <Grid item style={{ marginTop: 10 }} >\r\n                <Button disabled={state.simpleTable.length < 1 ? true : false} size='small' variant=\"outlined\" onClick={() => handleExport(state.simpleTable)} color=\"primary\">\r\n                  {FormatText('app_export_xls')}\r\n                </Button>\r\n              </Grid>\r\n              : <Grid item style={{ marginTop: 10 }} >\r\n                <ExcelFile\r\n                  filename={\r\n                    `OrderReport; ${state.fromdate} to ${state.todate}; ${state.Paid && !state.finish ? \"PAID;\" : !state.Paid && state.finish ? \"REDEEMED;\" : \"ALL;\"} ${state.productname ? \" \" + state.productname + \";\" : \"\"} ${state.clinicname ? \" \" + state.clinicname + \";\" : \"\"}`\r\n                  }\r\n                  element={\r\n                    <Button size='small' variant=\"outlined\" color=\"primary\">\r\n                      {FormatText('app_export_xls')}\r\n                    </Button>}\r\n                >\r\n                  <ExcelSheet dataSet={state.dataset} name=\"Order Report\" />\r\n                </ExcelFile>\r\n              </Grid>}\r\n            <Grid item style={{ marginTop: 10 }}>\r\n              <Button size='small' variant=\"contained\" onClick={handleSubmitFilter} color=\"primary\">\r\n                {FormatText('app_show_report')}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item sm={12} style={{ marginTop: 20 }}>\r\n            <MaterialTable\r\n              title={FormatText('clinic_order_report')}\r\n              columns={columns}\r\n              data={state.simpleTable}\r\n            />\r\n          </Grid>\r\n          <Grid container>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </Hidden>\r\n      <Hidden smUp>\r\n        <Card>\r\n          <div style={{ backgroundColor: '#f4f0ec', padding: 5, width: '100%' }}>\r\n            <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              Filter By\r\n              </Typography>\r\n          </div>\r\n          <div style={{ marginLeft: 15, marginRight: 15 }}>\r\n            <Typography style={{ marginTop: 10, fontSize: 12, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              Payment Date\r\n            </Typography>\r\n            <Grid container>\r\n              <Grid item xs={6} sm={6}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                  <KeyboardDatePicker\r\n                    style={{ width: 150 }}\r\n                    size=\"small\"\r\n                    clearable\r\n                    format=\"yyyy/MM/dd\"\r\n                    margin=\"dense\"\r\n                    id=\"date-picker-from\"\r\n                    label=\"From\"\r\n                    value={state.fromdate}\r\n                    onChange={handleDateChange('fromdate')}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                    InputLabelProps={{\r\n                      style: {\r\n                        fontSize: 12,\r\n                        fontFamily: 'Arial, Helvetica, sans-serif',\r\n                      }\r\n                    }}\r\n                    InputProps={{\r\n                      style: {\r\n                        fontSize: 12,\r\n                        fontFamily: 'Arial, Helvetica, sans-serif',\r\n                      }\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n              <Grid item xs={6} sm={6}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                  <KeyboardDatePicker\r\n                    style={{ width: 150 }}\r\n                    clearable\r\n                    size=\"small\"\r\n                    format=\"yyyy/MM/dd\"\r\n                    margin=\"dense\"\r\n                    id=\"date-picker-to\"\r\n                    label=\"To\"\r\n                    value={state.todate}\r\n                    onChange={handleDateChange('todate')}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                    InputLabelProps={{\r\n                      style: {\r\n                        fontSize: 12,\r\n                        fontFamily: 'Arial, Helvetica, sans-serif',\r\n                      }\r\n                    }}\r\n                    InputProps={{\r\n                      style: {\r\n                        fontSize: 12,\r\n                        fontFamily: 'Arial, Helvetica, sans-serif',\r\n                      }\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n            </Grid>\r\n            <Typography style={{ marginTop: 10, fontSize: 12, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              Status\r\n            </Typography>\r\n            <FormControl size=\"small\" fullWidth>\r\n              <Grid container>\r\n                <Grid item xs={3} sm={3}>\r\n                  <FormControlLabel\r\n                    control={<Checkbox size=\"small\" checked={state.Paid} onChange={handleChange('Paid')} name=\"Paid\" />}\r\n                    label={<Typography style={{ fontSize: 13, fontFamily: 'Arial, Helvetica, sans-serif' }}>Paid</Typography>}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3} sm={3}>\r\n                  <FormControlLabel\r\n                    control={<Checkbox size=\"small\" checked={state.finish} onChange={handleChange('finish')} name=\"finish\" />}\r\n                    label={<Typography style={{ fontSize: 13, fontFamily: 'Arial, Helvetica, sans-serif' }}>Redemeed</Typography>}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </FormControl>\r\n            <Typography style={{ marginTop: 10, fontSize: 12, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              Product\r\n            </Typography>\r\n            <SimpleAutocomplete\r\n              small\r\n              id=\"productAutocomplete\"\r\n              options={paxList.product[0] ? paxList.product : []}\r\n              width={320}\r\n              optionItem={'name'}\r\n              // label=\"Product\"\r\n              // notShrink={true}\r\n              // onSelect={handleSelect}\r\n              // handleInputChange={handleInputChange}\r\n              onPick={handlePickProduct}\r\n            />\r\n            <Typography style={{ marginTop: 10, fontSize: 12, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              Clinic\r\n            </Typography>\r\n            <SimpleAutocomplete\r\n              small\r\n              id=\"clinicAutocomplete\"\r\n              options={paxList.klinikList[0] ? paxList.klinikList : []}\r\n              width={320}\r\n              optionItem={'name'}\r\n              // label=\"Clinic\"\r\n              // notShrink={true}\r\n              // onSelect={handleSelect}\r\n              // handleInputChange={handleInputChange}\r\n              onPick={handlePickClinic}\r\n            />\r\n            <Grid item xs={12} sm={12} container justify='space-between' style={{ paddingTop: 10, paddingLeft: 15, paddingBottom: 10, paddingRight: 15, marginBottom: 10 }}>\r\n              {state.simpleTable.length < 1\r\n                ? <Grid item style={{ marginTop: 10 }} >\r\n                  <Button style={{\r\n                    textTransform: 'none', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                    fontWeight: 'bold', fontSize: 12\r\n                  }} disabled={state.simpleTable.length < 1 ? true : false} size='small' variant=\"outlined\" onClick={() => handleExport(state.simpleTable)} color=\"primary\">\r\n                    {FormatText('app_export_xls')}\r\n                  </Button>\r\n                </Grid>\r\n                : <Grid item style={{ marginTop: 10 }} >\r\n                  <ExcelFile\r\n                    filename={\r\n                      `OrderReport; ${state.fromdate} to ${state.todate}; ${state.Paid && !state.finish ? \"PAID;\" : !state.Paid && state.finish ? \"REDEEMED;\" : \"ALL;\"} ${state.productname ? \" \" + state.productname + \";\" : \"\"} ${state.clinicname ? \" \" + state.clinicname + \";\" : \"\"}`\r\n                    }\r\n                    element={\r\n                      <Button style={{\r\n                        textTransform: 'none', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                        fontWeight: 'bold', fontSize: 12\r\n                      }} size='small' variant=\"outlined\" color=\"primary\">\r\n                        {FormatText('app_export_xls')}\r\n                      </Button>}\r\n                  >\r\n                    <ExcelSheet dataSet={state.dataset} name=\"Order Report\" />\r\n                  </ExcelFile>\r\n                </Grid>}\r\n              <Grid item style={{ marginTop: 10 }}>\r\n                <Button style={{\r\n                  textTransform: 'none', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                  fontWeight: 'bold', fontSize: 12, color: 'white'\r\n                }} size='small' variant=\"contained\" onClick={handleSubmitFilter} color=\"primary\">\r\n                  {FormatText('app_show_report')}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Card>\r\n        <Card style={{ marginTop: 10 }}>\r\n          <div style={{ backgroundColor: '#f4f0ec', padding: 5, width: '100%' }}>\r\n            <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              Report Summary\r\n              </Typography>\r\n          </div>\r\n          <div style={{ marginLeft: 15, marginRight: 15 }}>\r\n            <Grid container style={{ paddingTop: 5, paddingBottom: 5 }}>\r\n              <Grid item sm={5} xs={5} align='left'>\r\n                <Typography style={{ fontSize: 13, padding: 3, color: 'grey', fontFamily: 'Arial, Helvetica, sans-serif' }}>Total Order</Typography>\r\n              </Grid>\r\n              <Grid item sm={7} xs={7}>\r\n                <Typography style={{ fontSize: 13, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>{state.totalPax}</Typography>\r\n              </Grid>\r\n              <Grid item sm={5} xs={5} align='left'>\r\n                <Typography style={{ fontSize: 13, padding: 3, color: 'grey', fontFamily: 'Arial, Helvetica, sans-serif' }}>{FormatText('clinic_agent_price')}</Typography>\r\n              </Grid>\r\n              <Grid item sm={7} xs={7}>\r\n                <Typography style={{ fontSize: 13, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>{state.agentPrice}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Card>\r\n        <Card style={{ marginTop: 10 }}>\r\n          <div style={{ backgroundColor: '#f4f0ec', padding: 5, width: '100%' }}>\r\n            <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              Order Report\r\n              </Typography>\r\n          </div>\r\n          <div style={{ marginLeft: 15, marginRight: 15 }}>\r\n            <ListTableMobile\r\n              column={columns}\r\n              data={state.simpleTable}\r\n            />\r\n          </div>\r\n        </Card>\r\n      </Hidden>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  clientList: store.clientList.list,\r\n  userDetail: store.clientList.detail,\r\n  userFiltered: store.clientList.filteredList,\r\n  userInfo: store.userInfo.info,\r\n  paxlistStatus: store.menu.paxList,\r\n  paxList: store.paxList\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)), _setSnackbar: val => dispatch(setSnackbar(val)),\r\n    _setSecondRequest: val => dispatch(setSecondRequest(val)),\r\n    _setThirdRequest: val => dispatch(setThirdRequest(val)),\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.urlParams))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n    _setClinicDetail: val => dispatch(setClinikDetail(val)),\r\n    _setClinicRecapt: val => dispatch(setClinicRecapt(val)),\r\n    _setPaxProduct: val => dispatch(setPaxProduct(val)),\r\n    _setKlinikList: val => dispatch(setKlinikList(val)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllClinicReport)\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { FormValidation } from '../../utils/FormValidation';\r\nimport { Avatar, Typography } from '@material-ui/core';\r\nimport { resizeImage } from '../../utils/utils';\r\n// import { sendImageToService } from '../../services/ServiceClient';\r\nimport FormatText from '../../i18n';\r\n\r\nexport default function EditDialog(props) {\r\n  const { editItem } = props\r\n  const [name, setName] = useState(\"\")\r\n  const [value, setValue] = useState('')\r\n  const [key, setKey] = useState('')\r\n  const [img, setImg] = useState('')\r\n  const [action, setAction] = useState(false)\r\n  const [imgPreview, setImgPreview] = useState('')\r\n  const [validation, setValidation] = useState({})\r\n  const [imageFile, setImageFile] = useState(\"\")\r\n  const [imageType, setImageType] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    setValidation({\r\n      error: false,\r\n      errorMessage: '',\r\n    })\r\n    setImg(editItem.picture)\r\n    setName(editItem.name)\r\n    setKey(editItem.key)\r\n    setValue(editItem.value)\r\n    setAction(editItem.action)\r\n  }, [editItem])\r\n\r\n  const handleEditValue = prop => e => {\r\n    let valid = FormValidation(prop, e.target.value)\r\n    setValidation(valid)\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setName(editItem.name)\r\n    setKey(editItem.key)\r\n    setValue(editItem.value)\r\n    props.handleEditClose()\r\n  }\r\n\r\n  const handleYes = () => {\r\n    if (imgPreview) {\r\n      let newObj = { name, value, key, action, picture: imgPreview, imageFile, imageType }\r\n      props.handleNewItem(newObj)\r\n    }\r\n    else props.handleNewItem({ name, value, key, action })\r\n    props.handleEditClose()\r\n  }\r\n\r\n  const fileSelected = async e => {\r\n    setValidation({ error: false, errorMessage: '', })\r\n    let file = e.target.files[0]\r\n    if (file) {\r\n      if (!file.type.includes('image')) setValidation({ error: true, errorMessage: 'Must be image file', })\r\n      // else if (file.size > 1000000) setValidation({ error: true, errorMessage: 'Image is bigger than 1 MB', })\r\n      else {\r\n        const data = await resizeImage(file);\r\n        // console.log(\"DATA: \", data)\r\n        setImgPreview(data.blobUrl)\r\n        setImageFile(data.file)\r\n        setImageType(data.type)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.open} onClose={props.handleEditClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Edit {name}</DialogTitle>\r\n        {\r\n          <DialogContent>\r\n            <center>\r\n              <DialogContentText style={{ width: 290 }}>\r\n                {FormatText('app_save_to_change')}\r\n              </DialogContentText>\r\n            </center>\r\n            {\r\n              key === 'picture'\r\n                ? <div>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    onChange={fileSelected}\r\n                    style={{ display: 'none' }}\r\n                    id=\"raised-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                  />\r\n                  <center>\r\n                    <Avatar style={{ width: 75, height: 75, marginBottom: 15 }} src={imgPreview ? imgPreview : img ? img : \"\"} />\r\n                  </center>\r\n\r\n                  <label htmlFor=\"raised-button-file\">\r\n                    <center>\r\n                      <Typography color='error' variant='caption' >{validation.errorMessage}</Typography>\r\n                      <Button variant='outlined' component=\"span\" size='small' color='primary' >\r\n                        {FormatText('app_select_photo')}\r\n                      </Button>\r\n                    </center>\r\n                  </label>\r\n                </div>\r\n                : <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"name\"\r\n                  label={name}\r\n                  value={value}\r\n                  onChange={handleEditValue(key)}\r\n                  placeholder={name}\r\n                  style={{ width: 280 }}\r\n                  error={validation.error ? true : false}\r\n                  helperText={validation.errorMessage ? validation.errorMessage : \"\"}\r\n                />\r\n            }\r\n          </DialogContent>\r\n        }\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"secondary\">\r\n            {FormatText('app_cancel')}\r\n          </Button>\r\n          <Button onClick={handleYes} color=\"primary\" disabled={validation.error ? true : false}>\r\n            {FormatText('app_choose')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport EditDialog from './EditDialog'\r\n\r\nimport { setOpenScreen } from \"../../actions/SystemActions\";\r\nimport {\r\n  setServiceRequest, setServiceCode, setServiceStatus, setServiceMethod,\r\n  setServiceParams, setServiceCustomHeaders, setServiceRole,\r\n} from '../../actions/ServiceActions'\r\nimport { Button, Tooltip } from '@material-ui/core';\r\nimport FormatText from '../../i18n';\r\nimport Config from '../../config';\r\nimport { sendImageToService } from '../../services/ServiceClient';\r\n\r\nconst UserProfile = props => {\r\n  const { _setOpenScreen, userInfo } = props\r\n  const [basic, setBasic] = useState([])\r\n  const [editOpen, setEditOpen] = useState(false)\r\n  const [editItem, setEditItem] = useState(false)\r\n\r\n  useEffect(() => {\r\n    _setOpenScreen(\"Manage Account\")\r\n\r\n  }, [_setOpenScreen])\r\n\r\n  useEffect(() => {\r\n    let text = FormatText('app_photo_personalize')\r\n    let data = userInfo\r\n    // let image = \"\"\r\n    let basicInfo = []\r\n    if (data.picture) {\r\n      basicInfo = [\r\n        { name: FormatText('common_photo'), value: text, action: true, key: 'picture', picture: data.picture },\r\n        { name: FormatText('common_name'), value: data.name ? data.name : \"\", action: true, key: 'name' },\r\n        { name: FormatText('common_email'), value: data.email ? data.email : \"\", action: false, key: 'email' },\r\n        { name: FormatText('common_phone'), value: data.phone ? data.phone : \"\", action: true, key: 'phone' },\r\n        { name: FormatText('common_address'), value: data.address ? data.address : \"\", action: true, key: 'address' },\r\n\r\n      ]\r\n      setBasic(basicInfo)\r\n      // getBase64Image(data.picture).then(result => {\r\n      //   console.log(result)\r\n      //   basicInfo = [\r\n      //     { name: FormatText('common_photo'), value: text, action: true, key: 'picture', picture: result },\r\n      //     { name: FormatText('common_name'), value: data.name ? data.name : \"\", action: true, key: 'name' },\r\n      //     { name: FormatText('common_email'), value: data.email ? data.email : \"\", action: true, key: 'email' },\r\n      //     { name: FormatText('common_phone'), value: data.phone ? data.phone : \"\", action: true, key: 'phone' },\r\n      //     { name: FormatText('common_address'), value: data.address ? data.address : \"\", action: true, key: 'address' },\r\n\r\n      //   ]\r\n      //   setBasic(basicInfo)\r\n      // })\r\n    } else {\r\n      basicInfo = [\r\n        { name: FormatText('common_photo'), value: text, action: true, key: 'picture', picture: data.picture, imageFile: \"\", imageType: \"\" },\r\n        { name: FormatText('common_name'), value: data.name ? data.name : \"\", action: true, key: 'name' },\r\n        { name: FormatText('common_email'), value: data.email ? data.email : \"\", action: false, key: 'email' },\r\n        { name: FormatText('common_phone'), value: data.phone ? data.phone : \"\", action: true, key: 'phone' },\r\n        { name: FormatText('common_address'), value: data.address ? data.address : \"\", action: true, key: 'address' },\r\n\r\n      ]\r\n      setBasic(basicInfo)\r\n    }\r\n  }, [userInfo])\r\n\r\n  const handleEdit = item => {\r\n    setEditItem(item)\r\n    setEditOpen(true)\r\n  }\r\n\r\n  const handleEditClose = () => setEditOpen(false)\r\n\r\n  const handleNewItem = item => {\r\n    let newBasic = basic.map(itemBasic => {\r\n      if (itemBasic.name === item.name) {\r\n        return item\r\n      }\r\n      return itemBasic\r\n    })\r\n    setBasic(newBasic)\r\n  }\r\n\r\n  const handleSave = async () => {\r\n    let attributeToUpdate = {}\r\n    let oldData = userInfo\r\n    let imageType = \"\"\r\n    // console.log(basic)\r\n    basic.map(item => {\r\n      if (item.imageType) imageType = item.imageType\r\n      return attributeToUpdate = { ...attributeToUpdate, [item.key]: item.key === 'picture' ? item.imageFile : item.value }\r\n    })\r\n    if (attributeToUpdate.name === oldData.name) delete attributeToUpdate.name\r\n    if (attributeToUpdate.email === oldData.email) delete attributeToUpdate.email\r\n    if (attributeToUpdate.phone === oldData.phone) delete attributeToUpdate.phone\r\n    if (attributeToUpdate.address === oldData.address) delete attributeToUpdate.address\r\n    if (attributeToUpdate.picture === oldData.picture) delete attributeToUpdate.picture\r\n    let request = { attributeToUpdate }\r\n    let method = \"PATCH\"\r\n    let serviceCode = 'UPDATE_USER_INFO'\r\n\r\n    const { name, email, phone, address, picture } = request.attributeToUpdate\r\n    if (phone) request.attributeToUpdate.phone = phone[0] === '0' ? '+62' + phone.slice(1) : phone\r\n    if (!name) delete request.attributeToUpdate.name\r\n    if (!email) delete request.attributeToUpdate.email\r\n    if (!phone) delete request.attributeToUpdate.phone\r\n    if (!address) delete request.attributeToUpdate.address\r\n    if (!picture) delete request.attributeToUpdate.picture\r\n\r\n    if (attributeToUpdate.picture) {\r\n      let response = await sendImageToService(attributeToUpdate.picture, imageType, attributeToUpdate.picture)\r\n      if (response.ID) {\r\n        request.attributeToUpdate.picture = Config.gatewayRepoFile + `/static-file-manager/retrieve?file=${response.ID}`\r\n        props._setCompleteRequest({ request, method, serviceCode })\r\n      }\r\n      else console.log(\"Error\")\r\n    }\r\n    else props._setCompleteRequest({ request, method, serviceCode })\r\n    // console.log(\"DAta to save: \", request)\r\n  }\r\n\r\n  return (\r\n    <Grid style={{ marginTop: 30 }} container direction=\"column\" justify=\"flex-start\" alignItems=\"center\" spacing={2}>\r\n      <Grid item sm={12} xl={12} style={{ marginTop: 30 }}>\r\n        <Paper elevation={2} >\r\n          <br />\r\n          <Grid item >\r\n            <center>\r\n              <Typography variant='h6' color='primary' >{FormatText('app_account_profile')}</Typography>\r\n            </center>\r\n          </Grid>\r\n          <List margin={20}  >\r\n            \r\n            {\r\n              basic && basic.map((item, i) => {\r\n                return (\r\n                  <ListItem divider key={i} style={{ marginRight: 30 }} >\r\n                    <ListItemText\r\n                      secondary={item.name}\r\n                      style={{ width: '20ch' }}\r\n                    />\r\n                    <ListItemText\r\n                      secondary={item.name === 'Photo' || item.name === 'Foto' ? item.value : !item.value ? 'edit to fill' : ''}\r\n                      primary={item.name !== 'Photo' && item.name !== 'Foto' ? item.value : ''}\r\n                      style={{ width: '60ch' }}\r\n                    // secondary={secondary ? 'Secondary text' : null}\r\n                    />\r\n                    <ListItemSecondaryAction style={{ marginRight: 15 }}>\r\n                      {item.name === 'Photo' || item.name === 'Foto'\r\n                        ? <Tooltip title=\"Edit\" >\r\n                          <Avatar\r\n                            src={item.picture}\r\n                            onClick={() => handleEdit(item)}\r\n                          />\r\n                        </Tooltip>\r\n                        : item.action\r\n                          ? <Tooltip title=\"Edit\" >\r\n                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleEdit(item)}>\r\n                              <EditIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          : null}\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                )\r\n              })\r\n            }\r\n          </List>\r\n\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n            <Grid style={{ marginTop: 20, marginBottom: 20 }}>\r\n              <Button\r\n                onClick={() => props.history.push('/Home')}\r\n                variant='outlined'\r\n                color='secondary'\r\n                startIcon={<ClearIcon />}\r\n                style={{\r\n                  width: 150,\r\n                  textTransform: 'none',\r\n                  fontWeight: 'bold',\r\n                  marginRight: 15\r\n                }}\r\n              >\r\n                {FormatText('app_cancel')}\r\n              </Button>\r\n              <Button\r\n                onClick={handleSave}\r\n                variant='outlined'\r\n                color='primary'\r\n                startIcon={<SaveIcon />}\r\n                style={{\r\n                  width: 150,\r\n                  textTransform: 'none',\r\n                  fontWeight: 'bold',\r\n                  marginLeft: 15\r\n                }}\r\n              >\r\n                {FormatText('common_save')}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <Grid >\r\n          <div style={{ height: 150 }} />\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n      <EditDialog\r\n        open={editOpen}\r\n        handleEditClose={handleEditClose}\r\n        editItem={editItem}\r\n        handleNewItem={handleNewItem}\r\n      />\r\n\r\n      <canvas id=\"canvas\" style={{ width: \"300\", display: 'none' }}></canvas>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  clientList: store.clientList.list,\r\n  userDetail: store.clientList.detail,\r\n  userFiltered: store.clientList.filteredList,\r\n  userInfo: store.userInfo.info,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setOpenScreen: val => dispatch(setOpenScreen(val)),\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.urlParams))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile)","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './GenericJson.css';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport Card from '@material-ui/core/Card'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport ListTableMobile from '../../components/list/ListTableMobile'\r\n\r\nimport { setConfigDetailModal } from '../../actions/GenericConfigurationActions';\r\nimport { setOpenScreen } from \"../../actions/SystemActions\";\r\nimport {\r\n    setServiceRequest, setServiceCode, setServiceStatus,\r\n    setServiceCustomHeaders, setServiceMethod, setServiceParams, setSecondRequest\r\n} from '../../actions/ServiceActions';\r\n\r\nimport { converDateDDMMYY } from '../../utils/utils';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst GenericJson = ({ setCompleteRequest, setOpenScreen, configList,\r\n    configDetailModal, setConfigDetailModal, configDetail, setSecondRequest }) => {\r\n\r\n    const [editConfig, setEditConfig] = useState(false);\r\n    const [modalConfigDetail, setModalConfigDetail] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setOpenScreen(\"Generic Configuration\");\r\n    }, [setOpenScreen]);\r\n\r\n\r\n    useEffect(() => {\r\n        const initialConfiguration = () => {\r\n            let fullRequest = {\r\n                request: {},\r\n                serviceMethod: 'GET',\r\n                serviceCode: 'GENERIC_JSON_CONFIGURATION',\r\n                customHeaders: {\r\n                    clientId: 'voltras-health'\r\n                }\r\n            }\r\n\r\n            setCompleteRequest(fullRequest);\r\n        }\r\n\r\n        initialConfiguration();\r\n    }, [setCompleteRequest]);\r\n\r\n    const handleChangeConfig = e => {\r\n        const { value } = e.target;\r\n        setModalConfigDetail(value);\r\n    }\r\n\r\n    const handleDetailConfig = (item) => {\r\n        let fullRequest = {\r\n            request: {},\r\n            params: \"/\" + item.id,\r\n            serviceMethod: 'GET',\r\n            serviceCode: 'GENERIC_JSON_CONFIGURATION_DETAIL',\r\n            customHeaders: {\r\n                clientId: 'voltras-health'\r\n            }\r\n        }\r\n        setCompleteRequest(fullRequest);\r\n    }\r\n\r\n    const handleCloseModal = () => {\r\n        setConfigDetailModal(false);\r\n        setEditConfig(false);\r\n    }\r\n\r\n    const handleSaveConfiguration = () => {\r\n        const detail = JSON.parse(modalConfigDetail);\r\n        let fullRequest = {\r\n            request: detail,\r\n            params: \"/\" + detail.id,\r\n            serviceMethod: 'POST',\r\n            serviceCode: 'GENERIC_JSON_CONFIGURATION_UPDATE',\r\n            customHeaders: {\r\n                clientId: 'voltras-health'\r\n            }\r\n        }\r\n        setCompleteRequest(fullRequest);\r\n\r\n\r\n        //Updtae\r\n        let fullRequest2 = {\r\n            request: {},\r\n            method: 'GET',\r\n            serviceCode: 'GENERIC_JSON_CONFIGURATION',\r\n            customHeaders: {\r\n                clientId: 'voltras-health'\r\n            }\r\n        }\r\n        setSecondRequest(fullRequest2)\r\n        setEditConfig(false);\r\n    }\r\n\r\n    const handleEditConfiguration = () => {\r\n        const value = JSON.stringify(configDetail, undefined, 5);\r\n        setModalConfigDetail(value)\r\n        setEditConfig(true);\r\n    }\r\n\r\n    return (\r\n        <div className='generic-json-container'>\r\n            <Hidden smDown>\r\n                <div className='generic-configuration-container'>\r\n                    <div className='generic-header'>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Generic Configuration List\r\n                    </Typography>\r\n                    </div>\r\n\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>ID</TableCell>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>Updated On</TableCell>\r\n                                <TableCell>Updated By</TableCell>\r\n                                <TableCell>Action</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                configList.map((item) => (\r\n                                    <TableRow key={item.id}>\r\n                                        <TableCell>{item.id}</TableCell>\r\n                                        <TableCell>{item.name}</TableCell>\r\n                                        <TableCell>{converDateDDMMYY(item.update.on)}</TableCell>\r\n                                        <TableCell>{item.update.by}</TableCell>\r\n                                        <TableCell>\r\n                                            <IconButton aria-label=\"delete\" onClick={() => handleDetailConfig(item)}>\r\n                                                <i style={{ fontSize: '18px' }} className=\"fas fa-info-circle\"></i>\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </div>\r\n            </Hidden>\r\n            <Hidden smUp>\r\n                <Card style={{ marginTop: 10 }}>\r\n                    <div style={{ display: 'flex', backgroundColor: '#f4f0ec', padding: 5 }}>\r\n                        <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n                            Generic Configuration List\r\n                        </Typography>\r\n                    </div>\r\n                    <div style={{ marginLeft: 15, marginRight: 15 }}>\r\n                        <ListTableMobile\r\n                            column={[\r\n                                { title: 'ID', field: 'id' },\r\n                                { title: 'Name', field: 'name' },\r\n                                { title: 'Update On', field: 'on' },\r\n                                { title: 'Update By', field: 'by' }\r\n                            ]}\r\n                            data={configList.map(item => ({\r\n                                ...item,\r\n                                on: converDateDDMMYY(item.update.on),\r\n                                by: item.update.by\r\n                            }))}\r\n                            arrow={true}\r\n                            button={true}\r\n                            onClickList={handleDetailConfig}\r\n                        />\r\n                    </div>\r\n                </Card>\r\n            </Hidden>\r\n            <Dialog\r\n                open={configDetailModal}\r\n                scroll={\"paper\"}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                maxWidth={\"xl\"}\r\n\r\n            >\r\n                <DialogTitle>\r\n                    <div className='dialog-header'>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Configuration Detail\r\n                        </Typography>\r\n                        <IconButton aria-label=\"delete\" onClick={handleCloseModal}>\r\n                            <i className=\"fas fa-times\" ></i>\r\n                        </IconButton>\r\n                    </div>\r\n\r\n                </DialogTitle>\r\n                <Hidden smDown>\r\n                    <DialogContent>\r\n                        <div className='dialog-content'>\r\n                            <TextField\r\n                                label=\"JSON Config\"\r\n                                multiline\r\n                                rowsMax={20}\r\n                                value={modalConfigDetail ? modalConfigDetail : JSON.stringify(configDetail, undefined, 5)}\r\n                                onChange={handleChangeConfig}\r\n                                variant=\"outlined\"\r\n                                style={{ width: '100%' }}\r\n                                disabled={!editConfig}\r\n                            />\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <div className='dialog-footer'>\r\n                            {\r\n                                editConfig ?\r\n                                    <div>\r\n                                        <Button style={{ marginRight: '10px' }} onClick={handleCloseModal} variant='outlined' color=\"primary\">\r\n                                            Cancel\r\n                                </Button>\r\n                                        <Button onClick={handleSaveConfiguration} variant='contained' color=\"primary\">\r\n                                            Save Configuration\r\n                                </Button>\r\n                                    </div>\r\n                                    :\r\n                                    <Button onClick={handleEditConfiguration} variant='contained' color=\"primary\">\r\n                                        Edit Configuration\r\n                            </Button>\r\n                            }\r\n                        </div>\r\n\r\n                    </DialogActions>\r\n                </Hidden>\r\n                <Hidden smUp>\r\n                    <DialogContent>\r\n                        {/* <div className='dialog-content'> */}\r\n                        <TextField\r\n                            label=\"JSON Config\"\r\n                            multiline\r\n                            rowsMax={20}\r\n                            value={modalConfigDetail ? modalConfigDetail : JSON.stringify(configDetail, undefined, 5)}\r\n                            onChange={handleChangeConfig}\r\n                            variant=\"outlined\"\r\n                            style={{ width: '100%' }}\r\n                            disabled={!editConfig}\r\n                            InputProps={{\r\n                                style: {\r\n                                    fontSize: 12,\r\n                                    fontFamily: 'Arial, Helvetica, sans-serif',\r\n                                }\r\n                            }}\r\n                        />\r\n                        {/* </div> */}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        {/* <div className='dialog-footer'> */}\r\n                        {\r\n                            editConfig ?\r\n                                <Grid container justify='space-between'>\r\n                                    <Button onClick={handleCloseModal} variant='outlined' color=\"primary\"\r\n                                        style={{\r\n                                            textTransform: 'none', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                                            fontWeight: 'bold', fontSize: 12, marginRight: '10px'\r\n                                        }} >\r\n                                        Cancel\r\n                                </Button>\r\n                                    <Button onClick={handleSaveConfiguration} variant='contained' color=\"primary\" style={{\r\n                                        textTransform: 'none', color: 'white', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                                        fontWeight: 'bold', fontSize: 12\r\n                                    }}>\r\n                                        Save Configuration\r\n                                </Button>\r\n                                </Grid>\r\n                                :\r\n                                <Grid container justify='center'>\r\n                                    <Button style={{\r\n                                        textTransform: 'none', color: 'white', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                                        fontWeight: 'bold', fontSize: 12\r\n                                    }} onClick={handleEditConfiguration} variant='contained' color=\"primary\">\r\n                                        Edit Configuration\r\n                                        </Button>\r\n                                </Grid>\r\n                        }\r\n                        {/* </div> */}\r\n                    </DialogActions>\r\n                </Hidden>\r\n            </Dialog>\r\n            <div style={{ height: window.screen.height - 550 }} >\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCompleteRequest: (val) => {\r\n        dispatch(setServiceRequest(val.request))\r\n        dispatch(setServiceMethod(val.serviceMethod))\r\n        dispatch(setServiceCode(val.serviceCode))\r\n        dispatch(setServiceCustomHeaders(val.customHeaders))\r\n        dispatch(setServiceParams(val.serviceParams))\r\n        dispatch(setServiceParams(val.params))\r\n        dispatch(setServiceStatus(val.serviceStatus || 'active'))\r\n    },\r\n    setOpenScreen: (val) => dispatch(setOpenScreen(val)),\r\n    setConfigDetailModal: (val) => dispatch(setConfigDetailModal(val)),\r\n    setSecondRequest: (val) => dispatch(setSecondRequest(val))\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    configList: state.genericConfiguration.configurationList,\r\n    configDetail: state.genericConfiguration.configDetail,\r\n    configDetailModal: state.genericConfiguration.configDetailModal\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GenericJson);","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n// import Delete from '@material-ui/icons/Delete'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n    // DatePicker\r\n} from '@material-ui/pickers';\r\nimport { FormValidation } from '../../utils/FormValidation'\r\nimport { InputAdornment } from '@material-ui/core'\r\n\r\nimport './GenericJson.css';\r\n\r\nimport { setOpenScreen } from \"../../actions/SystemActions\";\r\nimport {\r\n    setServiceRequest, setServiceCode, setServiceStatus,\r\n    setServiceCustomHeaders, setServiceMethod, setServiceParams, setSecondRequest\r\n} from '../../actions/ServiceActions';\r\nimport { converDateDDMMYY } from '../../utils/utils';\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport Card from '@material-ui/core/Card'\r\nimport ListTableMobile from '../../components/list/ListTableMobile'\r\nimport Add from '@material-ui/icons/AddCircleOutline'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst CatalogProduct = (props) => {\r\n\r\n    const { setOpenScreen, setCompleteRequest, productCatalogList } = props\r\n\r\n    useEffect(() => {\r\n        setOpenScreen(\"Generic Configuration\");\r\n    }, [setOpenScreen]);\r\n\r\n    const getCatalogProduct = () => {\r\n        let fullRequest = {\r\n            request: {},\r\n            serviceMethod: 'GET',\r\n            serviceCode: 'GENERAL_PRODUCT_CATALOG',\r\n            customHeaders: {\r\n                clientId: 'voltras-health'\r\n            }\r\n        }\r\n\r\n        setCompleteRequest(fullRequest);\r\n    }\r\n\r\n    useEffect(getCatalogProduct, [])\r\n\r\n    // const [modalConfigDetail, setModalConfigDetail] = useState(null);\r\n    // const [editConfig, setEditConfig] = useState(false);\r\n    const [openModalCreate, setOpenModalCreate] = useState(false)\r\n    const [openModalEdit, setOpenModalEdit] = useState(false)\r\n    // const [detailCatalog, setDetailCatalog] = useState(null)\r\n    const [createProduct, setCreateProduct] = useState({})\r\n    const [updateProduct, setUpdateProduct] = useState({})\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [dataSearch, setDataSearch] = useState([])\r\n\r\n    useEffect(() => {\r\n        setDataSearch(productCatalogList)\r\n    }, [productCatalogList])\r\n\r\n    // const emptyRows = rowsPerPage - Math.min(rowsPerPage, dataSearch.length - page * rowsPerPage);\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handeChangeProductUpdate = id => e => {\r\n        let valid = FormValidation(id, e.target.value)\r\n        setUpdateProduct({\r\n            ...updateProduct,\r\n            [id]: e.target.value,\r\n            [id + 'ErrorMessage']: valid.errorMessage,\r\n        })\r\n    }\r\n\r\n    const handleDetailConfig = (item) => {\r\n        setUpdateProduct({\r\n            ...updateProduct,\r\n            id: item.id,\r\n            product_name: item.name,\r\n            price: item.pricing.price,\r\n            nta: item.pricing.nta,\r\n            ntsa: item.pricing.ntsa,\r\n            discount_nta: item.pricing.discount_nta,\r\n            discount_price: item.pricing.discount_price,\r\n            validity_period: item.validity_period\r\n        })\r\n        setOpenModalEdit(true)\r\n        // setDetailCatalog(item)\r\n    }\r\n    const handleOpenCreateCatalog = () => {\r\n        setOpenModalCreate(true)\r\n    }\r\n\r\n    const handleCloseModal = () => {\r\n        setCreateProduct({})\r\n        setUpdateProduct({})\r\n        setOpenModalEdit(false)\r\n        setOpenModalCreate(false)\r\n    }\r\n\r\n    const handleEditConfiguration = () => {\r\n        const detail = {\r\n            product_name: updateProduct.product_name,\r\n            price: Number(updateProduct.price),\r\n            nta: Number(updateProduct.nta),\r\n            ntsa: Number(updateProduct.ntsa),\r\n            discount_nta: Number(updateProduct.discount_nta),\r\n            discount_price: Number(updateProduct.discount_price),\r\n            validity_period: updateProduct.validity_period\r\n        }\r\n\r\n        let fullRequest = {\r\n            request: detail,\r\n            params: \"/\" + updateProduct.id,\r\n            serviceMethod: 'PATCH',\r\n            serviceCode: 'GENERAL_PRODUCT_CATALOG_UPDATE',\r\n            customHeaders: {\r\n                clientId: 'voltras-health'\r\n            }\r\n        }\r\n        setCompleteRequest(fullRequest);\r\n        setOpenModalEdit(false)\r\n    }\r\n\r\n    const handleChangeDate = (id) => e => {\r\n        // console.log('date', e)\r\n        setCreateProduct({\r\n            ...createProduct,\r\n            [id]: new Date(e).getTime()\r\n        })\r\n    }\r\n\r\n    const handleChangeDateUpdate = (id) => e => {\r\n        // console.log('date', e)\r\n        setUpdateProduct({\r\n            ...updateProduct,\r\n            [id]: new Date(e).getTime()\r\n        })\r\n    }\r\n\r\n    const handleChangeCreateCatalog = id => e => {\r\n        let valid = FormValidation(id, e.target.value)\r\n        setCreateProduct({\r\n            ...createProduct,\r\n            [id]: e.target.value,\r\n            [id + 'ErrorMessage']: valid.errorMessage,\r\n        })\r\n    }\r\n\r\n    const handleSaveCatalog = () => {\r\n        const request = {\r\n            product_name: createProduct.product_name,\r\n            price: Number(createProduct.price),\r\n            nta: Number(createProduct.nta),\r\n            ntsa: Number(createProduct.ntsa),\r\n            discount_nta: Number(createProduct.discount_nta),\r\n            discount_price: Number(createProduct.discount_price),\r\n            validity_period: createProduct.validity_period\r\n        }\r\n        let fullRequest = {\r\n            request: request,\r\n            // params: \"/\" + detail.id,\r\n            serviceMethod: 'POST',\r\n            serviceCode: 'GENERAL_PRODUCT_CATALOG_CREATE',\r\n            customHeaders: {\r\n                clientId: 'voltras-health'\r\n            }\r\n        }\r\n        setCompleteRequest(fullRequest);\r\n        setOpenModalCreate(false)\r\n    }\r\n\r\n\r\n    const handleChangeSearch = (e) => {\r\n        let search = e.target.value\r\n        var condition = new RegExp(search, 'i');\r\n        if (search) {\r\n            let filter = productCatalogList.filter(item => {\r\n\r\n                return condition.test(item.name)\r\n            })\r\n            setDataSearch(filter)\r\n        }\r\n        else {\r\n            setDataSearch(productCatalogList)\r\n        }\r\n    }\r\n\r\n    const disableButton = type => {\r\n        if (type === 'create') {\r\n            if (createProduct.product_name && createProduct.price && createProduct.nta && createProduct.discount_nta && createProduct.discount_price) {\r\n                return false\r\n            } else if (createProduct.product_nameErrorMessage || createProduct.ntaErrorMessage || createProduct.discount_priceErrorMessage || createProduct.discount_ntaErrorMessage || createProduct.priceErrorMessage) {\r\n                return true\r\n            }\r\n            else {\r\n                return true\r\n            }\r\n        }\r\n        else {\r\n            if (createProduct.product_name && createProduct.price && createProduct.nta && createProduct.discount_nta && createProduct.discount_price) {\r\n                return false\r\n            } else if (createProduct.product_nameErrorMessage || createProduct.ntaErrorMessage || createProduct.discount_priceErrorMessage || createProduct.discount_ntaErrorMessage || createProduct.priceErrorMessage) {\r\n                return true\r\n            }\r\n            else {\r\n                return true\r\n            }\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n    let dataMobile = []\r\n\r\n    return (\r\n        <div className='generic-json-container'>\r\n            <Hidden smDown>\r\n                <div className='generic-configuration-container'>\r\n\r\n\r\n                    <div className='generic-header'>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Product List\r\n                    </Typography>\r\n                    </div>\r\n                    <div style={{ display: 'flex', justifyContent: 'flex-end', marginBottom: 10 }}>\r\n                        <div style={{ width: '100%' }} />\r\n                        <TextField\r\n                            style={{ width: '40%' }}\r\n                            fullWidth\r\n                            label='Search Product'\r\n                            onChange={handleChangeSearch}\r\n                            // placeholder='Search'\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>ID</TableCell>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>Price</TableCell>\r\n                                <TableCell>Validity Period</TableCell>\r\n                                <TableCell>NTA</TableCell>\r\n                                <TableCell>NTSA</TableCell>\r\n                                <TableCell>Action</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                dataSearch.sort((a, b) => a.id > b.id ? 1 : a.id < b.id ? -1 : 0)\r\n                                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                    .map((item, index) => (<TableRow key={index}>\r\n                                        <TableCell>{item.id}</TableCell>\r\n                                        <TableCell>{item.name}</TableCell>\r\n                                        <TableCell>{item.pricing.price}</TableCell>\r\n                                        <TableCell>{converDateDDMMYY(item.validity_period)}</TableCell>\r\n                                        <TableCell>{item.pricing.nta}</TableCell>\r\n                                        <TableCell>{item.pricing.ntsa}</TableCell>\r\n                                        <TableCell>\r\n                                            <IconButton aria-label=\"delete\" onClick={() => handleDetailConfig(item)}>\r\n                                                <i style={{ fontSize: '18px' }} className=\"fas fa-info-circle\"></i>\r\n                                            </IconButton>\r\n                                            {/* <IconButton aria-label=\"delete\">\r\n                                        <Delete />\r\n                                    </IconButton> */}\r\n                                        </TableCell>\r\n                                    </TableRow>))\r\n\r\n                            }\r\n                            {/* {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                <TableCell colSpan={6} />\r\n                            </TableRow>\r\n                        )} */}\r\n                        </TableBody>\r\n                        <TableFooter>\r\n                            <TableRow>\r\n                                <TablePagination\r\n                                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                    colSpan={8}\r\n                                    count={productCatalogList.length}\r\n                                    rowsPerPage={rowsPerPage}\r\n                                    page={page}\r\n                                    SelectProps={{\r\n                                        inputProps: { 'aria-label': 'rows per page' },\r\n                                        native: true,\r\n                                    }}\r\n                                    onChangePage={handleChangePage}\r\n                                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                    ActionsComponent={TablePaginationActions}\r\n                                />\r\n                            </TableRow>\r\n                        </TableFooter>\r\n                    </Table>\r\n                </div>\r\n                <div style={{ marginTop: 15 }}>\r\n                    <Button variant='contained' color=\"primary\" onClick={handleOpenCreateCatalog}>\r\n                        Create Product\r\n                </Button>\r\n                </div>\r\n            </Hidden>\r\n            <Hidden smUp>\r\n                <div style={{ marginTop: 10 }}>\r\n                    <TextField\r\n                        // style={{ width: '40%' }}\r\n                        fullWidth\r\n                        variant='outlined'\r\n                        label='Search Product'\r\n                        onChange={handleChangeSearch}\r\n                        // placeholder='Search'\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                            style: {\r\n                                fontSize: 12,\r\n                                fontFamily: 'Arial, Helvetica, sans-serif',\r\n                            }\r\n                        }}\r\n                        InputProps={{\r\n                            style: {\r\n                                height: 40,\r\n                                fontSize: 12,\r\n                                fontFamily: 'Arial, Helvetica, sans-serif',\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n                {/* <Button variant='contained' color=\"primary\" onClick={handleOpenCreateCatalog}>\r\n                    Create Product\r\n                </Button> */}\r\n                <Card style={{ marginTop: 10 }}>\r\n                    <div style={{ display: 'flex', backgroundColor: '#f4f0ec', padding: 5, width: '100%', justifyContent: 'space-between' }}>\r\n                        <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n                            Product List\r\n                        </Typography>\r\n                        <IconButton style={{ padding: 0 }} onClick={handleOpenCreateCatalog}>\r\n                            <Tooltip title='Create Product' placement='top'>\r\n                                <Add color='primary' style={{ padding: 0 }} />\r\n                            </Tooltip>\r\n                        </IconButton>\r\n                    </div>\r\n                    <div style={{ marginLeft: 15, marginRight: 15 }}>\r\n                        <ListTableMobile\r\n                            column={[\r\n                                { title: \"ID\", field: 'id' },\r\n                                { title: \"Name Product\", field: 'name' },\r\n                                { title: \"pricing\", field: 'price' },\r\n                                { title: \"Validity Period\", field: 'validity_period' },\r\n                                { title: \"NTA\", field: 'nta' },\r\n                                { title: \"NTSA\", field: 'ntsa' },\r\n                            ]}\r\n                            data={dataMobile = dataSearch.map(item => {\r\n                                return {\r\n                                    ...item,\r\n                                    ...item.pricing,\r\n                                    validity_period: converDateDDMMYY(item.validity_period)\r\n                                }\r\n                            })}\r\n                            button={true}\r\n                            arrow={true}\r\n                            onClickList={handleDetailConfig}\r\n                        />\r\n                    </div>\r\n                </Card>\r\n            </Hidden>\r\n\r\n            <Dialog\r\n                open={openModalEdit}\r\n                scroll={\"paper\"}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                maxWidth={\"xs\"}\r\n\r\n            >\r\n                <DialogTitle>\r\n                    <div className='dialog-header'>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Edit Product\r\n                        </Typography>\r\n                        <IconButton aria-label=\"delete\" onClick={handleCloseModal}>\r\n                            <i className=\"fas fa-times\" ></i>\r\n                        </IconButton>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div className='dialog-content'>\r\n                        <TextField\r\n                            label='Product Name'\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            value={updateProduct.product_name}\r\n                            error={updateProduct.product_nameErrorMessage ? true : false}\r\n                            helperText={updateProduct.product_nameErrorMessage ? updateProduct.product_nameErrorMessage : ''}\r\n                            onChange={handeChangeProductUpdate('product_name')}\r\n                            style={{ marginBottom: 10 }}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            label='Price'\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            value={updateProduct.price}\r\n                            error={updateProduct.priceErrorMessage ? true : false}\r\n                            helperText={updateProduct.priceErrorMessage ? updateProduct.priceErrorMessage : ''}\r\n                            onChange={handeChangeProductUpdate('price')}\r\n                            style={{ marginBottom: 10 }}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            label='NTA'\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            value={updateProduct.nta}\r\n                            error={updateProduct.ntaErrorMessage ? true : false}\r\n                            helperText={updateProduct.ntaErrorMessage ? updateProduct.ntaErrorMessage : ''}\r\n                            onChange={handeChangeProductUpdate('nta')}\r\n                            style={{ marginBottom: 10 }}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            label='NTSA'\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            value={updateProduct.ntsa}\r\n                            error={updateProduct.ntaErrorMessage ? true : false}\r\n                            helperText={updateProduct.ntsaErrorMessage ? updateProduct.ntsaErrorMessage : ''}\r\n                            onChange={handeChangeProductUpdate('ntsa')}\r\n                            style={{ marginBottom: 10 }}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            label='Discount Price'\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            value={updateProduct.discount_price}\r\n                            error={updateProduct.discount_priceErrorMessage ? true : false}\r\n                            helperText={updateProduct.discount_priceErrorMessage ? updateProduct.discount_priceErrorMessage : ''}\r\n                            onChange={handeChangeProductUpdate('discount_price')}\r\n                            style={{ marginBottom: 10 }}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                            InputProps={{\r\n                                endAdornment: < InputAdornment position='end' >\r\n                                    %\r\n                            </InputAdornment>\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            label='Discount Nta'\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            value={updateProduct.discount_nta}\r\n                            error={updateProduct.discount_ntaErrorMessage ? true : false}\r\n                            helperText={updateProduct.discount_ntaErrorMessage ? updateProduct.discount_ntaErrorMessage : ''}\r\n                            onChange={handeChangeProductUpdate('discount_nta')}\r\n                            style={{ marginBottom: 10 }}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                            InputProps={{\r\n                                endAdornment: < InputAdornment position='end' >\r\n                                    %\r\n                            </InputAdornment>\r\n                            }}\r\n\r\n                        />\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                // style={{ width: 150, marginRight: 15 }\r\n                                clearable\r\n                                disablePast={true}\r\n                                // size=\"small\"\r\n                                // variant=\"inline\"\r\n                                inputVariant=\"outlined\"\r\n                                fullWidth\r\n                                format=\"yyyy/MM/dd\"\r\n                                // margin=\"dense\"\r\n                                // id={\"date-picker-to\" + item}\r\n                                // label={FormatText('app_to')}\r\n                                label='Validity Period'\r\n                                value={updateProduct.validity_period ? new Date(updateProduct.validity_period) : new Date()}\r\n                                onChange={handleChangeDateUpdate('validity_period')}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', flexGrow: 1, alignItems: 'center' }}>\r\n                        <Button style={{ marginRight: '10px' }} onClick={handleCloseModal} variant='outlined' color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={handleEditConfiguration} variant='contained' color=\"primary\">\r\n                            Edit Product\r\n                        </Button>\r\n                    </div>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={openModalCreate}\r\n                scroll={\"paper\"}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                maxWidth={\"xs\"}\r\n\r\n            >\r\n                <DialogTitle>\r\n                    <div className='dialog-header'>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Create Product\r\n                        </Typography>\r\n                        <IconButton aria-label=\"delete\" onClick={handleCloseModal}>\r\n                            <i className=\"fas fa-times\" ></i>\r\n                        </IconButton>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div className='dialog-content'>\r\n                        <TextField\r\n                            label='Product Name'\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            error={createProduct.product_nameErrorMessage ? true : false}\r\n                            helperText={createProduct.product_nameErrorMessage ? createProduct.product_nameErrorMessage : ''}\r\n                            onChange={handleChangeCreateCatalog('product_name')}\r\n                            style={{ marginBottom: 10 }}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            label='Price'\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            error={createProduct.priceErrorMessage ? true : false}\r\n                            helperText={createProduct.priceErrorMessage ? createProduct.priceErrorMessage : ''}\r\n                            onChange={handleChangeCreateCatalog('price')}\r\n                            style={{ marginBottom: 10 }}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            label='NTA'\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            error={createProduct.ntaErrorMessage ? true : false}\r\n                            helperText={createProduct.ntaErrorMessage ? createProduct.ntaErrorMessage : ''}\r\n                            onChange={handleChangeCreateCatalog('nta')}\r\n                            style={{ marginBottom: 10 }}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            label='NTSA'\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            error={createProduct.ntsaErrorMessage ? true : false}\r\n                            helperText={createProduct.ntsaErrorMessage ? createProduct.ntsaErrorMessage : ''}\r\n                            onChange={handleChangeCreateCatalog('ntsa')}\r\n                            style={{ marginBottom: 10 }}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            label='Discount Price'\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            error={createProduct.discount_priceErrorMessage ? true : false}\r\n                            helperText={createProduct.discount_priceErrorMessage ? createProduct.discount_priceErrorMessage : ''}\r\n                            onChange={handleChangeCreateCatalog('discount_price')}\r\n                            style={{ marginBottom: 10 }}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                            InputProps={{\r\n                                endAdornment: < InputAdornment position='end' >\r\n                                    %\r\n                            </InputAdornment>\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            label='Discount Nta'\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            error={createProduct.discount_ntaErrorMessage ? true : false}\r\n                            helperText={createProduct.discount_ntaErrorMessage ? createProduct.discount_ntaErrorMessage : ''}\r\n                            onChange={handleChangeCreateCatalog('discount_nta')}\r\n                            style={{ marginBottom: 10 }}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                            InputProps={{\r\n                                endAdornment: < InputAdornment position='end' >\r\n                                    %\r\n                            </InputAdornment>\r\n                            }}\r\n\r\n                        />\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                // style={{ width: 150, marginRight: 15 }\r\n                                clearable\r\n                                disablePast={true}\r\n                                // size=\"small\"\r\n                                // variant=\"inline\"\r\n                                inputVariant=\"outlined\"\r\n                                fullWidth\r\n                                format=\"yyyy/MM/dd\"\r\n                                // margin=\"dense\"\r\n                                // id={\"date-picker-to\" + item}\r\n                                // label={FormatText('app_to')}\r\n                                label='Validity Period'\r\n                                value={createProduct.validity_period ? createProduct.validity_period : new Date()}\r\n                                onChange={handleChangeDate('validity_period')}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {/* <div className='dialog-footer'> */}\r\n                    <div style={{ display: 'flex', justifyContent: 'center', flexGrow: 1, alignItems: 'center' }}>\r\n                        <Button style={{ marginRight: '10px' }} onClick={handleCloseModal} variant='outlined' color=\"primary\">\r\n                            Cancel\r\n                                </Button>\r\n                        <Button onClick={handleSaveCatalog} variant='contained' color=\"primary\" disabled={disableButton('create')}>\r\n                            Save Product\r\n                                </Button>\r\n                    </div>\r\n                    {/* </div> */}\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div >)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        productCatalogList: state.genericConfiguration.productCatalogList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCompleteRequest: (val) => {\r\n            dispatch(setServiceRequest(val.request))\r\n            dispatch(setServiceMethod(val.serviceMethod))\r\n            dispatch(setServiceCode(val.serviceCode))\r\n            dispatch(setServiceCustomHeaders(val.customHeaders))\r\n            dispatch(setServiceParams(val.serviceParams))\r\n            dispatch(setServiceParams(val.params))\r\n            dispatch(setServiceStatus(val.serviceStatus || 'active'))\r\n        },\r\n        setOpenScreen: (val) => dispatch(setOpenScreen(val)),\r\n        // setConfigDetailModal: (val) => dispatch(setConfigDetailModal(val)),\r\n        setSecondRequest: (val) => dispatch(setSecondRequest(val))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CatalogProduct)\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    root: {\r\n        flexShrink: 0,\r\n        marginLeft: theme.spacing(2.5),\r\n    },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n    const handleFirstPageButtonClick = (event) => {\r\n        onChangePage(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event) => {\r\n        onChangePage(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event) => {\r\n        onChangePage(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event) => {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n            </IconButton>\r\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { fade, withStyles } from '@material-ui/core/styles';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { useSpring, animated } from 'react-spring/web.cjs';\r\n\r\nfunction TransitionComponent(props) {\r\n    const style = useSpring({\r\n      from: { opacity: 0, transform: 'translate3d(20px,0,0)' },\r\n      to: { opacity: props.in ? 1 : 0, transform: `translate3d(${props.in ? 0 : 20}px,0,0)` },\r\n    });\r\n  \r\n    return (\r\n      <animated.div style={style}>\r\n        <Collapse {...props} />\r\n      </animated.div>\r\n    );\r\n}\r\n  \r\nTransitionComponent.propTypes = {\r\n    in: PropTypes.bool,\r\n};\r\n  \r\nconst StyledTreeItem = withStyles((theme) => ({\r\n    iconContainer: {\r\n      '& .close': {\r\n        opacity: 0.3,\r\n      },\r\n    },\r\n    group: {\r\n      marginLeft: 7,\r\n      paddingLeft: 18,\r\n      borderLeft: `1px dashed ${fade(theme.palette.text.primary, 0.4)}`,\r\n    },\r\n}))((props) => <TreeItem {...props} TransitionComponent={TransitionComponent} />);\r\n\r\nconst ClinicScopeTree = ({ items }) => {\r\n    if (!items || !items.length) {\r\n        return null\r\n    }\r\n    return items.map(item => {\r\n        if (item.children) {\r\n            return (\r\n                <StyledTreeItem nodeId={item.id} label={item.name}>\r\n                    <ClinicScopeTree items={item.children} />\r\n                </StyledTreeItem>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <StyledTreeItem nodeId={item.id} label={item.name}/>\r\n            )\r\n        }\r\n    })\r\n};\r\n\r\nexport default ClinicScopeTree;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ClinicScopeTree from './ClinicScopeTree';\r\n\r\nimport { setOpenScreen } from \"../../../actions/SystemActions\";\r\n\r\nimport './ClinicScope.css';\r\n\r\nfunction MinusSquare(props) {\r\n    return (\r\n        <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\r\n            {/* tslint:disable-next-line: max-line-length */}\r\n            <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\r\n        </SvgIcon>\r\n    );\r\n}\r\n\r\nfunction PlusSquare(props) {\r\n    return (\r\n        <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\r\n            {/* tslint:disable-next-line: max-line-length */}\r\n            <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\r\n        </SvgIcon>\r\n    );\r\n}\r\n\r\nfunction CloseSquare(props) {\r\n    return (\r\n        <SvgIcon className=\"close\" fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\r\n            {/* tslint:disable-next-line: max-line-length */}\r\n            <path d=\"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\" />\r\n        </SvgIcon>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 264,\r\n        flexGrow: 1,\r\n        maxWidth: 400,\r\n    },\r\n});\r\n\r\nconst ClinicScope = ({ setOpenScreen }) => {\r\n\r\n    useEffect(() => {\r\n        setOpenScreen(\"Clinic Scope\");\r\n    }, [setOpenScreen]);\r\n\r\n    const classes = useStyles();\r\n    const data =\r\n    {\r\n        id: 1,\r\n        name: 'Voltras',\r\n        children: [\r\n            {\r\n                id: 2,\r\n                name: 'Biofarma',\r\n                children: [\r\n                    {\r\n                        id: 3,\r\n                        name: 'Klinik Biofarma 1',\r\n                        children: null\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                id: 4,\r\n                name: 'Kimia Farma',\r\n                children: [\r\n                    {\r\n                        id: 5,\r\n                        name: 'Klinik Kimia Farma 1',\r\n                        children: [\r\n                            {\r\n                                id: 7,\r\n                                name: 'Klinik Kimia Farma 1.1',\r\n                                children: null\r\n                            },\r\n                            {\r\n                                id: 8,\r\n                                name: 'Klinik Kimia Farma 1.2',\r\n                                children: [\r\n                                    {\r\n                                        id: 123,\r\n                                        name: 'Klinik Kimia Farma 123',\r\n                                        children: null\r\n                                    }\r\n                                ]\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        id: 6,\r\n                        name: 'Klinik Kimia Farma 2',\r\n                        children: null\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='clinic-scope-container'>\r\n            <TreeView\r\n                className={classes.root}\r\n                defaultExpanded={['1']}\r\n                defaultCollapseIcon={<MinusSquare />}\r\n                defaultExpandIcon={<PlusSquare />}\r\n                defaultEndIcon={<CloseSquare />}\r\n            >\r\n                <ClinicScopeTree\r\n                    items={data.children}\r\n                />\r\n            </TreeView>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapDispacthToProps = dispatch => ({\r\n    setOpenScreen: (val) => dispatch(setOpenScreen(val)),\r\n});\r\n\r\nexport default connect(null, mapDispacthToProps)(ClinicScope);","\r\nlet numOr0 = n => isNaN(n) ? 0 : n\r\n\r\nexport const createClinicSummaryTable = (items, clinic_product) => {\r\n  let firstcolumn = [\"Products\"]\r\n  let nextColumns = items[0] && items.map(item => item.testdate)\r\n  let lastColumn = [\"Total\"]\r\n  let allColumns = firstcolumn.concat(nextColumns).concat(lastColumn)\r\n\r\n  let allRows = []\r\n  let allDatasetRows = []\r\n  let objItems = {}\r\n  clinic_product.map(cp => objItems[cp] = 0)\r\n  let newItems = []\r\n  if (items[0]) {\r\n    items.forEach(item => {\r\n      let newObjItems = { ...objItems }\r\n      item.product.map(prod => newObjItems[prod.name] = prod.total)\r\n      newItems.push(newObjItems)\r\n    })\r\n    clinic_product.forEach(element => {\r\n      let row = [element]\r\n      let datasetRow = [{ value: element }]\r\n      newItems.forEach((item, i) => {\r\n        row.push(item[element])\r\n        datasetRow.push({ value: item[element] })\r\n      })\r\n      let sum = row.reduce((a, b) => numOr0(a) + numOr0(b))\r\n      row.push(sum)\r\n      datasetRow.push({ value: sum })\r\n      allRows.push(row)\r\n      allDatasetRows.push(datasetRow)\r\n    })\r\n  }\r\n  let datasetColumn = allColumns.map((item, i) => { return { title: item, width: { wch: i === 0 ? 25 : 12 } } })\r\n  let dataSet = [{ ySteps: 1, columns: datasetColumn, data: allDatasetRows }]\r\n  return { allColumns, allRows, dataSet }\r\n}\r\n\r\nexport const createBiofarmaSummaryTable = (items, clinic_product) => {\r\n  let allRows = []\r\n  let dataSet = []\r\n\r\n  if (items.detail && clinic_product[0]) {\r\n    let detail_per_clinic = items.detail\r\n    let total_per_product = items.total\r\n    let default_row_per_clinic = [\"clinic_name\"]\r\n    for (let index = 0; index < (clinic_product.length * 2); index++) {\r\n      default_row_per_clinic.push(0)\r\n    }\r\n    detail_per_clinic.forEach(per_clinic => {\r\n      let row = [...default_row_per_clinic]\r\n      row[0] = per_clinic.name\r\n      clinic_product.forEach((cp, p) => {\r\n        per_clinic.product.forEach((prod, i) => {\r\n          if (cp === prod.name) {\r\n            if (p === 0) {\r\n              row[1] = prod.patient\r\n              row[2] = parseInt(prod.nta)\r\n            }\r\n            row[(p * 2) + 1] = prod.patient\r\n            row[(p * 2) + 2] = parseInt(prod.nta)\r\n          }\r\n        })\r\n      })\r\n      row.push(per_clinic.total_patient)\r\n      row.push(parseInt(per_clinic.total_nta))\r\n\r\n      allRows.push(row)\r\n    })\r\n\r\n\r\n    let row_total = [...default_row_per_clinic]\r\n    row_total[0] = \"Total\"\r\n    clinic_product.forEach((cp, p) => {\r\n      total_per_product.forEach((prod, i) => {\r\n        if (cp === prod.name) {\r\n          if (p === 0) {\r\n            row_total[1] = prod.patient\r\n            row_total[2] = parseInt(prod.nta)\r\n          }\r\n          row_total[(p * 2) + 1] = prod.patient\r\n          row_total[(p * 2) + 2] = parseInt(prod.nta)\r\n        }\r\n      })\r\n    })\r\n\r\n    let total_pax_arr = []\r\n    let total_nta_arr = []\r\n    row_total.forEach((item, i) => {\r\n      if (i % 2 === 0) total_nta_arr.push(item)\r\n      else total_pax_arr.push(item)\r\n    })\r\n    let sum_patient = total_pax_arr.reduce((a, b) => numOr0(a) + numOr0(b))\r\n    let sum_nta = total_nta_arr.reduce((a, b) => numOr0(a) + numOr0(b))\r\n    row_total.push(sum_patient)\r\n    row_total.push(sum_nta)\r\n\r\n    allRows.push(row_total)\r\n\r\n\r\n    // let per_clinic = items.detail\r\n    // let per_column = items.total\r\n    // let new_per_column = []\r\n    let datasetColumn = [{ title: \" \", width: { wch: 25 } }]\r\n    let firstRow = [{ value: \"Clinics\", style: { font: { bold: true } } }]\r\n    clinic_product.map(item => [item, \" \"].map((el, j) => datasetColumn.push({ title: el, width: { wch: j === 0 ? 5 : 12 } })))\r\n    datasetColumn.push({ title: \"TOTAL\", width: { wch: 5 } })\r\n    datasetColumn.push({ title: \" \", width: { wch: 12 } })\r\n    clinic_product.map(item => [\"Pax\", \"NTA\"].map(el => firstRow.push({ value: el, style: { alignment: { horizontal: \"center\" } } })))\r\n    firstRow.push({ value: \"Pax\", style: { alignment: { horizontal: \"center\" } } })\r\n    firstRow.push({ value: \"NTA\", style: { alignment: { horizontal: \"center\" } } })\r\n\r\n    let objDataSet = { ySteps: 1, columns: datasetColumn, data: [] }\r\n    objDataSet.data.push(firstRow)\r\n    allRows.forEach(row => {\r\n      let newRow = []\r\n      row.forEach(rowItem => {\r\n        newRow.push({ value: rowItem })\r\n      })\r\n      objDataSet.data.push(newRow)\r\n    })\r\n\r\n    dataSet.push(objDataSet)\r\n  }\r\n  return { allRows, dataSet }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Grid, Card } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Dialog, DialogActions, DialogContent } from '@material-ui/core'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport { List, ListItem } from '@material-ui/core'\r\nimport { IconButton } from '@material-ui/core'\r\nimport { Typography } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport PropTypes from 'prop-types'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst styles = (theme) => ({\r\n    labelRoot: {\r\n        fontSize: 15,\r\n        fontFamily: 'Arial, Helvetica, sans-serif',\r\n        marginLeft: 20\r\n    },\r\n    inputRoot: {\r\n        fontSize: 15,\r\n        fontFamily: 'Arial, Helvetica, sans-serif',\r\n        height: 20,\r\n        width: 60,\r\n        marginLeft: 20\r\n    },\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogDetail = props => {\r\n    const column = props.column ? props.column : []\r\n    let data = []\r\n    data = props.detailData ? props.detailData.product ? props.detailData.product : [] : []\r\n    const handleClose = () => {\r\n        props.handleOpen(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog fullWidth maxWidth='sm' open={props.open} onClose={handleClose} scroll={'paper'}>\r\n                <DialogTitle id=\"dialog-title\" onClose={handleClose}>{props.title}</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <Card>\r\n                        <div style={{ backgroundColor: '#f4f0ec', padding: 5, width: '100%' }}>\r\n                            <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n                                {props.detailData.name ? 'Clinic : ' + props.detailData.name : 'Test Date : ' + props.detailData.testdate}\r\n                            </Typography>\r\n                        </div>\r\n                        <div style={{ marginLeft: 15, marginRight: 15 }}>\r\n\r\n                            <List disablePadding={true}>\r\n                                {\r\n                                    data.map((item, index) => (\r\n                                        <div key={index}>\r\n                                            <ListItem>\r\n                                                <Grid container justify='space-between'>\r\n                                                    <Grid item sm={5} xs={5}>\r\n                                                        {column.map((items, i) => (\r\n                                                            <Grid item sm={12} xs={12} key={i + 8}>\r\n                                                                <Typography style={{ color: 'grey', fontSize: 11, marginBottom: 5, fontFamily: 'Arial, Helvetica, sans-serif' }} noWrap={true}>\r\n                                                                    {items.title}\r\n                                                                </Typography>\r\n\r\n                                                            </Grid>\r\n                                                        ))}\r\n                                                    </Grid>\r\n                                                    <Grid item sm={!props.arrow ? 7 : 5} xs={!props.arrow ? 7 : 5}>\r\n                                                        {column.map((items, idx) => (\r\n                                                            <Grid item sm={12} xs={12} key={idx + 12}>\r\n                                                                <Typography style={{ fontSize: 11, marginBottom: 5, fontFamily: 'Arial, Helvetica, sans-serif' }} noWrap={true}>\r\n                                                                    {items.title ? item[items.field] ? item[items.field] : '-' : null}\r\n                                                                </Typography>\r\n                                                            </Grid>\r\n\r\n                                                        ))}\r\n                                                    </Grid>\r\n                                                    {props.arrow ? <Grid item sm={2} xs={2} align='right' style={{ paddingTop: 30 }}>\r\n                                                        <ChevronRightIcon />\r\n                                                    </Grid> : null}\r\n\r\n                                                </Grid>\r\n                                            </ListItem>\r\n                                            <Divider />\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    </Card>\r\n                </DialogContent>\r\n                <DialogActions>\r\n\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nDialogDetail.propTypes = {\r\n    open: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    handleOpen: PropTypes.func,\r\n    detailData: PropTypes.object,\r\n    column: PropTypes.array\r\n}\r\n\r\nexport default DialogDetail","\r\nimport React, { useEffect, useState } from 'react';\r\n// import { bindActionCreators } from \"redux\";\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReactExport from 'react-data-export';\r\n\r\nimport {\r\n  setServiceRequest, setServiceMethod, setServiceParams, setServiceCustomHeaders, setServiceCode,\r\n  setServiceRole, setServiceStatus,\r\n} from '../../../actions/ServiceActions';\r\nimport { setPaxProduct } from '../../../actions/PaxListActions';\r\nimport { setOpenScreen } from '../../../actions/SystemActions';\r\nimport FormatText from '../../../i18n';\r\nimport { convertDateyyyymmdd, yyyymmddWithParams } from '../../../utils/utils';\r\nimport { SendToService } from '../../../services/ServiceClient';\r\nimport { createClinicSummaryTable, createBiofarmaSummaryTable } from \"./TableCreator\";\r\nimport ListTableMobile from '../../../components/list/ListTableMobile'\r\nimport DialogDetail from './DialogDetail'\r\n\r\n\r\nlet from = yyyymmddWithParams('lastWeek')\r\nlet dateto = yyyymmddWithParams('nextWeek')\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\n\r\nconst AllOrderSummaryTable = ({ ...props }) => {\r\n  const { setOpenScreen, setServiceRequest, setServiceMethod, setServiceParams, setServiceCustomHeaders, setServiceCode,\r\n    setServiceRole, setServiceStatus, setPaxProduct, roleUsed, userInfo, paxList, system } = props\r\n\r\n  const _setCompleteRequest = obj => {\r\n    setServiceRequest(obj.request)\r\n    setServiceMethod(obj.method)\r\n    setServiceCode(obj.serviceCode)\r\n    setServiceParams(obj.params)\r\n    setServiceCustomHeaders(obj.customHeaders)\r\n    setServiceRole(obj.serviceRole)\r\n    setServiceStatus(\"active\")\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    fromdate: from,\r\n    todate: dateto,\r\n    clinic_recapt_logistic: [],\r\n    clinic_product: [],\r\n    table_component: { allRows: [], allColumns: [] },\r\n    table_biofarma: [],\r\n    dataSet: [{\r\n      ySteps: 1,\r\n      columns: [\r\n        { title: \"OrderID\", width: { wch: 7 } },\r\n        { title: \"\", width: { wch: 12 } },\r\n        { title: \"Test Date\", width: { wch: 12 } },\r\n        { title: \"\", width: { wch: 12 } }\r\n      ],\r\n      data: [[{ value: 33 }, { value: 2 }, { value: 33 }]]\r\n    }]\r\n  })\r\n\r\n\r\n  /**\r\n   * FIRST EFFECT: COMPONENT DID MOUNT GET SUMMARY\r\n   * Get the summary from service then put the response in\r\n   * paxList.clinic_recapt_logistic\r\n   */\r\n  useEffect(() => {\r\n    setOpenScreen(\"All Order Summary\")\r\n    let clinic_id = paxList.clinicUser ? paxList.clinicUser.id : 0\r\n    let name = userInfo.name\r\n    let email = userInfo.email\r\n    let phone = userInfo.phone\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let serviceCode = roleUsed === 'clinic.admin' ? \"RECAPT_CLINIC_SUMMARY\" : \"RECAPT_BIOFARMA_SUMMARY\"\r\n    let params = roleUsed === 'clinic.admin'\r\n      ? `/${clinic_id}?&from_date=${from}&to_date=${dateto}&redeemed=False`\r\n      : `/transaction?&from_date=${from}&to_date=${dateto}&redeemed=False`\r\n\r\n    if (name && email) {\r\n      SendToService({}, \"GET\", \"healthProduct\", null, customHeaders, null, null,\r\n        product => {\r\n          setPaxProduct(product.body)\r\n          let recaptClinicReq = {\r\n            request: {},\r\n            method: \"GET\",\r\n            serviceCode,\r\n            params,\r\n            customHeaders\r\n          }\r\n          _setCompleteRequest(recaptClinicReq)\r\n        }\r\n      )\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  /**\r\n   * SECOND EFFECT: ON RECEIVE RESPONSE\r\n   * - Put products in state\r\n   * - Put recapt in state\r\n   */\r\n  useEffect(() => {\r\n    if (roleUsed === 'clinic.admin') {\r\n      let available_product = paxList.clinicUser ? paxList.clinicUser.available_products_id : []\r\n      let clinic_product_id = paxList.product\r\n      let clinic_product = []\r\n      if (available_product[0] && clinic_product_id[0]) {\r\n        clinic_product_id.forEach(item => {\r\n          if (available_product.includes(item.id)) clinic_product.push(item.name)\r\n        })\r\n      }\r\n      setState(state => ({ ...state, clinic_recapt_logistic: paxList.clinic_recapt_logistic, clinic_product }))\r\n    }\r\n    else {\r\n      let clinic_product = paxList.product.map(item => item.name)\r\n      setState(state => ({ ...state, clinic_recapt_logistic: paxList.clinic_recapt_logistic, clinic_product }))\r\n    }\r\n  }, [paxList.clinic_recapt_logistic, paxList.clinicUser, paxList.product, roleUsed])\r\n\r\n  /**\r\n   * THIRD EFFECT: CREATE TABLE & XLS DATASET\r\n   */\r\n  useEffect(() => {\r\n    if (roleUsed === 'clinic.admin') {\r\n      let table_component = createClinicSummaryTable(state.clinic_recapt_logistic, state.clinic_product)\r\n      setState(state => ({ ...state, table_component }))\r\n    }\r\n    else {\r\n      let table_biofarma = createBiofarmaSummaryTable(state.clinic_recapt_logistic, state.clinic_product)\r\n      setState(state => ({ ...state, table_biofarma: table_biofarma.allRows, dataSet: table_biofarma.dataSet }))\r\n    }\r\n  }, [state.clinic_recapt_logistic, state.clinic_product, roleUsed])\r\n\r\n\r\n  const handleDateChange = prop => date => {\r\n    setState({\r\n      ...state,\r\n      [prop]: convertDateyyyymmdd(date),\r\n    })\r\n\r\n    let clinic_id = paxList.clinicUser ? paxList.clinicUser.id : 0\r\n    let name = userInfo.name\r\n    let email = userInfo.email\r\n    let phone = userInfo.phone\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    let request_date_obj = { fromdate: state.fromdate, todate: state.todate }\r\n    request_date_obj[prop] = convertDateyyyymmdd(date)\r\n    let serviceCode = roleUsed === 'clinic.admin' ? \"RECAPT_CLINIC_SUMMARY\" : \"RECAPT_BIOFARMA_SUMMARY\"\r\n    let params = roleUsed === 'clinic.admin'\r\n      ? `/${clinic_id}?&from_date=${request_date_obj.fromdate}&to_date=${request_date_obj.todate}&redeemed=False`\r\n      : `/transaction?&from_date=${request_date_obj.fromdate}&to_date=${request_date_obj.todate}&redeemed=False`\r\n\r\n    let recaptClinicReq = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode,\r\n      params,\r\n      customHeaders\r\n    }\r\n    _setCompleteRequest(recaptClinicReq)\r\n  }\r\n  const [openDetail, setOpenDetail] = useState(false)\r\n  const [detailData, setDetailData] = useState({})\r\n  const handleOpenDetail = (item) => {\r\n    setOpenDetail(true)\r\n    setDetailData(item)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hidden smDown>\r\n        <Grid container direction='row' justify='flex-start' alignItems='center' style={{ margin: 30 }} >\r\n          <Grid container direction='row' justify='center' alignItems='center'>\r\n            <CircularProgress\r\n              style={{ visibility: system.serviceStart && system.openScreen === 'All Order Summary' ? \"visible\" : \"hidden\" }}\r\n              color=\"secondary\"\r\n              size={30}\r\n              thickness={5}\r\n            />\r\n          </Grid>\r\n          <Grid item sm={2}>\r\n            <Typography variant=\"subtitle2\">Testdate Periode:</Typography>\r\n          </Grid>\r\n          <Grid item sm={2} >\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n              <KeyboardDatePicker\r\n                autoOk\r\n                style={{ width: 150 }}\r\n                size=\"small\"\r\n                clearable\r\n                format=\"yyyy/MM/dd\"\r\n                margin=\"dense\"\r\n                id=\"date-picker-from\"\r\n                label=\"From\"\r\n                value={state.fromdate}\r\n                onChange={handleDateChange('fromdate')}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item sm={2} >\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                autoOk\r\n                style={{ width: 150 }}\r\n                clearable\r\n                size=\"small\"\r\n                format=\"yyyy/MM/dd\"\r\n                margin=\"dense\"\r\n                id=\"date-picker-to\"\r\n                label=\"To\"\r\n                value={state.todate}\r\n                onChange={handleDateChange('todate')}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item>\r\n            <ExcelFile\r\n              filename={`Order Summary ${state.fromdate} to ${state.todate}`}\r\n              element={\r\n                <Button size='small' variant='contained' color=\"primary\">\r\n                  {FormatText('app_export_xls')}\r\n                </Button>}\r\n            >\r\n              <ExcelSheet\r\n                dataSet={roleUsed === 'clinic.admin' ? state.table_component.dataSet : state.dataSet}\r\n                name=\"Order Report Summary\"\r\n              />\r\n            </ExcelFile>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {\r\n          roleUsed === 'biofarma.admin' || roleUsed === 'voltras.admin'\r\n            ? <TableContainer component={Paper}>\r\n              <Table className={classes.table} aria-label=\"spanning table\" size='small'>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell align=\"center\"  ></TableCell>\r\n                    {state.clinic_product.map((item, i) => (\r\n                      <TableCell align=\"center\" colSpan={2} key={i + 21}>{item}</TableCell>\r\n                    ))}\r\n                    <TableCell align=\"center\" colSpan={2}>TOTAL</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell align=\"center\"  >CLINICS</TableCell>\r\n                    {state.clinic_product.map((item, i) => [\"Pax\", \"NTA\"].map((el, g) => (\r\n                      <TableCell align=\"center\" key={i + g}>{el}</TableCell>\r\n                    )))}\r\n                    <TableCell align=\"center\">Pax</TableCell>\r\n                    <TableCell align=\"center\">NTA</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {state.table_biofarma.map((row, i) => (\r\n                    <TableRow key={i}>\r\n                      {row.map((item, i) => (\r\n                        <TableCell align=\"center\" key={i + 555}>{item}</TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  ))}\r\n\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            : roleUsed === 'clinic.admin'\r\n              ? <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"spanning table\">\r\n\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\" colSpan={state.table_component.allColumns.length} >TEST DATE</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      {state.table_component.allColumns.map((column, i) => {\r\n                        return <TableCell align=\"center\" key={99 + i}>{column}</TableCell>\r\n                      })}\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {state.table_component.allRows.map((rows, i) => (\r\n                      <TableRow key={i + 54}>\r\n                        {rows.map((row, i) => (\r\n                          <TableCell align=\"center\" key={i + 212}>{row}</TableCell>\r\n                        ))}\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n\r\n                </Table>\r\n              </TableContainer>\r\n              : null\r\n        }\r\n      </Hidden>\r\n      <Hidden smUp>\r\n        <DialogDetail\r\n          open={openDetail}\r\n          title={'Order Detail'}\r\n          handleOpen={() => setOpenDetail(false)}\r\n          detailData={detailData}\r\n          column={roleUsed === 'biofarma.admin' || roleUsed === 'voltras.admin' ? [\r\n            { title: 'Product Name', field: 'name' },\r\n            { title: 'Pax', field: 'patient' },\r\n            { title: 'NTA', field: 'nta' },\r\n            { title: 'Total NTA', field: 'sum_nta' }\r\n          ] : [\r\n              { title: 'Product Name', field: 'name' },\r\n              { title: 'Total', field: 'total' }\r\n            ]}\r\n        />\r\n        {\r\n          roleUsed === 'biofarma.admin' || roleUsed === 'voltras.admin' ?\r\n            <Card>\r\n\r\n              <div style={{ backgroundColor: '#f4f0ec', padding: 5, width: '100%' }}>\r\n                <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n                  Order Summary\r\n              </Typography>\r\n              </div>\r\n              <div style={{ marginLeft: 15, marginRight: 15 }}>\r\n                <Grid container>\r\n                  <Grid item xs={5} sm={5}>\r\n                    <Typography style={{ fontSize: 11, padding: 3, color: 'grey', fontFamily: 'Arial, Helvetica, sans-serif' }}>Total Pax</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={7} sm={7}>\r\n                    <Typography style={{ fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>\r\n                      {\r\n                        state.clinic_recapt_logistic[0]\r\n                          ? state.clinic_recapt_logistic.total && state.clinic_recapt_logistic.total.reduce((total, num) => {\r\n                            return Number(total) + Number(num.patient)\r\n                          }, 0)\r\n                          : ''\r\n                      }\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={5} sm={5}>\r\n                    <Typography style={{ fontSize: 11, padding: 3, color: 'grey', fontFamily: 'Arial, Helvetica, sans-serif' }}>Total NTA</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={7} sm={7}>\r\n                    <Typography style={{ fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>\r\n                      {state.clinic_recapt_logistic[0]\r\n                        ? state.clinic_recapt_logistic.total && state.clinic_recapt_logistic.total.reduce((total, num) => {\r\n                          return Number(total) + Number(num.nta)\r\n                        }, 0)\r\n                        : ''\r\n                      }\r\n                    </Typography>\r\n                  </Grid>\r\n                  {/* <Grid item xs={5} sm={5}>\r\n                <Typography style={{ fontSize: 13, padding: 3, color: 'grey', fontFamily: 'Arial, Helvetica, sans-serif' }}>Total Pax</Typography>\r\n              </Grid>\r\n              <Grid item xs={7} sm={7}>\r\n                <Typography style={{ fontSize: 13, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>{state.clinic_recapt_logistic.total.reduce((total, num) => {\r\n                  return Number(total.patient) + num\r\n                }, 0)}</Typography>\r\n              </Grid> */}\r\n                </Grid>\r\n              </div>\r\n            </Card> : <div></div>\r\n        }\r\n\r\n        <Card style={{ marginTop: 10 }}>\r\n          <div style={{ backgroundColor: '#f4f0ec', padding: 5, width: '100%' }}>\r\n            <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              Filter By\r\n              </Typography>\r\n          </div>\r\n          <div style={{ marginLeft: 15, marginRight: 15 }}>\r\n            <Typography style={{ marginTop: 10, fontSize: 12, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              Testdate Periode\r\n            </Typography>\r\n            <Grid container>\r\n              <Grid item sm={6} xs={6}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                  <KeyboardDatePicker\r\n                    autoOk\r\n                    style={{ width: 150 }}\r\n                    size=\"small\"\r\n                    clearable\r\n                    format=\"yyyy/MM/dd\"\r\n                    margin=\"dense\"\r\n                    id=\"date-picker-from\"\r\n                    label=\"From\"\r\n                    value={state.fromdate}\r\n                    onChange={handleDateChange('fromdate')}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                    InputLabelProps={{\r\n                      style: {\r\n                        fontSize: 12,\r\n                        fontFamily: 'Arial, Helvetica, sans-serif',\r\n                      }\r\n                    }}\r\n                    InputProps={{\r\n                      style: {\r\n                        fontSize: 12,\r\n                        fontFamily: 'Arial, Helvetica, sans-serif',\r\n                      }\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n              <Grid item sm={6} xs={6}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    autoOk\r\n                    style={{ width: 150 }}\r\n                    clearable\r\n                    size=\"small\"\r\n                    format=\"yyyy/MM/dd\"\r\n                    margin=\"dense\"\r\n                    id=\"date-picker-to\"\r\n                    label=\"To\"\r\n                    value={state.todate}\r\n                    onChange={handleDateChange('todate')}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                    InputLabelProps={{\r\n                      style: {\r\n                        fontSize: 12,\r\n                        fontFamily: 'Arial, Helvetica, sans-serif',\r\n                      }\r\n                    }}\r\n                    InputProps={{\r\n                      style: {\r\n                        fontSize: 12,\r\n                        fontFamily: 'Arial, Helvetica, sans-serif',\r\n                      }\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container justify='center' style={{ paddingTop: 10, marginBottom: 10 }}>\r\n              <ExcelFile\r\n                filename={`Order Summary ${state.fromdate} to ${state.todate}`}\r\n                element={\r\n                  <Button variant=\"outlined\" style={{\r\n                    textTransform: 'none', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                    fontWeight: 'bold', fontSize: 12, paddingLeft: 30, paddingRight: 30\r\n                  }} size='small' color=\"primary\">\r\n                    {FormatText('app_export_xls')}\r\n                  </Button>}\r\n              >\r\n                <ExcelSheet\r\n                  dataSet={roleUsed === 'clinic.admin' ? state.table_component.dataSet : state.dataSet}\r\n                  name=\"Order Report Summary\"\r\n                />\r\n              </ExcelFile>\r\n            </Grid>\r\n          </div>\r\n        </Card>\r\n        <Card style={{ marginTop: 10 }}>\r\n          <div style={{ backgroundColor: '#f4f0ec', padding: 5, width: '100%' }}>\r\n            <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              All Order\r\n              </Typography>\r\n          </div>\r\n          <div style={{ marginLeft: 15, marginRight: 15 }}>\r\n            {\r\n              roleUsed === 'biofarma.admin' || roleUsed === 'voltras.admin' ? <ListTableMobile\r\n                column={[\r\n                  { title: \"Clinic\", field: 'name' },\r\n                  { title: \"Total Pax\", field: 'total_patient' },\r\n                  { title: \"Total NTA\", field: 'total_nta' },\r\n                ]}\r\n                data={state.clinic_recapt_logistic.detail}\r\n                button={true}\r\n                arrow={true}\r\n                onClickList={handleOpenDetail}\r\n              /> : <div>\r\n                  <ListTableMobile\r\n                    column={[\r\n                      { title: \"Test Date\", field: 'testdate' },\r\n                    ]}\r\n                    data={state.clinic_recapt_logistic}\r\n                    button={true}\r\n                    arrow={true}\r\n                    onClickList={handleOpenDetail}\r\n                  />\r\n                </div>\r\n\r\n            }\r\n          </div>\r\n        </Card>\r\n      </Hidden>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  userInfo: store.userInfo.info,\r\n  paxList: store.paxList,\r\n  roleUsed: store.userInfo.roleUsed,\r\n  system: store.system,\r\n  // store\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  setOpenScreen, setServiceRequest, setServiceMethod, setServiceParams, setServiceCustomHeaders, setServiceCode,\r\n  setServiceRole, setServiceStatus, setPaxProduct\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllOrderSummaryTable)\r\n","\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReactExport from 'react-data-export';\r\n\r\nimport {\r\n  setServiceRequest, setServiceMethod, setServiceParams, setServiceCustomHeaders, setServiceCode,\r\n  setServiceRole, setServiceStatus\r\n} from '../../../actions/ServiceActions';\r\nimport { setPaxProduct } from '../../../actions/PaxListActions';\r\nimport { setOpenScreen } from '../../../actions/SystemActions';\r\nimport FormatText from '../../../i18n';\r\nimport { convertDateyyyymmdd, yyyymmddWithParams } from '../../../utils/utils';\r\nimport { SendToService } from '../../../services/ServiceClient';\r\nimport { createClinicSummaryTable, createBiofarmaSummaryTable } from \"./TableCreator\";\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport Card from '@material-ui/core/Card'\r\nimport ListTableMobile from '../../../components/list/ListTableMobile'\r\nimport DialogDetail from './DialogDetail'\r\n\r\n\r\nlet from = yyyymmddWithParams('lastWeek')\r\nlet dateto = yyyymmddWithParams('nextWeek')\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\n\r\nconst RedeemedOrderSummaryTable = ({ ...props }) => {\r\n  const { setOpenScreen, setServiceRequest, setServiceMethod, setServiceParams, setServiceCustomHeaders, setServiceCode,\r\n    setServiceRole, setServiceStatus, setPaxProduct, roleUsed, userInfo, paxList, system } = props\r\n\r\n  const _setCompleteRequest = obj => {\r\n    setServiceRequest(obj.request)\r\n    setServiceMethod(obj.method)\r\n    setServiceCode(obj.serviceCode)\r\n    setServiceParams(obj.params)\r\n    setServiceCustomHeaders(obj.customHeaders)\r\n    setServiceRole(obj.serviceRole)\r\n    setServiceStatus(\"active\")\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    fromdate: from,\r\n    todate: dateto,\r\n    clinic_recapt_logistic: [],\r\n    clinic_product: [],\r\n    table_component: { allRows: [], allColumns: [] },\r\n    table_biofarma: [],\r\n    dataSet: [{\r\n      ySteps: 1,\r\n      columns: [\r\n        { title: \"OrderID\", width: { wch: 7 } },\r\n        { title: \"\", width: { wch: 12 } },\r\n        { title: \"Test Date\", width: { wch: 12 } },\r\n        { title: \"\", width: { wch: 12 } }\r\n      ],\r\n      data: [[{ value: 33 }, { value: 2 }, { value: 33 }]]\r\n    }]\r\n  })\r\n\r\n\r\n  /**\r\n   * FIRST EFFECT: COMPONENT DID MOUNT GET SUMMARY\r\n   * Get the summary from service then put the response in\r\n   * paxList.clinic_recapt_logistic\r\n   */\r\n  useEffect(() => {\r\n    setOpenScreen(\"Redeemed Order Summary\")\r\n    let clinic_id = paxList.clinicUser ? paxList.clinicUser.id : 0\r\n    let name = userInfo.name\r\n    let email = userInfo.email\r\n    let phone = userInfo.phone\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n\r\n    let serviceCode = roleUsed === 'clinic.admin' ? \"RECAPT_CLINIC_SUMMARY\" : \"RECAPT_BIOFARMA_SUMMARY\"\r\n    let params = roleUsed === 'clinic.admin'\r\n      ? `/${clinic_id}?&from_date=${from}&to_date=${dateto}&redeemed=True`\r\n      : `/transaction?&from_date=${from}&to_date=${dateto}&redeemed=True`\r\n\r\n    if (name && email) {\r\n      SendToService({}, \"GET\", \"healthProduct\", null, customHeaders, null, null,\r\n        product => {\r\n          setPaxProduct(product.body)\r\n          let recaptClinicReq = {\r\n            request: {},\r\n            method: \"GET\",\r\n            serviceCode,\r\n            params,\r\n            customHeaders\r\n          }\r\n          _setCompleteRequest(recaptClinicReq)\r\n        }\r\n      )\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  /**\r\n   * SECOND EFFECT: ON RECEIVE RESPONSE\r\n   * - Put products in state\r\n   * - Put recapt in state\r\n   */\r\n  useEffect(() => {\r\n    if (roleUsed === 'clinic.admin') {\r\n      let available_product = paxList.clinicUser ? paxList.clinicUser.available_products_id : []\r\n      let clinic_product_id = paxList.product\r\n      let clinic_product = []\r\n      if (available_product[0] && clinic_product_id[0]) {\r\n        clinic_product_id.forEach(item => {\r\n          if (available_product.includes(item.id)) clinic_product.push(item.name)\r\n        })\r\n      }\r\n      setState(state => ({ ...state, clinic_recapt_logistic: paxList.clinic_recapt_logistic, clinic_product }))\r\n    }\r\n    else {\r\n      let clinic_product = paxList.product.map(item => item.name)\r\n      setState(state => ({ ...state, clinic_recapt_logistic: paxList.clinic_recapt_logistic, clinic_product }))\r\n    }\r\n  }, [paxList.clinic_recapt_logistic, paxList.clinicUser, paxList.product, roleUsed])\r\n\r\n  /**\r\n   * THIRD EFFECT: CREATE TABLE & XLS DATASET\r\n   */\r\n  useEffect(() => {\r\n    if (roleUsed === 'clinic.admin') {\r\n      let table_component = createClinicSummaryTable(state.clinic_recapt_logistic, state.clinic_product)\r\n      setState(state => ({ ...state, table_component }))\r\n    }\r\n    else {\r\n      let table_biofarma = createBiofarmaSummaryTable(state.clinic_recapt_logistic, state.clinic_product)\r\n      setState(state => ({ ...state, table_biofarma: table_biofarma.allRows, dataSet: table_biofarma.dataSet }))\r\n    }\r\n  }, [state.clinic_recapt_logistic, state.clinic_product, roleUsed])\r\n\r\n\r\n  const handleDateChange = prop => date => {\r\n    setState({\r\n      ...state,\r\n      [prop]: convertDateyyyymmdd(date),\r\n    })\r\n\r\n    let clinic_id = paxList.clinicUser ? paxList.clinicUser.id : 0\r\n    let name = userInfo.name\r\n    let email = userInfo.email\r\n    let phone = userInfo.phone\r\n    let customHeaders = { name, email }\r\n    if (phone) customHeaders.phone = phone\r\n    let request_date_obj = { fromdate: state.fromdate, todate: state.todate }\r\n    request_date_obj[prop] = convertDateyyyymmdd(date)\r\n    let serviceCode = roleUsed === 'clinic.admin' ? \"RECAPT_CLINIC_SUMMARY\" : \"RECAPT_BIOFARMA_SUMMARY\"\r\n    let params = roleUsed === 'clinic.admin'\r\n      ? `/${clinic_id}?&from_date=${request_date_obj.fromdate}&to_date=${request_date_obj.todate}&redeemed=True`\r\n      : `/transaction?&from_date=${request_date_obj.fromdate}&to_date=${request_date_obj.todate}&redeemed=True`\r\n\r\n    let recaptClinicReq = {\r\n      request: {},\r\n      method: \"GET\",\r\n      serviceCode,\r\n      params,\r\n      customHeaders\r\n    }\r\n    _setCompleteRequest(recaptClinicReq)\r\n  }\r\n  const [openDetail, setOpenDetail] = useState(false)\r\n  const [detailData, setDetailData] = useState({})\r\n  const handleOpenDetail = (item) => {\r\n    setOpenDetail(true)\r\n    setDetailData(item)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hidden smDown>\r\n        <Grid container direction='row' justify='flex-start' alignItems='center' style={{ margin: 30 }} >\r\n          <Grid container direction='row' justify='center' alignItems='center'>\r\n            <CircularProgress\r\n              style={{ visibility: system.serviceStart && system.openScreen === 'Redeemed Order Summary' ? \"visible\" : \"hidden\" }}\r\n              color=\"secondary\"\r\n              size={30}\r\n              thickness={5}\r\n            />\r\n          </Grid>\r\n          <Grid item sm={2}>\r\n            <Typography variant=\"subtitle2\">Testdate Periode:</Typography>\r\n          </Grid>\r\n          <Grid item sm={2} >\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n              <KeyboardDatePicker\r\n                autoOk\r\n                style={{ width: 150 }}\r\n                size=\"small\"\r\n                clearable\r\n                format=\"yyyy/MM/dd\"\r\n                margin=\"dense\"\r\n                id=\"date-picker-from\"\r\n                label=\"From\"\r\n                value={state.fromdate}\r\n                onChange={handleDateChange('fromdate')}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item sm={2} >\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                autoOk\r\n                style={{ width: 150 }}\r\n                clearable\r\n                size=\"small\"\r\n                format=\"yyyy/MM/dd\"\r\n                margin=\"dense\"\r\n                id=\"date-picker-to\"\r\n                label=\"To\"\r\n                value={state.todate}\r\n                onChange={handleDateChange('todate')}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item>\r\n            <ExcelFile\r\n              filename={`Order Summary ${state.fromdate} to ${state.todate}`}\r\n              element={\r\n                <Button size='small' variant='contained' color=\"primary\">\r\n                  {FormatText('app_export_xls')}\r\n                </Button>}\r\n            >\r\n              <ExcelSheet\r\n                dataSet={roleUsed === 'clinic.admin' ? state.table_component.dataSet : state.dataSet}\r\n                name=\"Order Report Summary\"\r\n              />\r\n            </ExcelFile>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {\r\n          roleUsed === 'biofarma.admin' || roleUsed === 'voltras.admin'\r\n            ? <TableContainer component={Paper}>\r\n              <Table className={classes.table} aria-label=\"spanning table\" size='small'>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell align=\"center\"  ></TableCell>\r\n                    {state.clinic_product.map((item, i) => (\r\n                      <TableCell align=\"center\" colSpan={2} key={i + 21}>{item}</TableCell>\r\n                    ))}\r\n                    <TableCell align=\"center\" colSpan={2}>TOTAL</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell align=\"center\"  >CLINICS</TableCell>\r\n                    {state.clinic_product.map((item, i) => [\"Pax\", \"NTA\"].map((el, g) => (\r\n                      <TableCell align=\"center\" key={i + g}>{el}</TableCell>\r\n                    )))}\r\n                    <TableCell align=\"center\">Pax</TableCell>\r\n                    <TableCell align=\"center\">NTA</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {state.table_biofarma.map((row, i) => (\r\n                    <TableRow key={i}>\r\n                      {row.map((item, i) => (\r\n                        <TableCell align=\"center\" key={i + 555}>{item}</TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  ))}\r\n\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            : roleUsed === 'clinic.admin'\r\n              ? <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"spanning table\">\r\n\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\" colSpan={9} >TEST DATE</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      {state.table_component.allColumns.map((column, i) => {\r\n                        return <TableCell align=\"center\" key={99 + i}>{column}</TableCell>\r\n                      })}\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {state.table_component.allRows.map((rows, i) => (\r\n                      <TableRow key={i + 54}>\r\n                        {rows.map((row, i) => (\r\n                          <TableCell align=\"center\" key={i + 212}>{row}</TableCell>\r\n                        ))}\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n\r\n                </Table>\r\n              </TableContainer>\r\n              : null\r\n        }\r\n\r\n      </Hidden>\r\n      <Hidden smUp>\r\n        <DialogDetail\r\n          open={openDetail}\r\n          title={'Order Detail'}\r\n          handleOpen={() => setOpenDetail(false)}\r\n          detailData={detailData}\r\n          column={roleUsed === 'biofarma.admin' || roleUsed === 'voltras.admin' ? [\r\n            { title: 'Product Name', field: 'name' },\r\n            { title: 'Pax', field: 'patient' },\r\n            { title: 'NTA', field: 'nta' },\r\n            { title: 'Total NTA', field: 'sum_nta' }\r\n          ] : [\r\n              { title: 'Product Name', field: 'name' },\r\n              { title: 'Total', field: 'total' }\r\n            ]}\r\n        />\r\n        {\r\n          roleUsed === 'biofarma.admin' || roleUsed === 'voltras.admin' ?\r\n            <Card>\r\n              <div style={{ backgroundColor: '#f4f0ec', padding: 5, width: '100%' }}>\r\n                <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n                  Redemeed Summary\r\n              </Typography>\r\n              </div>\r\n              <div style={{ marginLeft: 15, marginRight: 15 }}>\r\n                <Grid container>\r\n                  <Grid item xs={5} sm={5}>\r\n                    <Typography style={{ fontSize: 11, padding: 3, color: 'grey', fontFamily: 'Arial, Helvetica, sans-serif' }}>Total Pax</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={7} sm={7}>\r\n                    <Typography style={{ fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>\r\n                      {state.clinic_recapt_logistic[0]\r\n                        ? state.clinic_recapt_logistic && state.clinic_recapt_logistic.total.reduce((total, num) => {\r\n                          return Number(total) + Number(num.patient)\r\n                        }, 0)\r\n                        : ''\r\n                      }\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={5} sm={5}>\r\n                    <Typography style={{ fontSize: 11, padding: 3, color: 'grey', fontFamily: 'Arial, Helvetica, sans-serif' }}>Total NTA</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={7} sm={7}>\r\n                    <Typography style={{ fontSize: 11, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>\r\n                      {\r\n                        state.clinic_recapt_logistic[0]\r\n                          ? state.clinic_recapt_logistic && state.clinic_recapt_logistic.total.reduce((total, num) => {\r\n                            return Number(total) + Number(num.nta)\r\n                          }, 0)\r\n                          : ''\r\n                      }\r\n                    </Typography>\r\n                  </Grid>\r\n                  {/* <Grid item xs={5} sm={5}>\r\n                <Typography style={{ fontSize: 13, padding: 3, color: 'grey', fontFamily: 'Arial, Helvetica, sans-serif' }}>Total Pax</Typography>\r\n              </Grid>\r\n              <Grid item xs={7} sm={7}>\r\n                <Typography style={{ fontSize: 13, padding: 3, fontFamily: 'Arial, Helvetica, sans-serif' }}>{state.clinic_recapt_logistic.total.reduce((total, num) => {\r\n                  return Number(total.patient) + num\r\n                }, 0)}</Typography>\r\n              </Grid> */}\r\n                </Grid>\r\n              </div>\r\n            </Card> : <div></div>\r\n        }\r\n        <Card style={{ marginTop: 10 }}>\r\n          <div style={{ backgroundColor: '#f4f0ec', padding: 5, width: '100%' }}>\r\n            <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              Filter By\r\n              </Typography>\r\n          </div>\r\n          <div style={{ marginLeft: 15, marginRight: 15 }}>\r\n            <Typography style={{ marginTop: 10, fontSize: 12, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              Testdate Periode\r\n            </Typography>\r\n            <Grid container>\r\n              <Grid item sm={6} xs={6}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    autoOk\r\n                    style={{ width: 150 }}\r\n                    size=\"small\"\r\n                    clearable\r\n                    format=\"yyyy/MM/dd\"\r\n                    margin=\"dense\"\r\n                    id=\"date-picker-from\"\r\n                    label=\"From\"\r\n                    value={state.fromdate}\r\n                    onChange={handleDateChange('fromdate')}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                    InputLabelProps={{\r\n                      style: {\r\n                        fontSize: 12,\r\n                        fontFamily: 'Arial, Helvetica, sans-serif',\r\n                      }\r\n                    }}\r\n                    InputProps={{\r\n                      style: {\r\n                        fontSize: 12,\r\n                        fontFamily: 'Arial, Helvetica, sans-serif',\r\n                      }\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n              <Grid item sm={6} xs={6}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    autoOk\r\n                    style={{ width: 150 }}\r\n                    clearable\r\n                    size=\"small\"\r\n                    format=\"yyyy/MM/dd\"\r\n                    margin=\"dense\"\r\n                    id=\"date-picker-to\"\r\n                    label=\"To\"\r\n                    value={state.todate}\r\n                    onChange={handleDateChange('todate')}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                    InputLabelProps={{\r\n                      style: {\r\n                        fontSize: 12,\r\n                        fontFamily: 'Arial, Helvetica, sans-serif',\r\n                      }\r\n                    }}\r\n                    InputProps={{\r\n                      style: {\r\n                        fontSize: 12,\r\n                        fontFamily: 'Arial, Helvetica, sans-serif',\r\n                      }\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container justify='center' style={{ paddingTop: 10, marginBottom: 10 }}>\r\n              <ExcelFile\r\n                filename={`Order Summary ${state.fromdate} to ${state.todate}`}\r\n                element={\r\n                  <Button size='small' variant='outlined' color=\"primary\" style={{\r\n                    textTransform: 'none', borderRadius: 20, fontFamily: 'Arial, Helvetica, sans-serif',\r\n                    fontWeight: 'bold', fontSize: 12, paddingLeft: 30, paddingRight: 30\r\n                  }} >\r\n                    {FormatText('app_export_xls')}\r\n                  </Button>}\r\n              >\r\n                <ExcelSheet\r\n                  dataSet={roleUsed === 'clinic.admin' ? state.table_component.dataSet : state.dataSet}\r\n                  name=\"Order Report Summary\"\r\n                />\r\n              </ExcelFile>\r\n            </Grid>\r\n          </div>\r\n        </Card>\r\n        <Card style={{ marginTop: 10 }}>\r\n          <div style={{ backgroundColor: '#f4f0ec', padding: 5, width: '100%' }}>\r\n            <Typography style={{ fontSize: 15, fontFamily: 'Arial, Helvetica, sans-serif', color: 'grey', fontWeight: 'bold' }}>\r\n              All Redeemed\r\n              </Typography>\r\n          </div>\r\n          <div style={{ marginLeft: 15, marginRight: 15 }}>\r\n            {\r\n              roleUsed === 'biofarma.admin' || roleUsed === 'voltras.admin' ?\r\n                <ListTableMobile\r\n                  column={[\r\n                    { title: \"Clinic\", field: 'name' },\r\n                    { title: \"Total Pax\", field: 'total_patient' },\r\n                    { title: \"Total NTA\", field: 'total_nta' },\r\n                  ]}\r\n                  data={state.clinic_recapt_logistic.detail}\r\n                  button={true}\r\n                  arrow={true}\r\n                  onClickList={handleOpenDetail}\r\n                /> : <div>\r\n                  <ListTableMobile\r\n                    column={[\r\n                      { title: \"Test Date\", field: 'testdate' },\r\n                    ]}\r\n                    data={state.clinic_recapt_logistic}\r\n                    button={true}\r\n                    arrow={true}\r\n                    onClickList={handleOpenDetail}\r\n                  />\r\n                </div>\r\n            }\r\n          </div>\r\n        </Card>\r\n      </Hidden>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  userInfo: store.userInfo.info,\r\n  paxList: store.paxList,\r\n  roleUsed: store.userInfo.roleUsed,\r\n  system: store.system,\r\n  // store\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  setOpenScreen, setServiceRequest, setServiceMethod, setServiceParams, setServiceCustomHeaders, setServiceCode,\r\n  setServiceRole, setServiceStatus, setPaxProduct\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RedeemedOrderSummaryTable)\r\n","\r\nimport React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Home from '../screens/home'\r\nimport Login from '../screens/login'\r\nimport Register from '../screens/register'\r\nimport PaxList from '../screens/clinic/paxList'\r\nimport PaxDetail from '../screens/clinic/paxdetail'\r\nimport QRScreen from \"../screens/clinic/qrscreen\";\r\nimport KCreateAdmin from '../screens/voltrasadmin/createuser'\r\nimport KAdminList from '../screens/voltrasadmin/userlist'\r\nimport KSetting from '../screens/clinic/clinicSetting'\r\nimport KClinicList from '../screens/clinic/clinicList'\r\nimport KClinicRegistration from '../screens/clinic/clinicRegistration'\r\nimport VCreateUser from '../screens/voltrasadmin/createuser'\r\nimport VUserList from '../screens/voltrasadmin/userlist'\r\nimport VClientList from '../screens/voltrasadmin/clientlist'\r\nimport VCreateClient from '../screens/voltrasadmin/createclient'\r\nimport VRequestList from '../screens/voltrasadmin/requestlist'\r\nimport clinicReport from '../screens/clinic/clinicReport'\r\nimport KOrderReportAll from '../screens/clinic/clinicReport/AllReport'\r\nimport UserProfile from '../screens/userprofile'\r\nimport GenericJson from '../screens/genericjson/GenericJson';\r\nimport CatalogProduct from '../screens/genericjson/CatalogProduct'\r\nimport ClinicScope from '../screens/clinic/clinic_scope/ClinicScope';\r\nimport AllOrderSummary from '../screens/clinic/clinic_report_summary/AllOrder'\r\nimport RedeemOrderSummary from '../screens/clinic/clinic_report_summary/RedeemedOrder'\r\n\r\nconst Routing = () => (\r\n  <div>\r\n    <Switch>\r\n      <Route exact path='/' component={Home} />\r\n      <Route path='/Home' component={Home} />\r\n      <Route path='/Login' component={Login} />\r\n      <Route path='/Register' component={Register} />\r\n      <Route path='/PaxList' component={PaxList} />\r\n      <Route path='/PaxDetail' component={PaxDetail} />\r\n      <Route path='/QrScreen' component={QRScreen} />\r\n      <Route path='/VCreateUser' component={VCreateUser} />\r\n      <Route path='/VUserList' component={VUserList} />\r\n      <Route path='/KCreateAdmin' component={KCreateAdmin} />\r\n      <Route path='/KAdminList' component={KAdminList} />\r\n      <Route path='/KSetting' component={KSetting} />\r\n      <Route path='/KClinicList' component={KClinicList} />\r\n      <Route path='/KClinicRegistration' component={KClinicRegistration} />\r\n      <Route path='/VClientList' component={VClientList} />\r\n      <Route path='/VRequestList' component={VRequestList} />\r\n      <Route path='/VCreateClient' component={VCreateClient} />\r\n      <Route path='/OrderReport' component={clinicReport} />\r\n      <Route path='/KOrderReportAll' component={KOrderReportAll} />\r\n      <Route path='/UserProfile' component={UserProfile} />\r\n      <Route path='/GenericConfiguration' component={GenericJson} />\r\n      <Route path='/CatalogProduct' component={CatalogProduct} />\r\n      <Route path='/ClinicScope' component={ClinicScope} />\r\n      <Route path='/KOrderSummaryAll' component={AllOrderSummary} />\r\n      <Route path='/KOrderSummaryRedeem' component={RedeemOrderSummary} />\r\n    </Switch>\r\n  </div>\r\n)\r\n\r\nexport default Routing\r\n","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Button } from '@material-ui/core';\r\nimport {\r\n  setServiceCode, setServiceCustomHeaders, setServiceMethod, setServiceParams,\r\n  setServiceRequest, setServiceRole, setServiceStatus\r\n} from '../../actions/ServiceActions';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    feedback: state.feedback,\r\n    locale: state.system.locale,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.urlParams))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.serviceRole))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n\r\n  }\r\n}\r\n\r\nclass MySnackBar extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      severity: \"\",\r\n      message: \"\",\r\n      action: false,\r\n      actionLabel: \"\"\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    let feedback = nextProps.feedback.snackBar\r\n    let open = feedback.open\r\n    let message = feedback.message\r\n    if (open && message) {\r\n      this.setState({ ...this.state, ...feedback, open: true, })\r\n      if (feedback.redirect) {\r\n        setTimeout(() => {\r\n          this.props.history.push(`/${feedback.redirect}`)\r\n        }, 2000);\r\n      }\r\n    }\r\n    else {\r\n      this.setState({ ...this.state, open: false, })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({\r\n      open: false,\r\n      severity: \"\",\r\n      message: \"\",\r\n      action: false,\r\n      actionLabel: \"\"\r\n    })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ ...this.state, open: false })\r\n  }\r\n\r\n  handleAction = () => {\r\n    let principalType = ''\r\n    let lang = this.props.locale ? this.props.locale.slice(0, 2) : 'en'\r\n    let redirectURI = \"http://www.alamanak.co.id\"\r\n    let actionType = this.state.action\r\n    if (actionType === 'SEND_EMAIL_VERIFICATION') {\r\n      principalType = 'email'\r\n    }\r\n    if (actionType === 'SEND_PHONE_VERIFICATION') {\r\n      principalType = 'phone'\r\n    }\r\n    //  GET /verification-code/{principalType}?lang={lang}&redirectURI={redirectURI}\r\n    let actionRequest = {\r\n      method: 'GET',\r\n      request: {},\r\n      serviceCode: actionType,\r\n      urlParams: `/${principalType}?&lang=${lang}&redirectURI=${redirectURI}`\r\n    }\r\n    this.props._setCompleteRequest(actionRequest)\r\n    this.setState({ ...this.state, open: false })\r\n  }\r\n\r\n  render() {\r\n    const { open, message, position, severity, action, actionLabel, duration } = this.state\r\n    return (\r\n      <div >\r\n        <Snackbar\r\n          anchorOrigin={position\r\n            ? { vertical: position.split('-')[0], horizontal: position.split('-')[1] }\r\n            : { vertical: 'bottom', horizontal: 'center' }}\r\n          open={open}\r\n          autoHideDuration={duration ? duration : 4000}\r\n          onClose={this.handleClose}\r\n          message={message}\r\n        >\r\n          <MuiAlert\r\n            elevation={6}\r\n            variant=\"filled\"\r\n            onClose={this.handleClose}\r\n            severity={severity}\r\n            action={action ? (\r\n              <Button color='primary' variant='contained' onClick={this.handleAction} style={{ textTransform: 'none', fontWeight: 'bold', }}>\r\n                {actionLabel}\r\n              </Button>\r\n            ) : null}\r\n          >\r\n            {message}\r\n          </MuiAlert>\r\n        </Snackbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MySnackBar)\r\n","\r\nimport React, { useState, forwardRef } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n// import DialogActions from '@material-ui/core/DialogActions';\r\n// import DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\n// import DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Button, Typography, Card, Input, Grid, FormHelperText, FormControl } from '@material-ui/core';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport FormatText from '../../i18n'\r\nimport { FormValidation } from '../../utils/FormValidation';\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function OtpDialog(props) {\r\n\r\n  const [state, setState] = useState({\r\n    otp: '',\r\n    otpErrorMessage: '',\r\n    onLoginErrorMessage: '',\r\n\r\n  })\r\n\r\n  const handleClose = () => {\r\n    // console.log(\"dipanggil tak\")\r\n    props.handleDialogClose()\r\n  };\r\n\r\n  const handleSubmitOtp = () => {\r\n    if (state.otp) {\r\n      let clientId = props.clientId\r\n      let challenge = state.otp\r\n      let otpID = props.otpID\r\n      let request = {\r\n        challenge,\r\n        otpID,\r\n        redirectURI: \"http://www.alamanak.co.id\",\r\n      }\r\n      let fullRequest = { request, method: 'POST', serviceCode: 'VERIFICATION_CHECK', customHeaders: { clientId }, params:'/phone' }\r\n      props.handleSubmitOtp(fullRequest)\r\n    }\r\n    setTimeout(() => {\r\n      props.handleDialogClose()\r\n    }, 50);\r\n  }\r\n\r\n  const handleChange = prop => event => {\r\n    event.preventDefault()\r\n    let valid = FormValidation(prop, event.target.value)\r\n    // console.log(typeof event.target.value)\r\n    setState({\r\n      ...state,\r\n      [prop]: event.target.value.slice(0, 6),\r\n      [prop + 'ErrorMessage']: valid.errorMessage,\r\n    })\r\n  }\r\n\r\n  const handleCancelOtp = () => {\r\n    // console.log('CANCEL')\r\n    props.handleDialogClose()\r\n  }\r\n\r\n  const handleResendOtp = () => {\r\n    // console.log('clicked')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n      >\r\n        <Card style={{ display: 'flex', flexWrap: 'wrap', width: 300, }} elevation={4}>\r\n          <Grid style={{ margin: 30 }} container direction=\"column\" justify=\"center\" alignItems=\"center\" >\r\n            <Typography variant=\"h5\" color='primary'><b>{FormatText('app_submit_otp')}</b> </Typography>\r\n            <Typography variant=\"caption\" color='textSecondary' >{FormatText('app_submit_otp_text')}</Typography>\r\n            <Typography variant='subtitle2' color='primary' >{props.phone}</Typography>\r\n\r\n            <FormControl style={{ margin: 10, width: '12ch', textAlign: 'center' }}  >\r\n              <Input\r\n                autoFocus\r\n                style={{ fontSize: 28, textAlign: 'center' }}\r\n                error={state.otpErrorMessage ? true : false}\r\n                id=\"standard-adornment-otp\"\r\n                type='text'\r\n                onChange={handleChange('otp')}\r\n                value={state.otp}\r\n                maxLength={6}\r\n              />\r\n            </FormControl>\r\n            {\r\n              state.otpErrorMessage\r\n                ? <FormHelperText error id=\"email-helper-text\">{state.otpErrorMessage}</FormHelperText>\r\n                : null\r\n            }\r\n\r\n            <FormControl>\r\n              <Grid>\r\n                <Button onClick={handleCancelOtp} variant=\"outlined\" color=\"primary\" style={{ margin: 10, }}>\r\n                  {FormatText('app_cancel')}\r\n                </Button>\r\n                <Button\r\n                  onClick={handleSubmitOtp}\r\n                  disabled={state.otp ? false : true}\r\n                  style={{ margin: 10, }}\r\n                  variant=\"contained\"\r\n                  color=\"primary\">\r\n                  {FormatText('app_submit')}\r\n                </Button>\r\n              </Grid>\r\n              {\r\n                state.onLoginErrorMessage\r\n                  ? <FormHelperText error id=\"password-helper-text\">{state.onLoginErrorMessage}</FormHelperText>\r\n                  : null\r\n              }\r\n            </FormControl>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography variant=\"caption\" color='textSecondary' >{FormatText('app_not_receive_otp')}</Typography>\r\n              <Button\r\n                size='small'\r\n                onClick={handleResendOtp}\r\n                color=\"primary\"\r\n                style={{ textTransform: 'none', fontWeight: 'bold', fontSize: 12 }}\r\n              >\r\n                {FormatText('app_resend_otp')}\r\n              </Button>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n        {/* <DialogTitle id=\"alert-dialog-slide-title\">{props.dialogTitle}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            {props.dialogContent}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            {props.cancelTitle}\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\" style={{ fontWeight: 'bold', }} >\r\n            {props.submitTitle}\r\n          </Button>\r\n        </DialogActions> */}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Paper, Avatar, Chip } from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Routing from '../../router/Routing'\r\nimport { setMenuCollapseStatus, toggleCollapseMenu } from \"../../actions/MenuActions\";\r\nimport { dispatchLogout, setMenuClickUrl } from '../../actions/SystemActions'\r\nimport { setUserMenu } from \"../../actions/MenuActions\"\r\nimport {\r\n  setServiceRole, setServiceRequest, setServiceCode, setServiceCustomHeaders,\r\n  setServiceStatus, setServiceMethod, setServiceParams\r\n} from '../../actions/ServiceActions'\r\nimport { openMenuStructure } from \"../../utils/MenuStructure\";\r\nimport SnackbarFeed from '../snackBar/SnackBar'\r\nimport OtpDialog from '../dialog/OtpDialog'\r\nimport FormatText from '../../i18n'\r\nimport Config from '../../config'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    store: state.system,\r\n    menuItems: state.menu.menuItems,\r\n    menu: state.menu,\r\n    userInfo: state.userInfo,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setMenuCollapseStatus: val => {\r\n      dispatch(setMenuCollapseStatus(val))\r\n    },\r\n    _setMenuClickUrl: val => {\r\n      dispatch(setMenuClickUrl(val))\r\n    },\r\n    _toggleCollapseMenu: val => {\r\n      dispatch(toggleCollapseMenu(val))\r\n    },\r\n    _logout: () => {\r\n      dispatch(dispatchLogout())\r\n      dispatch(dispatch(setUserMenu(openMenuStructure)))\r\n    },\r\n    _setCompleteRequest: (val) => {\r\n      dispatch(setServiceRequest(val.request))\r\n      dispatch(setServiceMethod(val.method))\r\n      dispatch(setServiceCode(val.serviceCode))\r\n      dispatch(setServiceParams(val.params))\r\n      dispatch(setServiceCustomHeaders(val.customHeaders))\r\n      dispatch(setServiceRole(val.role))\r\n      dispatch(setServiceStatus(\"active\"))\r\n    },\r\n  }\r\n}\r\n\r\nclass NavBarRightMenu extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      mainHidden: false,\r\n      openLogout: false,\r\n      dialogOpen: false,\r\n      otpID: \"\"\r\n    }\r\n  }\r\n\r\n  // UNSAFE_componentWillMount() {\r\n  //   console.log('NAV WILL MOUNT: ', this.props.store)\r\n  // }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    // console.log(\"STATIC PROPS: \", props, state)\r\n    if (props.store.otpID && (props.store.otpID !== state.otpID)) {\r\n      return {\r\n        ...state,\r\n        dialogOpen: true,\r\n        otpID: props.store.otpID\r\n      }\r\n    }\r\n    // Return null to indicate no change to state.\r\n    return null;\r\n  }\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true, mainHidden: true })\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false, mainHidden: false })\r\n  };\r\n\r\n  handleDrawerClick = (menuItem) => {\r\n    let windowscreen = window.screen.width\r\n    let screen = menuItem.url\r\n    // console.log(\"screen : \",screen)\r\n    this.props._setMenuClickUrl(screen)\r\n    if (!menuItem.children[0]) {\r\n      if (screen === \"Logout\") {\r\n        this.setState({\r\n          ...this.state,\r\n          openLogout: true\r\n        })\r\n      }\r\n      else {\r\n        // TOGGLE MENU BUTTON\r\n        if (windowscreen < 1000) {\r\n          this.setState({\r\n            open: !this.state.open,\r\n            mainHidden: !this.state.mainHidden,\r\n          })\r\n          this.props.history.push(`/${screen}`)\r\n        } else {\r\n          this.props.history.push(`/${screen}`)\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      // Uncoment to make submenu toggle collapse\r\n      Object.entries(this.props.menu).forEach(([key, val]) => {\r\n        if (key !== 'menuItems') this.props._toggleCollapseMenu({ name: key, value: false })\r\n      })\r\n\r\n      let val = { name: screen, value: !this.props.menu[screen] }\r\n      this.props._toggleCollapseMenu(val)\r\n    }\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      openLogout: true\r\n    })\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      openLogout: false\r\n    })\r\n  };\r\n\r\n  handleMainClick = () => {\r\n    let windowscreen = window.screen.width\r\n    if (windowscreen < 1000 && this.state.mainHidden) {\r\n      this.setState({\r\n        open: !this.state.open,\r\n        mainHidden: !this.state.mainHidden,\r\n      })\r\n    }\r\n  }\r\n\r\n  handleLogout = () => {\r\n    // let userRole = this.props.userInfo.info.userRole\r\n    // this.props.history.push('/Home')\r\n    const logoutRequest = {\r\n      request: { \"redirectURI\": \"http://login.page\" },\r\n      method: \"POST\",\r\n      serviceCode: \"logout\",\r\n    }\r\n    localStorage.clear()\r\n    this.props._setCompleteRequest(logoutRequest)\r\n    this.setState({\r\n      ...this.state,\r\n      openLogout: false,\r\n      open: false\r\n    })\r\n  }\r\n\r\n  handleDialogClose = () => {\r\n    // console.log(\"dipanggil tak\")\r\n    this.setState({\r\n      ...this.state,\r\n      dialogOpen: !this.state.dialogOpen\r\n    })\r\n  }\r\n\r\n  handleSubmitOtp = fullRequest => {\r\n    // console.log(fullRequest)\r\n    this.props._setCompleteRequest(fullRequest)\r\n  }\r\n\r\n  handleClick = () => {\r\n    // console.log('Clicked')\r\n    this.props.history.push('UserProfile')\r\n  }\r\n\r\n  render() {\r\n    const { classes, store, menu, menuItems, userInfo } = this.props;\r\n    const loginStyle = {\r\n      display: 'flex',\r\n      backgroundImage: `url(${store.appConstant && store.openScreen === 'Login'\r\n        ? store.appConstant.backgroundLogin\r\n        : Config.gatewayRepoFile + '/static-file-manager/retrieve?file=voltras_login_background'})`,\r\n      backgroundSize: 'cover',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundAttachment: 'fixed',\r\n      // position: \"fixed\",\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      // height: '100%',\r\n    }\r\n    const defaultStyle = {\r\n      display: 'flex',\r\n      backgroundImage: `url(${store.appConstant ? store.appConstant.backgroundApp : \"\"})`,\r\n      backgroundSize: 'cover',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundAttachment: 'fixed',\r\n      // position: \"fixed\",\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n    }\r\n\r\n    return (\r\n      <div style={store.openScreen === 'Login' ? loginStyle : defaultStyle}\r\n      >\r\n        <CssBaseline />\r\n        {\r\n          store.openScreen === 'Login'\r\n            ? null\r\n            : <AppBar\r\n              position=\"fixed\"\r\n              className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: this.state.open,\r\n              })}\r\n            >\r\n              <Toolbar>\r\n\r\n                {store.openScreen === 'Home'\r\n                  ? <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                    <i className=\"fas fa-clinic-medical\"></i>\r\n                  </IconButton>\r\n                  : store.openScreen === 'Order List'\r\n                    ? <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                      <i className=\"fas fa-file-medical\"></i>\r\n                    </IconButton>\r\n                    : <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                      <i className=\"fas fa-laptop-house\"></i>\r\n                    </IconButton>\r\n\r\n                }\r\n                <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                  {store.openScreen ? store.openScreen : \"Clinic Backoffice\"}\r\n                </Typography>\r\n\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  edge=\"end\"\r\n                  onClick={this.handleDrawerOpen}\r\n                  className={clsx(this.state.open && classes.hide)}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n\r\n              </Toolbar>\r\n              {store.serviceStart ? <LinearProgress color=\"secondary\" /> : null}\r\n            </AppBar>\r\n        }\r\n        <main\r\n          onClick={this.handleMainClick}\r\n          className={clsx(classes.content, {\r\n            [classes.contentShift]: this.state.open,\r\n          })}\r\n          style={store.openScreen === 'Login' ? { marginRight: 0 } : null}\r\n        >\r\n          {/* <Hidden xsDown={this.state.mainHidden}> */}\r\n          <Grid style={{ marginTop: 50 }}>\r\n            <OtpDialog\r\n              handleDialogClose={this.handleDialogClose}\r\n              open={this.state.dialogOpen}\r\n              otpID={this.state.otpID}\r\n              phone={userInfo.info.phone}\r\n              clientId={userInfo.info.aud}\r\n              handleSubmitOtp={this.handleSubmitOtp}\r\n            />\r\n            <Routing />\r\n            <SnackbarFeed history={this.props.history} />\r\n          </Grid>\r\n          {/* </Hidden> */}\r\n        </main>\r\n        {\r\n          store.openScreen === 'Login'\r\n            ? null\r\n            : <Drawer\r\n              className={classes.drawer}\r\n              variant=\"persistent\"\r\n              anchor=\"right\"\r\n              open={this.state.open}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              <List>\r\n                <ListItem>\r\n                  <br />\r\n                  <Paper elevation={0} style={{ width: 240, }} >\r\n                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\"  >\r\n                      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\"  >\r\n                        <Grid item onClick={this.handleDrawerClose} >\r\n                          <Avatar\r\n                            style={{ width: 75, height: 75, marginBottom: 5 }}\r\n                            src={userInfo.info.picture ? userInfo.info.picture : ''}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item  >\r\n                          <center><Typography variant='subtitle2' >{userInfo.info ? userInfo.info.name : ''}</Typography></center>\r\n                        </Grid>\r\n                        <Grid item >\r\n                          <center>\r\n                            <Typography variant='caption' >{userInfo.info ? userInfo.info.email || userInfo.info.phone : ''}</Typography>\r\n                          </center>\r\n                        </Grid>\r\n                        <Grid item style={{ marginTop: 15 }} >\r\n                          <Chip onClick={this.handleClick} label={FormatText('app_manage_acount')} variant=\"outlined\" size=\"small\" />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Paper>\r\n                  <br />\r\n                </ListItem>\r\n              </List>\r\n              <Divider />\r\n\r\n              {\r\n                menuItems && menuItems.map((menuItem, i) => {\r\n                  return <div key={i}>\r\n                    <List>\r\n                      <ListItem button onClick={() => this.handleDrawerClick(menuItem)} >\r\n                        <Typography style={{ fontSize: \"18px\" }}>{menuItem.label}</Typography>\r\n                      </ListItem>\r\n                    </List>\r\n                    {\r\n                      menu[menuItem.url]\r\n                        ? <div>\r\n                          {\r\n                            menuItem.children.map((childItem, i) => {\r\n                              return childItem\r\n                                ? <div key={i}>\r\n                                  <List style={{ marginLeft: 15, }}>\r\n                                    <ListItem button onClick={() => this.handleDrawerClick(childItem)} key={i}>\r\n                                      <ChevronRightIcon />\r\n                                      <ListItemText primary={childItem.label} />\r\n                                    </ListItem>\r\n                                  </List>\r\n                                </div>\r\n                                : null\r\n                            })\r\n                          }\r\n                        </div>\r\n                        : null\r\n                    }\r\n\r\n                    <Divider />\r\n                  </div>\r\n                })\r\n              }\r\n              <Grid style={{ marginTop: 10 }} container direction=\"column\" justify=\"center\" alignItems=\"center\"  >\r\n                <Typography variant=\"caption\" color='textSecondary' >version {Config.appVersion}</Typography>\r\n                <Typography variant=\"caption\" color='textSecondary' >Copyright © 2020, voltras.net</Typography>\r\n              </Grid>\r\n            </Drawer>\r\n        }\r\n\r\n        <Dialog\r\n          open={this.state.openLogout}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{FormatText('app_logout')}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">{FormatText('app_confirm_logout')}?\r\n          </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              {FormatText('app_cancel')}\r\n            </Button>\r\n            <Button onClick={this.handleLogout} color=\"primary\" autoFocus>\r\n              {FormatText('app_logout')}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst drawerWidth = 240;\r\nconst useNavStyles = (theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: drawerWidth,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-start',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginRight: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    [theme.breakpoints.up('md')]: {\r\n      marginRight: 0,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n});\r\n\r\nconst Navigation = connect(mapStateToProps, mapDispatchToProps)(NavBarRightMenu)\r\n\r\nexport default withStyles(useNavStyles)(Navigation)\r\n","\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom'\r\nimport ServiceExecutor from './ServiceExecutor'\r\n// import GlobalDialog from './components/dialog/GlobalDialog'\r\n// import SnackBar from './components/snackBar/SnackBar'\r\nimport SnackBarError from './components/snackBar/SnackBarError'\r\nimport Navbar from './components/navBar/NavigationBar'\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\n\r\nimport { setUserMenu } from \"./actions/MenuActions\";\r\nimport { setAppConstant, setLocale } from './actions/SystemActions'\r\n// import { setServiceRequest, setServiceCode, setServiceStatus, setServiceCustomHeaders, setServiceMethod } from \"./actions/ServiceActions\";\r\nimport { setResetPasswordCode, setVerificationCode } from \"./actions/UserInfoActions\";\r\nimport { openMenuStructure } from \"./utils/MenuStructure\";\r\n// import { AppStructures } from './utils/AppStructures'\r\nimport Config from '../src/config'\r\n\r\nlet urlImage = Config.gatewayRepoFile\r\n\r\nconst AppStructures = [\r\n  {\r\n    aud: 'authentication-backoffice',\r\n    name: 'Voltras Backoffice',\r\n    domain: ['http://localhost:3030', 'http://172.16.10.98:3030', 'http://172.16.10.98:3032'],\r\n    title: \"VoltrasBOS\",\r\n    welcome: \"Backoffice System\",\r\n    locale: 'id-Id',\r\n    backgroundLogin: urlImage + '/static-file-manager/retrieve?file=voltras_login_background',\r\n    backgroundApp: '',\r\n    icon: <BuildIcon style={{ width: 50, height: 50, }} />,\r\n    openMenu: [\r\n      {\r\n        label: \"Login\",\r\n        url: \"Login\",\r\n        children: []\r\n      },\r\n      // {\r\n      //   label: \"Generic Input\",\r\n      //   url: \"GenericInput\",\r\n      //   children: []\r\n      // },\r\n      {\r\n        label: \"Register\",\r\n        url: \"Register\",\r\n        children: []\r\n      },\r\n    ],\r\n    loggedMenu: [\r\n      {\r\n        label: \"Home\",\r\n        url: \"Home\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Client Management\",\r\n        url: \"VoltrasClientManagement\",\r\n        children: [\r\n          { label: \"Client List\", url: \"VClientList\", children: [] },\r\n          { label: \"Create Client\", url: \"VCreateClient\", children: [] },\r\n        ]\r\n      },\r\n      {\r\n        label: \"User Management\",\r\n        url: \"VoltrasUserManagement\",\r\n        children: [\r\n          { label: \"User List\", url: \"VUserList\", children: [] },\r\n          { label: \"Create User\", url: \"VCreateUser\", children: [] },\r\n        ]\r\n      },\r\n      {\r\n        label: \"Request Specification\",\r\n        url: \"VoltrasRequestSpesification\",\r\n        children: [\r\n          { label: \"Request List\", url: \"VRequestList\", children: [] }\r\n        ]\r\n      },\r\n      {\r\n        label: \"Logout\",\r\n        url: \"Logout\",\r\n        children: []\r\n      },\r\n    ],\r\n    requestHeader: {\r\n      'client-id': 'authentication-backoffice',\r\n    }\r\n  }, {\r\n    aud: 'voltras-health',\r\n    name: 'Voltras Health',\r\n    domain: ['https://health.voltras.net'],\r\n    title: \"Voltras Health\",\r\n    welcome: \"Clinic Backoffice System\",\r\n    locale: 'id-Id',\r\n    backgroundLogin: urlImage + '/static-file-manager/retrieve?file=health_login_background',\r\n    backgroundApp: urlImage + '/static-file-manager/retrieve?file=health_app_background',\r\n    icon: <LocalHospitalIcon style={{ width: 50, height: 50, }} />,\r\n    openMenu: [\r\n      {\r\n        label: \"Login\",\r\n        url: \"Login\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Register\",\r\n        url: \"Register\",\r\n        children: []\r\n      },\r\n    ],\r\n    loggedMenu: [\r\n      {\r\n        label: \"Home\",\r\n        url: \"Home\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Order List\",\r\n        url: \"PaxList\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Order Report\",\r\n        url: \"KReport\",\r\n        children: [\r\n          {\r\n            label: \"All Order\",\r\n            url: \"KOrderReportAll\",\r\n            children: []\r\n          },\r\n          {\r\n            label: \"Redeemed Order\",\r\n            url: \"OrderReport\",\r\n            children: []\r\n          },]\r\n      },\r\n      {\r\n        label: \"Clinic Management\",\r\n        url: \"KClinicManager\",\r\n        children: [\r\n          {\r\n            label: \"Clinic List\",\r\n            url: \"KClinicList\",\r\n            children: []\r\n          },\r\n          {\r\n            label: \"Clinic Setting\",\r\n            url: \"KSetting\",\r\n            children: []\r\n          },\r\n          {\r\n            label: \"Clinic Registration\",\r\n            url: \"KClinicRegistration\",\r\n            children: []\r\n          },\r\n          // {\r\n          //   label: \"Clinic Scope\",\r\n          //   url: \"ClinicScope\",\r\n          //   children: []\r\n          // },\r\n        ]\r\n      },\r\n      {\r\n        label: \"Generic Configuration\",\r\n        url: \"GenericConfiguration\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Logout\",\r\n        url: \"Logout\",\r\n        children: []\r\n      },\r\n    ],\r\n    requestHeader: {\r\n      'client-id': 'voltras-health',\r\n    }\r\n  }, {\r\n    aud: 'dummy-aud',\r\n    name: 'Dummy App',\r\n    domain: ['http://localhost:3030', 'http://172.16.10.98:3032'],\r\n    title: \"DUMMY APP\",\r\n    welcome: \"Dummy App\",\r\n    locale: 'id-Id',\r\n    backgroundLogin: '',\r\n    backgroundApp: '',\r\n    icon: < i className=\"fas fa-mosque\" style={{ width: 50, height: 50, fontSize: 40, }}></i >,\r\n    openMenu: [\r\n      {\r\n        label: \"Login\",\r\n        url: \"Login\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Logout\",\r\n        url: \"Logout\",\r\n        children: []\r\n      },\r\n    ],\r\n    loggedMenu: [\r\n      {\r\n        label: \"Home\",\r\n        url: \"Home\",\r\n        children: []\r\n      },\r\n      {\r\n        label: \"Product\",\r\n        url: \"Product\",\r\n        children: [\r\n          { label: \"Add New Product\", url: \"AddNewProduct\", children: [] },\r\n          { label: \"Manage Product\", url: \"ManageProduct\", children: [] }\r\n        ]\r\n      },\r\n      {\r\n        label: \"Report\",\r\n        url: \"Report\",\r\n        children: [\r\n          { label: \"Booking Summary\", url: \"BookingSummary\", children: [] },\r\n          { label: \"Payment Summary\", url: \"PaymentSummary\", children: [] }\r\n        ]\r\n      },\r\n      {\r\n        label: \"Logout\",\r\n        url: \"Logout\",\r\n        children: []\r\n      },\r\n    ],\r\n  },\r\n]\r\nconst mapStateToProps = state => {\r\n  // console.log(\"GLOBAL STATE: \", state)\r\n  return {\r\n    userInfo: state.userInfo\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    _setUserMenu: val => dispatch(setUserMenu(val)),\r\n    _setAppConstant: val => dispatch(setAppConstant(val)),\r\n    _setLocale: val => dispatch(setLocale(val)),\r\n    _setResetPasswordCode: val => dispatch(setResetPasswordCode(val)),\r\n    _setVerificationCode: val => dispatch(setVerificationCode(val)),\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  // constructor(props) {\r\n  //   super(props)\r\n  //   this.state = {\r\n  //     open: true,\r\n  //     setOpen: false\r\n  //   }\r\n  // }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    function isMobile() {\r\n      return ((window.innerWidth <= 800) && (window.innerHeight <= 600));\r\n    }\r\n    const { screen } = window\r\n    if (!navigator.xr && isMobile() && screen.orientation && screen.orientation.lock) {\r\n      screen.orientation.lock('landscape');\r\n    }\r\n    // console.log(\r\n    //   \"WILL MOUNT APP: \", window.location.origin\r\n    //   , ', Language: ', navigator.language\r\n    //   , ', HREF: ', window.location.href\r\n    // )\r\n\r\n    let locationHref = window.location.href\r\n    // console.log(\"resetpasswordcode: \", locationHref.split('/').slice(-1)[0])\r\n    if (locationHref.split('/')[3] && (locationHref.split('/')[3] === 'reset-password-recovery')) {\r\n      this.props._setResetPasswordCode(locationHref.split('/').slice(-1)[0])\r\n    }\r\n    if (locationHref.split('/')[3] && (locationHref.split('/')[3] === 'verification-code')) {\r\n      this.props._setVerificationCode(locationHref.split('/').slice(-1)[0])\r\n    }\r\n    // console.log(locationHref.split('/'))\r\n    // console.log(locationHref.split('/')[3])\r\n    // console.log(locationHref.split('/').slice(-1)[0])\r\n    let origin = window.location.origin\r\n    let app = AppStructures.filter(item => item.domain.includes(origin))\r\n    this.props._setAppConstant(app[0] ? app[0] : AppStructures[0])\r\n    // document.title = app[0].title\r\n    console.log(\"SETTING CONSTANTS: \", origin, app[0] ? app[0] : AppStructures[0])\r\n\r\n    let language = navigator.language\r\n    this.props._setLocale(language)\r\n\r\n    let accessToken = localStorage.getItem('accessToken')\r\n    if (accessToken) { this.props.history.push('/Home') }\r\n    else {\r\n      this.props._setUserMenu(openMenuStructure)\r\n      this.props.history.push('/Login')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n        <Navbar history={this.props.history} />\r\n        <ServiceExecutor history={this.props.history} />\r\n        {/* <GlobalDialog history={this.props.history} /> */}\r\n        {/* <SnackBar history={this.props.history} /> */}\r\n        <SnackBarError history={this.props.history} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\r\nimport { ThemeProvider } from '@material-ui/styles'\r\n\r\nimport { theme } from './Theme'\r\nimport store from './Store'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ThemeProvider theme={theme}>\r\n      {\r\n        (process.env.NODE_ENV === 'development')\r\n          ? <HashRouter>\r\n            <App />\r\n          </HashRouter>\r\n          : <BrowserRouter>\r\n            <App />\r\n          </BrowserRouter>\r\n      }\r\n    </ThemeProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}